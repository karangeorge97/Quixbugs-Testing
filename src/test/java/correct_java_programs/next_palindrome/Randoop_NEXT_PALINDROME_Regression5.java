package correct_java_programs.next_palindrome;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class Randoop_NEXT_PALINDROME_Regression5 {

    public static boolean debug = false;

    @Test
    public void test2501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2501");
        int[] intArray1 = new int[] { (short) 1 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass35 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[4]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[2]" + "'", str2, "[2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[3]" + "'", str3, "[3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[4]" + "'", str4, "[4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[5]" + "'", str5, "[5]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[6]" + "'", str6, "[6]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[7]" + "'", str7, "[7]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[8]" + "'", str8, "[8]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[9]" + "'", str9, "[9]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1]" + "'", str10, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1]" + "'", str11, "[1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[2]" + "'", str12, "[2]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[3]" + "'", str13, "[3]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[4]" + "'", str14, "[4]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[5]" + "'", str15, "[5]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[6]" + "'", str16, "[6]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[7]" + "'", str17, "[7]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[8]" + "'", str18, "[8]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[9]" + "'", str19, "[9]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1]" + "'", str20, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1]" + "'", str21, "[1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2]" + "'", str22, "[2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3]" + "'", str23, "[3]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[4]" + "'", str24, "[4]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[5]" + "'", str25, "[5]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[6]" + "'", str26, "[6]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[7]" + "'", str27, "[7]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[8]" + "'", str28, "[8]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[9]" + "'", str29, "[9]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 1]" + "'", str30, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1]" + "'", str31, "[1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2]" + "'", str32, "[2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[3]" + "'", str33, "[3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4]" + "'", str34, "[4]");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test2502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2502");
        int[] intArray1 = new int[] { 'a' };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass56 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[151]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[98]" + "'", str2, "[98]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[99]" + "'", str3, "[99]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100]" + "'", str4, "[100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[101]" + "'", str5, "[101]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[102]" + "'", str6, "[102]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[103]" + "'", str7, "[103]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[104]" + "'", str8, "[104]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[105]" + "'", str9, "[105]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[106]" + "'", str10, "[106]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[107]" + "'", str11, "[107]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[108]" + "'", str12, "[108]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[109]" + "'", str13, "[109]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[110]" + "'", str14, "[110]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[111]" + "'", str15, "[111]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[112]" + "'", str16, "[112]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[113]" + "'", str17, "[113]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[114]" + "'", str18, "[114]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[115]" + "'", str19, "[115]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[116]" + "'", str20, "[116]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[117]" + "'", str21, "[117]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[118]" + "'", str22, "[118]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[119]" + "'", str23, "[119]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[120]" + "'", str24, "[120]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[121]" + "'", str25, "[121]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[122]" + "'", str26, "[122]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[123]" + "'", str27, "[123]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[124]" + "'", str28, "[124]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[125]" + "'", str29, "[125]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[126]" + "'", str30, "[126]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[127]" + "'", str31, "[127]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[128]" + "'", str32, "[128]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[129]" + "'", str33, "[129]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[130]" + "'", str34, "[130]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[131]" + "'", str35, "[131]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[132]" + "'", str36, "[132]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[133]" + "'", str37, "[133]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[134]" + "'", str38, "[134]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[135]" + "'", str39, "[135]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[136]" + "'", str40, "[136]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[137]" + "'", str41, "[137]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[138]" + "'", str42, "[138]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[139]" + "'", str43, "[139]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[140]" + "'", str44, "[140]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[141]" + "'", str45, "[141]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[142]" + "'", str46, "[142]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[143]" + "'", str47, "[143]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[144]" + "'", str48, "[144]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[145]" + "'", str49, "[145]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[146]" + "'", str50, "[146]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[147]" + "'", str51, "[147]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[148]" + "'", str52, "[148]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[149]" + "'", str53, "[149]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[150]" + "'", str54, "[150]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[151]" + "'", str55, "[151]");
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test2503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2503");
        int[] intArray3 = new int[] { '#', (byte) 100, 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass77 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[35, 173, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[35, 101, 1]" + "'", str4, "[35, 101, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 102, 1]" + "'", str5, "[35, 102, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 103, 1]" + "'", str6, "[35, 103, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 104, 1]" + "'", str7, "[35, 104, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 105, 1]" + "'", str8, "[35, 105, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 106, 1]" + "'", str9, "[35, 106, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 107, 1]" + "'", str10, "[35, 107, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 108, 1]" + "'", str11, "[35, 108, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 109, 1]" + "'", str12, "[35, 109, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 110, 1]" + "'", str13, "[35, 110, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 111, 1]" + "'", str14, "[35, 111, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[35, 112, 1]" + "'", str15, "[35, 112, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[35, 113, 1]" + "'", str16, "[35, 113, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[35, 114, 1]" + "'", str17, "[35, 114, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[35, 115, 1]" + "'", str18, "[35, 115, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[35, 116, 1]" + "'", str19, "[35, 116, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[35, 117, 1]" + "'", str20, "[35, 117, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[35, 118, 1]" + "'", str21, "[35, 118, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[35, 119, 1]" + "'", str22, "[35, 119, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[35, 120, 1]" + "'", str23, "[35, 120, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[35, 121, 1]" + "'", str24, "[35, 121, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[35, 122, 1]" + "'", str25, "[35, 122, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35, 123, 1]" + "'", str26, "[35, 123, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 124, 1]" + "'", str27, "[35, 124, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[35, 125, 1]" + "'", str28, "[35, 125, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[35, 126, 1]" + "'", str29, "[35, 126, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[35, 127, 1]" + "'", str30, "[35, 127, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[35, 128, 1]" + "'", str31, "[35, 128, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 129, 1]" + "'", str32, "[35, 129, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 130, 1]" + "'", str33, "[35, 130, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 131, 1]" + "'", str34, "[35, 131, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 132, 1]" + "'", str35, "[35, 132, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 133, 1]" + "'", str36, "[35, 133, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 134, 1]" + "'", str37, "[35, 134, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 135, 1]" + "'", str38, "[35, 135, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 136, 1]" + "'", str39, "[35, 136, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 137, 1]" + "'", str40, "[35, 137, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 138, 1]" + "'", str41, "[35, 138, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 139, 1]" + "'", str42, "[35, 139, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 140, 1]" + "'", str43, "[35, 140, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[35, 141, 1]" + "'", str44, "[35, 141, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[35, 142, 1]" + "'", str45, "[35, 142, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[35, 143, 1]" + "'", str46, "[35, 143, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[35, 144, 1]" + "'", str47, "[35, 144, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[35, 145, 1]" + "'", str48, "[35, 145, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[35, 146, 1]" + "'", str49, "[35, 146, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[35, 147, 1]" + "'", str50, "[35, 147, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[35, 148, 1]" + "'", str51, "[35, 148, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[35, 149, 1]" + "'", str52, "[35, 149, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[35, 150, 1]" + "'", str53, "[35, 150, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[35, 151, 1]" + "'", str54, "[35, 151, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[35, 152, 1]" + "'", str55, "[35, 152, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[35, 153, 1]" + "'", str56, "[35, 153, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[35, 154, 1]" + "'", str57, "[35, 154, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[35, 155, 1]" + "'", str58, "[35, 155, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[35, 156, 1]" + "'", str59, "[35, 156, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[35, 157, 1]" + "'", str60, "[35, 157, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[35, 158, 1]" + "'", str61, "[35, 158, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[35, 159, 1]" + "'", str62, "[35, 159, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[35, 160, 1]" + "'", str63, "[35, 160, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[35, 161, 1]" + "'", str64, "[35, 161, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[35, 162, 1]" + "'", str65, "[35, 162, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[35, 163, 1]" + "'", str66, "[35, 163, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[35, 164, 1]" + "'", str67, "[35, 164, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[35, 165, 1]" + "'", str68, "[35, 165, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[35, 166, 1]" + "'", str69, "[35, 166, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[35, 167, 1]" + "'", str70, "[35, 167, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[35, 168, 1]" + "'", str71, "[35, 168, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[35, 169, 1]" + "'", str72, "[35, 169, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[35, 170, 1]" + "'", str73, "[35, 170, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[35, 171, 1]" + "'", str74, "[35, 171, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[35, 172, 1]" + "'", str75, "[35, 172, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[35, 173, 1]" + "'", str76, "[35, 173, 1]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test2504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2504");
        int[] intArray6 = new int[] { (short) 100, (byte) 0, 10, (byte) 0, (byte) 1, (byte) 0 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass11 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 0, 14, 4, 1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 0, 11, 1, 1, 0]" + "'", str7, "[100, 0, 11, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 0, 12, 2, 1, 0]" + "'", str8, "[100, 0, 12, 2, 1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 0, 13, 3, 1, 0]" + "'", str9, "[100, 0, 13, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 0, 14, 4, 1, 0]" + "'", str10, "[100, 0, 14, 4, 1, 0]");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test2505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2505");
        int[] intArray6 = new int[] { (byte) 100, 'a', ' ', (byte) -1, (short) -1, (short) 1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass75 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 103, 7, 7, 5, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 97, 33, 0, -1, 1]" + "'", str7, "[100, 97, 33, 0, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 97, 34, 1, -1, 1]" + "'", str8, "[100, 97, 34, 1, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 97, 35, 2, -1, 1]" + "'", str9, "[100, 97, 35, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 97, 36, 3, -1, 1]" + "'", str10, "[100, 97, 36, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 97, 37, 4, -1, 1]" + "'", str11, "[100, 97, 37, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 97, 38, 5, -1, 1]" + "'", str12, "[100, 97, 38, 5, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 97, 39, 6, -1, 1]" + "'", str13, "[100, 97, 39, 6, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 97, 40, 7, -1, 1]" + "'", str14, "[100, 97, 40, 7, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 97, 41, 8, -1, 1]" + "'", str15, "[100, 97, 41, 8, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 97, 42, 9, -1, 1]" + "'", str16, "[100, 97, 42, 9, -1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 98, 0, 0, 0, 1]" + "'", str17, "[100, 98, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 98, 1, 1, 0, 1]" + "'", str18, "[100, 98, 1, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 98, 2, 2, 0, 1]" + "'", str19, "[100, 98, 2, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 98, 3, 3, 0, 1]" + "'", str20, "[100, 98, 3, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 98, 4, 4, 0, 1]" + "'", str21, "[100, 98, 4, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 98, 5, 5, 0, 1]" + "'", str22, "[100, 98, 5, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 98, 6, 6, 0, 1]" + "'", str23, "[100, 98, 6, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 98, 7, 7, 0, 1]" + "'", str24, "[100, 98, 7, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 98, 8, 8, 0, 1]" + "'", str25, "[100, 98, 8, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 98, 9, 9, 0, 1]" + "'", str26, "[100, 98, 9, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 99, 0, 0, 1, 1]" + "'", str27, "[100, 99, 0, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 99, 1, 1, 1, 1]" + "'", str28, "[100, 99, 1, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 99, 2, 2, 1, 1]" + "'", str29, "[100, 99, 2, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 99, 3, 3, 1, 1]" + "'", str30, "[100, 99, 3, 3, 1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 99, 4, 4, 1, 1]" + "'", str31, "[100, 99, 4, 4, 1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 99, 5, 5, 1, 1]" + "'", str32, "[100, 99, 5, 5, 1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 99, 6, 6, 1, 1]" + "'", str33, "[100, 99, 6, 6, 1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 99, 7, 7, 1, 1]" + "'", str34, "[100, 99, 7, 7, 1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 99, 8, 8, 1, 1]" + "'", str35, "[100, 99, 8, 8, 1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 99, 9, 9, 1, 1]" + "'", str36, "[100, 99, 9, 9, 1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 100, 0, 0, 2, 1]" + "'", str37, "[100, 100, 0, 0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 100, 1, 1, 2, 1]" + "'", str38, "[100, 100, 1, 1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 100, 2, 2, 2, 1]" + "'", str39, "[100, 100, 2, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 100, 3, 3, 2, 1]" + "'", str40, "[100, 100, 3, 3, 2, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 100, 4, 4, 2, 1]" + "'", str41, "[100, 100, 4, 4, 2, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 100, 5, 5, 2, 1]" + "'", str42, "[100, 100, 5, 5, 2, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 100, 6, 6, 2, 1]" + "'", str43, "[100, 100, 6, 6, 2, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 100, 7, 7, 2, 1]" + "'", str44, "[100, 100, 7, 7, 2, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 100, 8, 8, 2, 1]" + "'", str45, "[100, 100, 8, 8, 2, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 100, 9, 9, 2, 1]" + "'", str46, "[100, 100, 9, 9, 2, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 101, 0, 0, 3, 1]" + "'", str47, "[100, 101, 0, 0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 101, 1, 1, 3, 1]" + "'", str48, "[100, 101, 1, 1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 101, 2, 2, 3, 1]" + "'", str49, "[100, 101, 2, 2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 101, 3, 3, 3, 1]" + "'", str50, "[100, 101, 3, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 101, 4, 4, 3, 1]" + "'", str51, "[100, 101, 4, 4, 3, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 101, 5, 5, 3, 1]" + "'", str52, "[100, 101, 5, 5, 3, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 101, 6, 6, 3, 1]" + "'", str53, "[100, 101, 6, 6, 3, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 101, 7, 7, 3, 1]" + "'", str54, "[100, 101, 7, 7, 3, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 101, 8, 8, 3, 1]" + "'", str55, "[100, 101, 8, 8, 3, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 101, 9, 9, 3, 1]" + "'", str56, "[100, 101, 9, 9, 3, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 102, 0, 0, 4, 1]" + "'", str57, "[100, 102, 0, 0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 102, 1, 1, 4, 1]" + "'", str58, "[100, 102, 1, 1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 102, 2, 2, 4, 1]" + "'", str59, "[100, 102, 2, 2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 102, 3, 3, 4, 1]" + "'", str60, "[100, 102, 3, 3, 4, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 102, 4, 4, 4, 1]" + "'", str61, "[100, 102, 4, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[100, 102, 5, 5, 4, 1]" + "'", str62, "[100, 102, 5, 5, 4, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[100, 102, 6, 6, 4, 1]" + "'", str63, "[100, 102, 6, 6, 4, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[100, 102, 7, 7, 4, 1]" + "'", str64, "[100, 102, 7, 7, 4, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[100, 102, 8, 8, 4, 1]" + "'", str65, "[100, 102, 8, 8, 4, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[100, 102, 9, 9, 4, 1]" + "'", str66, "[100, 102, 9, 9, 4, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[100, 103, 0, 0, 5, 1]" + "'", str67, "[100, 103, 0, 0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[100, 103, 1, 1, 5, 1]" + "'", str68, "[100, 103, 1, 1, 5, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[100, 103, 2, 2, 5, 1]" + "'", str69, "[100, 103, 2, 2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[100, 103, 3, 3, 5, 1]" + "'", str70, "[100, 103, 3, 3, 5, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[100, 103, 4, 4, 5, 1]" + "'", str71, "[100, 103, 4, 4, 5, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[100, 103, 5, 5, 5, 1]" + "'", str72, "[100, 103, 5, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[100, 103, 6, 6, 5, 1]" + "'", str73, "[100, 103, 6, 6, 5, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[100, 103, 7, 7, 5, 1]" + "'", str74, "[100, 103, 7, 7, 5, 1]");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test2506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2506");
        int[] intArray4 = new int[] { '#', ' ', (byte) -1, (short) 1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass50 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[39, 4, 4, 5]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 33, 0, 1]" + "'", str5, "[35, 33, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 34, 1, 1]" + "'", str6, "[35, 34, 1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 35, 2, 1]" + "'", str7, "[35, 35, 2, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 36, 3, 1]" + "'", str8, "[35, 36, 3, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 37, 4, 1]" + "'", str9, "[35, 37, 4, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 38, 5, 1]" + "'", str10, "[35, 38, 5, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 39, 6, 1]" + "'", str11, "[35, 39, 6, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 40, 7, 1]" + "'", str12, "[35, 40, 7, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 41, 8, 1]" + "'", str13, "[35, 41, 8, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 42, 9, 1]" + "'", str14, "[35, 42, 9, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[36, 0, 0, 2]" + "'", str15, "[36, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[36, 1, 1, 2]" + "'", str16, "[36, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[36, 2, 2, 2]" + "'", str17, "[36, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[36, 3, 3, 2]" + "'", str18, "[36, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[36, 4, 4, 2]" + "'", str19, "[36, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[36, 5, 5, 2]" + "'", str20, "[36, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[36, 6, 6, 2]" + "'", str21, "[36, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[36, 7, 7, 2]" + "'", str22, "[36, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[36, 8, 8, 2]" + "'", str23, "[36, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[36, 9, 9, 2]" + "'", str24, "[36, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[37, 0, 0, 3]" + "'", str25, "[37, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[37, 1, 1, 3]" + "'", str26, "[37, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[37, 2, 2, 3]" + "'", str27, "[37, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[37, 3, 3, 3]" + "'", str28, "[37, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[37, 4, 4, 3]" + "'", str29, "[37, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[37, 5, 5, 3]" + "'", str30, "[37, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[37, 6, 6, 3]" + "'", str31, "[37, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[37, 7, 7, 3]" + "'", str32, "[37, 7, 7, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[37, 8, 8, 3]" + "'", str33, "[37, 8, 8, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[37, 9, 9, 3]" + "'", str34, "[37, 9, 9, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[38, 0, 0, 4]" + "'", str35, "[38, 0, 0, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[38, 1, 1, 4]" + "'", str36, "[38, 1, 1, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[38, 2, 2, 4]" + "'", str37, "[38, 2, 2, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[38, 3, 3, 4]" + "'", str38, "[38, 3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[38, 4, 4, 4]" + "'", str39, "[38, 4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[38, 5, 5, 4]" + "'", str40, "[38, 5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[38, 6, 6, 4]" + "'", str41, "[38, 6, 6, 4]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[38, 7, 7, 4]" + "'", str42, "[38, 7, 7, 4]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[38, 8, 8, 4]" + "'", str43, "[38, 8, 8, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[38, 9, 9, 4]" + "'", str44, "[38, 9, 9, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[39, 0, 0, 5]" + "'", str45, "[39, 0, 0, 5]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[39, 1, 1, 5]" + "'", str46, "[39, 1, 1, 5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[39, 2, 2, 5]" + "'", str47, "[39, 2, 2, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[39, 3, 3, 5]" + "'", str48, "[39, 3, 3, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[39, 4, 4, 5]" + "'", str49, "[39, 4, 4, 5]");
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test2507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2507");
        int[] intArray4 = new int[] { '4', (byte) -1, (short) 1, (byte) 10 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass23 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[53, 9, 9, 11]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[52, 0, 2, 10]" + "'", str5, "[52, 0, 2, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[52, 1, 3, 10]" + "'", str6, "[52, 1, 3, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[52, 2, 4, 10]" + "'", str7, "[52, 2, 4, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[52, 3, 5, 10]" + "'", str8, "[52, 3, 5, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[52, 4, 6, 10]" + "'", str9, "[52, 4, 6, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[52, 5, 7, 10]" + "'", str10, "[52, 5, 7, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[52, 6, 8, 10]" + "'", str11, "[52, 6, 8, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[52, 7, 9, 10]" + "'", str12, "[52, 7, 9, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[53, 0, 0, 11]" + "'", str13, "[53, 0, 0, 11]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[53, 1, 1, 11]" + "'", str14, "[53, 1, 1, 11]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[53, 2, 2, 11]" + "'", str15, "[53, 2, 2, 11]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[53, 3, 3, 11]" + "'", str16, "[53, 3, 3, 11]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[53, 4, 4, 11]" + "'", str17, "[53, 4, 4, 11]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[53, 5, 5, 11]" + "'", str18, "[53, 5, 5, 11]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[53, 6, 6, 11]" + "'", str19, "[53, 6, 6, 11]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[53, 7, 7, 11]" + "'", str20, "[53, 7, 7, 11]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[53, 8, 8, 11]" + "'", str21, "[53, 8, 8, 11]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[53, 9, 9, 11]" + "'", str22, "[53, 9, 9, 11]");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test2508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2508");
        int[] intArray5 = new int[] { (byte) 0, '#', ' ', 10, 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass63 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 35, 89, 10, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 35, 33, 10, 1]" + "'", str6, "[0, 35, 33, 10, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 35, 34, 10, 1]" + "'", str7, "[0, 35, 34, 10, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 35, 35, 10, 1]" + "'", str8, "[0, 35, 35, 10, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 35, 36, 10, 1]" + "'", str9, "[0, 35, 36, 10, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 35, 37, 10, 1]" + "'", str10, "[0, 35, 37, 10, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 35, 38, 10, 1]" + "'", str11, "[0, 35, 38, 10, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 35, 39, 10, 1]" + "'", str12, "[0, 35, 39, 10, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 35, 40, 10, 1]" + "'", str13, "[0, 35, 40, 10, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 35, 41, 10, 1]" + "'", str14, "[0, 35, 41, 10, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 35, 42, 10, 1]" + "'", str15, "[0, 35, 42, 10, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 35, 43, 10, 1]" + "'", str16, "[0, 35, 43, 10, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 35, 44, 10, 1]" + "'", str17, "[0, 35, 44, 10, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 35, 45, 10, 1]" + "'", str18, "[0, 35, 45, 10, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 35, 46, 10, 1]" + "'", str19, "[0, 35, 46, 10, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 35, 47, 10, 1]" + "'", str20, "[0, 35, 47, 10, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 35, 48, 10, 1]" + "'", str21, "[0, 35, 48, 10, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 35, 49, 10, 1]" + "'", str22, "[0, 35, 49, 10, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 35, 50, 10, 1]" + "'", str23, "[0, 35, 50, 10, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 35, 51, 10, 1]" + "'", str24, "[0, 35, 51, 10, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 35, 52, 10, 1]" + "'", str25, "[0, 35, 52, 10, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 35, 53, 10, 1]" + "'", str26, "[0, 35, 53, 10, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 35, 54, 10, 1]" + "'", str27, "[0, 35, 54, 10, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 35, 55, 10, 1]" + "'", str28, "[0, 35, 55, 10, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 35, 56, 10, 1]" + "'", str29, "[0, 35, 56, 10, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 35, 57, 10, 1]" + "'", str30, "[0, 35, 57, 10, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 35, 58, 10, 1]" + "'", str31, "[0, 35, 58, 10, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 35, 59, 10, 1]" + "'", str32, "[0, 35, 59, 10, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 35, 60, 10, 1]" + "'", str33, "[0, 35, 60, 10, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 35, 61, 10, 1]" + "'", str34, "[0, 35, 61, 10, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 35, 62, 10, 1]" + "'", str35, "[0, 35, 62, 10, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 35, 63, 10, 1]" + "'", str36, "[0, 35, 63, 10, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 35, 64, 10, 1]" + "'", str37, "[0, 35, 64, 10, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 35, 65, 10, 1]" + "'", str38, "[0, 35, 65, 10, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 35, 66, 10, 1]" + "'", str39, "[0, 35, 66, 10, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 35, 67, 10, 1]" + "'", str40, "[0, 35, 67, 10, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 35, 68, 10, 1]" + "'", str41, "[0, 35, 68, 10, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 35, 69, 10, 1]" + "'", str42, "[0, 35, 69, 10, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 35, 70, 10, 1]" + "'", str43, "[0, 35, 70, 10, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 35, 71, 10, 1]" + "'", str44, "[0, 35, 71, 10, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 35, 72, 10, 1]" + "'", str45, "[0, 35, 72, 10, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 35, 73, 10, 1]" + "'", str46, "[0, 35, 73, 10, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 35, 74, 10, 1]" + "'", str47, "[0, 35, 74, 10, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 35, 75, 10, 1]" + "'", str48, "[0, 35, 75, 10, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 35, 76, 10, 1]" + "'", str49, "[0, 35, 76, 10, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 35, 77, 10, 1]" + "'", str50, "[0, 35, 77, 10, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 35, 78, 10, 1]" + "'", str51, "[0, 35, 78, 10, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 35, 79, 10, 1]" + "'", str52, "[0, 35, 79, 10, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 35, 80, 10, 1]" + "'", str53, "[0, 35, 80, 10, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 35, 81, 10, 1]" + "'", str54, "[0, 35, 81, 10, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, 35, 82, 10, 1]" + "'", str55, "[0, 35, 82, 10, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, 35, 83, 10, 1]" + "'", str56, "[0, 35, 83, 10, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, 35, 84, 10, 1]" + "'", str57, "[0, 35, 84, 10, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, 35, 85, 10, 1]" + "'", str58, "[0, 35, 85, 10, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, 35, 86, 10, 1]" + "'", str59, "[0, 35, 86, 10, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, 35, 87, 10, 1]" + "'", str60, "[0, 35, 87, 10, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, 35, 88, 10, 1]" + "'", str61, "[0, 35, 88, 10, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, 35, 89, 10, 1]" + "'", str62, "[0, 35, 89, 10, 1]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test2509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2509");
        int[] intArray5 = new int[] { (short) 100, 'a', ' ', 0, (byte) -1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass65 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 97, 91, 0, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 97, 33, 0, -1]" + "'", str6, "[100, 97, 33, 0, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 97, 34, 0, -1]" + "'", str7, "[100, 97, 34, 0, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 97, 35, 0, -1]" + "'", str8, "[100, 97, 35, 0, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 97, 36, 0, -1]" + "'", str9, "[100, 97, 36, 0, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 97, 37, 0, -1]" + "'", str10, "[100, 97, 37, 0, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 97, 38, 0, -1]" + "'", str11, "[100, 97, 38, 0, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 97, 39, 0, -1]" + "'", str12, "[100, 97, 39, 0, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 97, 40, 0, -1]" + "'", str13, "[100, 97, 40, 0, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 97, 41, 0, -1]" + "'", str14, "[100, 97, 41, 0, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 97, 42, 0, -1]" + "'", str15, "[100, 97, 42, 0, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 97, 43, 0, -1]" + "'", str16, "[100, 97, 43, 0, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 97, 44, 0, -1]" + "'", str17, "[100, 97, 44, 0, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 97, 45, 0, -1]" + "'", str18, "[100, 97, 45, 0, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 97, 46, 0, -1]" + "'", str19, "[100, 97, 46, 0, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 97, 47, 0, -1]" + "'", str20, "[100, 97, 47, 0, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 97, 48, 0, -1]" + "'", str21, "[100, 97, 48, 0, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 97, 49, 0, -1]" + "'", str22, "[100, 97, 49, 0, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 97, 50, 0, -1]" + "'", str23, "[100, 97, 50, 0, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 97, 51, 0, -1]" + "'", str24, "[100, 97, 51, 0, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 97, 52, 0, -1]" + "'", str25, "[100, 97, 52, 0, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 97, 53, 0, -1]" + "'", str26, "[100, 97, 53, 0, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 97, 54, 0, -1]" + "'", str27, "[100, 97, 54, 0, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 97, 55, 0, -1]" + "'", str28, "[100, 97, 55, 0, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 97, 56, 0, -1]" + "'", str29, "[100, 97, 56, 0, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 97, 57, 0, -1]" + "'", str30, "[100, 97, 57, 0, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 97, 58, 0, -1]" + "'", str31, "[100, 97, 58, 0, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 97, 59, 0, -1]" + "'", str32, "[100, 97, 59, 0, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 97, 60, 0, -1]" + "'", str33, "[100, 97, 60, 0, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 97, 61, 0, -1]" + "'", str34, "[100, 97, 61, 0, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 97, 62, 0, -1]" + "'", str35, "[100, 97, 62, 0, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 97, 63, 0, -1]" + "'", str36, "[100, 97, 63, 0, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 97, 64, 0, -1]" + "'", str37, "[100, 97, 64, 0, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 97, 65, 0, -1]" + "'", str38, "[100, 97, 65, 0, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 97, 66, 0, -1]" + "'", str39, "[100, 97, 66, 0, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 97, 67, 0, -1]" + "'", str40, "[100, 97, 67, 0, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 97, 68, 0, -1]" + "'", str41, "[100, 97, 68, 0, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 97, 69, 0, -1]" + "'", str42, "[100, 97, 69, 0, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 97, 70, 0, -1]" + "'", str43, "[100, 97, 70, 0, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 97, 71, 0, -1]" + "'", str44, "[100, 97, 71, 0, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 97, 72, 0, -1]" + "'", str45, "[100, 97, 72, 0, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 97, 73, 0, -1]" + "'", str46, "[100, 97, 73, 0, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 97, 74, 0, -1]" + "'", str47, "[100, 97, 74, 0, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 97, 75, 0, -1]" + "'", str48, "[100, 97, 75, 0, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 97, 76, 0, -1]" + "'", str49, "[100, 97, 76, 0, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 97, 77, 0, -1]" + "'", str50, "[100, 97, 77, 0, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 97, 78, 0, -1]" + "'", str51, "[100, 97, 78, 0, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 97, 79, 0, -1]" + "'", str52, "[100, 97, 79, 0, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 97, 80, 0, -1]" + "'", str53, "[100, 97, 80, 0, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 97, 81, 0, -1]" + "'", str54, "[100, 97, 81, 0, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 97, 82, 0, -1]" + "'", str55, "[100, 97, 82, 0, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 97, 83, 0, -1]" + "'", str56, "[100, 97, 83, 0, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 97, 84, 0, -1]" + "'", str57, "[100, 97, 84, 0, -1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 97, 85, 0, -1]" + "'", str58, "[100, 97, 85, 0, -1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 97, 86, 0, -1]" + "'", str59, "[100, 97, 86, 0, -1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 97, 87, 0, -1]" + "'", str60, "[100, 97, 87, 0, -1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 97, 88, 0, -1]" + "'", str61, "[100, 97, 88, 0, -1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[100, 97, 89, 0, -1]" + "'", str62, "[100, 97, 89, 0, -1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[100, 97, 90, 0, -1]" + "'", str63, "[100, 97, 90, 0, -1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[100, 97, 91, 0, -1]" + "'", str64, "[100, 97, 91, 0, -1]");
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test2510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2510");
        int[] intArray4 = new int[] { '4', (byte) -1, (short) 1, (byte) 10 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass24 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[54, 0, 0, 12]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[52, 0, 2, 10]" + "'", str5, "[52, 0, 2, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[52, 1, 3, 10]" + "'", str6, "[52, 1, 3, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[52, 2, 4, 10]" + "'", str7, "[52, 2, 4, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[52, 3, 5, 10]" + "'", str8, "[52, 3, 5, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[52, 4, 6, 10]" + "'", str9, "[52, 4, 6, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[52, 5, 7, 10]" + "'", str10, "[52, 5, 7, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[52, 6, 8, 10]" + "'", str11, "[52, 6, 8, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[52, 7, 9, 10]" + "'", str12, "[52, 7, 9, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[53, 0, 0, 11]" + "'", str13, "[53, 0, 0, 11]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[53, 1, 1, 11]" + "'", str14, "[53, 1, 1, 11]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[53, 2, 2, 11]" + "'", str15, "[53, 2, 2, 11]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[53, 3, 3, 11]" + "'", str16, "[53, 3, 3, 11]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[53, 4, 4, 11]" + "'", str17, "[53, 4, 4, 11]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[53, 5, 5, 11]" + "'", str18, "[53, 5, 5, 11]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[53, 6, 6, 11]" + "'", str19, "[53, 6, 6, 11]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[53, 7, 7, 11]" + "'", str20, "[53, 7, 7, 11]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[53, 8, 8, 11]" + "'", str21, "[53, 8, 8, 11]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[53, 9, 9, 11]" + "'", str22, "[53, 9, 9, 11]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[54, 0, 0, 12]" + "'", str23, "[54, 0, 0, 12]");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test2511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2511");
        int[] intArray6 = new int[] { (byte) 0, (short) 100, 0, (-1), (short) -1, (byte) 1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass59 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 105, 1, 1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 100, 1, 0, -1, 1]" + "'", str7, "[0, 100, 1, 0, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 100, 2, 1, -1, 1]" + "'", str8, "[0, 100, 2, 1, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 100, 3, 2, -1, 1]" + "'", str9, "[0, 100, 3, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 100, 4, 3, -1, 1]" + "'", str10, "[0, 100, 4, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 100, 5, 4, -1, 1]" + "'", str11, "[0, 100, 5, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 100, 6, 5, -1, 1]" + "'", str12, "[0, 100, 6, 5, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 100, 7, 6, -1, 1]" + "'", str13, "[0, 100, 7, 6, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 100, 8, 7, -1, 1]" + "'", str14, "[0, 100, 8, 7, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 100, 9, 8, -1, 1]" + "'", str15, "[0, 100, 9, 8, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 100, 10, 9, -1, 1]" + "'", str16, "[0, 100, 10, 9, -1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 101, 0, 0, 0, 1]" + "'", str17, "[0, 101, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 101, 1, 1, 0, 1]" + "'", str18, "[0, 101, 1, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 101, 2, 2, 0, 1]" + "'", str19, "[0, 101, 2, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 101, 3, 3, 0, 1]" + "'", str20, "[0, 101, 3, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 101, 4, 4, 0, 1]" + "'", str21, "[0, 101, 4, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 101, 5, 5, 0, 1]" + "'", str22, "[0, 101, 5, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 101, 6, 6, 0, 1]" + "'", str23, "[0, 101, 6, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 101, 7, 7, 0, 1]" + "'", str24, "[0, 101, 7, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 101, 8, 8, 0, 1]" + "'", str25, "[0, 101, 8, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 101, 9, 9, 0, 1]" + "'", str26, "[0, 101, 9, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 102, 0, 0, 1, 1]" + "'", str27, "[0, 102, 0, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 102, 1, 1, 1, 1]" + "'", str28, "[0, 102, 1, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 102, 2, 2, 1, 1]" + "'", str29, "[0, 102, 2, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 102, 3, 3, 1, 1]" + "'", str30, "[0, 102, 3, 3, 1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 102, 4, 4, 1, 1]" + "'", str31, "[0, 102, 4, 4, 1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 102, 5, 5, 1, 1]" + "'", str32, "[0, 102, 5, 5, 1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 102, 6, 6, 1, 1]" + "'", str33, "[0, 102, 6, 6, 1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 102, 7, 7, 1, 1]" + "'", str34, "[0, 102, 7, 7, 1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 102, 8, 8, 1, 1]" + "'", str35, "[0, 102, 8, 8, 1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 102, 9, 9, 1, 1]" + "'", str36, "[0, 102, 9, 9, 1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 103, 0, 0, 2, 1]" + "'", str37, "[0, 103, 0, 0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 103, 1, 1, 2, 1]" + "'", str38, "[0, 103, 1, 1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 103, 2, 2, 2, 1]" + "'", str39, "[0, 103, 2, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 103, 3, 3, 2, 1]" + "'", str40, "[0, 103, 3, 3, 2, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 103, 4, 4, 2, 1]" + "'", str41, "[0, 103, 4, 4, 2, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 103, 5, 5, 2, 1]" + "'", str42, "[0, 103, 5, 5, 2, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 103, 6, 6, 2, 1]" + "'", str43, "[0, 103, 6, 6, 2, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 103, 7, 7, 2, 1]" + "'", str44, "[0, 103, 7, 7, 2, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 103, 8, 8, 2, 1]" + "'", str45, "[0, 103, 8, 8, 2, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 103, 9, 9, 2, 1]" + "'", str46, "[0, 103, 9, 9, 2, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 104, 0, 0, 3, 1]" + "'", str47, "[0, 104, 0, 0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 104, 1, 1, 3, 1]" + "'", str48, "[0, 104, 1, 1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 104, 2, 2, 3, 1]" + "'", str49, "[0, 104, 2, 2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 104, 3, 3, 3, 1]" + "'", str50, "[0, 104, 3, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 104, 4, 4, 3, 1]" + "'", str51, "[0, 104, 4, 4, 3, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 104, 5, 5, 3, 1]" + "'", str52, "[0, 104, 5, 5, 3, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 104, 6, 6, 3, 1]" + "'", str53, "[0, 104, 6, 6, 3, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 104, 7, 7, 3, 1]" + "'", str54, "[0, 104, 7, 7, 3, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, 104, 8, 8, 3, 1]" + "'", str55, "[0, 104, 8, 8, 3, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, 104, 9, 9, 3, 1]" + "'", str56, "[0, 104, 9, 9, 3, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, 105, 0, 0, 4, 1]" + "'", str57, "[0, 105, 0, 0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, 105, 1, 1, 4, 1]" + "'", str58, "[0, 105, 1, 1, 4, 1]");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test2512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2512");
        int[] intArray3 = new int[] { '#', (byte) 100, 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass78 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[35, 174, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[35, 101, 1]" + "'", str4, "[35, 101, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 102, 1]" + "'", str5, "[35, 102, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 103, 1]" + "'", str6, "[35, 103, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 104, 1]" + "'", str7, "[35, 104, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 105, 1]" + "'", str8, "[35, 105, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 106, 1]" + "'", str9, "[35, 106, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 107, 1]" + "'", str10, "[35, 107, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 108, 1]" + "'", str11, "[35, 108, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 109, 1]" + "'", str12, "[35, 109, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 110, 1]" + "'", str13, "[35, 110, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 111, 1]" + "'", str14, "[35, 111, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[35, 112, 1]" + "'", str15, "[35, 112, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[35, 113, 1]" + "'", str16, "[35, 113, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[35, 114, 1]" + "'", str17, "[35, 114, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[35, 115, 1]" + "'", str18, "[35, 115, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[35, 116, 1]" + "'", str19, "[35, 116, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[35, 117, 1]" + "'", str20, "[35, 117, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[35, 118, 1]" + "'", str21, "[35, 118, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[35, 119, 1]" + "'", str22, "[35, 119, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[35, 120, 1]" + "'", str23, "[35, 120, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[35, 121, 1]" + "'", str24, "[35, 121, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[35, 122, 1]" + "'", str25, "[35, 122, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35, 123, 1]" + "'", str26, "[35, 123, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 124, 1]" + "'", str27, "[35, 124, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[35, 125, 1]" + "'", str28, "[35, 125, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[35, 126, 1]" + "'", str29, "[35, 126, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[35, 127, 1]" + "'", str30, "[35, 127, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[35, 128, 1]" + "'", str31, "[35, 128, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 129, 1]" + "'", str32, "[35, 129, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 130, 1]" + "'", str33, "[35, 130, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 131, 1]" + "'", str34, "[35, 131, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 132, 1]" + "'", str35, "[35, 132, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 133, 1]" + "'", str36, "[35, 133, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 134, 1]" + "'", str37, "[35, 134, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 135, 1]" + "'", str38, "[35, 135, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 136, 1]" + "'", str39, "[35, 136, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 137, 1]" + "'", str40, "[35, 137, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 138, 1]" + "'", str41, "[35, 138, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 139, 1]" + "'", str42, "[35, 139, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 140, 1]" + "'", str43, "[35, 140, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[35, 141, 1]" + "'", str44, "[35, 141, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[35, 142, 1]" + "'", str45, "[35, 142, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[35, 143, 1]" + "'", str46, "[35, 143, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[35, 144, 1]" + "'", str47, "[35, 144, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[35, 145, 1]" + "'", str48, "[35, 145, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[35, 146, 1]" + "'", str49, "[35, 146, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[35, 147, 1]" + "'", str50, "[35, 147, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[35, 148, 1]" + "'", str51, "[35, 148, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[35, 149, 1]" + "'", str52, "[35, 149, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[35, 150, 1]" + "'", str53, "[35, 150, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[35, 151, 1]" + "'", str54, "[35, 151, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[35, 152, 1]" + "'", str55, "[35, 152, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[35, 153, 1]" + "'", str56, "[35, 153, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[35, 154, 1]" + "'", str57, "[35, 154, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[35, 155, 1]" + "'", str58, "[35, 155, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[35, 156, 1]" + "'", str59, "[35, 156, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[35, 157, 1]" + "'", str60, "[35, 157, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[35, 158, 1]" + "'", str61, "[35, 158, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[35, 159, 1]" + "'", str62, "[35, 159, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[35, 160, 1]" + "'", str63, "[35, 160, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[35, 161, 1]" + "'", str64, "[35, 161, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[35, 162, 1]" + "'", str65, "[35, 162, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[35, 163, 1]" + "'", str66, "[35, 163, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[35, 164, 1]" + "'", str67, "[35, 164, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[35, 165, 1]" + "'", str68, "[35, 165, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[35, 166, 1]" + "'", str69, "[35, 166, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[35, 167, 1]" + "'", str70, "[35, 167, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[35, 168, 1]" + "'", str71, "[35, 168, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[35, 169, 1]" + "'", str72, "[35, 169, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[35, 170, 1]" + "'", str73, "[35, 170, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[35, 171, 1]" + "'", str74, "[35, 171, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[35, 172, 1]" + "'", str75, "[35, 172, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[35, 173, 1]" + "'", str76, "[35, 173, 1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[35, 174, 1]" + "'", str77, "[35, 174, 1]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test2513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2513");
        int[] intArray4 = new int[] { '#', ' ', (byte) -1, (short) 1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass48 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[39, 2, 2, 5]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 33, 0, 1]" + "'", str5, "[35, 33, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 34, 1, 1]" + "'", str6, "[35, 34, 1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 35, 2, 1]" + "'", str7, "[35, 35, 2, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 36, 3, 1]" + "'", str8, "[35, 36, 3, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 37, 4, 1]" + "'", str9, "[35, 37, 4, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 38, 5, 1]" + "'", str10, "[35, 38, 5, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 39, 6, 1]" + "'", str11, "[35, 39, 6, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 40, 7, 1]" + "'", str12, "[35, 40, 7, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 41, 8, 1]" + "'", str13, "[35, 41, 8, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 42, 9, 1]" + "'", str14, "[35, 42, 9, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[36, 0, 0, 2]" + "'", str15, "[36, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[36, 1, 1, 2]" + "'", str16, "[36, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[36, 2, 2, 2]" + "'", str17, "[36, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[36, 3, 3, 2]" + "'", str18, "[36, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[36, 4, 4, 2]" + "'", str19, "[36, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[36, 5, 5, 2]" + "'", str20, "[36, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[36, 6, 6, 2]" + "'", str21, "[36, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[36, 7, 7, 2]" + "'", str22, "[36, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[36, 8, 8, 2]" + "'", str23, "[36, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[36, 9, 9, 2]" + "'", str24, "[36, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[37, 0, 0, 3]" + "'", str25, "[37, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[37, 1, 1, 3]" + "'", str26, "[37, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[37, 2, 2, 3]" + "'", str27, "[37, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[37, 3, 3, 3]" + "'", str28, "[37, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[37, 4, 4, 3]" + "'", str29, "[37, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[37, 5, 5, 3]" + "'", str30, "[37, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[37, 6, 6, 3]" + "'", str31, "[37, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[37, 7, 7, 3]" + "'", str32, "[37, 7, 7, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[37, 8, 8, 3]" + "'", str33, "[37, 8, 8, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[37, 9, 9, 3]" + "'", str34, "[37, 9, 9, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[38, 0, 0, 4]" + "'", str35, "[38, 0, 0, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[38, 1, 1, 4]" + "'", str36, "[38, 1, 1, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[38, 2, 2, 4]" + "'", str37, "[38, 2, 2, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[38, 3, 3, 4]" + "'", str38, "[38, 3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[38, 4, 4, 4]" + "'", str39, "[38, 4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[38, 5, 5, 4]" + "'", str40, "[38, 5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[38, 6, 6, 4]" + "'", str41, "[38, 6, 6, 4]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[38, 7, 7, 4]" + "'", str42, "[38, 7, 7, 4]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[38, 8, 8, 4]" + "'", str43, "[38, 8, 8, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[38, 9, 9, 4]" + "'", str44, "[38, 9, 9, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[39, 0, 0, 5]" + "'", str45, "[39, 0, 0, 5]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[39, 1, 1, 5]" + "'", str46, "[39, 1, 1, 5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[39, 2, 2, 5]" + "'", str47, "[39, 2, 2, 5]");
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test2514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2514");
        int[] intArray2 = new int[] { (byte) 1, (-1) };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass64 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[0, 0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 0]" + "'", str3, "[2, 0]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 1]" + "'", str4, "[3, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 2]" + "'", str5, "[4, 2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 3]" + "'", str6, "[5, 3]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 4]" + "'", str7, "[6, 4]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 5]" + "'", str8, "[7, 5]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 6]" + "'", str9, "[8, 6]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 7]" + "'", str10, "[9, 7]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 8]" + "'", str11, "[10, 8]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 9]" + "'", str12, "[11, 9]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 1]" + "'", str13, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1]" + "'", str14, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2]" + "'", str15, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[3, 3]" + "'", str16, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[4, 4]" + "'", str17, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[5, 5]" + "'", str18, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[6, 6]" + "'", str19, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[7, 7]" + "'", str20, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[8, 8]" + "'", str21, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[9, 9]" + "'", str22, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 1]" + "'", str23, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1]" + "'", str24, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 2]" + "'", str25, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3]" + "'", str26, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[4, 4]" + "'", str27, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[5, 5]" + "'", str28, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[6, 6]" + "'", str29, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[7, 7]" + "'", str30, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[8, 8]" + "'", str31, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[9, 9]" + "'", str32, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 0, 1]" + "'", str33, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1]" + "'", str34, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 2]" + "'", str35, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 3]" + "'", str36, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4]" + "'", str37, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[5, 5]" + "'", str38, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[6, 6]" + "'", str39, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[7, 7]" + "'", str40, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[8, 8]" + "'", str41, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[9, 9]" + "'", str42, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 0, 1]" + "'", str43, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1]" + "'", str44, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[2, 2]" + "'", str45, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 3]" + "'", str46, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 4]" + "'", str47, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5]" + "'", str48, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[6, 6]" + "'", str49, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[7, 7]" + "'", str50, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[8, 8]" + "'", str51, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[9, 9]" + "'", str52, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 0, 1]" + "'", str53, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 1]" + "'", str54, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[2, 2]" + "'", str55, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[3, 3]" + "'", str56, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[4, 4]" + "'", str57, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 5]" + "'", str58, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 6]" + "'", str59, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[7, 7]" + "'", str60, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[8, 8]" + "'", str61, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[9, 9]" + "'", str62, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 0, 1]" + "'", str63, "[1, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test2515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2515");
        int[] intArray4 = new int[] { (byte) -1, 1, 100, '#' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass36 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 32, 131, 35]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 2, 101, 35]" + "'", str5, "[-1, 2, 101, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 3, 102, 35]" + "'", str6, "[-1, 3, 102, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 4, 103, 35]" + "'", str7, "[-1, 4, 103, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 5, 104, 35]" + "'", str8, "[-1, 5, 104, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 6, 105, 35]" + "'", str9, "[-1, 6, 105, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 7, 106, 35]" + "'", str10, "[-1, 7, 106, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 8, 107, 35]" + "'", str11, "[-1, 8, 107, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 9, 108, 35]" + "'", str12, "[-1, 9, 108, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 10, 109, 35]" + "'", str13, "[-1, 10, 109, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 11, 110, 35]" + "'", str14, "[-1, 11, 110, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 12, 111, 35]" + "'", str15, "[-1, 12, 111, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 13, 112, 35]" + "'", str16, "[-1, 13, 112, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 14, 113, 35]" + "'", str17, "[-1, 14, 113, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 15, 114, 35]" + "'", str18, "[-1, 15, 114, 35]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 16, 115, 35]" + "'", str19, "[-1, 16, 115, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 17, 116, 35]" + "'", str20, "[-1, 17, 116, 35]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 18, 117, 35]" + "'", str21, "[-1, 18, 117, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 19, 118, 35]" + "'", str22, "[-1, 19, 118, 35]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 20, 119, 35]" + "'", str23, "[-1, 20, 119, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 21, 120, 35]" + "'", str24, "[-1, 21, 120, 35]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 22, 121, 35]" + "'", str25, "[-1, 22, 121, 35]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 23, 122, 35]" + "'", str26, "[-1, 23, 122, 35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 24, 123, 35]" + "'", str27, "[-1, 24, 123, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 25, 124, 35]" + "'", str28, "[-1, 25, 124, 35]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 26, 125, 35]" + "'", str29, "[-1, 26, 125, 35]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 27, 126, 35]" + "'", str30, "[-1, 27, 126, 35]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 28, 127, 35]" + "'", str31, "[-1, 28, 127, 35]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 29, 128, 35]" + "'", str32, "[-1, 29, 128, 35]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 30, 129, 35]" + "'", str33, "[-1, 30, 129, 35]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 31, 130, 35]" + "'", str34, "[-1, 31, 130, 35]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 32, 131, 35]" + "'", str35, "[-1, 32, 131, 35]");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test2516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2516");
        int[] intArray1 = new int[] { (byte) 10 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass64 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[72]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[11]" + "'", str2, "[11]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[12]" + "'", str3, "[12]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[13]" + "'", str4, "[13]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[14]" + "'", str5, "[14]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[15]" + "'", str6, "[15]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[16]" + "'", str7, "[16]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[17]" + "'", str8, "[17]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[18]" + "'", str9, "[18]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[19]" + "'", str10, "[19]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[20]" + "'", str11, "[20]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[21]" + "'", str12, "[21]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[22]" + "'", str13, "[22]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[23]" + "'", str14, "[23]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[24]" + "'", str15, "[24]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[25]" + "'", str16, "[25]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[26]" + "'", str17, "[26]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[27]" + "'", str18, "[27]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[28]" + "'", str19, "[28]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[29]" + "'", str20, "[29]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[30]" + "'", str21, "[30]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[31]" + "'", str22, "[31]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32]" + "'", str23, "[32]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[33]" + "'", str24, "[33]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34]" + "'", str25, "[34]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35]" + "'", str26, "[35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[36]" + "'", str27, "[36]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[37]" + "'", str28, "[37]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[38]" + "'", str29, "[38]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[39]" + "'", str30, "[39]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[40]" + "'", str31, "[40]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[41]" + "'", str32, "[41]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[42]" + "'", str33, "[42]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[43]" + "'", str34, "[43]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[44]" + "'", str35, "[44]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[45]" + "'", str36, "[45]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[46]" + "'", str37, "[46]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[47]" + "'", str38, "[47]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[48]" + "'", str39, "[48]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[49]" + "'", str40, "[49]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[50]" + "'", str41, "[50]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[51]" + "'", str42, "[51]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[52]" + "'", str43, "[52]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[53]" + "'", str44, "[53]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[54]" + "'", str45, "[54]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[55]" + "'", str46, "[55]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[56]" + "'", str47, "[56]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[57]" + "'", str48, "[57]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[58]" + "'", str49, "[58]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[59]" + "'", str50, "[59]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[60]" + "'", str51, "[60]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[61]" + "'", str52, "[61]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[62]" + "'", str53, "[62]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[63]" + "'", str54, "[63]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[64]" + "'", str55, "[64]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[65]" + "'", str56, "[65]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[66]" + "'", str57, "[66]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[67]" + "'", str58, "[67]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[68]" + "'", str59, "[68]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[69]" + "'", str60, "[69]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[70]" + "'", str61, "[70]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[71]" + "'", str62, "[71]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[72]" + "'", str63, "[72]");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test2517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2517");
        int[] intArray3 = new int[] { ' ', (-1), 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass82 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[39, 7, 8]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 0, 1]" + "'", str4, "[32, 0, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 1, 1]" + "'", str5, "[32, 1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 2, 1]" + "'", str6, "[32, 2, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 3, 1]" + "'", str7, "[32, 3, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 4, 1]" + "'", str8, "[32, 4, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 5, 1]" + "'", str9, "[32, 5, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 6, 1]" + "'", str10, "[32, 6, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 7, 1]" + "'", str11, "[32, 7, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 8, 1]" + "'", str12, "[32, 8, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 9, 1]" + "'", str13, "[32, 9, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[33, 0, 2]" + "'", str14, "[33, 0, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[33, 1, 2]" + "'", str15, "[33, 1, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[33, 2, 2]" + "'", str16, "[33, 2, 2]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[33, 3, 2]" + "'", str17, "[33, 3, 2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[33, 4, 2]" + "'", str18, "[33, 4, 2]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[33, 5, 2]" + "'", str19, "[33, 5, 2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[33, 6, 2]" + "'", str20, "[33, 6, 2]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[33, 7, 2]" + "'", str21, "[33, 7, 2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[33, 8, 2]" + "'", str22, "[33, 8, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[33, 9, 2]" + "'", str23, "[33, 9, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[34, 0, 3]" + "'", str24, "[34, 0, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34, 1, 3]" + "'", str25, "[34, 1, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 2, 3]" + "'", str26, "[34, 2, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[34, 3, 3]" + "'", str27, "[34, 3, 3]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[34, 4, 3]" + "'", str28, "[34, 4, 3]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[34, 5, 3]" + "'", str29, "[34, 5, 3]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[34, 6, 3]" + "'", str30, "[34, 6, 3]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[34, 7, 3]" + "'", str31, "[34, 7, 3]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[34, 8, 3]" + "'", str32, "[34, 8, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[34, 9, 3]" + "'", str33, "[34, 9, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 0, 4]" + "'", str34, "[35, 0, 4]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 1, 4]" + "'", str35, "[35, 1, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 2, 4]" + "'", str36, "[35, 2, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 3, 4]" + "'", str37, "[35, 3, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 4, 4]" + "'", str38, "[35, 4, 4]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 5, 4]" + "'", str39, "[35, 5, 4]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 6, 4]" + "'", str40, "[35, 6, 4]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 7, 4]" + "'", str41, "[35, 7, 4]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 8, 4]" + "'", str42, "[35, 8, 4]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 9, 4]" + "'", str43, "[35, 9, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[36, 0, 5]" + "'", str44, "[36, 0, 5]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[36, 1, 5]" + "'", str45, "[36, 1, 5]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[36, 2, 5]" + "'", str46, "[36, 2, 5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[36, 3, 5]" + "'", str47, "[36, 3, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[36, 4, 5]" + "'", str48, "[36, 4, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[36, 5, 5]" + "'", str49, "[36, 5, 5]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[36, 6, 5]" + "'", str50, "[36, 6, 5]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[36, 7, 5]" + "'", str51, "[36, 7, 5]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[36, 8, 5]" + "'", str52, "[36, 8, 5]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[36, 9, 5]" + "'", str53, "[36, 9, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[37, 0, 6]" + "'", str54, "[37, 0, 6]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[37, 1, 6]" + "'", str55, "[37, 1, 6]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[37, 2, 6]" + "'", str56, "[37, 2, 6]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[37, 3, 6]" + "'", str57, "[37, 3, 6]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[37, 4, 6]" + "'", str58, "[37, 4, 6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[37, 5, 6]" + "'", str59, "[37, 5, 6]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[37, 6, 6]" + "'", str60, "[37, 6, 6]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[37, 7, 6]" + "'", str61, "[37, 7, 6]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[37, 8, 6]" + "'", str62, "[37, 8, 6]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[37, 9, 6]" + "'", str63, "[37, 9, 6]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[38, 0, 7]" + "'", str64, "[38, 0, 7]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[38, 1, 7]" + "'", str65, "[38, 1, 7]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[38, 2, 7]" + "'", str66, "[38, 2, 7]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[38, 3, 7]" + "'", str67, "[38, 3, 7]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[38, 4, 7]" + "'", str68, "[38, 4, 7]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[38, 5, 7]" + "'", str69, "[38, 5, 7]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[38, 6, 7]" + "'", str70, "[38, 6, 7]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[38, 7, 7]" + "'", str71, "[38, 7, 7]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[38, 8, 7]" + "'", str72, "[38, 8, 7]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[38, 9, 7]" + "'", str73, "[38, 9, 7]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[39, 0, 8]" + "'", str74, "[39, 0, 8]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[39, 1, 8]" + "'", str75, "[39, 1, 8]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[39, 2, 8]" + "'", str76, "[39, 2, 8]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[39, 3, 8]" + "'", str77, "[39, 3, 8]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[39, 4, 8]" + "'", str78, "[39, 4, 8]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[39, 5, 8]" + "'", str79, "[39, 5, 8]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[39, 6, 8]" + "'", str80, "[39, 6, 8]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[39, 7, 8]" + "'", str81, "[39, 7, 8]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2518");
        int[] intArray4 = new int[] { 'a', (short) 1, (byte) -1, (short) 0 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass60 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[102, 4, 4, 5]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 2, 0, 0]" + "'", str5, "[97, 2, 0, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 3, 1, 0]" + "'", str6, "[97, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 4, 2, 0]" + "'", str7, "[97, 4, 2, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 5, 3, 0]" + "'", str8, "[97, 5, 3, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 6, 4, 0]" + "'", str9, "[97, 6, 4, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 7, 5, 0]" + "'", str10, "[97, 7, 5, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 8, 6, 0]" + "'", str11, "[97, 8, 6, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 9, 7, 0]" + "'", str12, "[97, 9, 7, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 10, 8, 0]" + "'", str13, "[97, 10, 8, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 11, 9, 0]" + "'", str14, "[97, 11, 9, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[98, 0, 0, 1]" + "'", str15, "[98, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[98, 1, 1, 1]" + "'", str16, "[98, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[98, 2, 2, 1]" + "'", str17, "[98, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[98, 3, 3, 1]" + "'", str18, "[98, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[98, 4, 4, 1]" + "'", str19, "[98, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[98, 5, 5, 1]" + "'", str20, "[98, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[98, 6, 6, 1]" + "'", str21, "[98, 6, 6, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[98, 7, 7, 1]" + "'", str22, "[98, 7, 7, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[98, 8, 8, 1]" + "'", str23, "[98, 8, 8, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[98, 9, 9, 1]" + "'", str24, "[98, 9, 9, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[99, 0, 0, 2]" + "'", str25, "[99, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[99, 1, 1, 2]" + "'", str26, "[99, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[99, 2, 2, 2]" + "'", str27, "[99, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[99, 3, 3, 2]" + "'", str28, "[99, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[99, 4, 4, 2]" + "'", str29, "[99, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[99, 5, 5, 2]" + "'", str30, "[99, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[99, 6, 6, 2]" + "'", str31, "[99, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[99, 7, 7, 2]" + "'", str32, "[99, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[99, 8, 8, 2]" + "'", str33, "[99, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[99, 9, 9, 2]" + "'", str34, "[99, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 0, 0, 3]" + "'", str35, "[100, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 1, 1, 3]" + "'", str36, "[100, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 2, 2, 3]" + "'", str37, "[100, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 3, 3, 3]" + "'", str38, "[100, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 4, 4, 3]" + "'", str39, "[100, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 5, 5, 3]" + "'", str40, "[100, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 6, 6, 3]" + "'", str41, "[100, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 7, 7, 3]" + "'", str42, "[100, 7, 7, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 8, 8, 3]" + "'", str43, "[100, 8, 8, 3]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 9, 9, 3]" + "'", str44, "[100, 9, 9, 3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[101, 0, 0, 4]" + "'", str45, "[101, 0, 0, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[101, 1, 1, 4]" + "'", str46, "[101, 1, 1, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[101, 2, 2, 4]" + "'", str47, "[101, 2, 2, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[101, 3, 3, 4]" + "'", str48, "[101, 3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[101, 4, 4, 4]" + "'", str49, "[101, 4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[101, 5, 5, 4]" + "'", str50, "[101, 5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[101, 6, 6, 4]" + "'", str51, "[101, 6, 6, 4]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[101, 7, 7, 4]" + "'", str52, "[101, 7, 7, 4]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[101, 8, 8, 4]" + "'", str53, "[101, 8, 8, 4]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[101, 9, 9, 4]" + "'", str54, "[101, 9, 9, 4]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[102, 0, 0, 5]" + "'", str55, "[102, 0, 0, 5]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[102, 1, 1, 5]" + "'", str56, "[102, 1, 1, 5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[102, 2, 2, 5]" + "'", str57, "[102, 2, 2, 5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[102, 3, 3, 5]" + "'", str58, "[102, 3, 3, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[102, 4, 4, 5]" + "'", str59, "[102, 4, 4, 5]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test2519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2519");
        int[] intArray3 = new int[] { 1, (-1), '4' };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str90 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str91 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str92 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str93 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str94 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str95 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str96 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str97 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass98 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[10, 3, 61]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 0, 52]" + "'", str4, "[1, 0, 52]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 1, 52]" + "'", str5, "[1, 1, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 2, 52]" + "'", str6, "[1, 2, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 3, 52]" + "'", str7, "[1, 3, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 4, 52]" + "'", str8, "[1, 4, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 5, 52]" + "'", str9, "[1, 5, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 6, 52]" + "'", str10, "[1, 6, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 7, 52]" + "'", str11, "[1, 7, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 8, 52]" + "'", str12, "[1, 8, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 9, 52]" + "'", str13, "[1, 9, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 0, 53]" + "'", str14, "[2, 0, 53]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 1, 53]" + "'", str15, "[2, 1, 53]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 2, 53]" + "'", str16, "[2, 2, 53]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 3, 53]" + "'", str17, "[2, 3, 53]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 4, 53]" + "'", str18, "[2, 4, 53]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 5, 53]" + "'", str19, "[2, 5, 53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 6, 53]" + "'", str20, "[2, 6, 53]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 7, 53]" + "'", str21, "[2, 7, 53]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 8, 53]" + "'", str22, "[2, 8, 53]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 9, 53]" + "'", str23, "[2, 9, 53]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 0, 54]" + "'", str24, "[3, 0, 54]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 1, 54]" + "'", str25, "[3, 1, 54]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 2, 54]" + "'", str26, "[3, 2, 54]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 3, 54]" + "'", str27, "[3, 3, 54]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 4, 54]" + "'", str28, "[3, 4, 54]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[3, 5, 54]" + "'", str29, "[3, 5, 54]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[3, 6, 54]" + "'", str30, "[3, 6, 54]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[3, 7, 54]" + "'", str31, "[3, 7, 54]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[3, 8, 54]" + "'", str32, "[3, 8, 54]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[3, 9, 54]" + "'", str33, "[3, 9, 54]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4, 0, 55]" + "'", str34, "[4, 0, 55]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 1, 55]" + "'", str35, "[4, 1, 55]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 2, 55]" + "'", str36, "[4, 2, 55]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 3, 55]" + "'", str37, "[4, 3, 55]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[4, 4, 55]" + "'", str38, "[4, 4, 55]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[4, 5, 55]" + "'", str39, "[4, 5, 55]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[4, 6, 55]" + "'", str40, "[4, 6, 55]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[4, 7, 55]" + "'", str41, "[4, 7, 55]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[4, 8, 55]" + "'", str42, "[4, 8, 55]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[4, 9, 55]" + "'", str43, "[4, 9, 55]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[5, 0, 56]" + "'", str44, "[5, 0, 56]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[5, 1, 56]" + "'", str45, "[5, 1, 56]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 2, 56]" + "'", str46, "[5, 2, 56]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 3, 56]" + "'", str47, "[5, 3, 56]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 4, 56]" + "'", str48, "[5, 4, 56]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[5, 5, 56]" + "'", str49, "[5, 5, 56]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[5, 6, 56]" + "'", str50, "[5, 6, 56]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[5, 7, 56]" + "'", str51, "[5, 7, 56]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[5, 8, 56]" + "'", str52, "[5, 8, 56]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[5, 9, 56]" + "'", str53, "[5, 9, 56]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[6, 0, 57]" + "'", str54, "[6, 0, 57]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[6, 1, 57]" + "'", str55, "[6, 1, 57]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[6, 2, 57]" + "'", str56, "[6, 2, 57]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6, 3, 57]" + "'", str57, "[6, 3, 57]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6, 4, 57]" + "'", str58, "[6, 4, 57]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 5, 57]" + "'", str59, "[6, 5, 57]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[6, 6, 57]" + "'", str60, "[6, 6, 57]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[6, 7, 57]" + "'", str61, "[6, 7, 57]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[6, 8, 57]" + "'", str62, "[6, 8, 57]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[6, 9, 57]" + "'", str63, "[6, 9, 57]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[7, 0, 58]" + "'", str64, "[7, 0, 58]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[7, 1, 58]" + "'", str65, "[7, 1, 58]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[7, 2, 58]" + "'", str66, "[7, 2, 58]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[7, 3, 58]" + "'", str67, "[7, 3, 58]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[7, 4, 58]" + "'", str68, "[7, 4, 58]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[7, 5, 58]" + "'", str69, "[7, 5, 58]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[7, 6, 58]" + "'", str70, "[7, 6, 58]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[7, 7, 58]" + "'", str71, "[7, 7, 58]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[7, 8, 58]" + "'", str72, "[7, 8, 58]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[7, 9, 58]" + "'", str73, "[7, 9, 58]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[8, 0, 59]" + "'", str74, "[8, 0, 59]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[8, 1, 59]" + "'", str75, "[8, 1, 59]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[8, 2, 59]" + "'", str76, "[8, 2, 59]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[8, 3, 59]" + "'", str77, "[8, 3, 59]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[8, 4, 59]" + "'", str78, "[8, 4, 59]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[8, 5, 59]" + "'", str79, "[8, 5, 59]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[8, 6, 59]" + "'", str80, "[8, 6, 59]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[8, 7, 59]" + "'", str81, "[8, 7, 59]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[8, 8, 59]" + "'", str82, "[8, 8, 59]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[8, 9, 59]" + "'", str83, "[8, 9, 59]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[9, 0, 60]" + "'", str84, "[9, 0, 60]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[9, 1, 60]" + "'", str85, "[9, 1, 60]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[9, 2, 60]" + "'", str86, "[9, 2, 60]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[9, 3, 60]" + "'", str87, "[9, 3, 60]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[9, 4, 60]" + "'", str88, "[9, 4, 60]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[9, 5, 60]" + "'", str89, "[9, 5, 60]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[9, 6, 60]" + "'", str90, "[9, 6, 60]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[9, 7, 60]" + "'", str91, "[9, 7, 60]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[9, 8, 60]" + "'", str92, "[9, 8, 60]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[9, 9, 60]" + "'", str93, "[9, 9, 60]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "[10, 0, 61]" + "'", str94, "[10, 0, 61]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "[10, 1, 61]" + "'", str95, "[10, 1, 61]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "[10, 2, 61]" + "'", str96, "[10, 2, 61]");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "[10, 3, 61]" + "'", str97, "[10, 3, 61]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2520");
        int[] intArray6 = new int[] { 1, (byte) 0, (byte) 0, (byte) -1, (byte) 1, '4' };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass40 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 3, 2, 2, 4, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 1, 0, 1, 52]" + "'", str7, "[1, 0, 1, 0, 1, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 2, 1, 1, 52]" + "'", str8, "[1, 0, 2, 1, 1, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 3, 2, 1, 52]" + "'", str9, "[1, 0, 3, 2, 1, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 4, 3, 1, 52]" + "'", str10, "[1, 0, 4, 3, 1, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 5, 4, 1, 52]" + "'", str11, "[1, 0, 5, 4, 1, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 6, 5, 1, 52]" + "'", str12, "[1, 0, 6, 5, 1, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 7, 6, 1, 52]" + "'", str13, "[1, 0, 7, 6, 1, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 8, 7, 1, 52]" + "'", str14, "[1, 0, 8, 7, 1, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 9, 8, 1, 52]" + "'", str15, "[1, 0, 9, 8, 1, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 10, 9, 1, 52]" + "'", str16, "[1, 0, 10, 9, 1, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 1, 0, 0, 2, 52]" + "'", str17, "[1, 1, 0, 0, 2, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 1, 1, 1, 2, 52]" + "'", str18, "[1, 1, 1, 1, 2, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 1, 2, 2, 2, 52]" + "'", str19, "[1, 1, 2, 2, 2, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1, 3, 3, 2, 52]" + "'", str20, "[1, 1, 3, 3, 2, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1, 4, 4, 2, 52]" + "'", str21, "[1, 1, 4, 4, 2, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1, 5, 5, 2, 52]" + "'", str22, "[1, 1, 5, 5, 2, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 6, 6, 2, 52]" + "'", str23, "[1, 1, 6, 6, 2, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1, 7, 7, 2, 52]" + "'", str24, "[1, 1, 7, 7, 2, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1, 8, 8, 2, 52]" + "'", str25, "[1, 1, 8, 8, 2, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 1, 9, 9, 2, 52]" + "'", str26, "[1, 1, 9, 9, 2, 52]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 2, 0, 0, 3, 52]" + "'", str27, "[1, 2, 0, 0, 3, 52]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 2, 1, 1, 3, 52]" + "'", str28, "[1, 2, 1, 1, 3, 52]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 2, 2, 2, 3, 52]" + "'", str29, "[1, 2, 2, 2, 3, 52]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 2, 3, 3, 3, 52]" + "'", str30, "[1, 2, 3, 3, 3, 52]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 2, 4, 4, 3, 52]" + "'", str31, "[1, 2, 4, 4, 3, 52]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 2, 5, 5, 3, 52]" + "'", str32, "[1, 2, 5, 5, 3, 52]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 2, 6, 6, 3, 52]" + "'", str33, "[1, 2, 6, 6, 3, 52]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 2, 7, 7, 3, 52]" + "'", str34, "[1, 2, 7, 7, 3, 52]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 2, 8, 8, 3, 52]" + "'", str35, "[1, 2, 8, 8, 3, 52]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 2, 9, 9, 3, 52]" + "'", str36, "[1, 2, 9, 9, 3, 52]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 3, 0, 0, 4, 52]" + "'", str37, "[1, 3, 0, 0, 4, 52]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 3, 1, 1, 4, 52]" + "'", str38, "[1, 3, 1, 1, 4, 52]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 3, 2, 2, 4, 52]" + "'", str39, "[1, 3, 2, 2, 4, 52]");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test2521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2521");
        int[] intArray5 = new int[] { 1, (short) 100, (byte) 100, (short) 10, (byte) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass8 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 100, 102, 10, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 100, 101, 10, 1]" + "'", str6, "[1, 100, 101, 10, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 100, 102, 10, 1]" + "'", str7, "[1, 100, 102, 10, 1]");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test2522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2522");
        int[] intArray5 = new int[] { (byte) 0, '#', ' ', 10, 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass61 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 35, 87, 10, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 35, 33, 10, 1]" + "'", str6, "[0, 35, 33, 10, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 35, 34, 10, 1]" + "'", str7, "[0, 35, 34, 10, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 35, 35, 10, 1]" + "'", str8, "[0, 35, 35, 10, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 35, 36, 10, 1]" + "'", str9, "[0, 35, 36, 10, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 35, 37, 10, 1]" + "'", str10, "[0, 35, 37, 10, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 35, 38, 10, 1]" + "'", str11, "[0, 35, 38, 10, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 35, 39, 10, 1]" + "'", str12, "[0, 35, 39, 10, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 35, 40, 10, 1]" + "'", str13, "[0, 35, 40, 10, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 35, 41, 10, 1]" + "'", str14, "[0, 35, 41, 10, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 35, 42, 10, 1]" + "'", str15, "[0, 35, 42, 10, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 35, 43, 10, 1]" + "'", str16, "[0, 35, 43, 10, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 35, 44, 10, 1]" + "'", str17, "[0, 35, 44, 10, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 35, 45, 10, 1]" + "'", str18, "[0, 35, 45, 10, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 35, 46, 10, 1]" + "'", str19, "[0, 35, 46, 10, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 35, 47, 10, 1]" + "'", str20, "[0, 35, 47, 10, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 35, 48, 10, 1]" + "'", str21, "[0, 35, 48, 10, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 35, 49, 10, 1]" + "'", str22, "[0, 35, 49, 10, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 35, 50, 10, 1]" + "'", str23, "[0, 35, 50, 10, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 35, 51, 10, 1]" + "'", str24, "[0, 35, 51, 10, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 35, 52, 10, 1]" + "'", str25, "[0, 35, 52, 10, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 35, 53, 10, 1]" + "'", str26, "[0, 35, 53, 10, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 35, 54, 10, 1]" + "'", str27, "[0, 35, 54, 10, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 35, 55, 10, 1]" + "'", str28, "[0, 35, 55, 10, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 35, 56, 10, 1]" + "'", str29, "[0, 35, 56, 10, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 35, 57, 10, 1]" + "'", str30, "[0, 35, 57, 10, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 35, 58, 10, 1]" + "'", str31, "[0, 35, 58, 10, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 35, 59, 10, 1]" + "'", str32, "[0, 35, 59, 10, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 35, 60, 10, 1]" + "'", str33, "[0, 35, 60, 10, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 35, 61, 10, 1]" + "'", str34, "[0, 35, 61, 10, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 35, 62, 10, 1]" + "'", str35, "[0, 35, 62, 10, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 35, 63, 10, 1]" + "'", str36, "[0, 35, 63, 10, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 35, 64, 10, 1]" + "'", str37, "[0, 35, 64, 10, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 35, 65, 10, 1]" + "'", str38, "[0, 35, 65, 10, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 35, 66, 10, 1]" + "'", str39, "[0, 35, 66, 10, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 35, 67, 10, 1]" + "'", str40, "[0, 35, 67, 10, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 35, 68, 10, 1]" + "'", str41, "[0, 35, 68, 10, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 35, 69, 10, 1]" + "'", str42, "[0, 35, 69, 10, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 35, 70, 10, 1]" + "'", str43, "[0, 35, 70, 10, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 35, 71, 10, 1]" + "'", str44, "[0, 35, 71, 10, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 35, 72, 10, 1]" + "'", str45, "[0, 35, 72, 10, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 35, 73, 10, 1]" + "'", str46, "[0, 35, 73, 10, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 35, 74, 10, 1]" + "'", str47, "[0, 35, 74, 10, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 35, 75, 10, 1]" + "'", str48, "[0, 35, 75, 10, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 35, 76, 10, 1]" + "'", str49, "[0, 35, 76, 10, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 35, 77, 10, 1]" + "'", str50, "[0, 35, 77, 10, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 35, 78, 10, 1]" + "'", str51, "[0, 35, 78, 10, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 35, 79, 10, 1]" + "'", str52, "[0, 35, 79, 10, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 35, 80, 10, 1]" + "'", str53, "[0, 35, 80, 10, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 35, 81, 10, 1]" + "'", str54, "[0, 35, 81, 10, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, 35, 82, 10, 1]" + "'", str55, "[0, 35, 82, 10, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, 35, 83, 10, 1]" + "'", str56, "[0, 35, 83, 10, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, 35, 84, 10, 1]" + "'", str57, "[0, 35, 84, 10, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, 35, 85, 10, 1]" + "'", str58, "[0, 35, 85, 10, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, 35, 86, 10, 1]" + "'", str59, "[0, 35, 86, 10, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, 35, 87, 10, 1]" + "'", str60, "[0, 35, 87, 10, 1]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test2523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2523");
        int[] intArray4 = new int[] { 1, (short) 10, (short) 10, (short) -1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass68 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 73, 73, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 11, 11, -1]" + "'", str5, "[1, 11, 11, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 12, 12, -1]" + "'", str6, "[1, 12, 12, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 13, 13, -1]" + "'", str7, "[1, 13, 13, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 14, 14, -1]" + "'", str8, "[1, 14, 14, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 15, 15, -1]" + "'", str9, "[1, 15, 15, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 16, 16, -1]" + "'", str10, "[1, 16, 16, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 17, 17, -1]" + "'", str11, "[1, 17, 17, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 18, 18, -1]" + "'", str12, "[1, 18, 18, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 19, 19, -1]" + "'", str13, "[1, 19, 19, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 20, 20, -1]" + "'", str14, "[1, 20, 20, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 21, 21, -1]" + "'", str15, "[1, 21, 21, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 22, 22, -1]" + "'", str16, "[1, 22, 22, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 23, 23, -1]" + "'", str17, "[1, 23, 23, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 24, 24, -1]" + "'", str18, "[1, 24, 24, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 25, 25, -1]" + "'", str19, "[1, 25, 25, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 26, 26, -1]" + "'", str20, "[1, 26, 26, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 27, 27, -1]" + "'", str21, "[1, 27, 27, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 28, 28, -1]" + "'", str22, "[1, 28, 28, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 29, 29, -1]" + "'", str23, "[1, 29, 29, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 30, 30, -1]" + "'", str24, "[1, 30, 30, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 31, 31, -1]" + "'", str25, "[1, 31, 31, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 32, 32, -1]" + "'", str26, "[1, 32, 32, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 33, 33, -1]" + "'", str27, "[1, 33, 33, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 34, 34, -1]" + "'", str28, "[1, 34, 34, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 35, 35, -1]" + "'", str29, "[1, 35, 35, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 36, 36, -1]" + "'", str30, "[1, 36, 36, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 37, 37, -1]" + "'", str31, "[1, 37, 37, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 38, 38, -1]" + "'", str32, "[1, 38, 38, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 39, 39, -1]" + "'", str33, "[1, 39, 39, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 40, 40, -1]" + "'", str34, "[1, 40, 40, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 41, 41, -1]" + "'", str35, "[1, 41, 41, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 42, 42, -1]" + "'", str36, "[1, 42, 42, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 43, 43, -1]" + "'", str37, "[1, 43, 43, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 44, 44, -1]" + "'", str38, "[1, 44, 44, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 45, 45, -1]" + "'", str39, "[1, 45, 45, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 46, 46, -1]" + "'", str40, "[1, 46, 46, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 47, 47, -1]" + "'", str41, "[1, 47, 47, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 48, 48, -1]" + "'", str42, "[1, 48, 48, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 49, 49, -1]" + "'", str43, "[1, 49, 49, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 50, 50, -1]" + "'", str44, "[1, 50, 50, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 51, 51, -1]" + "'", str45, "[1, 51, 51, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 52, 52, -1]" + "'", str46, "[1, 52, 52, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 53, 53, -1]" + "'", str47, "[1, 53, 53, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 54, 54, -1]" + "'", str48, "[1, 54, 54, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 55, 55, -1]" + "'", str49, "[1, 55, 55, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 56, 56, -1]" + "'", str50, "[1, 56, 56, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 57, 57, -1]" + "'", str51, "[1, 57, 57, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 58, 58, -1]" + "'", str52, "[1, 58, 58, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 59, 59, -1]" + "'", str53, "[1, 59, 59, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 60, 60, -1]" + "'", str54, "[1, 60, 60, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 61, 61, -1]" + "'", str55, "[1, 61, 61, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 62, 62, -1]" + "'", str56, "[1, 62, 62, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 63, 63, -1]" + "'", str57, "[1, 63, 63, -1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 64, 64, -1]" + "'", str58, "[1, 64, 64, -1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 65, 65, -1]" + "'", str59, "[1, 65, 65, -1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 66, 66, -1]" + "'", str60, "[1, 66, 66, -1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 67, 67, -1]" + "'", str61, "[1, 67, 67, -1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 68, 68, -1]" + "'", str62, "[1, 68, 68, -1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 69, 69, -1]" + "'", str63, "[1, 69, 69, -1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 70, 70, -1]" + "'", str64, "[1, 70, 70, -1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 71, 71, -1]" + "'", str65, "[1, 71, 71, -1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 72, 72, -1]" + "'", str66, "[1, 72, 72, -1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 73, 73, -1]" + "'", str67, "[1, 73, 73, -1]");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test2524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2524");
        int[] intArray1 = new int[] { 'a' };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass58 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[153]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[98]" + "'", str2, "[98]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[99]" + "'", str3, "[99]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100]" + "'", str4, "[100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[101]" + "'", str5, "[101]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[102]" + "'", str6, "[102]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[103]" + "'", str7, "[103]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[104]" + "'", str8, "[104]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[105]" + "'", str9, "[105]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[106]" + "'", str10, "[106]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[107]" + "'", str11, "[107]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[108]" + "'", str12, "[108]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[109]" + "'", str13, "[109]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[110]" + "'", str14, "[110]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[111]" + "'", str15, "[111]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[112]" + "'", str16, "[112]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[113]" + "'", str17, "[113]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[114]" + "'", str18, "[114]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[115]" + "'", str19, "[115]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[116]" + "'", str20, "[116]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[117]" + "'", str21, "[117]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[118]" + "'", str22, "[118]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[119]" + "'", str23, "[119]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[120]" + "'", str24, "[120]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[121]" + "'", str25, "[121]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[122]" + "'", str26, "[122]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[123]" + "'", str27, "[123]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[124]" + "'", str28, "[124]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[125]" + "'", str29, "[125]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[126]" + "'", str30, "[126]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[127]" + "'", str31, "[127]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[128]" + "'", str32, "[128]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[129]" + "'", str33, "[129]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[130]" + "'", str34, "[130]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[131]" + "'", str35, "[131]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[132]" + "'", str36, "[132]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[133]" + "'", str37, "[133]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[134]" + "'", str38, "[134]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[135]" + "'", str39, "[135]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[136]" + "'", str40, "[136]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[137]" + "'", str41, "[137]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[138]" + "'", str42, "[138]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[139]" + "'", str43, "[139]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[140]" + "'", str44, "[140]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[141]" + "'", str45, "[141]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[142]" + "'", str46, "[142]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[143]" + "'", str47, "[143]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[144]" + "'", str48, "[144]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[145]" + "'", str49, "[145]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[146]" + "'", str50, "[146]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[147]" + "'", str51, "[147]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[148]" + "'", str52, "[148]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[149]" + "'", str53, "[149]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[150]" + "'", str54, "[150]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[151]" + "'", str55, "[151]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[152]" + "'", str56, "[152]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[153]" + "'", str57, "[153]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test2525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2525");
        int[] intArray3 = new int[] { 1, (-1), '4' };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str90 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str91 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str92 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str93 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str94 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str95 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str96 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str97 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str98 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str99 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[10, 5, 61]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 0, 52]" + "'", str4, "[1, 0, 52]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 1, 52]" + "'", str5, "[1, 1, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 2, 52]" + "'", str6, "[1, 2, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 3, 52]" + "'", str7, "[1, 3, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 4, 52]" + "'", str8, "[1, 4, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 5, 52]" + "'", str9, "[1, 5, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 6, 52]" + "'", str10, "[1, 6, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 7, 52]" + "'", str11, "[1, 7, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 8, 52]" + "'", str12, "[1, 8, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 9, 52]" + "'", str13, "[1, 9, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 0, 53]" + "'", str14, "[2, 0, 53]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 1, 53]" + "'", str15, "[2, 1, 53]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 2, 53]" + "'", str16, "[2, 2, 53]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 3, 53]" + "'", str17, "[2, 3, 53]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 4, 53]" + "'", str18, "[2, 4, 53]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 5, 53]" + "'", str19, "[2, 5, 53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 6, 53]" + "'", str20, "[2, 6, 53]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 7, 53]" + "'", str21, "[2, 7, 53]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 8, 53]" + "'", str22, "[2, 8, 53]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 9, 53]" + "'", str23, "[2, 9, 53]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 0, 54]" + "'", str24, "[3, 0, 54]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 1, 54]" + "'", str25, "[3, 1, 54]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 2, 54]" + "'", str26, "[3, 2, 54]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 3, 54]" + "'", str27, "[3, 3, 54]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 4, 54]" + "'", str28, "[3, 4, 54]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[3, 5, 54]" + "'", str29, "[3, 5, 54]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[3, 6, 54]" + "'", str30, "[3, 6, 54]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[3, 7, 54]" + "'", str31, "[3, 7, 54]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[3, 8, 54]" + "'", str32, "[3, 8, 54]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[3, 9, 54]" + "'", str33, "[3, 9, 54]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4, 0, 55]" + "'", str34, "[4, 0, 55]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 1, 55]" + "'", str35, "[4, 1, 55]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 2, 55]" + "'", str36, "[4, 2, 55]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 3, 55]" + "'", str37, "[4, 3, 55]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[4, 4, 55]" + "'", str38, "[4, 4, 55]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[4, 5, 55]" + "'", str39, "[4, 5, 55]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[4, 6, 55]" + "'", str40, "[4, 6, 55]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[4, 7, 55]" + "'", str41, "[4, 7, 55]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[4, 8, 55]" + "'", str42, "[4, 8, 55]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[4, 9, 55]" + "'", str43, "[4, 9, 55]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[5, 0, 56]" + "'", str44, "[5, 0, 56]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[5, 1, 56]" + "'", str45, "[5, 1, 56]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 2, 56]" + "'", str46, "[5, 2, 56]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 3, 56]" + "'", str47, "[5, 3, 56]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 4, 56]" + "'", str48, "[5, 4, 56]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[5, 5, 56]" + "'", str49, "[5, 5, 56]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[5, 6, 56]" + "'", str50, "[5, 6, 56]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[5, 7, 56]" + "'", str51, "[5, 7, 56]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[5, 8, 56]" + "'", str52, "[5, 8, 56]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[5, 9, 56]" + "'", str53, "[5, 9, 56]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[6, 0, 57]" + "'", str54, "[6, 0, 57]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[6, 1, 57]" + "'", str55, "[6, 1, 57]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[6, 2, 57]" + "'", str56, "[6, 2, 57]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6, 3, 57]" + "'", str57, "[6, 3, 57]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6, 4, 57]" + "'", str58, "[6, 4, 57]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 5, 57]" + "'", str59, "[6, 5, 57]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[6, 6, 57]" + "'", str60, "[6, 6, 57]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[6, 7, 57]" + "'", str61, "[6, 7, 57]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[6, 8, 57]" + "'", str62, "[6, 8, 57]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[6, 9, 57]" + "'", str63, "[6, 9, 57]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[7, 0, 58]" + "'", str64, "[7, 0, 58]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[7, 1, 58]" + "'", str65, "[7, 1, 58]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[7, 2, 58]" + "'", str66, "[7, 2, 58]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[7, 3, 58]" + "'", str67, "[7, 3, 58]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[7, 4, 58]" + "'", str68, "[7, 4, 58]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[7, 5, 58]" + "'", str69, "[7, 5, 58]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[7, 6, 58]" + "'", str70, "[7, 6, 58]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[7, 7, 58]" + "'", str71, "[7, 7, 58]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[7, 8, 58]" + "'", str72, "[7, 8, 58]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[7, 9, 58]" + "'", str73, "[7, 9, 58]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[8, 0, 59]" + "'", str74, "[8, 0, 59]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[8, 1, 59]" + "'", str75, "[8, 1, 59]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[8, 2, 59]" + "'", str76, "[8, 2, 59]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[8, 3, 59]" + "'", str77, "[8, 3, 59]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[8, 4, 59]" + "'", str78, "[8, 4, 59]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[8, 5, 59]" + "'", str79, "[8, 5, 59]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[8, 6, 59]" + "'", str80, "[8, 6, 59]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[8, 7, 59]" + "'", str81, "[8, 7, 59]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[8, 8, 59]" + "'", str82, "[8, 8, 59]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[8, 9, 59]" + "'", str83, "[8, 9, 59]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[9, 0, 60]" + "'", str84, "[9, 0, 60]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[9, 1, 60]" + "'", str85, "[9, 1, 60]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[9, 2, 60]" + "'", str86, "[9, 2, 60]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[9, 3, 60]" + "'", str87, "[9, 3, 60]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[9, 4, 60]" + "'", str88, "[9, 4, 60]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[9, 5, 60]" + "'", str89, "[9, 5, 60]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[9, 6, 60]" + "'", str90, "[9, 6, 60]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[9, 7, 60]" + "'", str91, "[9, 7, 60]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[9, 8, 60]" + "'", str92, "[9, 8, 60]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[9, 9, 60]" + "'", str93, "[9, 9, 60]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "[10, 0, 61]" + "'", str94, "[10, 0, 61]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "[10, 1, 61]" + "'", str95, "[10, 1, 61]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "[10, 2, 61]" + "'", str96, "[10, 2, 61]");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "[10, 3, 61]" + "'", str97, "[10, 3, 61]");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "[10, 4, 61]" + "'", str98, "[10, 4, 61]");
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "[10, 5, 61]" + "'", str99, "[10, 5, 61]");
    }

    @Test
    public void test2526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2526");
        int[] intArray1 = new int[] { 'a' };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass54 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[149]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[98]" + "'", str2, "[98]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[99]" + "'", str3, "[99]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100]" + "'", str4, "[100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[101]" + "'", str5, "[101]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[102]" + "'", str6, "[102]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[103]" + "'", str7, "[103]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[104]" + "'", str8, "[104]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[105]" + "'", str9, "[105]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[106]" + "'", str10, "[106]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[107]" + "'", str11, "[107]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[108]" + "'", str12, "[108]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[109]" + "'", str13, "[109]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[110]" + "'", str14, "[110]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[111]" + "'", str15, "[111]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[112]" + "'", str16, "[112]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[113]" + "'", str17, "[113]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[114]" + "'", str18, "[114]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[115]" + "'", str19, "[115]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[116]" + "'", str20, "[116]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[117]" + "'", str21, "[117]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[118]" + "'", str22, "[118]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[119]" + "'", str23, "[119]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[120]" + "'", str24, "[120]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[121]" + "'", str25, "[121]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[122]" + "'", str26, "[122]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[123]" + "'", str27, "[123]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[124]" + "'", str28, "[124]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[125]" + "'", str29, "[125]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[126]" + "'", str30, "[126]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[127]" + "'", str31, "[127]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[128]" + "'", str32, "[128]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[129]" + "'", str33, "[129]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[130]" + "'", str34, "[130]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[131]" + "'", str35, "[131]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[132]" + "'", str36, "[132]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[133]" + "'", str37, "[133]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[134]" + "'", str38, "[134]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[135]" + "'", str39, "[135]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[136]" + "'", str40, "[136]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[137]" + "'", str41, "[137]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[138]" + "'", str42, "[138]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[139]" + "'", str43, "[139]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[140]" + "'", str44, "[140]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[141]" + "'", str45, "[141]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[142]" + "'", str46, "[142]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[143]" + "'", str47, "[143]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[144]" + "'", str48, "[144]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[145]" + "'", str49, "[145]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[146]" + "'", str50, "[146]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[147]" + "'", str51, "[147]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[148]" + "'", str52, "[148]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[149]" + "'", str53, "[149]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test2527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2527");
        int[] intArray6 = new int[] { (byte) 100, 'a', ' ', (byte) -1, (short) -1, (short) 1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass76 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 103, 8, 8, 5, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 97, 33, 0, -1, 1]" + "'", str7, "[100, 97, 33, 0, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 97, 34, 1, -1, 1]" + "'", str8, "[100, 97, 34, 1, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 97, 35, 2, -1, 1]" + "'", str9, "[100, 97, 35, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 97, 36, 3, -1, 1]" + "'", str10, "[100, 97, 36, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 97, 37, 4, -1, 1]" + "'", str11, "[100, 97, 37, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 97, 38, 5, -1, 1]" + "'", str12, "[100, 97, 38, 5, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 97, 39, 6, -1, 1]" + "'", str13, "[100, 97, 39, 6, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 97, 40, 7, -1, 1]" + "'", str14, "[100, 97, 40, 7, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 97, 41, 8, -1, 1]" + "'", str15, "[100, 97, 41, 8, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 97, 42, 9, -1, 1]" + "'", str16, "[100, 97, 42, 9, -1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 98, 0, 0, 0, 1]" + "'", str17, "[100, 98, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 98, 1, 1, 0, 1]" + "'", str18, "[100, 98, 1, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 98, 2, 2, 0, 1]" + "'", str19, "[100, 98, 2, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 98, 3, 3, 0, 1]" + "'", str20, "[100, 98, 3, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 98, 4, 4, 0, 1]" + "'", str21, "[100, 98, 4, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 98, 5, 5, 0, 1]" + "'", str22, "[100, 98, 5, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 98, 6, 6, 0, 1]" + "'", str23, "[100, 98, 6, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 98, 7, 7, 0, 1]" + "'", str24, "[100, 98, 7, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 98, 8, 8, 0, 1]" + "'", str25, "[100, 98, 8, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 98, 9, 9, 0, 1]" + "'", str26, "[100, 98, 9, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 99, 0, 0, 1, 1]" + "'", str27, "[100, 99, 0, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 99, 1, 1, 1, 1]" + "'", str28, "[100, 99, 1, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 99, 2, 2, 1, 1]" + "'", str29, "[100, 99, 2, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 99, 3, 3, 1, 1]" + "'", str30, "[100, 99, 3, 3, 1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 99, 4, 4, 1, 1]" + "'", str31, "[100, 99, 4, 4, 1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 99, 5, 5, 1, 1]" + "'", str32, "[100, 99, 5, 5, 1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 99, 6, 6, 1, 1]" + "'", str33, "[100, 99, 6, 6, 1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 99, 7, 7, 1, 1]" + "'", str34, "[100, 99, 7, 7, 1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 99, 8, 8, 1, 1]" + "'", str35, "[100, 99, 8, 8, 1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 99, 9, 9, 1, 1]" + "'", str36, "[100, 99, 9, 9, 1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 100, 0, 0, 2, 1]" + "'", str37, "[100, 100, 0, 0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 100, 1, 1, 2, 1]" + "'", str38, "[100, 100, 1, 1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 100, 2, 2, 2, 1]" + "'", str39, "[100, 100, 2, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 100, 3, 3, 2, 1]" + "'", str40, "[100, 100, 3, 3, 2, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 100, 4, 4, 2, 1]" + "'", str41, "[100, 100, 4, 4, 2, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 100, 5, 5, 2, 1]" + "'", str42, "[100, 100, 5, 5, 2, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 100, 6, 6, 2, 1]" + "'", str43, "[100, 100, 6, 6, 2, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 100, 7, 7, 2, 1]" + "'", str44, "[100, 100, 7, 7, 2, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 100, 8, 8, 2, 1]" + "'", str45, "[100, 100, 8, 8, 2, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 100, 9, 9, 2, 1]" + "'", str46, "[100, 100, 9, 9, 2, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 101, 0, 0, 3, 1]" + "'", str47, "[100, 101, 0, 0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 101, 1, 1, 3, 1]" + "'", str48, "[100, 101, 1, 1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 101, 2, 2, 3, 1]" + "'", str49, "[100, 101, 2, 2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 101, 3, 3, 3, 1]" + "'", str50, "[100, 101, 3, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 101, 4, 4, 3, 1]" + "'", str51, "[100, 101, 4, 4, 3, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 101, 5, 5, 3, 1]" + "'", str52, "[100, 101, 5, 5, 3, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 101, 6, 6, 3, 1]" + "'", str53, "[100, 101, 6, 6, 3, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 101, 7, 7, 3, 1]" + "'", str54, "[100, 101, 7, 7, 3, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 101, 8, 8, 3, 1]" + "'", str55, "[100, 101, 8, 8, 3, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 101, 9, 9, 3, 1]" + "'", str56, "[100, 101, 9, 9, 3, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 102, 0, 0, 4, 1]" + "'", str57, "[100, 102, 0, 0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 102, 1, 1, 4, 1]" + "'", str58, "[100, 102, 1, 1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 102, 2, 2, 4, 1]" + "'", str59, "[100, 102, 2, 2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 102, 3, 3, 4, 1]" + "'", str60, "[100, 102, 3, 3, 4, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 102, 4, 4, 4, 1]" + "'", str61, "[100, 102, 4, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[100, 102, 5, 5, 4, 1]" + "'", str62, "[100, 102, 5, 5, 4, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[100, 102, 6, 6, 4, 1]" + "'", str63, "[100, 102, 6, 6, 4, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[100, 102, 7, 7, 4, 1]" + "'", str64, "[100, 102, 7, 7, 4, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[100, 102, 8, 8, 4, 1]" + "'", str65, "[100, 102, 8, 8, 4, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[100, 102, 9, 9, 4, 1]" + "'", str66, "[100, 102, 9, 9, 4, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[100, 103, 0, 0, 5, 1]" + "'", str67, "[100, 103, 0, 0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[100, 103, 1, 1, 5, 1]" + "'", str68, "[100, 103, 1, 1, 5, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[100, 103, 2, 2, 5, 1]" + "'", str69, "[100, 103, 2, 2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[100, 103, 3, 3, 5, 1]" + "'", str70, "[100, 103, 3, 3, 5, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[100, 103, 4, 4, 5, 1]" + "'", str71, "[100, 103, 4, 4, 5, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[100, 103, 5, 5, 5, 1]" + "'", str72, "[100, 103, 5, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[100, 103, 6, 6, 5, 1]" + "'", str73, "[100, 103, 6, 6, 5, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[100, 103, 7, 7, 5, 1]" + "'", str74, "[100, 103, 7, 7, 5, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[100, 103, 8, 8, 5, 1]" + "'", str75, "[100, 103, 8, 8, 5, 1]");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test2528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2528");
        int[] intArray3 = new int[] { 0, (-1), (short) 100 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass5 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 0, 100]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 0, 100]" + "'", str4, "[0, 0, 100]");
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test2529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2529");
        int[] intArray6 = new int[] { (byte) 0, (short) 100, 0, (-1), (short) -1, (byte) 1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass58 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 105, 0, 0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 100, 1, 0, -1, 1]" + "'", str7, "[0, 100, 1, 0, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 100, 2, 1, -1, 1]" + "'", str8, "[0, 100, 2, 1, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 100, 3, 2, -1, 1]" + "'", str9, "[0, 100, 3, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 100, 4, 3, -1, 1]" + "'", str10, "[0, 100, 4, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 100, 5, 4, -1, 1]" + "'", str11, "[0, 100, 5, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 100, 6, 5, -1, 1]" + "'", str12, "[0, 100, 6, 5, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 100, 7, 6, -1, 1]" + "'", str13, "[0, 100, 7, 6, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 100, 8, 7, -1, 1]" + "'", str14, "[0, 100, 8, 7, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 100, 9, 8, -1, 1]" + "'", str15, "[0, 100, 9, 8, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 100, 10, 9, -1, 1]" + "'", str16, "[0, 100, 10, 9, -1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 101, 0, 0, 0, 1]" + "'", str17, "[0, 101, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 101, 1, 1, 0, 1]" + "'", str18, "[0, 101, 1, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 101, 2, 2, 0, 1]" + "'", str19, "[0, 101, 2, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 101, 3, 3, 0, 1]" + "'", str20, "[0, 101, 3, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 101, 4, 4, 0, 1]" + "'", str21, "[0, 101, 4, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 101, 5, 5, 0, 1]" + "'", str22, "[0, 101, 5, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 101, 6, 6, 0, 1]" + "'", str23, "[0, 101, 6, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 101, 7, 7, 0, 1]" + "'", str24, "[0, 101, 7, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 101, 8, 8, 0, 1]" + "'", str25, "[0, 101, 8, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 101, 9, 9, 0, 1]" + "'", str26, "[0, 101, 9, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 102, 0, 0, 1, 1]" + "'", str27, "[0, 102, 0, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 102, 1, 1, 1, 1]" + "'", str28, "[0, 102, 1, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 102, 2, 2, 1, 1]" + "'", str29, "[0, 102, 2, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 102, 3, 3, 1, 1]" + "'", str30, "[0, 102, 3, 3, 1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 102, 4, 4, 1, 1]" + "'", str31, "[0, 102, 4, 4, 1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 102, 5, 5, 1, 1]" + "'", str32, "[0, 102, 5, 5, 1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 102, 6, 6, 1, 1]" + "'", str33, "[0, 102, 6, 6, 1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 102, 7, 7, 1, 1]" + "'", str34, "[0, 102, 7, 7, 1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 102, 8, 8, 1, 1]" + "'", str35, "[0, 102, 8, 8, 1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 102, 9, 9, 1, 1]" + "'", str36, "[0, 102, 9, 9, 1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 103, 0, 0, 2, 1]" + "'", str37, "[0, 103, 0, 0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 103, 1, 1, 2, 1]" + "'", str38, "[0, 103, 1, 1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 103, 2, 2, 2, 1]" + "'", str39, "[0, 103, 2, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 103, 3, 3, 2, 1]" + "'", str40, "[0, 103, 3, 3, 2, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 103, 4, 4, 2, 1]" + "'", str41, "[0, 103, 4, 4, 2, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 103, 5, 5, 2, 1]" + "'", str42, "[0, 103, 5, 5, 2, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 103, 6, 6, 2, 1]" + "'", str43, "[0, 103, 6, 6, 2, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 103, 7, 7, 2, 1]" + "'", str44, "[0, 103, 7, 7, 2, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 103, 8, 8, 2, 1]" + "'", str45, "[0, 103, 8, 8, 2, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 103, 9, 9, 2, 1]" + "'", str46, "[0, 103, 9, 9, 2, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 104, 0, 0, 3, 1]" + "'", str47, "[0, 104, 0, 0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 104, 1, 1, 3, 1]" + "'", str48, "[0, 104, 1, 1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 104, 2, 2, 3, 1]" + "'", str49, "[0, 104, 2, 2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 104, 3, 3, 3, 1]" + "'", str50, "[0, 104, 3, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 104, 4, 4, 3, 1]" + "'", str51, "[0, 104, 4, 4, 3, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 104, 5, 5, 3, 1]" + "'", str52, "[0, 104, 5, 5, 3, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 104, 6, 6, 3, 1]" + "'", str53, "[0, 104, 6, 6, 3, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 104, 7, 7, 3, 1]" + "'", str54, "[0, 104, 7, 7, 3, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, 104, 8, 8, 3, 1]" + "'", str55, "[0, 104, 8, 8, 3, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, 104, 9, 9, 3, 1]" + "'", str56, "[0, 104, 9, 9, 3, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, 105, 0, 0, 4, 1]" + "'", str57, "[0, 105, 0, 0, 4, 1]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test2530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2530");
        int[] intArray5 = new int[] { (byte) 0, '#', ' ', 10, 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass64 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 35, 90, 10, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 35, 33, 10, 1]" + "'", str6, "[0, 35, 33, 10, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 35, 34, 10, 1]" + "'", str7, "[0, 35, 34, 10, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 35, 35, 10, 1]" + "'", str8, "[0, 35, 35, 10, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 35, 36, 10, 1]" + "'", str9, "[0, 35, 36, 10, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 35, 37, 10, 1]" + "'", str10, "[0, 35, 37, 10, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 35, 38, 10, 1]" + "'", str11, "[0, 35, 38, 10, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 35, 39, 10, 1]" + "'", str12, "[0, 35, 39, 10, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 35, 40, 10, 1]" + "'", str13, "[0, 35, 40, 10, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 35, 41, 10, 1]" + "'", str14, "[0, 35, 41, 10, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 35, 42, 10, 1]" + "'", str15, "[0, 35, 42, 10, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 35, 43, 10, 1]" + "'", str16, "[0, 35, 43, 10, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 35, 44, 10, 1]" + "'", str17, "[0, 35, 44, 10, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 35, 45, 10, 1]" + "'", str18, "[0, 35, 45, 10, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 35, 46, 10, 1]" + "'", str19, "[0, 35, 46, 10, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 35, 47, 10, 1]" + "'", str20, "[0, 35, 47, 10, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 35, 48, 10, 1]" + "'", str21, "[0, 35, 48, 10, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 35, 49, 10, 1]" + "'", str22, "[0, 35, 49, 10, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 35, 50, 10, 1]" + "'", str23, "[0, 35, 50, 10, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 35, 51, 10, 1]" + "'", str24, "[0, 35, 51, 10, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 35, 52, 10, 1]" + "'", str25, "[0, 35, 52, 10, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 35, 53, 10, 1]" + "'", str26, "[0, 35, 53, 10, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 35, 54, 10, 1]" + "'", str27, "[0, 35, 54, 10, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 35, 55, 10, 1]" + "'", str28, "[0, 35, 55, 10, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 35, 56, 10, 1]" + "'", str29, "[0, 35, 56, 10, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 35, 57, 10, 1]" + "'", str30, "[0, 35, 57, 10, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 35, 58, 10, 1]" + "'", str31, "[0, 35, 58, 10, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 35, 59, 10, 1]" + "'", str32, "[0, 35, 59, 10, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 35, 60, 10, 1]" + "'", str33, "[0, 35, 60, 10, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 35, 61, 10, 1]" + "'", str34, "[0, 35, 61, 10, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 35, 62, 10, 1]" + "'", str35, "[0, 35, 62, 10, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 35, 63, 10, 1]" + "'", str36, "[0, 35, 63, 10, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 35, 64, 10, 1]" + "'", str37, "[0, 35, 64, 10, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 35, 65, 10, 1]" + "'", str38, "[0, 35, 65, 10, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 35, 66, 10, 1]" + "'", str39, "[0, 35, 66, 10, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 35, 67, 10, 1]" + "'", str40, "[0, 35, 67, 10, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 35, 68, 10, 1]" + "'", str41, "[0, 35, 68, 10, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 35, 69, 10, 1]" + "'", str42, "[0, 35, 69, 10, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 35, 70, 10, 1]" + "'", str43, "[0, 35, 70, 10, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 35, 71, 10, 1]" + "'", str44, "[0, 35, 71, 10, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 35, 72, 10, 1]" + "'", str45, "[0, 35, 72, 10, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 35, 73, 10, 1]" + "'", str46, "[0, 35, 73, 10, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 35, 74, 10, 1]" + "'", str47, "[0, 35, 74, 10, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 35, 75, 10, 1]" + "'", str48, "[0, 35, 75, 10, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 35, 76, 10, 1]" + "'", str49, "[0, 35, 76, 10, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 35, 77, 10, 1]" + "'", str50, "[0, 35, 77, 10, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 35, 78, 10, 1]" + "'", str51, "[0, 35, 78, 10, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 35, 79, 10, 1]" + "'", str52, "[0, 35, 79, 10, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 35, 80, 10, 1]" + "'", str53, "[0, 35, 80, 10, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 35, 81, 10, 1]" + "'", str54, "[0, 35, 81, 10, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, 35, 82, 10, 1]" + "'", str55, "[0, 35, 82, 10, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, 35, 83, 10, 1]" + "'", str56, "[0, 35, 83, 10, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, 35, 84, 10, 1]" + "'", str57, "[0, 35, 84, 10, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, 35, 85, 10, 1]" + "'", str58, "[0, 35, 85, 10, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, 35, 86, 10, 1]" + "'", str59, "[0, 35, 86, 10, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, 35, 87, 10, 1]" + "'", str60, "[0, 35, 87, 10, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, 35, 88, 10, 1]" + "'", str61, "[0, 35, 88, 10, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, 35, 89, 10, 1]" + "'", str62, "[0, 35, 89, 10, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[0, 35, 90, 10, 1]" + "'", str63, "[0, 35, 90, 10, 1]");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test2531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2531");
        int[] intArray1 = new int[] { (short) 1 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass34 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[3]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[2]" + "'", str2, "[2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[3]" + "'", str3, "[3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[4]" + "'", str4, "[4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[5]" + "'", str5, "[5]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[6]" + "'", str6, "[6]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[7]" + "'", str7, "[7]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[8]" + "'", str8, "[8]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[9]" + "'", str9, "[9]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1]" + "'", str10, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1]" + "'", str11, "[1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[2]" + "'", str12, "[2]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[3]" + "'", str13, "[3]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[4]" + "'", str14, "[4]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[5]" + "'", str15, "[5]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[6]" + "'", str16, "[6]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[7]" + "'", str17, "[7]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[8]" + "'", str18, "[8]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[9]" + "'", str19, "[9]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1]" + "'", str20, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1]" + "'", str21, "[1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2]" + "'", str22, "[2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3]" + "'", str23, "[3]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[4]" + "'", str24, "[4]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[5]" + "'", str25, "[5]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[6]" + "'", str26, "[6]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[7]" + "'", str27, "[7]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[8]" + "'", str28, "[8]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[9]" + "'", str29, "[9]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 1]" + "'", str30, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1]" + "'", str31, "[1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2]" + "'", str32, "[2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[3]" + "'", str33, "[3]");
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test2532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2532");
        int[] intArray4 = new int[] { '4', (byte) -1, (short) 1, (byte) 10 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass25 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[54, 1, 1, 12]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[52, 0, 2, 10]" + "'", str5, "[52, 0, 2, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[52, 1, 3, 10]" + "'", str6, "[52, 1, 3, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[52, 2, 4, 10]" + "'", str7, "[52, 2, 4, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[52, 3, 5, 10]" + "'", str8, "[52, 3, 5, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[52, 4, 6, 10]" + "'", str9, "[52, 4, 6, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[52, 5, 7, 10]" + "'", str10, "[52, 5, 7, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[52, 6, 8, 10]" + "'", str11, "[52, 6, 8, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[52, 7, 9, 10]" + "'", str12, "[52, 7, 9, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[53, 0, 0, 11]" + "'", str13, "[53, 0, 0, 11]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[53, 1, 1, 11]" + "'", str14, "[53, 1, 1, 11]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[53, 2, 2, 11]" + "'", str15, "[53, 2, 2, 11]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[53, 3, 3, 11]" + "'", str16, "[53, 3, 3, 11]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[53, 4, 4, 11]" + "'", str17, "[53, 4, 4, 11]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[53, 5, 5, 11]" + "'", str18, "[53, 5, 5, 11]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[53, 6, 6, 11]" + "'", str19, "[53, 6, 6, 11]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[53, 7, 7, 11]" + "'", str20, "[53, 7, 7, 11]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[53, 8, 8, 11]" + "'", str21, "[53, 8, 8, 11]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[53, 9, 9, 11]" + "'", str22, "[53, 9, 9, 11]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[54, 0, 0, 12]" + "'", str23, "[54, 0, 0, 12]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[54, 1, 1, 12]" + "'", str24, "[54, 1, 1, 12]");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test2533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2533");
        int[] intArray3 = new int[] { ' ', '#', (short) 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass22 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[32, 53, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 36, 1]" + "'", str4, "[32, 36, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 37, 1]" + "'", str5, "[32, 37, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 38, 1]" + "'", str6, "[32, 38, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 39, 1]" + "'", str7, "[32, 39, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 40, 1]" + "'", str8, "[32, 40, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 41, 1]" + "'", str9, "[32, 41, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 42, 1]" + "'", str10, "[32, 42, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 43, 1]" + "'", str11, "[32, 43, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 44, 1]" + "'", str12, "[32, 44, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 45, 1]" + "'", str13, "[32, 45, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 46, 1]" + "'", str14, "[32, 46, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[32, 47, 1]" + "'", str15, "[32, 47, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[32, 48, 1]" + "'", str16, "[32, 48, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[32, 49, 1]" + "'", str17, "[32, 49, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[32, 50, 1]" + "'", str18, "[32, 50, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[32, 51, 1]" + "'", str19, "[32, 51, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[32, 52, 1]" + "'", str20, "[32, 52, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[32, 53, 1]" + "'", str21, "[32, 53, 1]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test2534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2534");
        int[] intArray5 = new int[] { ' ', (byte) 0, 1, ' ', (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass24 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[32, 1, 9, 33, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 0, 2, 32, 1]" + "'", str6, "[32, 0, 2, 32, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 0, 3, 32, 1]" + "'", str7, "[32, 0, 3, 32, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 0, 4, 32, 1]" + "'", str8, "[32, 0, 4, 32, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 0, 5, 32, 1]" + "'", str9, "[32, 0, 5, 32, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 0, 6, 32, 1]" + "'", str10, "[32, 0, 6, 32, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 0, 7, 32, 1]" + "'", str11, "[32, 0, 7, 32, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 0, 8, 32, 1]" + "'", str12, "[32, 0, 8, 32, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 0, 9, 32, 1]" + "'", str13, "[32, 0, 9, 32, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 1, 0, 33, 1]" + "'", str14, "[32, 1, 0, 33, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[32, 1, 1, 33, 1]" + "'", str15, "[32, 1, 1, 33, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[32, 1, 2, 33, 1]" + "'", str16, "[32, 1, 2, 33, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[32, 1, 3, 33, 1]" + "'", str17, "[32, 1, 3, 33, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[32, 1, 4, 33, 1]" + "'", str18, "[32, 1, 4, 33, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[32, 1, 5, 33, 1]" + "'", str19, "[32, 1, 5, 33, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[32, 1, 6, 33, 1]" + "'", str20, "[32, 1, 6, 33, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[32, 1, 7, 33, 1]" + "'", str21, "[32, 1, 7, 33, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[32, 1, 8, 33, 1]" + "'", str22, "[32, 1, 8, 33, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32, 1, 9, 33, 1]" + "'", str23, "[32, 1, 9, 33, 1]");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test2535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2535");
        int[] intArray6 = new int[] { (short) 0, (short) 100, (-1), (short) 1, (short) -1, (byte) 0 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass38 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 103, 2, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 100, 0, 2, -1, 0]" + "'", str7, "[0, 100, 0, 2, -1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 100, 1, 3, -1, 0]" + "'", str8, "[0, 100, 1, 3, -1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 100, 2, 4, -1, 0]" + "'", str9, "[0, 100, 2, 4, -1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 100, 3, 5, -1, 0]" + "'", str10, "[0, 100, 3, 5, -1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 100, 4, 6, -1, 0]" + "'", str11, "[0, 100, 4, 6, -1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 100, 5, 7, -1, 0]" + "'", str12, "[0, 100, 5, 7, -1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 100, 6, 8, -1, 0]" + "'", str13, "[0, 100, 6, 8, -1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 100, 7, 9, -1, 0]" + "'", str14, "[0, 100, 7, 9, -1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 101, 0, 0, 0, 0]" + "'", str15, "[0, 101, 0, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 101, 1, 1, 0, 0]" + "'", str16, "[0, 101, 1, 1, 0, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 101, 2, 2, 0, 0]" + "'", str17, "[0, 101, 2, 2, 0, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 101, 3, 3, 0, 0]" + "'", str18, "[0, 101, 3, 3, 0, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 101, 4, 4, 0, 0]" + "'", str19, "[0, 101, 4, 4, 0, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 101, 5, 5, 0, 0]" + "'", str20, "[0, 101, 5, 5, 0, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 101, 6, 6, 0, 0]" + "'", str21, "[0, 101, 6, 6, 0, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 101, 7, 7, 0, 0]" + "'", str22, "[0, 101, 7, 7, 0, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 101, 8, 8, 0, 0]" + "'", str23, "[0, 101, 8, 8, 0, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 101, 9, 9, 0, 0]" + "'", str24, "[0, 101, 9, 9, 0, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 102, 0, 0, 1, 0]" + "'", str25, "[0, 102, 0, 0, 1, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 102, 1, 1, 1, 0]" + "'", str26, "[0, 102, 1, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 102, 2, 2, 1, 0]" + "'", str27, "[0, 102, 2, 2, 1, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 102, 3, 3, 1, 0]" + "'", str28, "[0, 102, 3, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 102, 4, 4, 1, 0]" + "'", str29, "[0, 102, 4, 4, 1, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 102, 5, 5, 1, 0]" + "'", str30, "[0, 102, 5, 5, 1, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 102, 6, 6, 1, 0]" + "'", str31, "[0, 102, 6, 6, 1, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 102, 7, 7, 1, 0]" + "'", str32, "[0, 102, 7, 7, 1, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 102, 8, 8, 1, 0]" + "'", str33, "[0, 102, 8, 8, 1, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 102, 9, 9, 1, 0]" + "'", str34, "[0, 102, 9, 9, 1, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 103, 0, 0, 2, 0]" + "'", str35, "[0, 103, 0, 0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 103, 1, 1, 2, 0]" + "'", str36, "[0, 103, 1, 1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 103, 2, 2, 2, 0]" + "'", str37, "[0, 103, 2, 2, 2, 0]");
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test2536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2536");
        int[] intArray4 = new int[] { 'a', 10, 100, (short) 10 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass87 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, 92, 182, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 11, 101, 10]" + "'", str5, "[97, 11, 101, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 12, 102, 10]" + "'", str6, "[97, 12, 102, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 13, 103, 10]" + "'", str7, "[97, 13, 103, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 14, 104, 10]" + "'", str8, "[97, 14, 104, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 15, 105, 10]" + "'", str9, "[97, 15, 105, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 16, 106, 10]" + "'", str10, "[97, 16, 106, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 17, 107, 10]" + "'", str11, "[97, 17, 107, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 18, 108, 10]" + "'", str12, "[97, 18, 108, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 19, 109, 10]" + "'", str13, "[97, 19, 109, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 20, 110, 10]" + "'", str14, "[97, 20, 110, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[97, 21, 111, 10]" + "'", str15, "[97, 21, 111, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[97, 22, 112, 10]" + "'", str16, "[97, 22, 112, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[97, 23, 113, 10]" + "'", str17, "[97, 23, 113, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[97, 24, 114, 10]" + "'", str18, "[97, 24, 114, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[97, 25, 115, 10]" + "'", str19, "[97, 25, 115, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[97, 26, 116, 10]" + "'", str20, "[97, 26, 116, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[97, 27, 117, 10]" + "'", str21, "[97, 27, 117, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[97, 28, 118, 10]" + "'", str22, "[97, 28, 118, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[97, 29, 119, 10]" + "'", str23, "[97, 29, 119, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[97, 30, 120, 10]" + "'", str24, "[97, 30, 120, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[97, 31, 121, 10]" + "'", str25, "[97, 31, 121, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[97, 32, 122, 10]" + "'", str26, "[97, 32, 122, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[97, 33, 123, 10]" + "'", str27, "[97, 33, 123, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[97, 34, 124, 10]" + "'", str28, "[97, 34, 124, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[97, 35, 125, 10]" + "'", str29, "[97, 35, 125, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[97, 36, 126, 10]" + "'", str30, "[97, 36, 126, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[97, 37, 127, 10]" + "'", str31, "[97, 37, 127, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[97, 38, 128, 10]" + "'", str32, "[97, 38, 128, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[97, 39, 129, 10]" + "'", str33, "[97, 39, 129, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[97, 40, 130, 10]" + "'", str34, "[97, 40, 130, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[97, 41, 131, 10]" + "'", str35, "[97, 41, 131, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[97, 42, 132, 10]" + "'", str36, "[97, 42, 132, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[97, 43, 133, 10]" + "'", str37, "[97, 43, 133, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[97, 44, 134, 10]" + "'", str38, "[97, 44, 134, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[97, 45, 135, 10]" + "'", str39, "[97, 45, 135, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[97, 46, 136, 10]" + "'", str40, "[97, 46, 136, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[97, 47, 137, 10]" + "'", str41, "[97, 47, 137, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[97, 48, 138, 10]" + "'", str42, "[97, 48, 138, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[97, 49, 139, 10]" + "'", str43, "[97, 49, 139, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[97, 50, 140, 10]" + "'", str44, "[97, 50, 140, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[97, 51, 141, 10]" + "'", str45, "[97, 51, 141, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[97, 52, 142, 10]" + "'", str46, "[97, 52, 142, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[97, 53, 143, 10]" + "'", str47, "[97, 53, 143, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[97, 54, 144, 10]" + "'", str48, "[97, 54, 144, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[97, 55, 145, 10]" + "'", str49, "[97, 55, 145, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[97, 56, 146, 10]" + "'", str50, "[97, 56, 146, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[97, 57, 147, 10]" + "'", str51, "[97, 57, 147, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[97, 58, 148, 10]" + "'", str52, "[97, 58, 148, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[97, 59, 149, 10]" + "'", str53, "[97, 59, 149, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[97, 60, 150, 10]" + "'", str54, "[97, 60, 150, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[97, 61, 151, 10]" + "'", str55, "[97, 61, 151, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[97, 62, 152, 10]" + "'", str56, "[97, 62, 152, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[97, 63, 153, 10]" + "'", str57, "[97, 63, 153, 10]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[97, 64, 154, 10]" + "'", str58, "[97, 64, 154, 10]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[97, 65, 155, 10]" + "'", str59, "[97, 65, 155, 10]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[97, 66, 156, 10]" + "'", str60, "[97, 66, 156, 10]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[97, 67, 157, 10]" + "'", str61, "[97, 67, 157, 10]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[97, 68, 158, 10]" + "'", str62, "[97, 68, 158, 10]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[97, 69, 159, 10]" + "'", str63, "[97, 69, 159, 10]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[97, 70, 160, 10]" + "'", str64, "[97, 70, 160, 10]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[97, 71, 161, 10]" + "'", str65, "[97, 71, 161, 10]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[97, 72, 162, 10]" + "'", str66, "[97, 72, 162, 10]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[97, 73, 163, 10]" + "'", str67, "[97, 73, 163, 10]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[97, 74, 164, 10]" + "'", str68, "[97, 74, 164, 10]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[97, 75, 165, 10]" + "'", str69, "[97, 75, 165, 10]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[97, 76, 166, 10]" + "'", str70, "[97, 76, 166, 10]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[97, 77, 167, 10]" + "'", str71, "[97, 77, 167, 10]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[97, 78, 168, 10]" + "'", str72, "[97, 78, 168, 10]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[97, 79, 169, 10]" + "'", str73, "[97, 79, 169, 10]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[97, 80, 170, 10]" + "'", str74, "[97, 80, 170, 10]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[97, 81, 171, 10]" + "'", str75, "[97, 81, 171, 10]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[97, 82, 172, 10]" + "'", str76, "[97, 82, 172, 10]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[97, 83, 173, 10]" + "'", str77, "[97, 83, 173, 10]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[97, 84, 174, 10]" + "'", str78, "[97, 84, 174, 10]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[97, 85, 175, 10]" + "'", str79, "[97, 85, 175, 10]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[97, 86, 176, 10]" + "'", str80, "[97, 86, 176, 10]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[97, 87, 177, 10]" + "'", str81, "[97, 87, 177, 10]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[97, 88, 178, 10]" + "'", str82, "[97, 88, 178, 10]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[97, 89, 179, 10]" + "'", str83, "[97, 89, 179, 10]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[97, 90, 180, 10]" + "'", str84, "[97, 90, 180, 10]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[97, 91, 181, 10]" + "'", str85, "[97, 91, 181, 10]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[97, 92, 182, 10]" + "'", str86, "[97, 92, 182, 10]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test2537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2537");
        int[] intArray5 = new int[] { 1, (byte) 0, (short) 100, 0, (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass28 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 122, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 0, 1]" + "'", str6, "[1, 0, 101, 0, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 0, 1]" + "'", str7, "[1, 0, 102, 0, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 0, 1]" + "'", str8, "[1, 0, 103, 0, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 0, 1]" + "'", str9, "[1, 0, 104, 0, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 0, 1]" + "'", str10, "[1, 0, 105, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 0, 1]" + "'", str11, "[1, 0, 106, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 0, 1]" + "'", str12, "[1, 0, 107, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 108, 0, 1]" + "'", str13, "[1, 0, 108, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 109, 0, 1]" + "'", str14, "[1, 0, 109, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 110, 0, 1]" + "'", str15, "[1, 0, 110, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 111, 0, 1]" + "'", str16, "[1, 0, 111, 0, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 0, 112, 0, 1]" + "'", str17, "[1, 0, 112, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 0, 113, 0, 1]" + "'", str18, "[1, 0, 113, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 0, 114, 0, 1]" + "'", str19, "[1, 0, 114, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 0, 115, 0, 1]" + "'", str20, "[1, 0, 115, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 116, 0, 1]" + "'", str21, "[1, 0, 116, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 117, 0, 1]" + "'", str22, "[1, 0, 117, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 118, 0, 1]" + "'", str23, "[1, 0, 118, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 119, 0, 1]" + "'", str24, "[1, 0, 119, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 0, 120, 0, 1]" + "'", str25, "[1, 0, 120, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 0, 121, 0, 1]" + "'", str26, "[1, 0, 121, 0, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 0, 122, 0, 1]" + "'", str27, "[1, 0, 122, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test2538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2538");
        int[] intArray3 = new int[] { (byte) 1, 'a', (short) 100 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass71 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 164, 100]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 98, 100]" + "'", str4, "[1, 98, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 99, 100]" + "'", str5, "[1, 99, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 100, 100]" + "'", str6, "[1, 100, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 101, 100]" + "'", str7, "[1, 101, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 102, 100]" + "'", str8, "[1, 102, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 103, 100]" + "'", str9, "[1, 103, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 104, 100]" + "'", str10, "[1, 104, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 105, 100]" + "'", str11, "[1, 105, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 106, 100]" + "'", str12, "[1, 106, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 107, 100]" + "'", str13, "[1, 107, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 108, 100]" + "'", str14, "[1, 108, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 109, 100]" + "'", str15, "[1, 109, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 110, 100]" + "'", str16, "[1, 110, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 111, 100]" + "'", str17, "[1, 111, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 112, 100]" + "'", str18, "[1, 112, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 113, 100]" + "'", str19, "[1, 113, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 114, 100]" + "'", str20, "[1, 114, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 115, 100]" + "'", str21, "[1, 115, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 116, 100]" + "'", str22, "[1, 116, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 117, 100]" + "'", str23, "[1, 117, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 118, 100]" + "'", str24, "[1, 118, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 119, 100]" + "'", str25, "[1, 119, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 120, 100]" + "'", str26, "[1, 120, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 121, 100]" + "'", str27, "[1, 121, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 122, 100]" + "'", str28, "[1, 122, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 123, 100]" + "'", str29, "[1, 123, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 124, 100]" + "'", str30, "[1, 124, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 125, 100]" + "'", str31, "[1, 125, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 126, 100]" + "'", str32, "[1, 126, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 127, 100]" + "'", str33, "[1, 127, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 128, 100]" + "'", str34, "[1, 128, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 129, 100]" + "'", str35, "[1, 129, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 130, 100]" + "'", str36, "[1, 130, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 131, 100]" + "'", str37, "[1, 131, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 132, 100]" + "'", str38, "[1, 132, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 133, 100]" + "'", str39, "[1, 133, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 134, 100]" + "'", str40, "[1, 134, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 135, 100]" + "'", str41, "[1, 135, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 136, 100]" + "'", str42, "[1, 136, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 137, 100]" + "'", str43, "[1, 137, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 138, 100]" + "'", str44, "[1, 138, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 139, 100]" + "'", str45, "[1, 139, 100]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 140, 100]" + "'", str46, "[1, 140, 100]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 141, 100]" + "'", str47, "[1, 141, 100]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 142, 100]" + "'", str48, "[1, 142, 100]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 143, 100]" + "'", str49, "[1, 143, 100]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 144, 100]" + "'", str50, "[1, 144, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 145, 100]" + "'", str51, "[1, 145, 100]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 146, 100]" + "'", str52, "[1, 146, 100]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 147, 100]" + "'", str53, "[1, 147, 100]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 148, 100]" + "'", str54, "[1, 148, 100]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 149, 100]" + "'", str55, "[1, 149, 100]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 150, 100]" + "'", str56, "[1, 150, 100]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 151, 100]" + "'", str57, "[1, 151, 100]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 152, 100]" + "'", str58, "[1, 152, 100]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 153, 100]" + "'", str59, "[1, 153, 100]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 154, 100]" + "'", str60, "[1, 154, 100]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 155, 100]" + "'", str61, "[1, 155, 100]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 156, 100]" + "'", str62, "[1, 156, 100]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 157, 100]" + "'", str63, "[1, 157, 100]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 158, 100]" + "'", str64, "[1, 158, 100]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 159, 100]" + "'", str65, "[1, 159, 100]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 160, 100]" + "'", str66, "[1, 160, 100]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 161, 100]" + "'", str67, "[1, 161, 100]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 162, 100]" + "'", str68, "[1, 162, 100]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 163, 100]" + "'", str69, "[1, 163, 100]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 164, 100]" + "'", str70, "[1, 164, 100]");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test2539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2539");
        int[] intArray4 = new int[] { 'a', 10, 100, (short) 10 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass88 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, 93, 183, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 11, 101, 10]" + "'", str5, "[97, 11, 101, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 12, 102, 10]" + "'", str6, "[97, 12, 102, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 13, 103, 10]" + "'", str7, "[97, 13, 103, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 14, 104, 10]" + "'", str8, "[97, 14, 104, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 15, 105, 10]" + "'", str9, "[97, 15, 105, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 16, 106, 10]" + "'", str10, "[97, 16, 106, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 17, 107, 10]" + "'", str11, "[97, 17, 107, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 18, 108, 10]" + "'", str12, "[97, 18, 108, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 19, 109, 10]" + "'", str13, "[97, 19, 109, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 20, 110, 10]" + "'", str14, "[97, 20, 110, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[97, 21, 111, 10]" + "'", str15, "[97, 21, 111, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[97, 22, 112, 10]" + "'", str16, "[97, 22, 112, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[97, 23, 113, 10]" + "'", str17, "[97, 23, 113, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[97, 24, 114, 10]" + "'", str18, "[97, 24, 114, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[97, 25, 115, 10]" + "'", str19, "[97, 25, 115, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[97, 26, 116, 10]" + "'", str20, "[97, 26, 116, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[97, 27, 117, 10]" + "'", str21, "[97, 27, 117, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[97, 28, 118, 10]" + "'", str22, "[97, 28, 118, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[97, 29, 119, 10]" + "'", str23, "[97, 29, 119, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[97, 30, 120, 10]" + "'", str24, "[97, 30, 120, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[97, 31, 121, 10]" + "'", str25, "[97, 31, 121, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[97, 32, 122, 10]" + "'", str26, "[97, 32, 122, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[97, 33, 123, 10]" + "'", str27, "[97, 33, 123, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[97, 34, 124, 10]" + "'", str28, "[97, 34, 124, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[97, 35, 125, 10]" + "'", str29, "[97, 35, 125, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[97, 36, 126, 10]" + "'", str30, "[97, 36, 126, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[97, 37, 127, 10]" + "'", str31, "[97, 37, 127, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[97, 38, 128, 10]" + "'", str32, "[97, 38, 128, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[97, 39, 129, 10]" + "'", str33, "[97, 39, 129, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[97, 40, 130, 10]" + "'", str34, "[97, 40, 130, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[97, 41, 131, 10]" + "'", str35, "[97, 41, 131, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[97, 42, 132, 10]" + "'", str36, "[97, 42, 132, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[97, 43, 133, 10]" + "'", str37, "[97, 43, 133, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[97, 44, 134, 10]" + "'", str38, "[97, 44, 134, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[97, 45, 135, 10]" + "'", str39, "[97, 45, 135, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[97, 46, 136, 10]" + "'", str40, "[97, 46, 136, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[97, 47, 137, 10]" + "'", str41, "[97, 47, 137, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[97, 48, 138, 10]" + "'", str42, "[97, 48, 138, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[97, 49, 139, 10]" + "'", str43, "[97, 49, 139, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[97, 50, 140, 10]" + "'", str44, "[97, 50, 140, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[97, 51, 141, 10]" + "'", str45, "[97, 51, 141, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[97, 52, 142, 10]" + "'", str46, "[97, 52, 142, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[97, 53, 143, 10]" + "'", str47, "[97, 53, 143, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[97, 54, 144, 10]" + "'", str48, "[97, 54, 144, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[97, 55, 145, 10]" + "'", str49, "[97, 55, 145, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[97, 56, 146, 10]" + "'", str50, "[97, 56, 146, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[97, 57, 147, 10]" + "'", str51, "[97, 57, 147, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[97, 58, 148, 10]" + "'", str52, "[97, 58, 148, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[97, 59, 149, 10]" + "'", str53, "[97, 59, 149, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[97, 60, 150, 10]" + "'", str54, "[97, 60, 150, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[97, 61, 151, 10]" + "'", str55, "[97, 61, 151, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[97, 62, 152, 10]" + "'", str56, "[97, 62, 152, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[97, 63, 153, 10]" + "'", str57, "[97, 63, 153, 10]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[97, 64, 154, 10]" + "'", str58, "[97, 64, 154, 10]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[97, 65, 155, 10]" + "'", str59, "[97, 65, 155, 10]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[97, 66, 156, 10]" + "'", str60, "[97, 66, 156, 10]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[97, 67, 157, 10]" + "'", str61, "[97, 67, 157, 10]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[97, 68, 158, 10]" + "'", str62, "[97, 68, 158, 10]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[97, 69, 159, 10]" + "'", str63, "[97, 69, 159, 10]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[97, 70, 160, 10]" + "'", str64, "[97, 70, 160, 10]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[97, 71, 161, 10]" + "'", str65, "[97, 71, 161, 10]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[97, 72, 162, 10]" + "'", str66, "[97, 72, 162, 10]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[97, 73, 163, 10]" + "'", str67, "[97, 73, 163, 10]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[97, 74, 164, 10]" + "'", str68, "[97, 74, 164, 10]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[97, 75, 165, 10]" + "'", str69, "[97, 75, 165, 10]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[97, 76, 166, 10]" + "'", str70, "[97, 76, 166, 10]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[97, 77, 167, 10]" + "'", str71, "[97, 77, 167, 10]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[97, 78, 168, 10]" + "'", str72, "[97, 78, 168, 10]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[97, 79, 169, 10]" + "'", str73, "[97, 79, 169, 10]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[97, 80, 170, 10]" + "'", str74, "[97, 80, 170, 10]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[97, 81, 171, 10]" + "'", str75, "[97, 81, 171, 10]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[97, 82, 172, 10]" + "'", str76, "[97, 82, 172, 10]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[97, 83, 173, 10]" + "'", str77, "[97, 83, 173, 10]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[97, 84, 174, 10]" + "'", str78, "[97, 84, 174, 10]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[97, 85, 175, 10]" + "'", str79, "[97, 85, 175, 10]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[97, 86, 176, 10]" + "'", str80, "[97, 86, 176, 10]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[97, 87, 177, 10]" + "'", str81, "[97, 87, 177, 10]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[97, 88, 178, 10]" + "'", str82, "[97, 88, 178, 10]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[97, 89, 179, 10]" + "'", str83, "[97, 89, 179, 10]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[97, 90, 180, 10]" + "'", str84, "[97, 90, 180, 10]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[97, 91, 181, 10]" + "'", str85, "[97, 91, 181, 10]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[97, 92, 182, 10]" + "'", str86, "[97, 92, 182, 10]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[97, 93, 183, 10]" + "'", str87, "[97, 93, 183, 10]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2540");
        int[] intArray2 = new int[] { (short) 1, 10 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass36 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[34, 43]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 11]" + "'", str3, "[2, 11]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 12]" + "'", str4, "[3, 12]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 13]" + "'", str5, "[4, 13]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 14]" + "'", str6, "[5, 14]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 15]" + "'", str7, "[6, 15]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 16]" + "'", str8, "[7, 16]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 17]" + "'", str9, "[8, 17]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 18]" + "'", str10, "[9, 18]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 19]" + "'", str11, "[10, 19]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 20]" + "'", str12, "[11, 20]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[12, 21]" + "'", str13, "[12, 21]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[13, 22]" + "'", str14, "[13, 22]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[14, 23]" + "'", str15, "[14, 23]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[15, 24]" + "'", str16, "[15, 24]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[16, 25]" + "'", str17, "[16, 25]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[17, 26]" + "'", str18, "[17, 26]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[18, 27]" + "'", str19, "[18, 27]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[19, 28]" + "'", str20, "[19, 28]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[20, 29]" + "'", str21, "[20, 29]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[21, 30]" + "'", str22, "[21, 30]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[22, 31]" + "'", str23, "[22, 31]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[23, 32]" + "'", str24, "[23, 32]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[24, 33]" + "'", str25, "[24, 33]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[25, 34]" + "'", str26, "[25, 34]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[26, 35]" + "'", str27, "[26, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[27, 36]" + "'", str28, "[27, 36]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[28, 37]" + "'", str29, "[28, 37]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[29, 38]" + "'", str30, "[29, 38]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[30, 39]" + "'", str31, "[30, 39]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[31, 40]" + "'", str32, "[31, 40]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[32, 41]" + "'", str33, "[32, 41]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[33, 42]" + "'", str34, "[33, 42]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[34, 43]" + "'", str35, "[34, 43]");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test2541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2541");
        int[] intArray3 = new int[] { 1, (-1), '4' };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str90 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str91 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str92 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str93 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str94 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str95 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str96 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str97 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str98 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass99 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[10, 4, 61]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 0, 52]" + "'", str4, "[1, 0, 52]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 1, 52]" + "'", str5, "[1, 1, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 2, 52]" + "'", str6, "[1, 2, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 3, 52]" + "'", str7, "[1, 3, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 4, 52]" + "'", str8, "[1, 4, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 5, 52]" + "'", str9, "[1, 5, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 6, 52]" + "'", str10, "[1, 6, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 7, 52]" + "'", str11, "[1, 7, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 8, 52]" + "'", str12, "[1, 8, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 9, 52]" + "'", str13, "[1, 9, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 0, 53]" + "'", str14, "[2, 0, 53]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 1, 53]" + "'", str15, "[2, 1, 53]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 2, 53]" + "'", str16, "[2, 2, 53]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 3, 53]" + "'", str17, "[2, 3, 53]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 4, 53]" + "'", str18, "[2, 4, 53]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 5, 53]" + "'", str19, "[2, 5, 53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 6, 53]" + "'", str20, "[2, 6, 53]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 7, 53]" + "'", str21, "[2, 7, 53]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 8, 53]" + "'", str22, "[2, 8, 53]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 9, 53]" + "'", str23, "[2, 9, 53]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 0, 54]" + "'", str24, "[3, 0, 54]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 1, 54]" + "'", str25, "[3, 1, 54]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 2, 54]" + "'", str26, "[3, 2, 54]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 3, 54]" + "'", str27, "[3, 3, 54]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 4, 54]" + "'", str28, "[3, 4, 54]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[3, 5, 54]" + "'", str29, "[3, 5, 54]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[3, 6, 54]" + "'", str30, "[3, 6, 54]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[3, 7, 54]" + "'", str31, "[3, 7, 54]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[3, 8, 54]" + "'", str32, "[3, 8, 54]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[3, 9, 54]" + "'", str33, "[3, 9, 54]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4, 0, 55]" + "'", str34, "[4, 0, 55]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 1, 55]" + "'", str35, "[4, 1, 55]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 2, 55]" + "'", str36, "[4, 2, 55]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 3, 55]" + "'", str37, "[4, 3, 55]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[4, 4, 55]" + "'", str38, "[4, 4, 55]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[4, 5, 55]" + "'", str39, "[4, 5, 55]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[4, 6, 55]" + "'", str40, "[4, 6, 55]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[4, 7, 55]" + "'", str41, "[4, 7, 55]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[4, 8, 55]" + "'", str42, "[4, 8, 55]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[4, 9, 55]" + "'", str43, "[4, 9, 55]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[5, 0, 56]" + "'", str44, "[5, 0, 56]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[5, 1, 56]" + "'", str45, "[5, 1, 56]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 2, 56]" + "'", str46, "[5, 2, 56]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 3, 56]" + "'", str47, "[5, 3, 56]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 4, 56]" + "'", str48, "[5, 4, 56]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[5, 5, 56]" + "'", str49, "[5, 5, 56]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[5, 6, 56]" + "'", str50, "[5, 6, 56]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[5, 7, 56]" + "'", str51, "[5, 7, 56]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[5, 8, 56]" + "'", str52, "[5, 8, 56]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[5, 9, 56]" + "'", str53, "[5, 9, 56]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[6, 0, 57]" + "'", str54, "[6, 0, 57]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[6, 1, 57]" + "'", str55, "[6, 1, 57]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[6, 2, 57]" + "'", str56, "[6, 2, 57]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6, 3, 57]" + "'", str57, "[6, 3, 57]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6, 4, 57]" + "'", str58, "[6, 4, 57]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 5, 57]" + "'", str59, "[6, 5, 57]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[6, 6, 57]" + "'", str60, "[6, 6, 57]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[6, 7, 57]" + "'", str61, "[6, 7, 57]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[6, 8, 57]" + "'", str62, "[6, 8, 57]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[6, 9, 57]" + "'", str63, "[6, 9, 57]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[7, 0, 58]" + "'", str64, "[7, 0, 58]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[7, 1, 58]" + "'", str65, "[7, 1, 58]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[7, 2, 58]" + "'", str66, "[7, 2, 58]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[7, 3, 58]" + "'", str67, "[7, 3, 58]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[7, 4, 58]" + "'", str68, "[7, 4, 58]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[7, 5, 58]" + "'", str69, "[7, 5, 58]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[7, 6, 58]" + "'", str70, "[7, 6, 58]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[7, 7, 58]" + "'", str71, "[7, 7, 58]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[7, 8, 58]" + "'", str72, "[7, 8, 58]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[7, 9, 58]" + "'", str73, "[7, 9, 58]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[8, 0, 59]" + "'", str74, "[8, 0, 59]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[8, 1, 59]" + "'", str75, "[8, 1, 59]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[8, 2, 59]" + "'", str76, "[8, 2, 59]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[8, 3, 59]" + "'", str77, "[8, 3, 59]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[8, 4, 59]" + "'", str78, "[8, 4, 59]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[8, 5, 59]" + "'", str79, "[8, 5, 59]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[8, 6, 59]" + "'", str80, "[8, 6, 59]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[8, 7, 59]" + "'", str81, "[8, 7, 59]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[8, 8, 59]" + "'", str82, "[8, 8, 59]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[8, 9, 59]" + "'", str83, "[8, 9, 59]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[9, 0, 60]" + "'", str84, "[9, 0, 60]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[9, 1, 60]" + "'", str85, "[9, 1, 60]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[9, 2, 60]" + "'", str86, "[9, 2, 60]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[9, 3, 60]" + "'", str87, "[9, 3, 60]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[9, 4, 60]" + "'", str88, "[9, 4, 60]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[9, 5, 60]" + "'", str89, "[9, 5, 60]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[9, 6, 60]" + "'", str90, "[9, 6, 60]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[9, 7, 60]" + "'", str91, "[9, 7, 60]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[9, 8, 60]" + "'", str92, "[9, 8, 60]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[9, 9, 60]" + "'", str93, "[9, 9, 60]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "[10, 0, 61]" + "'", str94, "[10, 0, 61]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "[10, 1, 61]" + "'", str95, "[10, 1, 61]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "[10, 2, 61]" + "'", str96, "[10, 2, 61]");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "[10, 3, 61]" + "'", str97, "[10, 3, 61]");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "[10, 4, 61]" + "'", str98, "[10, 4, 61]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2542");
        int[] intArray3 = new int[] { ' ', '#', (short) 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass21 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[32, 52, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 36, 1]" + "'", str4, "[32, 36, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 37, 1]" + "'", str5, "[32, 37, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 38, 1]" + "'", str6, "[32, 38, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 39, 1]" + "'", str7, "[32, 39, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 40, 1]" + "'", str8, "[32, 40, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 41, 1]" + "'", str9, "[32, 41, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 42, 1]" + "'", str10, "[32, 42, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 43, 1]" + "'", str11, "[32, 43, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 44, 1]" + "'", str12, "[32, 44, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 45, 1]" + "'", str13, "[32, 45, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 46, 1]" + "'", str14, "[32, 46, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[32, 47, 1]" + "'", str15, "[32, 47, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[32, 48, 1]" + "'", str16, "[32, 48, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[32, 49, 1]" + "'", str17, "[32, 49, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[32, 50, 1]" + "'", str18, "[32, 50, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[32, 51, 1]" + "'", str19, "[32, 51, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[32, 52, 1]" + "'", str20, "[32, 52, 1]");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test2543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2543");
        int[] intArray1 = new int[] { 10 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass67 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[75]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[11]" + "'", str2, "[11]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[12]" + "'", str3, "[12]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[13]" + "'", str4, "[13]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[14]" + "'", str5, "[14]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[15]" + "'", str6, "[15]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[16]" + "'", str7, "[16]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[17]" + "'", str8, "[17]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[18]" + "'", str9, "[18]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[19]" + "'", str10, "[19]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[20]" + "'", str11, "[20]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[21]" + "'", str12, "[21]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[22]" + "'", str13, "[22]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[23]" + "'", str14, "[23]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[24]" + "'", str15, "[24]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[25]" + "'", str16, "[25]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[26]" + "'", str17, "[26]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[27]" + "'", str18, "[27]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[28]" + "'", str19, "[28]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[29]" + "'", str20, "[29]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[30]" + "'", str21, "[30]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[31]" + "'", str22, "[31]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32]" + "'", str23, "[32]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[33]" + "'", str24, "[33]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34]" + "'", str25, "[34]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35]" + "'", str26, "[35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[36]" + "'", str27, "[36]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[37]" + "'", str28, "[37]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[38]" + "'", str29, "[38]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[39]" + "'", str30, "[39]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[40]" + "'", str31, "[40]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[41]" + "'", str32, "[41]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[42]" + "'", str33, "[42]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[43]" + "'", str34, "[43]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[44]" + "'", str35, "[44]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[45]" + "'", str36, "[45]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[46]" + "'", str37, "[46]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[47]" + "'", str38, "[47]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[48]" + "'", str39, "[48]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[49]" + "'", str40, "[49]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[50]" + "'", str41, "[50]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[51]" + "'", str42, "[51]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[52]" + "'", str43, "[52]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[53]" + "'", str44, "[53]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[54]" + "'", str45, "[54]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[55]" + "'", str46, "[55]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[56]" + "'", str47, "[56]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[57]" + "'", str48, "[57]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[58]" + "'", str49, "[58]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[59]" + "'", str50, "[59]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[60]" + "'", str51, "[60]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[61]" + "'", str52, "[61]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[62]" + "'", str53, "[62]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[63]" + "'", str54, "[63]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[64]" + "'", str55, "[64]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[65]" + "'", str56, "[65]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[66]" + "'", str57, "[66]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[67]" + "'", str58, "[67]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[68]" + "'", str59, "[68]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[69]" + "'", str60, "[69]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[70]" + "'", str61, "[70]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[71]" + "'", str62, "[71]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[72]" + "'", str63, "[72]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[73]" + "'", str64, "[73]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[74]" + "'", str65, "[74]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[75]" + "'", str66, "[75]");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test2544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2544");
        int[] intArray6 = new int[] { (short) 0, (short) 100, (-1), (short) 1, (short) -1, (byte) 0 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass39 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 103, 3, 3, 2, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 100, 0, 2, -1, 0]" + "'", str7, "[0, 100, 0, 2, -1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 100, 1, 3, -1, 0]" + "'", str8, "[0, 100, 1, 3, -1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 100, 2, 4, -1, 0]" + "'", str9, "[0, 100, 2, 4, -1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 100, 3, 5, -1, 0]" + "'", str10, "[0, 100, 3, 5, -1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 100, 4, 6, -1, 0]" + "'", str11, "[0, 100, 4, 6, -1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 100, 5, 7, -1, 0]" + "'", str12, "[0, 100, 5, 7, -1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 100, 6, 8, -1, 0]" + "'", str13, "[0, 100, 6, 8, -1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 100, 7, 9, -1, 0]" + "'", str14, "[0, 100, 7, 9, -1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 101, 0, 0, 0, 0]" + "'", str15, "[0, 101, 0, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 101, 1, 1, 0, 0]" + "'", str16, "[0, 101, 1, 1, 0, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 101, 2, 2, 0, 0]" + "'", str17, "[0, 101, 2, 2, 0, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 101, 3, 3, 0, 0]" + "'", str18, "[0, 101, 3, 3, 0, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 101, 4, 4, 0, 0]" + "'", str19, "[0, 101, 4, 4, 0, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 101, 5, 5, 0, 0]" + "'", str20, "[0, 101, 5, 5, 0, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 101, 6, 6, 0, 0]" + "'", str21, "[0, 101, 6, 6, 0, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 101, 7, 7, 0, 0]" + "'", str22, "[0, 101, 7, 7, 0, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 101, 8, 8, 0, 0]" + "'", str23, "[0, 101, 8, 8, 0, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 101, 9, 9, 0, 0]" + "'", str24, "[0, 101, 9, 9, 0, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 102, 0, 0, 1, 0]" + "'", str25, "[0, 102, 0, 0, 1, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 102, 1, 1, 1, 0]" + "'", str26, "[0, 102, 1, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 102, 2, 2, 1, 0]" + "'", str27, "[0, 102, 2, 2, 1, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 102, 3, 3, 1, 0]" + "'", str28, "[0, 102, 3, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 102, 4, 4, 1, 0]" + "'", str29, "[0, 102, 4, 4, 1, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 102, 5, 5, 1, 0]" + "'", str30, "[0, 102, 5, 5, 1, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 102, 6, 6, 1, 0]" + "'", str31, "[0, 102, 6, 6, 1, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 102, 7, 7, 1, 0]" + "'", str32, "[0, 102, 7, 7, 1, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 102, 8, 8, 1, 0]" + "'", str33, "[0, 102, 8, 8, 1, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 102, 9, 9, 1, 0]" + "'", str34, "[0, 102, 9, 9, 1, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 103, 0, 0, 2, 0]" + "'", str35, "[0, 103, 0, 0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 103, 1, 1, 2, 0]" + "'", str36, "[0, 103, 1, 1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 103, 2, 2, 2, 0]" + "'", str37, "[0, 103, 2, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 103, 3, 3, 2, 0]" + "'", str38, "[0, 103, 3, 3, 2, 0]");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test2545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2545");
        int[] intArray5 = new int[] { (short) 100, 'a', ' ', 0, (byte) -1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass64 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 97, 90, 0, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 97, 33, 0, -1]" + "'", str6, "[100, 97, 33, 0, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 97, 34, 0, -1]" + "'", str7, "[100, 97, 34, 0, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 97, 35, 0, -1]" + "'", str8, "[100, 97, 35, 0, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 97, 36, 0, -1]" + "'", str9, "[100, 97, 36, 0, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 97, 37, 0, -1]" + "'", str10, "[100, 97, 37, 0, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 97, 38, 0, -1]" + "'", str11, "[100, 97, 38, 0, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 97, 39, 0, -1]" + "'", str12, "[100, 97, 39, 0, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 97, 40, 0, -1]" + "'", str13, "[100, 97, 40, 0, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 97, 41, 0, -1]" + "'", str14, "[100, 97, 41, 0, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 97, 42, 0, -1]" + "'", str15, "[100, 97, 42, 0, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 97, 43, 0, -1]" + "'", str16, "[100, 97, 43, 0, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 97, 44, 0, -1]" + "'", str17, "[100, 97, 44, 0, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 97, 45, 0, -1]" + "'", str18, "[100, 97, 45, 0, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 97, 46, 0, -1]" + "'", str19, "[100, 97, 46, 0, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 97, 47, 0, -1]" + "'", str20, "[100, 97, 47, 0, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 97, 48, 0, -1]" + "'", str21, "[100, 97, 48, 0, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 97, 49, 0, -1]" + "'", str22, "[100, 97, 49, 0, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 97, 50, 0, -1]" + "'", str23, "[100, 97, 50, 0, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 97, 51, 0, -1]" + "'", str24, "[100, 97, 51, 0, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 97, 52, 0, -1]" + "'", str25, "[100, 97, 52, 0, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 97, 53, 0, -1]" + "'", str26, "[100, 97, 53, 0, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 97, 54, 0, -1]" + "'", str27, "[100, 97, 54, 0, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 97, 55, 0, -1]" + "'", str28, "[100, 97, 55, 0, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 97, 56, 0, -1]" + "'", str29, "[100, 97, 56, 0, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 97, 57, 0, -1]" + "'", str30, "[100, 97, 57, 0, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 97, 58, 0, -1]" + "'", str31, "[100, 97, 58, 0, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 97, 59, 0, -1]" + "'", str32, "[100, 97, 59, 0, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 97, 60, 0, -1]" + "'", str33, "[100, 97, 60, 0, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 97, 61, 0, -1]" + "'", str34, "[100, 97, 61, 0, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 97, 62, 0, -1]" + "'", str35, "[100, 97, 62, 0, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 97, 63, 0, -1]" + "'", str36, "[100, 97, 63, 0, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 97, 64, 0, -1]" + "'", str37, "[100, 97, 64, 0, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 97, 65, 0, -1]" + "'", str38, "[100, 97, 65, 0, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 97, 66, 0, -1]" + "'", str39, "[100, 97, 66, 0, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 97, 67, 0, -1]" + "'", str40, "[100, 97, 67, 0, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 97, 68, 0, -1]" + "'", str41, "[100, 97, 68, 0, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 97, 69, 0, -1]" + "'", str42, "[100, 97, 69, 0, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 97, 70, 0, -1]" + "'", str43, "[100, 97, 70, 0, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 97, 71, 0, -1]" + "'", str44, "[100, 97, 71, 0, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 97, 72, 0, -1]" + "'", str45, "[100, 97, 72, 0, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 97, 73, 0, -1]" + "'", str46, "[100, 97, 73, 0, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 97, 74, 0, -1]" + "'", str47, "[100, 97, 74, 0, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 97, 75, 0, -1]" + "'", str48, "[100, 97, 75, 0, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 97, 76, 0, -1]" + "'", str49, "[100, 97, 76, 0, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 97, 77, 0, -1]" + "'", str50, "[100, 97, 77, 0, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 97, 78, 0, -1]" + "'", str51, "[100, 97, 78, 0, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 97, 79, 0, -1]" + "'", str52, "[100, 97, 79, 0, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 97, 80, 0, -1]" + "'", str53, "[100, 97, 80, 0, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 97, 81, 0, -1]" + "'", str54, "[100, 97, 81, 0, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 97, 82, 0, -1]" + "'", str55, "[100, 97, 82, 0, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 97, 83, 0, -1]" + "'", str56, "[100, 97, 83, 0, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 97, 84, 0, -1]" + "'", str57, "[100, 97, 84, 0, -1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 97, 85, 0, -1]" + "'", str58, "[100, 97, 85, 0, -1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 97, 86, 0, -1]" + "'", str59, "[100, 97, 86, 0, -1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 97, 87, 0, -1]" + "'", str60, "[100, 97, 87, 0, -1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 97, 88, 0, -1]" + "'", str61, "[100, 97, 88, 0, -1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[100, 97, 89, 0, -1]" + "'", str62, "[100, 97, 89, 0, -1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[100, 97, 90, 0, -1]" + "'", str63, "[100, 97, 90, 0, -1]");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test2546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2546");
        int[] intArray1 = new int[] { (short) 0 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass65 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[3]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1]" + "'", str11, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1]" + "'", str21, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5]" + "'", str26, "[5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6]" + "'", str27, "[6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7]" + "'", str28, "[7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8]" + "'", str29, "[8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9]" + "'", str30, "[9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 1]" + "'", str31, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1]" + "'", str32, "[1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2]" + "'", str33, "[2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3]" + "'", str34, "[3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4]" + "'", str35, "[4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5]" + "'", str36, "[5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6]" + "'", str37, "[6]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[7]" + "'", str38, "[7]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[8]" + "'", str39, "[8]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[9]" + "'", str40, "[9]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 1]" + "'", str41, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1]" + "'", str42, "[1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2]" + "'", str43, "[2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3]" + "'", str44, "[3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4]" + "'", str45, "[4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5]" + "'", str46, "[5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[6]" + "'", str47, "[6]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[7]" + "'", str48, "[7]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[8]" + "'", str49, "[8]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[9]" + "'", str50, "[9]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 1]" + "'", str51, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1]" + "'", str52, "[1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[2]" + "'", str53, "[2]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[3]" + "'", str54, "[3]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[4]" + "'", str55, "[4]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5]" + "'", str56, "[5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6]" + "'", str57, "[6]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[7]" + "'", str58, "[7]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[8]" + "'", str59, "[8]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[9]" + "'", str60, "[9]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 1]" + "'", str61, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1]" + "'", str62, "[1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[2]" + "'", str63, "[2]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[3]" + "'", str64, "[3]");
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test2547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2547");
        int[] intArray4 = new int[] { (byte) 10, 'a', (byte) -1, '#' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass82 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[17, 6, 6, 42]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 98, 0, 35]" + "'", str5, "[10, 98, 0, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 99, 1, 35]" + "'", str6, "[10, 99, 1, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 100, 2, 35]" + "'", str7, "[10, 100, 2, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 101, 3, 35]" + "'", str8, "[10, 101, 3, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 102, 4, 35]" + "'", str9, "[10, 102, 4, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 103, 5, 35]" + "'", str10, "[10, 103, 5, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 104, 6, 35]" + "'", str11, "[10, 104, 6, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 105, 7, 35]" + "'", str12, "[10, 105, 7, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 106, 8, 35]" + "'", str13, "[10, 106, 8, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 107, 9, 35]" + "'", str14, "[10, 107, 9, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[11, 0, 0, 36]" + "'", str15, "[11, 0, 0, 36]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[11, 1, 1, 36]" + "'", str16, "[11, 1, 1, 36]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[11, 2, 2, 36]" + "'", str17, "[11, 2, 2, 36]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[11, 3, 3, 36]" + "'", str18, "[11, 3, 3, 36]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[11, 4, 4, 36]" + "'", str19, "[11, 4, 4, 36]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[11, 5, 5, 36]" + "'", str20, "[11, 5, 5, 36]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[11, 6, 6, 36]" + "'", str21, "[11, 6, 6, 36]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[11, 7, 7, 36]" + "'", str22, "[11, 7, 7, 36]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[11, 8, 8, 36]" + "'", str23, "[11, 8, 8, 36]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[11, 9, 9, 36]" + "'", str24, "[11, 9, 9, 36]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[12, 0, 0, 37]" + "'", str25, "[12, 0, 0, 37]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[12, 1, 1, 37]" + "'", str26, "[12, 1, 1, 37]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[12, 2, 2, 37]" + "'", str27, "[12, 2, 2, 37]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[12, 3, 3, 37]" + "'", str28, "[12, 3, 3, 37]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[12, 4, 4, 37]" + "'", str29, "[12, 4, 4, 37]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[12, 5, 5, 37]" + "'", str30, "[12, 5, 5, 37]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[12, 6, 6, 37]" + "'", str31, "[12, 6, 6, 37]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[12, 7, 7, 37]" + "'", str32, "[12, 7, 7, 37]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[12, 8, 8, 37]" + "'", str33, "[12, 8, 8, 37]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[12, 9, 9, 37]" + "'", str34, "[12, 9, 9, 37]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[13, 0, 0, 38]" + "'", str35, "[13, 0, 0, 38]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[13, 1, 1, 38]" + "'", str36, "[13, 1, 1, 38]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[13, 2, 2, 38]" + "'", str37, "[13, 2, 2, 38]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[13, 3, 3, 38]" + "'", str38, "[13, 3, 3, 38]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[13, 4, 4, 38]" + "'", str39, "[13, 4, 4, 38]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[13, 5, 5, 38]" + "'", str40, "[13, 5, 5, 38]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[13, 6, 6, 38]" + "'", str41, "[13, 6, 6, 38]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[13, 7, 7, 38]" + "'", str42, "[13, 7, 7, 38]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[13, 8, 8, 38]" + "'", str43, "[13, 8, 8, 38]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[13, 9, 9, 38]" + "'", str44, "[13, 9, 9, 38]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[14, 0, 0, 39]" + "'", str45, "[14, 0, 0, 39]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[14, 1, 1, 39]" + "'", str46, "[14, 1, 1, 39]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[14, 2, 2, 39]" + "'", str47, "[14, 2, 2, 39]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[14, 3, 3, 39]" + "'", str48, "[14, 3, 3, 39]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[14, 4, 4, 39]" + "'", str49, "[14, 4, 4, 39]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[14, 5, 5, 39]" + "'", str50, "[14, 5, 5, 39]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[14, 6, 6, 39]" + "'", str51, "[14, 6, 6, 39]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[14, 7, 7, 39]" + "'", str52, "[14, 7, 7, 39]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[14, 8, 8, 39]" + "'", str53, "[14, 8, 8, 39]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[14, 9, 9, 39]" + "'", str54, "[14, 9, 9, 39]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[15, 0, 0, 40]" + "'", str55, "[15, 0, 0, 40]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[15, 1, 1, 40]" + "'", str56, "[15, 1, 1, 40]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[15, 2, 2, 40]" + "'", str57, "[15, 2, 2, 40]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[15, 3, 3, 40]" + "'", str58, "[15, 3, 3, 40]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[15, 4, 4, 40]" + "'", str59, "[15, 4, 4, 40]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[15, 5, 5, 40]" + "'", str60, "[15, 5, 5, 40]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[15, 6, 6, 40]" + "'", str61, "[15, 6, 6, 40]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[15, 7, 7, 40]" + "'", str62, "[15, 7, 7, 40]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[15, 8, 8, 40]" + "'", str63, "[15, 8, 8, 40]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[15, 9, 9, 40]" + "'", str64, "[15, 9, 9, 40]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[16, 0, 0, 41]" + "'", str65, "[16, 0, 0, 41]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[16, 1, 1, 41]" + "'", str66, "[16, 1, 1, 41]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[16, 2, 2, 41]" + "'", str67, "[16, 2, 2, 41]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[16, 3, 3, 41]" + "'", str68, "[16, 3, 3, 41]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[16, 4, 4, 41]" + "'", str69, "[16, 4, 4, 41]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[16, 5, 5, 41]" + "'", str70, "[16, 5, 5, 41]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[16, 6, 6, 41]" + "'", str71, "[16, 6, 6, 41]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[16, 7, 7, 41]" + "'", str72, "[16, 7, 7, 41]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[16, 8, 8, 41]" + "'", str73, "[16, 8, 8, 41]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[16, 9, 9, 41]" + "'", str74, "[16, 9, 9, 41]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[17, 0, 0, 42]" + "'", str75, "[17, 0, 0, 42]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[17, 1, 1, 42]" + "'", str76, "[17, 1, 1, 42]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[17, 2, 2, 42]" + "'", str77, "[17, 2, 2, 42]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[17, 3, 3, 42]" + "'", str78, "[17, 3, 3, 42]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[17, 4, 4, 42]" + "'", str79, "[17, 4, 4, 42]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[17, 5, 5, 42]" + "'", str80, "[17, 5, 5, 42]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[17, 6, 6, 42]" + "'", str81, "[17, 6, 6, 42]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2548");
        int[] intArray4 = new int[] { 'a', 10, 100, (short) 10 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass85 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, 90, 180, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 11, 101, 10]" + "'", str5, "[97, 11, 101, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 12, 102, 10]" + "'", str6, "[97, 12, 102, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 13, 103, 10]" + "'", str7, "[97, 13, 103, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 14, 104, 10]" + "'", str8, "[97, 14, 104, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 15, 105, 10]" + "'", str9, "[97, 15, 105, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 16, 106, 10]" + "'", str10, "[97, 16, 106, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 17, 107, 10]" + "'", str11, "[97, 17, 107, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 18, 108, 10]" + "'", str12, "[97, 18, 108, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 19, 109, 10]" + "'", str13, "[97, 19, 109, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 20, 110, 10]" + "'", str14, "[97, 20, 110, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[97, 21, 111, 10]" + "'", str15, "[97, 21, 111, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[97, 22, 112, 10]" + "'", str16, "[97, 22, 112, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[97, 23, 113, 10]" + "'", str17, "[97, 23, 113, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[97, 24, 114, 10]" + "'", str18, "[97, 24, 114, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[97, 25, 115, 10]" + "'", str19, "[97, 25, 115, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[97, 26, 116, 10]" + "'", str20, "[97, 26, 116, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[97, 27, 117, 10]" + "'", str21, "[97, 27, 117, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[97, 28, 118, 10]" + "'", str22, "[97, 28, 118, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[97, 29, 119, 10]" + "'", str23, "[97, 29, 119, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[97, 30, 120, 10]" + "'", str24, "[97, 30, 120, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[97, 31, 121, 10]" + "'", str25, "[97, 31, 121, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[97, 32, 122, 10]" + "'", str26, "[97, 32, 122, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[97, 33, 123, 10]" + "'", str27, "[97, 33, 123, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[97, 34, 124, 10]" + "'", str28, "[97, 34, 124, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[97, 35, 125, 10]" + "'", str29, "[97, 35, 125, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[97, 36, 126, 10]" + "'", str30, "[97, 36, 126, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[97, 37, 127, 10]" + "'", str31, "[97, 37, 127, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[97, 38, 128, 10]" + "'", str32, "[97, 38, 128, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[97, 39, 129, 10]" + "'", str33, "[97, 39, 129, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[97, 40, 130, 10]" + "'", str34, "[97, 40, 130, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[97, 41, 131, 10]" + "'", str35, "[97, 41, 131, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[97, 42, 132, 10]" + "'", str36, "[97, 42, 132, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[97, 43, 133, 10]" + "'", str37, "[97, 43, 133, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[97, 44, 134, 10]" + "'", str38, "[97, 44, 134, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[97, 45, 135, 10]" + "'", str39, "[97, 45, 135, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[97, 46, 136, 10]" + "'", str40, "[97, 46, 136, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[97, 47, 137, 10]" + "'", str41, "[97, 47, 137, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[97, 48, 138, 10]" + "'", str42, "[97, 48, 138, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[97, 49, 139, 10]" + "'", str43, "[97, 49, 139, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[97, 50, 140, 10]" + "'", str44, "[97, 50, 140, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[97, 51, 141, 10]" + "'", str45, "[97, 51, 141, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[97, 52, 142, 10]" + "'", str46, "[97, 52, 142, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[97, 53, 143, 10]" + "'", str47, "[97, 53, 143, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[97, 54, 144, 10]" + "'", str48, "[97, 54, 144, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[97, 55, 145, 10]" + "'", str49, "[97, 55, 145, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[97, 56, 146, 10]" + "'", str50, "[97, 56, 146, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[97, 57, 147, 10]" + "'", str51, "[97, 57, 147, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[97, 58, 148, 10]" + "'", str52, "[97, 58, 148, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[97, 59, 149, 10]" + "'", str53, "[97, 59, 149, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[97, 60, 150, 10]" + "'", str54, "[97, 60, 150, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[97, 61, 151, 10]" + "'", str55, "[97, 61, 151, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[97, 62, 152, 10]" + "'", str56, "[97, 62, 152, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[97, 63, 153, 10]" + "'", str57, "[97, 63, 153, 10]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[97, 64, 154, 10]" + "'", str58, "[97, 64, 154, 10]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[97, 65, 155, 10]" + "'", str59, "[97, 65, 155, 10]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[97, 66, 156, 10]" + "'", str60, "[97, 66, 156, 10]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[97, 67, 157, 10]" + "'", str61, "[97, 67, 157, 10]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[97, 68, 158, 10]" + "'", str62, "[97, 68, 158, 10]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[97, 69, 159, 10]" + "'", str63, "[97, 69, 159, 10]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[97, 70, 160, 10]" + "'", str64, "[97, 70, 160, 10]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[97, 71, 161, 10]" + "'", str65, "[97, 71, 161, 10]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[97, 72, 162, 10]" + "'", str66, "[97, 72, 162, 10]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[97, 73, 163, 10]" + "'", str67, "[97, 73, 163, 10]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[97, 74, 164, 10]" + "'", str68, "[97, 74, 164, 10]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[97, 75, 165, 10]" + "'", str69, "[97, 75, 165, 10]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[97, 76, 166, 10]" + "'", str70, "[97, 76, 166, 10]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[97, 77, 167, 10]" + "'", str71, "[97, 77, 167, 10]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[97, 78, 168, 10]" + "'", str72, "[97, 78, 168, 10]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[97, 79, 169, 10]" + "'", str73, "[97, 79, 169, 10]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[97, 80, 170, 10]" + "'", str74, "[97, 80, 170, 10]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[97, 81, 171, 10]" + "'", str75, "[97, 81, 171, 10]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[97, 82, 172, 10]" + "'", str76, "[97, 82, 172, 10]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[97, 83, 173, 10]" + "'", str77, "[97, 83, 173, 10]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[97, 84, 174, 10]" + "'", str78, "[97, 84, 174, 10]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[97, 85, 175, 10]" + "'", str79, "[97, 85, 175, 10]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[97, 86, 176, 10]" + "'", str80, "[97, 86, 176, 10]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[97, 87, 177, 10]" + "'", str81, "[97, 87, 177, 10]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[97, 88, 178, 10]" + "'", str82, "[97, 88, 178, 10]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[97, 89, 179, 10]" + "'", str83, "[97, 89, 179, 10]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[97, 90, 180, 10]" + "'", str84, "[97, 90, 180, 10]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2549");
        int[] intArray6 = new int[] { 1, (byte) 0, (byte) 0, (byte) -1, (byte) 1, '4' };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass41 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 3, 3, 3, 4, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 1, 0, 1, 52]" + "'", str7, "[1, 0, 1, 0, 1, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 2, 1, 1, 52]" + "'", str8, "[1, 0, 2, 1, 1, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 3, 2, 1, 52]" + "'", str9, "[1, 0, 3, 2, 1, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 4, 3, 1, 52]" + "'", str10, "[1, 0, 4, 3, 1, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 5, 4, 1, 52]" + "'", str11, "[1, 0, 5, 4, 1, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 6, 5, 1, 52]" + "'", str12, "[1, 0, 6, 5, 1, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 7, 6, 1, 52]" + "'", str13, "[1, 0, 7, 6, 1, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 8, 7, 1, 52]" + "'", str14, "[1, 0, 8, 7, 1, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 9, 8, 1, 52]" + "'", str15, "[1, 0, 9, 8, 1, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 10, 9, 1, 52]" + "'", str16, "[1, 0, 10, 9, 1, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 1, 0, 0, 2, 52]" + "'", str17, "[1, 1, 0, 0, 2, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 1, 1, 1, 2, 52]" + "'", str18, "[1, 1, 1, 1, 2, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 1, 2, 2, 2, 52]" + "'", str19, "[1, 1, 2, 2, 2, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1, 3, 3, 2, 52]" + "'", str20, "[1, 1, 3, 3, 2, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1, 4, 4, 2, 52]" + "'", str21, "[1, 1, 4, 4, 2, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1, 5, 5, 2, 52]" + "'", str22, "[1, 1, 5, 5, 2, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 6, 6, 2, 52]" + "'", str23, "[1, 1, 6, 6, 2, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1, 7, 7, 2, 52]" + "'", str24, "[1, 1, 7, 7, 2, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1, 8, 8, 2, 52]" + "'", str25, "[1, 1, 8, 8, 2, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 1, 9, 9, 2, 52]" + "'", str26, "[1, 1, 9, 9, 2, 52]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 2, 0, 0, 3, 52]" + "'", str27, "[1, 2, 0, 0, 3, 52]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 2, 1, 1, 3, 52]" + "'", str28, "[1, 2, 1, 1, 3, 52]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 2, 2, 2, 3, 52]" + "'", str29, "[1, 2, 2, 2, 3, 52]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 2, 3, 3, 3, 52]" + "'", str30, "[1, 2, 3, 3, 3, 52]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 2, 4, 4, 3, 52]" + "'", str31, "[1, 2, 4, 4, 3, 52]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 2, 5, 5, 3, 52]" + "'", str32, "[1, 2, 5, 5, 3, 52]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 2, 6, 6, 3, 52]" + "'", str33, "[1, 2, 6, 6, 3, 52]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 2, 7, 7, 3, 52]" + "'", str34, "[1, 2, 7, 7, 3, 52]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 2, 8, 8, 3, 52]" + "'", str35, "[1, 2, 8, 8, 3, 52]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 2, 9, 9, 3, 52]" + "'", str36, "[1, 2, 9, 9, 3, 52]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 3, 0, 0, 4, 52]" + "'", str37, "[1, 3, 0, 0, 4, 52]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 3, 1, 1, 4, 52]" + "'", str38, "[1, 3, 1, 1, 4, 52]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 3, 2, 2, 4, 52]" + "'", str39, "[1, 3, 2, 2, 4, 52]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 3, 3, 3, 4, 52]" + "'", str40, "[1, 3, 3, 3, 4, 52]");
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test2550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2550");
        int[] intArray4 = new int[] { 1, (short) 10, (short) 10, (short) -1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass69 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 74, 74, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 11, 11, -1]" + "'", str5, "[1, 11, 11, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 12, 12, -1]" + "'", str6, "[1, 12, 12, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 13, 13, -1]" + "'", str7, "[1, 13, 13, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 14, 14, -1]" + "'", str8, "[1, 14, 14, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 15, 15, -1]" + "'", str9, "[1, 15, 15, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 16, 16, -1]" + "'", str10, "[1, 16, 16, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 17, 17, -1]" + "'", str11, "[1, 17, 17, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 18, 18, -1]" + "'", str12, "[1, 18, 18, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 19, 19, -1]" + "'", str13, "[1, 19, 19, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 20, 20, -1]" + "'", str14, "[1, 20, 20, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 21, 21, -1]" + "'", str15, "[1, 21, 21, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 22, 22, -1]" + "'", str16, "[1, 22, 22, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 23, 23, -1]" + "'", str17, "[1, 23, 23, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 24, 24, -1]" + "'", str18, "[1, 24, 24, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 25, 25, -1]" + "'", str19, "[1, 25, 25, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 26, 26, -1]" + "'", str20, "[1, 26, 26, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 27, 27, -1]" + "'", str21, "[1, 27, 27, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 28, 28, -1]" + "'", str22, "[1, 28, 28, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 29, 29, -1]" + "'", str23, "[1, 29, 29, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 30, 30, -1]" + "'", str24, "[1, 30, 30, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 31, 31, -1]" + "'", str25, "[1, 31, 31, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 32, 32, -1]" + "'", str26, "[1, 32, 32, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 33, 33, -1]" + "'", str27, "[1, 33, 33, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 34, 34, -1]" + "'", str28, "[1, 34, 34, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 35, 35, -1]" + "'", str29, "[1, 35, 35, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 36, 36, -1]" + "'", str30, "[1, 36, 36, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 37, 37, -1]" + "'", str31, "[1, 37, 37, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 38, 38, -1]" + "'", str32, "[1, 38, 38, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 39, 39, -1]" + "'", str33, "[1, 39, 39, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 40, 40, -1]" + "'", str34, "[1, 40, 40, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 41, 41, -1]" + "'", str35, "[1, 41, 41, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 42, 42, -1]" + "'", str36, "[1, 42, 42, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 43, 43, -1]" + "'", str37, "[1, 43, 43, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 44, 44, -1]" + "'", str38, "[1, 44, 44, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 45, 45, -1]" + "'", str39, "[1, 45, 45, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 46, 46, -1]" + "'", str40, "[1, 46, 46, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 47, 47, -1]" + "'", str41, "[1, 47, 47, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 48, 48, -1]" + "'", str42, "[1, 48, 48, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 49, 49, -1]" + "'", str43, "[1, 49, 49, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 50, 50, -1]" + "'", str44, "[1, 50, 50, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 51, 51, -1]" + "'", str45, "[1, 51, 51, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 52, 52, -1]" + "'", str46, "[1, 52, 52, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 53, 53, -1]" + "'", str47, "[1, 53, 53, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 54, 54, -1]" + "'", str48, "[1, 54, 54, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 55, 55, -1]" + "'", str49, "[1, 55, 55, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 56, 56, -1]" + "'", str50, "[1, 56, 56, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 57, 57, -1]" + "'", str51, "[1, 57, 57, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 58, 58, -1]" + "'", str52, "[1, 58, 58, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 59, 59, -1]" + "'", str53, "[1, 59, 59, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 60, 60, -1]" + "'", str54, "[1, 60, 60, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 61, 61, -1]" + "'", str55, "[1, 61, 61, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 62, 62, -1]" + "'", str56, "[1, 62, 62, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 63, 63, -1]" + "'", str57, "[1, 63, 63, -1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 64, 64, -1]" + "'", str58, "[1, 64, 64, -1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 65, 65, -1]" + "'", str59, "[1, 65, 65, -1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 66, 66, -1]" + "'", str60, "[1, 66, 66, -1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 67, 67, -1]" + "'", str61, "[1, 67, 67, -1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 68, 68, -1]" + "'", str62, "[1, 68, 68, -1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 69, 69, -1]" + "'", str63, "[1, 69, 69, -1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 70, 70, -1]" + "'", str64, "[1, 70, 70, -1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 71, 71, -1]" + "'", str65, "[1, 71, 71, -1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 72, 72, -1]" + "'", str66, "[1, 72, 72, -1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 73, 73, -1]" + "'", str67, "[1, 73, 73, -1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 74, 74, -1]" + "'", str68, "[1, 74, 74, -1]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test2551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2551");
        int[] intArray1 = new int[] { (-1) };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass66 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[3]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1]" + "'", str32, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1]" + "'", str33, "[1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2]" + "'", str34, "[2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3]" + "'", str35, "[3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4]" + "'", str36, "[4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5]" + "'", str37, "[5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6]" + "'", str38, "[6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7]" + "'", str39, "[7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8]" + "'", str40, "[8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9]" + "'", str41, "[9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1]" + "'", str42, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1]" + "'", str43, "[1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2]" + "'", str44, "[2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3]" + "'", str45, "[3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4]" + "'", str46, "[4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5]" + "'", str47, "[5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6]" + "'", str48, "[6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7]" + "'", str49, "[7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8]" + "'", str50, "[8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9]" + "'", str51, "[9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1]" + "'", str52, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1]" + "'", str53, "[1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2]" + "'", str54, "[2]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[3]" + "'", str55, "[3]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4]" + "'", str56, "[4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5]" + "'", str57, "[5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6]" + "'", str58, "[6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[7]" + "'", str59, "[7]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[8]" + "'", str60, "[8]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[9]" + "'", str61, "[9]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 1]" + "'", str62, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1]" + "'", str63, "[1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[2]" + "'", str64, "[2]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[3]" + "'", str65, "[3]");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test2552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2552");
        int[] intArray3 = new int[] { ' ', '#', (short) 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass23 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[32, 54, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 36, 1]" + "'", str4, "[32, 36, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 37, 1]" + "'", str5, "[32, 37, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 38, 1]" + "'", str6, "[32, 38, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 39, 1]" + "'", str7, "[32, 39, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 40, 1]" + "'", str8, "[32, 40, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 41, 1]" + "'", str9, "[32, 41, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 42, 1]" + "'", str10, "[32, 42, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 43, 1]" + "'", str11, "[32, 43, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 44, 1]" + "'", str12, "[32, 44, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 45, 1]" + "'", str13, "[32, 45, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 46, 1]" + "'", str14, "[32, 46, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[32, 47, 1]" + "'", str15, "[32, 47, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[32, 48, 1]" + "'", str16, "[32, 48, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[32, 49, 1]" + "'", str17, "[32, 49, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[32, 50, 1]" + "'", str18, "[32, 50, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[32, 51, 1]" + "'", str19, "[32, 51, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[32, 52, 1]" + "'", str20, "[32, 52, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[32, 53, 1]" + "'", str21, "[32, 53, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[32, 54, 1]" + "'", str22, "[32, 54, 1]");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test2553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2553");
        int[] intArray1 = new int[] { 'a' };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass55 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[150]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[98]" + "'", str2, "[98]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[99]" + "'", str3, "[99]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100]" + "'", str4, "[100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[101]" + "'", str5, "[101]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[102]" + "'", str6, "[102]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[103]" + "'", str7, "[103]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[104]" + "'", str8, "[104]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[105]" + "'", str9, "[105]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[106]" + "'", str10, "[106]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[107]" + "'", str11, "[107]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[108]" + "'", str12, "[108]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[109]" + "'", str13, "[109]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[110]" + "'", str14, "[110]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[111]" + "'", str15, "[111]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[112]" + "'", str16, "[112]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[113]" + "'", str17, "[113]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[114]" + "'", str18, "[114]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[115]" + "'", str19, "[115]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[116]" + "'", str20, "[116]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[117]" + "'", str21, "[117]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[118]" + "'", str22, "[118]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[119]" + "'", str23, "[119]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[120]" + "'", str24, "[120]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[121]" + "'", str25, "[121]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[122]" + "'", str26, "[122]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[123]" + "'", str27, "[123]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[124]" + "'", str28, "[124]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[125]" + "'", str29, "[125]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[126]" + "'", str30, "[126]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[127]" + "'", str31, "[127]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[128]" + "'", str32, "[128]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[129]" + "'", str33, "[129]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[130]" + "'", str34, "[130]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[131]" + "'", str35, "[131]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[132]" + "'", str36, "[132]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[133]" + "'", str37, "[133]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[134]" + "'", str38, "[134]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[135]" + "'", str39, "[135]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[136]" + "'", str40, "[136]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[137]" + "'", str41, "[137]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[138]" + "'", str42, "[138]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[139]" + "'", str43, "[139]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[140]" + "'", str44, "[140]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[141]" + "'", str45, "[141]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[142]" + "'", str46, "[142]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[143]" + "'", str47, "[143]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[144]" + "'", str48, "[144]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[145]" + "'", str49, "[145]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[146]" + "'", str50, "[146]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[147]" + "'", str51, "[147]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[148]" + "'", str52, "[148]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[149]" + "'", str53, "[149]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[150]" + "'", str54, "[150]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test2554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2554");
        int[] intArray4 = new int[] { '#', ' ', (byte) -1, (short) 1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass52 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[39, 6, 6, 5]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 33, 0, 1]" + "'", str5, "[35, 33, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 34, 1, 1]" + "'", str6, "[35, 34, 1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 35, 2, 1]" + "'", str7, "[35, 35, 2, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 36, 3, 1]" + "'", str8, "[35, 36, 3, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 37, 4, 1]" + "'", str9, "[35, 37, 4, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 38, 5, 1]" + "'", str10, "[35, 38, 5, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 39, 6, 1]" + "'", str11, "[35, 39, 6, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 40, 7, 1]" + "'", str12, "[35, 40, 7, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 41, 8, 1]" + "'", str13, "[35, 41, 8, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 42, 9, 1]" + "'", str14, "[35, 42, 9, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[36, 0, 0, 2]" + "'", str15, "[36, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[36, 1, 1, 2]" + "'", str16, "[36, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[36, 2, 2, 2]" + "'", str17, "[36, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[36, 3, 3, 2]" + "'", str18, "[36, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[36, 4, 4, 2]" + "'", str19, "[36, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[36, 5, 5, 2]" + "'", str20, "[36, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[36, 6, 6, 2]" + "'", str21, "[36, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[36, 7, 7, 2]" + "'", str22, "[36, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[36, 8, 8, 2]" + "'", str23, "[36, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[36, 9, 9, 2]" + "'", str24, "[36, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[37, 0, 0, 3]" + "'", str25, "[37, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[37, 1, 1, 3]" + "'", str26, "[37, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[37, 2, 2, 3]" + "'", str27, "[37, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[37, 3, 3, 3]" + "'", str28, "[37, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[37, 4, 4, 3]" + "'", str29, "[37, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[37, 5, 5, 3]" + "'", str30, "[37, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[37, 6, 6, 3]" + "'", str31, "[37, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[37, 7, 7, 3]" + "'", str32, "[37, 7, 7, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[37, 8, 8, 3]" + "'", str33, "[37, 8, 8, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[37, 9, 9, 3]" + "'", str34, "[37, 9, 9, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[38, 0, 0, 4]" + "'", str35, "[38, 0, 0, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[38, 1, 1, 4]" + "'", str36, "[38, 1, 1, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[38, 2, 2, 4]" + "'", str37, "[38, 2, 2, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[38, 3, 3, 4]" + "'", str38, "[38, 3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[38, 4, 4, 4]" + "'", str39, "[38, 4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[38, 5, 5, 4]" + "'", str40, "[38, 5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[38, 6, 6, 4]" + "'", str41, "[38, 6, 6, 4]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[38, 7, 7, 4]" + "'", str42, "[38, 7, 7, 4]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[38, 8, 8, 4]" + "'", str43, "[38, 8, 8, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[38, 9, 9, 4]" + "'", str44, "[38, 9, 9, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[39, 0, 0, 5]" + "'", str45, "[39, 0, 0, 5]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[39, 1, 1, 5]" + "'", str46, "[39, 1, 1, 5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[39, 2, 2, 5]" + "'", str47, "[39, 2, 2, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[39, 3, 3, 5]" + "'", str48, "[39, 3, 3, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[39, 4, 4, 5]" + "'", str49, "[39, 4, 4, 5]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[39, 5, 5, 5]" + "'", str50, "[39, 5, 5, 5]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[39, 6, 6, 5]" + "'", str51, "[39, 6, 6, 5]");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test2555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2555");
        int[] intArray5 = new int[] { ' ', (byte) 0, 1, ' ', (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass25 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[32, 2, 0, 34, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 0, 2, 32, 1]" + "'", str6, "[32, 0, 2, 32, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 0, 3, 32, 1]" + "'", str7, "[32, 0, 3, 32, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 0, 4, 32, 1]" + "'", str8, "[32, 0, 4, 32, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 0, 5, 32, 1]" + "'", str9, "[32, 0, 5, 32, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 0, 6, 32, 1]" + "'", str10, "[32, 0, 6, 32, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 0, 7, 32, 1]" + "'", str11, "[32, 0, 7, 32, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 0, 8, 32, 1]" + "'", str12, "[32, 0, 8, 32, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 0, 9, 32, 1]" + "'", str13, "[32, 0, 9, 32, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 1, 0, 33, 1]" + "'", str14, "[32, 1, 0, 33, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[32, 1, 1, 33, 1]" + "'", str15, "[32, 1, 1, 33, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[32, 1, 2, 33, 1]" + "'", str16, "[32, 1, 2, 33, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[32, 1, 3, 33, 1]" + "'", str17, "[32, 1, 3, 33, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[32, 1, 4, 33, 1]" + "'", str18, "[32, 1, 4, 33, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[32, 1, 5, 33, 1]" + "'", str19, "[32, 1, 5, 33, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[32, 1, 6, 33, 1]" + "'", str20, "[32, 1, 6, 33, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[32, 1, 7, 33, 1]" + "'", str21, "[32, 1, 7, 33, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[32, 1, 8, 33, 1]" + "'", str22, "[32, 1, 8, 33, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32, 1, 9, 33, 1]" + "'", str23, "[32, 1, 9, 33, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 2, 0, 34, 1]" + "'", str24, "[32, 2, 0, 34, 1]");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test2556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2556");
        int[] intArray5 = new int[] { ' ', (byte) 0, 1, ' ', (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass26 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[32, 2, 1, 34, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 0, 2, 32, 1]" + "'", str6, "[32, 0, 2, 32, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 0, 3, 32, 1]" + "'", str7, "[32, 0, 3, 32, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 0, 4, 32, 1]" + "'", str8, "[32, 0, 4, 32, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 0, 5, 32, 1]" + "'", str9, "[32, 0, 5, 32, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 0, 6, 32, 1]" + "'", str10, "[32, 0, 6, 32, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 0, 7, 32, 1]" + "'", str11, "[32, 0, 7, 32, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 0, 8, 32, 1]" + "'", str12, "[32, 0, 8, 32, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 0, 9, 32, 1]" + "'", str13, "[32, 0, 9, 32, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 1, 0, 33, 1]" + "'", str14, "[32, 1, 0, 33, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[32, 1, 1, 33, 1]" + "'", str15, "[32, 1, 1, 33, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[32, 1, 2, 33, 1]" + "'", str16, "[32, 1, 2, 33, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[32, 1, 3, 33, 1]" + "'", str17, "[32, 1, 3, 33, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[32, 1, 4, 33, 1]" + "'", str18, "[32, 1, 4, 33, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[32, 1, 5, 33, 1]" + "'", str19, "[32, 1, 5, 33, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[32, 1, 6, 33, 1]" + "'", str20, "[32, 1, 6, 33, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[32, 1, 7, 33, 1]" + "'", str21, "[32, 1, 7, 33, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[32, 1, 8, 33, 1]" + "'", str22, "[32, 1, 8, 33, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32, 1, 9, 33, 1]" + "'", str23, "[32, 1, 9, 33, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 2, 0, 34, 1]" + "'", str24, "[32, 2, 0, 34, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[32, 2, 1, 34, 1]" + "'", str25, "[32, 2, 1, 34, 1]");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test2557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2557");
        int[] intArray2 = new int[] { (short) 1, (short) -1 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass86 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[2, 2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 0]" + "'", str3, "[2, 0]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 1]" + "'", str4, "[3, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 2]" + "'", str5, "[4, 2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 3]" + "'", str6, "[5, 3]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 4]" + "'", str7, "[6, 4]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 5]" + "'", str8, "[7, 5]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 6]" + "'", str9, "[8, 6]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 7]" + "'", str10, "[9, 7]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 8]" + "'", str11, "[10, 8]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 9]" + "'", str12, "[11, 9]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 1]" + "'", str13, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1]" + "'", str14, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2]" + "'", str15, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[3, 3]" + "'", str16, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[4, 4]" + "'", str17, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[5, 5]" + "'", str18, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[6, 6]" + "'", str19, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[7, 7]" + "'", str20, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[8, 8]" + "'", str21, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[9, 9]" + "'", str22, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 1]" + "'", str23, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1]" + "'", str24, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 2]" + "'", str25, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3]" + "'", str26, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[4, 4]" + "'", str27, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[5, 5]" + "'", str28, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[6, 6]" + "'", str29, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[7, 7]" + "'", str30, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[8, 8]" + "'", str31, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[9, 9]" + "'", str32, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 0, 1]" + "'", str33, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1]" + "'", str34, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 2]" + "'", str35, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 3]" + "'", str36, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4]" + "'", str37, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[5, 5]" + "'", str38, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[6, 6]" + "'", str39, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[7, 7]" + "'", str40, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[8, 8]" + "'", str41, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[9, 9]" + "'", str42, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 0, 1]" + "'", str43, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1]" + "'", str44, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[2, 2]" + "'", str45, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 3]" + "'", str46, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 4]" + "'", str47, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5]" + "'", str48, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[6, 6]" + "'", str49, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[7, 7]" + "'", str50, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[8, 8]" + "'", str51, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[9, 9]" + "'", str52, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 0, 1]" + "'", str53, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 1]" + "'", str54, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[2, 2]" + "'", str55, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[3, 3]" + "'", str56, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[4, 4]" + "'", str57, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 5]" + "'", str58, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 6]" + "'", str59, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[7, 7]" + "'", str60, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[8, 8]" + "'", str61, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[9, 9]" + "'", str62, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 0, 1]" + "'", str63, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 1]" + "'", str64, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[2, 2]" + "'", str65, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[3, 3]" + "'", str66, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[4, 4]" + "'", str67, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[5, 5]" + "'", str68, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[6, 6]" + "'", str69, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[7, 7]" + "'", str70, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[8, 8]" + "'", str71, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[9, 9]" + "'", str72, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 0, 1]" + "'", str73, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 1]" + "'", str74, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[2, 2]" + "'", str75, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[3, 3]" + "'", str76, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[4, 4]" + "'", str77, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[5, 5]" + "'", str78, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[6, 6]" + "'", str79, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[7, 7]" + "'", str80, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[8, 8]" + "'", str81, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[9, 9]" + "'", str82, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[1, 0, 1]" + "'", str83, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[1, 1]" + "'", str84, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[2, 2]" + "'", str85, "[2, 2]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2558");
        int[] intArray6 = new int[] { (short) 100, (byte) 0, 10, (byte) 0, (byte) 1, (byte) 0 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass12 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 0, 15, 5, 1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 0, 11, 1, 1, 0]" + "'", str7, "[100, 0, 11, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 0, 12, 2, 1, 0]" + "'", str8, "[100, 0, 12, 2, 1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 0, 13, 3, 1, 0]" + "'", str9, "[100, 0, 13, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 0, 14, 4, 1, 0]" + "'", str10, "[100, 0, 14, 4, 1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 0, 15, 5, 1, 0]" + "'", str11, "[100, 0, 15, 5, 1, 0]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test2559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2559");
        int[] intArray4 = new int[] { (byte) 0, (short) 10, (short) -1, 'a' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass69 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[6, 3, 3, 103]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 11, 0, 97]" + "'", str5, "[0, 11, 0, 97]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 12, 1, 97]" + "'", str6, "[0, 12, 1, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 13, 2, 97]" + "'", str7, "[0, 13, 2, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 14, 3, 97]" + "'", str8, "[0, 14, 3, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 15, 4, 97]" + "'", str9, "[0, 15, 4, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 16, 5, 97]" + "'", str10, "[0, 16, 5, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 17, 6, 97]" + "'", str11, "[0, 17, 6, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 18, 7, 97]" + "'", str12, "[0, 18, 7, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 19, 8, 97]" + "'", str13, "[0, 19, 8, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 20, 9, 97]" + "'", str14, "[0, 20, 9, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 0, 98]" + "'", str15, "[1, 0, 0, 98]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 1, 98]" + "'", str16, "[1, 1, 1, 98]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 2, 98]" + "'", str17, "[1, 2, 2, 98]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 3, 3, 98]" + "'", str18, "[1, 3, 3, 98]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 4, 4, 98]" + "'", str19, "[1, 4, 4, 98]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 5, 5, 98]" + "'", str20, "[1, 5, 5, 98]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 6, 6, 98]" + "'", str21, "[1, 6, 6, 98]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 7, 7, 98]" + "'", str22, "[1, 7, 7, 98]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 8, 8, 98]" + "'", str23, "[1, 8, 8, 98]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 9, 9, 98]" + "'", str24, "[1, 9, 9, 98]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 0, 0, 99]" + "'", str25, "[2, 0, 0, 99]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 1, 1, 99]" + "'", str26, "[2, 1, 1, 99]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 2, 2, 99]" + "'", str27, "[2, 2, 2, 99]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 3, 3, 99]" + "'", str28, "[2, 3, 3, 99]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 4, 4, 99]" + "'", str29, "[2, 4, 4, 99]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 5, 5, 99]" + "'", str30, "[2, 5, 5, 99]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 6, 6, 99]" + "'", str31, "[2, 6, 6, 99]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 7, 7, 99]" + "'", str32, "[2, 7, 7, 99]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 8, 8, 99]" + "'", str33, "[2, 8, 8, 99]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 9, 9, 99]" + "'", str34, "[2, 9, 9, 99]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 0, 0, 100]" + "'", str35, "[3, 0, 0, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 1, 1, 100]" + "'", str36, "[3, 1, 1, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 2, 2, 100]" + "'", str37, "[3, 2, 2, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 3, 3, 100]" + "'", str38, "[3, 3, 3, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 4, 4, 100]" + "'", str39, "[3, 4, 4, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 5, 5, 100]" + "'", str40, "[3, 5, 5, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 6, 6, 100]" + "'", str41, "[3, 6, 6, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[3, 7, 7, 100]" + "'", str42, "[3, 7, 7, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 8, 8, 100]" + "'", str43, "[3, 8, 8, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 9, 9, 100]" + "'", str44, "[3, 9, 9, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 0, 0, 101]" + "'", str45, "[4, 0, 0, 101]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 1, 1, 101]" + "'", str46, "[4, 1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 2, 2, 101]" + "'", str47, "[4, 2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[4, 3, 3, 101]" + "'", str48, "[4, 3, 3, 101]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[4, 4, 4, 101]" + "'", str49, "[4, 4, 4, 101]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[4, 5, 5, 101]" + "'", str50, "[4, 5, 5, 101]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[4, 6, 6, 101]" + "'", str51, "[4, 6, 6, 101]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[4, 7, 7, 101]" + "'", str52, "[4, 7, 7, 101]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[4, 8, 8, 101]" + "'", str53, "[4, 8, 8, 101]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[4, 9, 9, 101]" + "'", str54, "[4, 9, 9, 101]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[5, 0, 0, 102]" + "'", str55, "[5, 0, 0, 102]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5, 1, 1, 102]" + "'", str56, "[5, 1, 1, 102]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5, 2, 2, 102]" + "'", str57, "[5, 2, 2, 102]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 3, 3, 102]" + "'", str58, "[5, 3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[5, 4, 4, 102]" + "'", str59, "[5, 4, 4, 102]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[5, 5, 5, 102]" + "'", str60, "[5, 5, 5, 102]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[5, 6, 6, 102]" + "'", str61, "[5, 6, 6, 102]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[5, 7, 7, 102]" + "'", str62, "[5, 7, 7, 102]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[5, 8, 8, 102]" + "'", str63, "[5, 8, 8, 102]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[5, 9, 9, 102]" + "'", str64, "[5, 9, 9, 102]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[6, 0, 0, 103]" + "'", str65, "[6, 0, 0, 103]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[6, 1, 1, 103]" + "'", str66, "[6, 1, 1, 103]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[6, 2, 2, 103]" + "'", str67, "[6, 2, 2, 103]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[6, 3, 3, 103]" + "'", str68, "[6, 3, 3, 103]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test2560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2560");
        int[] intArray1 = new int[] { (short) 100 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass78 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[176]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[101]" + "'", str2, "[101]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[102]" + "'", str3, "[102]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[103]" + "'", str4, "[103]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[104]" + "'", str5, "[104]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[105]" + "'", str6, "[105]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[106]" + "'", str7, "[106]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[107]" + "'", str8, "[107]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[108]" + "'", str9, "[108]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[109]" + "'", str10, "[109]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[110]" + "'", str11, "[110]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[111]" + "'", str12, "[111]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[112]" + "'", str13, "[112]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[113]" + "'", str14, "[113]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[114]" + "'", str15, "[114]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[115]" + "'", str16, "[115]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[116]" + "'", str17, "[116]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[117]" + "'", str18, "[117]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[118]" + "'", str19, "[118]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[119]" + "'", str20, "[119]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[120]" + "'", str21, "[120]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[121]" + "'", str22, "[121]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[122]" + "'", str23, "[122]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[123]" + "'", str24, "[123]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[124]" + "'", str25, "[124]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[125]" + "'", str26, "[125]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[126]" + "'", str27, "[126]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[127]" + "'", str28, "[127]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[128]" + "'", str29, "[128]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[129]" + "'", str30, "[129]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[130]" + "'", str31, "[130]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[131]" + "'", str32, "[131]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[132]" + "'", str33, "[132]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[133]" + "'", str34, "[133]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[134]" + "'", str35, "[134]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[135]" + "'", str36, "[135]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[136]" + "'", str37, "[136]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[137]" + "'", str38, "[137]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[138]" + "'", str39, "[138]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[139]" + "'", str40, "[139]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[140]" + "'", str41, "[140]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[141]" + "'", str42, "[141]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[142]" + "'", str43, "[142]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[143]" + "'", str44, "[143]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[144]" + "'", str45, "[144]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[145]" + "'", str46, "[145]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[146]" + "'", str47, "[146]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[147]" + "'", str48, "[147]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[148]" + "'", str49, "[148]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[149]" + "'", str50, "[149]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[150]" + "'", str51, "[150]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[151]" + "'", str52, "[151]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[152]" + "'", str53, "[152]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[153]" + "'", str54, "[153]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[154]" + "'", str55, "[154]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[155]" + "'", str56, "[155]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[156]" + "'", str57, "[156]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[157]" + "'", str58, "[157]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[158]" + "'", str59, "[158]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[159]" + "'", str60, "[159]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[160]" + "'", str61, "[160]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[161]" + "'", str62, "[161]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[162]" + "'", str63, "[162]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[163]" + "'", str64, "[163]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[164]" + "'", str65, "[164]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[165]" + "'", str66, "[165]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[166]" + "'", str67, "[166]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[167]" + "'", str68, "[167]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[168]" + "'", str69, "[168]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[169]" + "'", str70, "[169]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[170]" + "'", str71, "[170]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[171]" + "'", str72, "[171]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[172]" + "'", str73, "[172]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[173]" + "'", str74, "[173]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[174]" + "'", str75, "[174]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[175]" + "'", str76, "[175]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[176]" + "'", str77, "[176]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test2561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2561");
        int[] intArray6 = new int[] { (short) 100, (byte) 0, 10, (byte) 0, (byte) 1, (byte) 0 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass13 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 0, 16, 6, 1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 0, 11, 1, 1, 0]" + "'", str7, "[100, 0, 11, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 0, 12, 2, 1, 0]" + "'", str8, "[100, 0, 12, 2, 1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 0, 13, 3, 1, 0]" + "'", str9, "[100, 0, 13, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 0, 14, 4, 1, 0]" + "'", str10, "[100, 0, 14, 4, 1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 0, 15, 5, 1, 0]" + "'", str11, "[100, 0, 15, 5, 1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 0, 16, 6, 1, 0]" + "'", str12, "[100, 0, 16, 6, 1, 0]");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test2562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2562");
        int[] intArray1 = new int[] { (short) 100 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass79 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[177]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[101]" + "'", str2, "[101]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[102]" + "'", str3, "[102]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[103]" + "'", str4, "[103]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[104]" + "'", str5, "[104]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[105]" + "'", str6, "[105]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[106]" + "'", str7, "[106]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[107]" + "'", str8, "[107]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[108]" + "'", str9, "[108]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[109]" + "'", str10, "[109]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[110]" + "'", str11, "[110]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[111]" + "'", str12, "[111]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[112]" + "'", str13, "[112]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[113]" + "'", str14, "[113]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[114]" + "'", str15, "[114]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[115]" + "'", str16, "[115]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[116]" + "'", str17, "[116]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[117]" + "'", str18, "[117]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[118]" + "'", str19, "[118]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[119]" + "'", str20, "[119]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[120]" + "'", str21, "[120]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[121]" + "'", str22, "[121]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[122]" + "'", str23, "[122]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[123]" + "'", str24, "[123]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[124]" + "'", str25, "[124]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[125]" + "'", str26, "[125]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[126]" + "'", str27, "[126]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[127]" + "'", str28, "[127]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[128]" + "'", str29, "[128]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[129]" + "'", str30, "[129]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[130]" + "'", str31, "[130]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[131]" + "'", str32, "[131]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[132]" + "'", str33, "[132]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[133]" + "'", str34, "[133]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[134]" + "'", str35, "[134]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[135]" + "'", str36, "[135]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[136]" + "'", str37, "[136]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[137]" + "'", str38, "[137]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[138]" + "'", str39, "[138]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[139]" + "'", str40, "[139]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[140]" + "'", str41, "[140]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[141]" + "'", str42, "[141]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[142]" + "'", str43, "[142]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[143]" + "'", str44, "[143]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[144]" + "'", str45, "[144]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[145]" + "'", str46, "[145]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[146]" + "'", str47, "[146]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[147]" + "'", str48, "[147]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[148]" + "'", str49, "[148]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[149]" + "'", str50, "[149]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[150]" + "'", str51, "[150]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[151]" + "'", str52, "[151]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[152]" + "'", str53, "[152]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[153]" + "'", str54, "[153]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[154]" + "'", str55, "[154]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[155]" + "'", str56, "[155]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[156]" + "'", str57, "[156]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[157]" + "'", str58, "[157]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[158]" + "'", str59, "[158]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[159]" + "'", str60, "[159]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[160]" + "'", str61, "[160]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[161]" + "'", str62, "[161]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[162]" + "'", str63, "[162]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[163]" + "'", str64, "[163]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[164]" + "'", str65, "[164]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[165]" + "'", str66, "[165]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[166]" + "'", str67, "[166]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[167]" + "'", str68, "[167]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[168]" + "'", str69, "[168]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[169]" + "'", str70, "[169]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[170]" + "'", str71, "[170]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[171]" + "'", str72, "[171]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[172]" + "'", str73, "[172]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[173]" + "'", str74, "[173]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[174]" + "'", str75, "[174]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[175]" + "'", str76, "[175]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[176]" + "'", str77, "[176]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[177]" + "'", str78, "[177]");
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test2563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2563");
        int[] intArray4 = new int[] { (byte) -1, 10, (byte) 0, (short) 100 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass81 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[6, 6, 6, 107]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 11, 1, 100]" + "'", str5, "[-1, 11, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 12, 2, 100]" + "'", str6, "[-1, 12, 2, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 13, 3, 100]" + "'", str7, "[-1, 13, 3, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 14, 4, 100]" + "'", str8, "[-1, 14, 4, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 15, 5, 100]" + "'", str9, "[-1, 15, 5, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 16, 6, 100]" + "'", str10, "[-1, 16, 6, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 17, 7, 100]" + "'", str11, "[-1, 17, 7, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 18, 8, 100]" + "'", str12, "[-1, 18, 8, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 19, 9, 100]" + "'", str13, "[-1, 19, 9, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 0, 0, 101]" + "'", str14, "[0, 0, 0, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 1, 1, 101]" + "'", str15, "[0, 1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 2, 2, 101]" + "'", str16, "[0, 2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 3, 3, 101]" + "'", str17, "[0, 3, 3, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 4, 4, 101]" + "'", str18, "[0, 4, 4, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 5, 5, 101]" + "'", str19, "[0, 5, 5, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 6, 6, 101]" + "'", str20, "[0, 6, 6, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 7, 7, 101]" + "'", str21, "[0, 7, 7, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 8, 8, 101]" + "'", str22, "[0, 8, 8, 101]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 9, 9, 101]" + "'", str23, "[0, 9, 9, 101]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 0, 102]" + "'", str24, "[1, 0, 0, 102]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1, 1, 102]" + "'", str25, "[1, 1, 1, 102]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 2, 2, 102]" + "'", str26, "[1, 2, 2, 102]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 3, 3, 102]" + "'", str27, "[1, 3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 4, 4, 102]" + "'", str28, "[1, 4, 4, 102]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 5, 5, 102]" + "'", str29, "[1, 5, 5, 102]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 6, 6, 102]" + "'", str30, "[1, 6, 6, 102]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 7, 7, 102]" + "'", str31, "[1, 7, 7, 102]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 8, 8, 102]" + "'", str32, "[1, 8, 8, 102]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 9, 9, 102]" + "'", str33, "[1, 9, 9, 102]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 0, 0, 103]" + "'", str34, "[2, 0, 0, 103]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 1, 1, 103]" + "'", str35, "[2, 1, 1, 103]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[2, 2, 2, 103]" + "'", str36, "[2, 2, 2, 103]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[2, 3, 3, 103]" + "'", str37, "[2, 3, 3, 103]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[2, 4, 4, 103]" + "'", str38, "[2, 4, 4, 103]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[2, 5, 5, 103]" + "'", str39, "[2, 5, 5, 103]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[2, 6, 6, 103]" + "'", str40, "[2, 6, 6, 103]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[2, 7, 7, 103]" + "'", str41, "[2, 7, 7, 103]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[2, 8, 8, 103]" + "'", str42, "[2, 8, 8, 103]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2, 9, 9, 103]" + "'", str43, "[2, 9, 9, 103]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 0, 0, 104]" + "'", str44, "[3, 0, 0, 104]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 1, 1, 104]" + "'", str45, "[3, 1, 1, 104]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 2, 2, 104]" + "'", str46, "[3, 2, 2, 104]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[3, 3, 3, 104]" + "'", str47, "[3, 3, 3, 104]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[3, 4, 4, 104]" + "'", str48, "[3, 4, 4, 104]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[3, 5, 5, 104]" + "'", str49, "[3, 5, 5, 104]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[3, 6, 6, 104]" + "'", str50, "[3, 6, 6, 104]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[3, 7, 7, 104]" + "'", str51, "[3, 7, 7, 104]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[3, 8, 8, 104]" + "'", str52, "[3, 8, 8, 104]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[3, 9, 9, 104]" + "'", str53, "[3, 9, 9, 104]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[4, 0, 0, 105]" + "'", str54, "[4, 0, 0, 105]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[4, 1, 1, 105]" + "'", str55, "[4, 1, 1, 105]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4, 2, 2, 105]" + "'", str56, "[4, 2, 2, 105]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[4, 3, 3, 105]" + "'", str57, "[4, 3, 3, 105]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[4, 4, 4, 105]" + "'", str58, "[4, 4, 4, 105]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[4, 5, 5, 105]" + "'", str59, "[4, 5, 5, 105]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[4, 6, 6, 105]" + "'", str60, "[4, 6, 6, 105]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[4, 7, 7, 105]" + "'", str61, "[4, 7, 7, 105]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[4, 8, 8, 105]" + "'", str62, "[4, 8, 8, 105]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[4, 9, 9, 105]" + "'", str63, "[4, 9, 9, 105]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[5, 0, 0, 106]" + "'", str64, "[5, 0, 0, 106]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[5, 1, 1, 106]" + "'", str65, "[5, 1, 1, 106]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[5, 2, 2, 106]" + "'", str66, "[5, 2, 2, 106]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[5, 3, 3, 106]" + "'", str67, "[5, 3, 3, 106]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[5, 4, 4, 106]" + "'", str68, "[5, 4, 4, 106]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[5, 5, 5, 106]" + "'", str69, "[5, 5, 5, 106]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[5, 6, 6, 106]" + "'", str70, "[5, 6, 6, 106]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[5, 7, 7, 106]" + "'", str71, "[5, 7, 7, 106]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[5, 8, 8, 106]" + "'", str72, "[5, 8, 8, 106]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[5, 9, 9, 106]" + "'", str73, "[5, 9, 9, 106]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[6, 0, 0, 107]" + "'", str74, "[6, 0, 0, 107]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[6, 1, 1, 107]" + "'", str75, "[6, 1, 1, 107]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[6, 2, 2, 107]" + "'", str76, "[6, 2, 2, 107]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[6, 3, 3, 107]" + "'", str77, "[6, 3, 3, 107]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[6, 4, 4, 107]" + "'", str78, "[6, 4, 4, 107]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[6, 5, 5, 107]" + "'", str79, "[6, 5, 5, 107]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[6, 6, 6, 107]" + "'", str80, "[6, 6, 6, 107]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test2564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2564");
        int[] intArray3 = new int[] { (short) 10, (short) 0, (short) 10 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass59 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[15, 5, 15]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[10, 1, 10]" + "'", str4, "[10, 1, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 2, 10]" + "'", str5, "[10, 2, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 3, 10]" + "'", str6, "[10, 3, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 4, 10]" + "'", str7, "[10, 4, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 5, 10]" + "'", str8, "[10, 5, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 6, 10]" + "'", str9, "[10, 6, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 7, 10]" + "'", str10, "[10, 7, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 8, 10]" + "'", str11, "[10, 8, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 9, 10]" + "'", str12, "[10, 9, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[11, 0, 11]" + "'", str13, "[11, 0, 11]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[11, 1, 11]" + "'", str14, "[11, 1, 11]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[11, 2, 11]" + "'", str15, "[11, 2, 11]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[11, 3, 11]" + "'", str16, "[11, 3, 11]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[11, 4, 11]" + "'", str17, "[11, 4, 11]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[11, 5, 11]" + "'", str18, "[11, 5, 11]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[11, 6, 11]" + "'", str19, "[11, 6, 11]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[11, 7, 11]" + "'", str20, "[11, 7, 11]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[11, 8, 11]" + "'", str21, "[11, 8, 11]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[11, 9, 11]" + "'", str22, "[11, 9, 11]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[12, 0, 12]" + "'", str23, "[12, 0, 12]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[12, 1, 12]" + "'", str24, "[12, 1, 12]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[12, 2, 12]" + "'", str25, "[12, 2, 12]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[12, 3, 12]" + "'", str26, "[12, 3, 12]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[12, 4, 12]" + "'", str27, "[12, 4, 12]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[12, 5, 12]" + "'", str28, "[12, 5, 12]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[12, 6, 12]" + "'", str29, "[12, 6, 12]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[12, 7, 12]" + "'", str30, "[12, 7, 12]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[12, 8, 12]" + "'", str31, "[12, 8, 12]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[12, 9, 12]" + "'", str32, "[12, 9, 12]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[13, 0, 13]" + "'", str33, "[13, 0, 13]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[13, 1, 13]" + "'", str34, "[13, 1, 13]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[13, 2, 13]" + "'", str35, "[13, 2, 13]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[13, 3, 13]" + "'", str36, "[13, 3, 13]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[13, 4, 13]" + "'", str37, "[13, 4, 13]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[13, 5, 13]" + "'", str38, "[13, 5, 13]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[13, 6, 13]" + "'", str39, "[13, 6, 13]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[13, 7, 13]" + "'", str40, "[13, 7, 13]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[13, 8, 13]" + "'", str41, "[13, 8, 13]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[13, 9, 13]" + "'", str42, "[13, 9, 13]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[14, 0, 14]" + "'", str43, "[14, 0, 14]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[14, 1, 14]" + "'", str44, "[14, 1, 14]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[14, 2, 14]" + "'", str45, "[14, 2, 14]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[14, 3, 14]" + "'", str46, "[14, 3, 14]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[14, 4, 14]" + "'", str47, "[14, 4, 14]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[14, 5, 14]" + "'", str48, "[14, 5, 14]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[14, 6, 14]" + "'", str49, "[14, 6, 14]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[14, 7, 14]" + "'", str50, "[14, 7, 14]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[14, 8, 14]" + "'", str51, "[14, 8, 14]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[14, 9, 14]" + "'", str52, "[14, 9, 14]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[15, 0, 15]" + "'", str53, "[15, 0, 15]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[15, 1, 15]" + "'", str54, "[15, 1, 15]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[15, 2, 15]" + "'", str55, "[15, 2, 15]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[15, 3, 15]" + "'", str56, "[15, 3, 15]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[15, 4, 15]" + "'", str57, "[15, 4, 15]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[15, 5, 15]" + "'", str58, "[15, 5, 15]");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test2565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2565");
        int[] intArray6 = new int[] { (short) 0, (short) 10, (-1), (short) 1, (byte) 1, 'a' };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass34 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 12, 8, 8, 3, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 10, 0, 2, 1, 97]" + "'", str7, "[0, 10, 0, 2, 1, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 10, 1, 3, 1, 97]" + "'", str8, "[0, 10, 1, 3, 1, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 10, 2, 4, 1, 97]" + "'", str9, "[0, 10, 2, 4, 1, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 10, 3, 5, 1, 97]" + "'", str10, "[0, 10, 3, 5, 1, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 10, 4, 6, 1, 97]" + "'", str11, "[0, 10, 4, 6, 1, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 10, 5, 7, 1, 97]" + "'", str12, "[0, 10, 5, 7, 1, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 10, 6, 8, 1, 97]" + "'", str13, "[0, 10, 6, 8, 1, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 10, 7, 9, 1, 97]" + "'", str14, "[0, 10, 7, 9, 1, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 11, 0, 0, 2, 97]" + "'", str15, "[0, 11, 0, 0, 2, 97]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 11, 1, 1, 2, 97]" + "'", str16, "[0, 11, 1, 1, 2, 97]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 11, 2, 2, 2, 97]" + "'", str17, "[0, 11, 2, 2, 2, 97]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 11, 3, 3, 2, 97]" + "'", str18, "[0, 11, 3, 3, 2, 97]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 11, 4, 4, 2, 97]" + "'", str19, "[0, 11, 4, 4, 2, 97]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 11, 5, 5, 2, 97]" + "'", str20, "[0, 11, 5, 5, 2, 97]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 11, 6, 6, 2, 97]" + "'", str21, "[0, 11, 6, 6, 2, 97]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 11, 7, 7, 2, 97]" + "'", str22, "[0, 11, 7, 7, 2, 97]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 11, 8, 8, 2, 97]" + "'", str23, "[0, 11, 8, 8, 2, 97]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 11, 9, 9, 2, 97]" + "'", str24, "[0, 11, 9, 9, 2, 97]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 12, 0, 0, 3, 97]" + "'", str25, "[0, 12, 0, 0, 3, 97]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 12, 1, 1, 3, 97]" + "'", str26, "[0, 12, 1, 1, 3, 97]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 12, 2, 2, 3, 97]" + "'", str27, "[0, 12, 2, 2, 3, 97]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 12, 3, 3, 3, 97]" + "'", str28, "[0, 12, 3, 3, 3, 97]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 12, 4, 4, 3, 97]" + "'", str29, "[0, 12, 4, 4, 3, 97]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 12, 5, 5, 3, 97]" + "'", str30, "[0, 12, 5, 5, 3, 97]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 12, 6, 6, 3, 97]" + "'", str31, "[0, 12, 6, 6, 3, 97]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 12, 7, 7, 3, 97]" + "'", str32, "[0, 12, 7, 7, 3, 97]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 12, 8, 8, 3, 97]" + "'", str33, "[0, 12, 8, 8, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test2566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2566");
        int[] intArray6 = new int[] { (byte) 100, 'a', ' ', (byte) -1, (short) -1, (short) 1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass77 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 103, 9, 9, 5, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 97, 33, 0, -1, 1]" + "'", str7, "[100, 97, 33, 0, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 97, 34, 1, -1, 1]" + "'", str8, "[100, 97, 34, 1, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 97, 35, 2, -1, 1]" + "'", str9, "[100, 97, 35, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 97, 36, 3, -1, 1]" + "'", str10, "[100, 97, 36, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 97, 37, 4, -1, 1]" + "'", str11, "[100, 97, 37, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 97, 38, 5, -1, 1]" + "'", str12, "[100, 97, 38, 5, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 97, 39, 6, -1, 1]" + "'", str13, "[100, 97, 39, 6, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 97, 40, 7, -1, 1]" + "'", str14, "[100, 97, 40, 7, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 97, 41, 8, -1, 1]" + "'", str15, "[100, 97, 41, 8, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 97, 42, 9, -1, 1]" + "'", str16, "[100, 97, 42, 9, -1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 98, 0, 0, 0, 1]" + "'", str17, "[100, 98, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 98, 1, 1, 0, 1]" + "'", str18, "[100, 98, 1, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 98, 2, 2, 0, 1]" + "'", str19, "[100, 98, 2, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 98, 3, 3, 0, 1]" + "'", str20, "[100, 98, 3, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 98, 4, 4, 0, 1]" + "'", str21, "[100, 98, 4, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 98, 5, 5, 0, 1]" + "'", str22, "[100, 98, 5, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 98, 6, 6, 0, 1]" + "'", str23, "[100, 98, 6, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 98, 7, 7, 0, 1]" + "'", str24, "[100, 98, 7, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 98, 8, 8, 0, 1]" + "'", str25, "[100, 98, 8, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 98, 9, 9, 0, 1]" + "'", str26, "[100, 98, 9, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 99, 0, 0, 1, 1]" + "'", str27, "[100, 99, 0, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 99, 1, 1, 1, 1]" + "'", str28, "[100, 99, 1, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 99, 2, 2, 1, 1]" + "'", str29, "[100, 99, 2, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 99, 3, 3, 1, 1]" + "'", str30, "[100, 99, 3, 3, 1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 99, 4, 4, 1, 1]" + "'", str31, "[100, 99, 4, 4, 1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 99, 5, 5, 1, 1]" + "'", str32, "[100, 99, 5, 5, 1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 99, 6, 6, 1, 1]" + "'", str33, "[100, 99, 6, 6, 1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 99, 7, 7, 1, 1]" + "'", str34, "[100, 99, 7, 7, 1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 99, 8, 8, 1, 1]" + "'", str35, "[100, 99, 8, 8, 1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 99, 9, 9, 1, 1]" + "'", str36, "[100, 99, 9, 9, 1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 100, 0, 0, 2, 1]" + "'", str37, "[100, 100, 0, 0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 100, 1, 1, 2, 1]" + "'", str38, "[100, 100, 1, 1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 100, 2, 2, 2, 1]" + "'", str39, "[100, 100, 2, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 100, 3, 3, 2, 1]" + "'", str40, "[100, 100, 3, 3, 2, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 100, 4, 4, 2, 1]" + "'", str41, "[100, 100, 4, 4, 2, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 100, 5, 5, 2, 1]" + "'", str42, "[100, 100, 5, 5, 2, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 100, 6, 6, 2, 1]" + "'", str43, "[100, 100, 6, 6, 2, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 100, 7, 7, 2, 1]" + "'", str44, "[100, 100, 7, 7, 2, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 100, 8, 8, 2, 1]" + "'", str45, "[100, 100, 8, 8, 2, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 100, 9, 9, 2, 1]" + "'", str46, "[100, 100, 9, 9, 2, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 101, 0, 0, 3, 1]" + "'", str47, "[100, 101, 0, 0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 101, 1, 1, 3, 1]" + "'", str48, "[100, 101, 1, 1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 101, 2, 2, 3, 1]" + "'", str49, "[100, 101, 2, 2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 101, 3, 3, 3, 1]" + "'", str50, "[100, 101, 3, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 101, 4, 4, 3, 1]" + "'", str51, "[100, 101, 4, 4, 3, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 101, 5, 5, 3, 1]" + "'", str52, "[100, 101, 5, 5, 3, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 101, 6, 6, 3, 1]" + "'", str53, "[100, 101, 6, 6, 3, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 101, 7, 7, 3, 1]" + "'", str54, "[100, 101, 7, 7, 3, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 101, 8, 8, 3, 1]" + "'", str55, "[100, 101, 8, 8, 3, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 101, 9, 9, 3, 1]" + "'", str56, "[100, 101, 9, 9, 3, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 102, 0, 0, 4, 1]" + "'", str57, "[100, 102, 0, 0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 102, 1, 1, 4, 1]" + "'", str58, "[100, 102, 1, 1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 102, 2, 2, 4, 1]" + "'", str59, "[100, 102, 2, 2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 102, 3, 3, 4, 1]" + "'", str60, "[100, 102, 3, 3, 4, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 102, 4, 4, 4, 1]" + "'", str61, "[100, 102, 4, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[100, 102, 5, 5, 4, 1]" + "'", str62, "[100, 102, 5, 5, 4, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[100, 102, 6, 6, 4, 1]" + "'", str63, "[100, 102, 6, 6, 4, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[100, 102, 7, 7, 4, 1]" + "'", str64, "[100, 102, 7, 7, 4, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[100, 102, 8, 8, 4, 1]" + "'", str65, "[100, 102, 8, 8, 4, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[100, 102, 9, 9, 4, 1]" + "'", str66, "[100, 102, 9, 9, 4, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[100, 103, 0, 0, 5, 1]" + "'", str67, "[100, 103, 0, 0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[100, 103, 1, 1, 5, 1]" + "'", str68, "[100, 103, 1, 1, 5, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[100, 103, 2, 2, 5, 1]" + "'", str69, "[100, 103, 2, 2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[100, 103, 3, 3, 5, 1]" + "'", str70, "[100, 103, 3, 3, 5, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[100, 103, 4, 4, 5, 1]" + "'", str71, "[100, 103, 4, 4, 5, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[100, 103, 5, 5, 5, 1]" + "'", str72, "[100, 103, 5, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[100, 103, 6, 6, 5, 1]" + "'", str73, "[100, 103, 6, 6, 5, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[100, 103, 7, 7, 5, 1]" + "'", str74, "[100, 103, 7, 7, 5, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[100, 103, 8, 8, 5, 1]" + "'", str75, "[100, 103, 8, 8, 5, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[100, 103, 9, 9, 5, 1]" + "'", str76, "[100, 103, 9, 9, 5, 1]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test2567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2567");
        int[] intArray4 = new int[] { '#', ' ', (byte) -1, (short) 1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass53 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[39, 7, 7, 5]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 33, 0, 1]" + "'", str5, "[35, 33, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 34, 1, 1]" + "'", str6, "[35, 34, 1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 35, 2, 1]" + "'", str7, "[35, 35, 2, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 36, 3, 1]" + "'", str8, "[35, 36, 3, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 37, 4, 1]" + "'", str9, "[35, 37, 4, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 38, 5, 1]" + "'", str10, "[35, 38, 5, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 39, 6, 1]" + "'", str11, "[35, 39, 6, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 40, 7, 1]" + "'", str12, "[35, 40, 7, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 41, 8, 1]" + "'", str13, "[35, 41, 8, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 42, 9, 1]" + "'", str14, "[35, 42, 9, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[36, 0, 0, 2]" + "'", str15, "[36, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[36, 1, 1, 2]" + "'", str16, "[36, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[36, 2, 2, 2]" + "'", str17, "[36, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[36, 3, 3, 2]" + "'", str18, "[36, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[36, 4, 4, 2]" + "'", str19, "[36, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[36, 5, 5, 2]" + "'", str20, "[36, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[36, 6, 6, 2]" + "'", str21, "[36, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[36, 7, 7, 2]" + "'", str22, "[36, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[36, 8, 8, 2]" + "'", str23, "[36, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[36, 9, 9, 2]" + "'", str24, "[36, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[37, 0, 0, 3]" + "'", str25, "[37, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[37, 1, 1, 3]" + "'", str26, "[37, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[37, 2, 2, 3]" + "'", str27, "[37, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[37, 3, 3, 3]" + "'", str28, "[37, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[37, 4, 4, 3]" + "'", str29, "[37, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[37, 5, 5, 3]" + "'", str30, "[37, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[37, 6, 6, 3]" + "'", str31, "[37, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[37, 7, 7, 3]" + "'", str32, "[37, 7, 7, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[37, 8, 8, 3]" + "'", str33, "[37, 8, 8, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[37, 9, 9, 3]" + "'", str34, "[37, 9, 9, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[38, 0, 0, 4]" + "'", str35, "[38, 0, 0, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[38, 1, 1, 4]" + "'", str36, "[38, 1, 1, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[38, 2, 2, 4]" + "'", str37, "[38, 2, 2, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[38, 3, 3, 4]" + "'", str38, "[38, 3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[38, 4, 4, 4]" + "'", str39, "[38, 4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[38, 5, 5, 4]" + "'", str40, "[38, 5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[38, 6, 6, 4]" + "'", str41, "[38, 6, 6, 4]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[38, 7, 7, 4]" + "'", str42, "[38, 7, 7, 4]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[38, 8, 8, 4]" + "'", str43, "[38, 8, 8, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[38, 9, 9, 4]" + "'", str44, "[38, 9, 9, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[39, 0, 0, 5]" + "'", str45, "[39, 0, 0, 5]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[39, 1, 1, 5]" + "'", str46, "[39, 1, 1, 5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[39, 2, 2, 5]" + "'", str47, "[39, 2, 2, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[39, 3, 3, 5]" + "'", str48, "[39, 3, 3, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[39, 4, 4, 5]" + "'", str49, "[39, 4, 4, 5]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[39, 5, 5, 5]" + "'", str50, "[39, 5, 5, 5]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[39, 6, 6, 5]" + "'", str51, "[39, 6, 6, 5]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[39, 7, 7, 5]" + "'", str52, "[39, 7, 7, 5]");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test2568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2568");
        int[] intArray1 = new int[] { (short) 1 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass37 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[6]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[2]" + "'", str2, "[2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[3]" + "'", str3, "[3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[4]" + "'", str4, "[4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[5]" + "'", str5, "[5]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[6]" + "'", str6, "[6]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[7]" + "'", str7, "[7]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[8]" + "'", str8, "[8]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[9]" + "'", str9, "[9]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1]" + "'", str10, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1]" + "'", str11, "[1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[2]" + "'", str12, "[2]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[3]" + "'", str13, "[3]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[4]" + "'", str14, "[4]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[5]" + "'", str15, "[5]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[6]" + "'", str16, "[6]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[7]" + "'", str17, "[7]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[8]" + "'", str18, "[8]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[9]" + "'", str19, "[9]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1]" + "'", str20, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1]" + "'", str21, "[1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2]" + "'", str22, "[2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3]" + "'", str23, "[3]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[4]" + "'", str24, "[4]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[5]" + "'", str25, "[5]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[6]" + "'", str26, "[6]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[7]" + "'", str27, "[7]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[8]" + "'", str28, "[8]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[9]" + "'", str29, "[9]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 1]" + "'", str30, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1]" + "'", str31, "[1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2]" + "'", str32, "[2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[3]" + "'", str33, "[3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4]" + "'", str34, "[4]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[5]" + "'", str35, "[5]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[6]" + "'", str36, "[6]");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test2569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2569");
        int[] intArray3 = new int[] { (short) 10, (short) 0, (short) 10 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass67 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[16, 3, 16]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[10, 1, 10]" + "'", str4, "[10, 1, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 2, 10]" + "'", str5, "[10, 2, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 3, 10]" + "'", str6, "[10, 3, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 4, 10]" + "'", str7, "[10, 4, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 5, 10]" + "'", str8, "[10, 5, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 6, 10]" + "'", str9, "[10, 6, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 7, 10]" + "'", str10, "[10, 7, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 8, 10]" + "'", str11, "[10, 8, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 9, 10]" + "'", str12, "[10, 9, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[11, 0, 11]" + "'", str13, "[11, 0, 11]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[11, 1, 11]" + "'", str14, "[11, 1, 11]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[11, 2, 11]" + "'", str15, "[11, 2, 11]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[11, 3, 11]" + "'", str16, "[11, 3, 11]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[11, 4, 11]" + "'", str17, "[11, 4, 11]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[11, 5, 11]" + "'", str18, "[11, 5, 11]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[11, 6, 11]" + "'", str19, "[11, 6, 11]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[11, 7, 11]" + "'", str20, "[11, 7, 11]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[11, 8, 11]" + "'", str21, "[11, 8, 11]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[11, 9, 11]" + "'", str22, "[11, 9, 11]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[12, 0, 12]" + "'", str23, "[12, 0, 12]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[12, 1, 12]" + "'", str24, "[12, 1, 12]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[12, 2, 12]" + "'", str25, "[12, 2, 12]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[12, 3, 12]" + "'", str26, "[12, 3, 12]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[12, 4, 12]" + "'", str27, "[12, 4, 12]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[12, 5, 12]" + "'", str28, "[12, 5, 12]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[12, 6, 12]" + "'", str29, "[12, 6, 12]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[12, 7, 12]" + "'", str30, "[12, 7, 12]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[12, 8, 12]" + "'", str31, "[12, 8, 12]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[12, 9, 12]" + "'", str32, "[12, 9, 12]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[13, 0, 13]" + "'", str33, "[13, 0, 13]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[13, 1, 13]" + "'", str34, "[13, 1, 13]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[13, 2, 13]" + "'", str35, "[13, 2, 13]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[13, 3, 13]" + "'", str36, "[13, 3, 13]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[13, 4, 13]" + "'", str37, "[13, 4, 13]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[13, 5, 13]" + "'", str38, "[13, 5, 13]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[13, 6, 13]" + "'", str39, "[13, 6, 13]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[13, 7, 13]" + "'", str40, "[13, 7, 13]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[13, 8, 13]" + "'", str41, "[13, 8, 13]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[13, 9, 13]" + "'", str42, "[13, 9, 13]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[14, 0, 14]" + "'", str43, "[14, 0, 14]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[14, 1, 14]" + "'", str44, "[14, 1, 14]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[14, 2, 14]" + "'", str45, "[14, 2, 14]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[14, 3, 14]" + "'", str46, "[14, 3, 14]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[14, 4, 14]" + "'", str47, "[14, 4, 14]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[14, 5, 14]" + "'", str48, "[14, 5, 14]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[14, 6, 14]" + "'", str49, "[14, 6, 14]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[14, 7, 14]" + "'", str50, "[14, 7, 14]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[14, 8, 14]" + "'", str51, "[14, 8, 14]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[14, 9, 14]" + "'", str52, "[14, 9, 14]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[15, 0, 15]" + "'", str53, "[15, 0, 15]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[15, 1, 15]" + "'", str54, "[15, 1, 15]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[15, 2, 15]" + "'", str55, "[15, 2, 15]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[15, 3, 15]" + "'", str56, "[15, 3, 15]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[15, 4, 15]" + "'", str57, "[15, 4, 15]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[15, 5, 15]" + "'", str58, "[15, 5, 15]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[15, 6, 15]" + "'", str59, "[15, 6, 15]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[15, 7, 15]" + "'", str60, "[15, 7, 15]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[15, 8, 15]" + "'", str61, "[15, 8, 15]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[15, 9, 15]" + "'", str62, "[15, 9, 15]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[16, 0, 16]" + "'", str63, "[16, 0, 16]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[16, 1, 16]" + "'", str64, "[16, 1, 16]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[16, 2, 16]" + "'", str65, "[16, 2, 16]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[16, 3, 16]" + "'", str66, "[16, 3, 16]");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test2570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2570");
        int[] intArray1 = new int[] { 'a' };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass59 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[154]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[98]" + "'", str2, "[98]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[99]" + "'", str3, "[99]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100]" + "'", str4, "[100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[101]" + "'", str5, "[101]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[102]" + "'", str6, "[102]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[103]" + "'", str7, "[103]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[104]" + "'", str8, "[104]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[105]" + "'", str9, "[105]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[106]" + "'", str10, "[106]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[107]" + "'", str11, "[107]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[108]" + "'", str12, "[108]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[109]" + "'", str13, "[109]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[110]" + "'", str14, "[110]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[111]" + "'", str15, "[111]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[112]" + "'", str16, "[112]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[113]" + "'", str17, "[113]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[114]" + "'", str18, "[114]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[115]" + "'", str19, "[115]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[116]" + "'", str20, "[116]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[117]" + "'", str21, "[117]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[118]" + "'", str22, "[118]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[119]" + "'", str23, "[119]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[120]" + "'", str24, "[120]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[121]" + "'", str25, "[121]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[122]" + "'", str26, "[122]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[123]" + "'", str27, "[123]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[124]" + "'", str28, "[124]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[125]" + "'", str29, "[125]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[126]" + "'", str30, "[126]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[127]" + "'", str31, "[127]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[128]" + "'", str32, "[128]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[129]" + "'", str33, "[129]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[130]" + "'", str34, "[130]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[131]" + "'", str35, "[131]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[132]" + "'", str36, "[132]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[133]" + "'", str37, "[133]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[134]" + "'", str38, "[134]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[135]" + "'", str39, "[135]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[136]" + "'", str40, "[136]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[137]" + "'", str41, "[137]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[138]" + "'", str42, "[138]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[139]" + "'", str43, "[139]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[140]" + "'", str44, "[140]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[141]" + "'", str45, "[141]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[142]" + "'", str46, "[142]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[143]" + "'", str47, "[143]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[144]" + "'", str48, "[144]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[145]" + "'", str49, "[145]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[146]" + "'", str50, "[146]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[147]" + "'", str51, "[147]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[148]" + "'", str52, "[148]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[149]" + "'", str53, "[149]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[150]" + "'", str54, "[150]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[151]" + "'", str55, "[151]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[152]" + "'", str56, "[152]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[153]" + "'", str57, "[153]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[154]" + "'", str58, "[154]");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test2571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2571");
        int[] intArray3 = new int[] { (short) 10, (short) 0, (short) 10 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass68 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[16, 4, 16]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[10, 1, 10]" + "'", str4, "[10, 1, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 2, 10]" + "'", str5, "[10, 2, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 3, 10]" + "'", str6, "[10, 3, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 4, 10]" + "'", str7, "[10, 4, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 5, 10]" + "'", str8, "[10, 5, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 6, 10]" + "'", str9, "[10, 6, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 7, 10]" + "'", str10, "[10, 7, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 8, 10]" + "'", str11, "[10, 8, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 9, 10]" + "'", str12, "[10, 9, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[11, 0, 11]" + "'", str13, "[11, 0, 11]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[11, 1, 11]" + "'", str14, "[11, 1, 11]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[11, 2, 11]" + "'", str15, "[11, 2, 11]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[11, 3, 11]" + "'", str16, "[11, 3, 11]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[11, 4, 11]" + "'", str17, "[11, 4, 11]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[11, 5, 11]" + "'", str18, "[11, 5, 11]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[11, 6, 11]" + "'", str19, "[11, 6, 11]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[11, 7, 11]" + "'", str20, "[11, 7, 11]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[11, 8, 11]" + "'", str21, "[11, 8, 11]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[11, 9, 11]" + "'", str22, "[11, 9, 11]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[12, 0, 12]" + "'", str23, "[12, 0, 12]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[12, 1, 12]" + "'", str24, "[12, 1, 12]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[12, 2, 12]" + "'", str25, "[12, 2, 12]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[12, 3, 12]" + "'", str26, "[12, 3, 12]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[12, 4, 12]" + "'", str27, "[12, 4, 12]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[12, 5, 12]" + "'", str28, "[12, 5, 12]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[12, 6, 12]" + "'", str29, "[12, 6, 12]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[12, 7, 12]" + "'", str30, "[12, 7, 12]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[12, 8, 12]" + "'", str31, "[12, 8, 12]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[12, 9, 12]" + "'", str32, "[12, 9, 12]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[13, 0, 13]" + "'", str33, "[13, 0, 13]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[13, 1, 13]" + "'", str34, "[13, 1, 13]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[13, 2, 13]" + "'", str35, "[13, 2, 13]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[13, 3, 13]" + "'", str36, "[13, 3, 13]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[13, 4, 13]" + "'", str37, "[13, 4, 13]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[13, 5, 13]" + "'", str38, "[13, 5, 13]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[13, 6, 13]" + "'", str39, "[13, 6, 13]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[13, 7, 13]" + "'", str40, "[13, 7, 13]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[13, 8, 13]" + "'", str41, "[13, 8, 13]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[13, 9, 13]" + "'", str42, "[13, 9, 13]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[14, 0, 14]" + "'", str43, "[14, 0, 14]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[14, 1, 14]" + "'", str44, "[14, 1, 14]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[14, 2, 14]" + "'", str45, "[14, 2, 14]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[14, 3, 14]" + "'", str46, "[14, 3, 14]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[14, 4, 14]" + "'", str47, "[14, 4, 14]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[14, 5, 14]" + "'", str48, "[14, 5, 14]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[14, 6, 14]" + "'", str49, "[14, 6, 14]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[14, 7, 14]" + "'", str50, "[14, 7, 14]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[14, 8, 14]" + "'", str51, "[14, 8, 14]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[14, 9, 14]" + "'", str52, "[14, 9, 14]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[15, 0, 15]" + "'", str53, "[15, 0, 15]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[15, 1, 15]" + "'", str54, "[15, 1, 15]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[15, 2, 15]" + "'", str55, "[15, 2, 15]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[15, 3, 15]" + "'", str56, "[15, 3, 15]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[15, 4, 15]" + "'", str57, "[15, 4, 15]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[15, 5, 15]" + "'", str58, "[15, 5, 15]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[15, 6, 15]" + "'", str59, "[15, 6, 15]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[15, 7, 15]" + "'", str60, "[15, 7, 15]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[15, 8, 15]" + "'", str61, "[15, 8, 15]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[15, 9, 15]" + "'", str62, "[15, 9, 15]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[16, 0, 16]" + "'", str63, "[16, 0, 16]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[16, 1, 16]" + "'", str64, "[16, 1, 16]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[16, 2, 16]" + "'", str65, "[16, 2, 16]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[16, 3, 16]" + "'", str66, "[16, 3, 16]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[16, 4, 16]" + "'", str67, "[16, 4, 16]");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test2572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2572");
        int[] intArray4 = new int[] { (byte) 0, (short) 10, (short) -1, 'a' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass67 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[6, 1, 1, 103]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 11, 0, 97]" + "'", str5, "[0, 11, 0, 97]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 12, 1, 97]" + "'", str6, "[0, 12, 1, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 13, 2, 97]" + "'", str7, "[0, 13, 2, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 14, 3, 97]" + "'", str8, "[0, 14, 3, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 15, 4, 97]" + "'", str9, "[0, 15, 4, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 16, 5, 97]" + "'", str10, "[0, 16, 5, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 17, 6, 97]" + "'", str11, "[0, 17, 6, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 18, 7, 97]" + "'", str12, "[0, 18, 7, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 19, 8, 97]" + "'", str13, "[0, 19, 8, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 20, 9, 97]" + "'", str14, "[0, 20, 9, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 0, 98]" + "'", str15, "[1, 0, 0, 98]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 1, 98]" + "'", str16, "[1, 1, 1, 98]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 2, 98]" + "'", str17, "[1, 2, 2, 98]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 3, 3, 98]" + "'", str18, "[1, 3, 3, 98]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 4, 4, 98]" + "'", str19, "[1, 4, 4, 98]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 5, 5, 98]" + "'", str20, "[1, 5, 5, 98]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 6, 6, 98]" + "'", str21, "[1, 6, 6, 98]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 7, 7, 98]" + "'", str22, "[1, 7, 7, 98]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 8, 8, 98]" + "'", str23, "[1, 8, 8, 98]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 9, 9, 98]" + "'", str24, "[1, 9, 9, 98]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 0, 0, 99]" + "'", str25, "[2, 0, 0, 99]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 1, 1, 99]" + "'", str26, "[2, 1, 1, 99]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 2, 2, 99]" + "'", str27, "[2, 2, 2, 99]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 3, 3, 99]" + "'", str28, "[2, 3, 3, 99]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 4, 4, 99]" + "'", str29, "[2, 4, 4, 99]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 5, 5, 99]" + "'", str30, "[2, 5, 5, 99]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 6, 6, 99]" + "'", str31, "[2, 6, 6, 99]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 7, 7, 99]" + "'", str32, "[2, 7, 7, 99]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 8, 8, 99]" + "'", str33, "[2, 8, 8, 99]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 9, 9, 99]" + "'", str34, "[2, 9, 9, 99]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 0, 0, 100]" + "'", str35, "[3, 0, 0, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 1, 1, 100]" + "'", str36, "[3, 1, 1, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 2, 2, 100]" + "'", str37, "[3, 2, 2, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 3, 3, 100]" + "'", str38, "[3, 3, 3, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 4, 4, 100]" + "'", str39, "[3, 4, 4, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 5, 5, 100]" + "'", str40, "[3, 5, 5, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 6, 6, 100]" + "'", str41, "[3, 6, 6, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[3, 7, 7, 100]" + "'", str42, "[3, 7, 7, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 8, 8, 100]" + "'", str43, "[3, 8, 8, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 9, 9, 100]" + "'", str44, "[3, 9, 9, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 0, 0, 101]" + "'", str45, "[4, 0, 0, 101]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 1, 1, 101]" + "'", str46, "[4, 1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 2, 2, 101]" + "'", str47, "[4, 2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[4, 3, 3, 101]" + "'", str48, "[4, 3, 3, 101]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[4, 4, 4, 101]" + "'", str49, "[4, 4, 4, 101]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[4, 5, 5, 101]" + "'", str50, "[4, 5, 5, 101]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[4, 6, 6, 101]" + "'", str51, "[4, 6, 6, 101]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[4, 7, 7, 101]" + "'", str52, "[4, 7, 7, 101]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[4, 8, 8, 101]" + "'", str53, "[4, 8, 8, 101]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[4, 9, 9, 101]" + "'", str54, "[4, 9, 9, 101]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[5, 0, 0, 102]" + "'", str55, "[5, 0, 0, 102]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5, 1, 1, 102]" + "'", str56, "[5, 1, 1, 102]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5, 2, 2, 102]" + "'", str57, "[5, 2, 2, 102]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 3, 3, 102]" + "'", str58, "[5, 3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[5, 4, 4, 102]" + "'", str59, "[5, 4, 4, 102]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[5, 5, 5, 102]" + "'", str60, "[5, 5, 5, 102]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[5, 6, 6, 102]" + "'", str61, "[5, 6, 6, 102]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[5, 7, 7, 102]" + "'", str62, "[5, 7, 7, 102]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[5, 8, 8, 102]" + "'", str63, "[5, 8, 8, 102]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[5, 9, 9, 102]" + "'", str64, "[5, 9, 9, 102]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[6, 0, 0, 103]" + "'", str65, "[6, 0, 0, 103]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[6, 1, 1, 103]" + "'", str66, "[6, 1, 1, 103]");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test2573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2573");
        int[] intArray2 = new int[] { (short) 1, (short) -1 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass87 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[3, 3]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 0]" + "'", str3, "[2, 0]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 1]" + "'", str4, "[3, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 2]" + "'", str5, "[4, 2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 3]" + "'", str6, "[5, 3]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 4]" + "'", str7, "[6, 4]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 5]" + "'", str8, "[7, 5]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 6]" + "'", str9, "[8, 6]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 7]" + "'", str10, "[9, 7]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 8]" + "'", str11, "[10, 8]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 9]" + "'", str12, "[11, 9]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 1]" + "'", str13, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1]" + "'", str14, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2]" + "'", str15, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[3, 3]" + "'", str16, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[4, 4]" + "'", str17, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[5, 5]" + "'", str18, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[6, 6]" + "'", str19, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[7, 7]" + "'", str20, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[8, 8]" + "'", str21, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[9, 9]" + "'", str22, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 1]" + "'", str23, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1]" + "'", str24, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 2]" + "'", str25, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3]" + "'", str26, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[4, 4]" + "'", str27, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[5, 5]" + "'", str28, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[6, 6]" + "'", str29, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[7, 7]" + "'", str30, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[8, 8]" + "'", str31, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[9, 9]" + "'", str32, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 0, 1]" + "'", str33, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1]" + "'", str34, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 2]" + "'", str35, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 3]" + "'", str36, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4]" + "'", str37, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[5, 5]" + "'", str38, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[6, 6]" + "'", str39, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[7, 7]" + "'", str40, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[8, 8]" + "'", str41, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[9, 9]" + "'", str42, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 0, 1]" + "'", str43, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1]" + "'", str44, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[2, 2]" + "'", str45, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 3]" + "'", str46, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 4]" + "'", str47, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5]" + "'", str48, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[6, 6]" + "'", str49, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[7, 7]" + "'", str50, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[8, 8]" + "'", str51, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[9, 9]" + "'", str52, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 0, 1]" + "'", str53, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 1]" + "'", str54, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[2, 2]" + "'", str55, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[3, 3]" + "'", str56, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[4, 4]" + "'", str57, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 5]" + "'", str58, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 6]" + "'", str59, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[7, 7]" + "'", str60, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[8, 8]" + "'", str61, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[9, 9]" + "'", str62, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 0, 1]" + "'", str63, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 1]" + "'", str64, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[2, 2]" + "'", str65, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[3, 3]" + "'", str66, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[4, 4]" + "'", str67, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[5, 5]" + "'", str68, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[6, 6]" + "'", str69, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[7, 7]" + "'", str70, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[8, 8]" + "'", str71, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[9, 9]" + "'", str72, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 0, 1]" + "'", str73, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 1]" + "'", str74, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[2, 2]" + "'", str75, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[3, 3]" + "'", str76, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[4, 4]" + "'", str77, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[5, 5]" + "'", str78, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[6, 6]" + "'", str79, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[7, 7]" + "'", str80, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[8, 8]" + "'", str81, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[9, 9]" + "'", str82, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[1, 0, 1]" + "'", str83, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[1, 1]" + "'", str84, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[2, 2]" + "'", str85, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[3, 3]" + "'", str86, "[3, 3]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test2574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2574");
        int[] intArray5 = new int[] { (byte) 0, '#', ' ', 10, 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass66 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 35, 92, 10, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 35, 33, 10, 1]" + "'", str6, "[0, 35, 33, 10, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 35, 34, 10, 1]" + "'", str7, "[0, 35, 34, 10, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 35, 35, 10, 1]" + "'", str8, "[0, 35, 35, 10, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 35, 36, 10, 1]" + "'", str9, "[0, 35, 36, 10, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 35, 37, 10, 1]" + "'", str10, "[0, 35, 37, 10, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 35, 38, 10, 1]" + "'", str11, "[0, 35, 38, 10, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 35, 39, 10, 1]" + "'", str12, "[0, 35, 39, 10, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 35, 40, 10, 1]" + "'", str13, "[0, 35, 40, 10, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 35, 41, 10, 1]" + "'", str14, "[0, 35, 41, 10, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 35, 42, 10, 1]" + "'", str15, "[0, 35, 42, 10, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 35, 43, 10, 1]" + "'", str16, "[0, 35, 43, 10, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 35, 44, 10, 1]" + "'", str17, "[0, 35, 44, 10, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 35, 45, 10, 1]" + "'", str18, "[0, 35, 45, 10, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 35, 46, 10, 1]" + "'", str19, "[0, 35, 46, 10, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 35, 47, 10, 1]" + "'", str20, "[0, 35, 47, 10, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 35, 48, 10, 1]" + "'", str21, "[0, 35, 48, 10, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 35, 49, 10, 1]" + "'", str22, "[0, 35, 49, 10, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 35, 50, 10, 1]" + "'", str23, "[0, 35, 50, 10, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 35, 51, 10, 1]" + "'", str24, "[0, 35, 51, 10, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 35, 52, 10, 1]" + "'", str25, "[0, 35, 52, 10, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 35, 53, 10, 1]" + "'", str26, "[0, 35, 53, 10, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 35, 54, 10, 1]" + "'", str27, "[0, 35, 54, 10, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 35, 55, 10, 1]" + "'", str28, "[0, 35, 55, 10, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 35, 56, 10, 1]" + "'", str29, "[0, 35, 56, 10, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 35, 57, 10, 1]" + "'", str30, "[0, 35, 57, 10, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 35, 58, 10, 1]" + "'", str31, "[0, 35, 58, 10, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 35, 59, 10, 1]" + "'", str32, "[0, 35, 59, 10, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 35, 60, 10, 1]" + "'", str33, "[0, 35, 60, 10, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 35, 61, 10, 1]" + "'", str34, "[0, 35, 61, 10, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 35, 62, 10, 1]" + "'", str35, "[0, 35, 62, 10, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 35, 63, 10, 1]" + "'", str36, "[0, 35, 63, 10, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 35, 64, 10, 1]" + "'", str37, "[0, 35, 64, 10, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 35, 65, 10, 1]" + "'", str38, "[0, 35, 65, 10, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 35, 66, 10, 1]" + "'", str39, "[0, 35, 66, 10, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 35, 67, 10, 1]" + "'", str40, "[0, 35, 67, 10, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 35, 68, 10, 1]" + "'", str41, "[0, 35, 68, 10, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 35, 69, 10, 1]" + "'", str42, "[0, 35, 69, 10, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 35, 70, 10, 1]" + "'", str43, "[0, 35, 70, 10, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 35, 71, 10, 1]" + "'", str44, "[0, 35, 71, 10, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 35, 72, 10, 1]" + "'", str45, "[0, 35, 72, 10, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 35, 73, 10, 1]" + "'", str46, "[0, 35, 73, 10, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 35, 74, 10, 1]" + "'", str47, "[0, 35, 74, 10, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 35, 75, 10, 1]" + "'", str48, "[0, 35, 75, 10, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 35, 76, 10, 1]" + "'", str49, "[0, 35, 76, 10, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 35, 77, 10, 1]" + "'", str50, "[0, 35, 77, 10, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 35, 78, 10, 1]" + "'", str51, "[0, 35, 78, 10, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 35, 79, 10, 1]" + "'", str52, "[0, 35, 79, 10, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 35, 80, 10, 1]" + "'", str53, "[0, 35, 80, 10, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 35, 81, 10, 1]" + "'", str54, "[0, 35, 81, 10, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, 35, 82, 10, 1]" + "'", str55, "[0, 35, 82, 10, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, 35, 83, 10, 1]" + "'", str56, "[0, 35, 83, 10, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, 35, 84, 10, 1]" + "'", str57, "[0, 35, 84, 10, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, 35, 85, 10, 1]" + "'", str58, "[0, 35, 85, 10, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, 35, 86, 10, 1]" + "'", str59, "[0, 35, 86, 10, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, 35, 87, 10, 1]" + "'", str60, "[0, 35, 87, 10, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, 35, 88, 10, 1]" + "'", str61, "[0, 35, 88, 10, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, 35, 89, 10, 1]" + "'", str62, "[0, 35, 89, 10, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[0, 35, 90, 10, 1]" + "'", str63, "[0, 35, 90, 10, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[0, 35, 91, 10, 1]" + "'", str64, "[0, 35, 91, 10, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[0, 35, 92, 10, 1]" + "'", str65, "[0, 35, 92, 10, 1]");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test2575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2575");
        int[] intArray4 = new int[] { 'a', (short) 1, (byte) -1, (short) 0 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass62 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[102, 6, 6, 5]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 2, 0, 0]" + "'", str5, "[97, 2, 0, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 3, 1, 0]" + "'", str6, "[97, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 4, 2, 0]" + "'", str7, "[97, 4, 2, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 5, 3, 0]" + "'", str8, "[97, 5, 3, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 6, 4, 0]" + "'", str9, "[97, 6, 4, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 7, 5, 0]" + "'", str10, "[97, 7, 5, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 8, 6, 0]" + "'", str11, "[97, 8, 6, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 9, 7, 0]" + "'", str12, "[97, 9, 7, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 10, 8, 0]" + "'", str13, "[97, 10, 8, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 11, 9, 0]" + "'", str14, "[97, 11, 9, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[98, 0, 0, 1]" + "'", str15, "[98, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[98, 1, 1, 1]" + "'", str16, "[98, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[98, 2, 2, 1]" + "'", str17, "[98, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[98, 3, 3, 1]" + "'", str18, "[98, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[98, 4, 4, 1]" + "'", str19, "[98, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[98, 5, 5, 1]" + "'", str20, "[98, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[98, 6, 6, 1]" + "'", str21, "[98, 6, 6, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[98, 7, 7, 1]" + "'", str22, "[98, 7, 7, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[98, 8, 8, 1]" + "'", str23, "[98, 8, 8, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[98, 9, 9, 1]" + "'", str24, "[98, 9, 9, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[99, 0, 0, 2]" + "'", str25, "[99, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[99, 1, 1, 2]" + "'", str26, "[99, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[99, 2, 2, 2]" + "'", str27, "[99, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[99, 3, 3, 2]" + "'", str28, "[99, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[99, 4, 4, 2]" + "'", str29, "[99, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[99, 5, 5, 2]" + "'", str30, "[99, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[99, 6, 6, 2]" + "'", str31, "[99, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[99, 7, 7, 2]" + "'", str32, "[99, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[99, 8, 8, 2]" + "'", str33, "[99, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[99, 9, 9, 2]" + "'", str34, "[99, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 0, 0, 3]" + "'", str35, "[100, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 1, 1, 3]" + "'", str36, "[100, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 2, 2, 3]" + "'", str37, "[100, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 3, 3, 3]" + "'", str38, "[100, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 4, 4, 3]" + "'", str39, "[100, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 5, 5, 3]" + "'", str40, "[100, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 6, 6, 3]" + "'", str41, "[100, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 7, 7, 3]" + "'", str42, "[100, 7, 7, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 8, 8, 3]" + "'", str43, "[100, 8, 8, 3]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 9, 9, 3]" + "'", str44, "[100, 9, 9, 3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[101, 0, 0, 4]" + "'", str45, "[101, 0, 0, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[101, 1, 1, 4]" + "'", str46, "[101, 1, 1, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[101, 2, 2, 4]" + "'", str47, "[101, 2, 2, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[101, 3, 3, 4]" + "'", str48, "[101, 3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[101, 4, 4, 4]" + "'", str49, "[101, 4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[101, 5, 5, 4]" + "'", str50, "[101, 5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[101, 6, 6, 4]" + "'", str51, "[101, 6, 6, 4]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[101, 7, 7, 4]" + "'", str52, "[101, 7, 7, 4]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[101, 8, 8, 4]" + "'", str53, "[101, 8, 8, 4]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[101, 9, 9, 4]" + "'", str54, "[101, 9, 9, 4]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[102, 0, 0, 5]" + "'", str55, "[102, 0, 0, 5]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[102, 1, 1, 5]" + "'", str56, "[102, 1, 1, 5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[102, 2, 2, 5]" + "'", str57, "[102, 2, 2, 5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[102, 3, 3, 5]" + "'", str58, "[102, 3, 3, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[102, 4, 4, 5]" + "'", str59, "[102, 4, 4, 5]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[102, 5, 5, 5]" + "'", str60, "[102, 5, 5, 5]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[102, 6, 6, 5]" + "'", str61, "[102, 6, 6, 5]");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test2576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2576");
        int[] intArray4 = new int[] { (short) 100, 'a', 100, '4' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass52 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 144, 147, 52]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 98, 101, 52]" + "'", str5, "[100, 98, 101, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 99, 102, 52]" + "'", str6, "[100, 99, 102, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 100, 103, 52]" + "'", str7, "[100, 100, 103, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 101, 104, 52]" + "'", str8, "[100, 101, 104, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 102, 105, 52]" + "'", str9, "[100, 102, 105, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 103, 106, 52]" + "'", str10, "[100, 103, 106, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 104, 107, 52]" + "'", str11, "[100, 104, 107, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 105, 108, 52]" + "'", str12, "[100, 105, 108, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 106, 109, 52]" + "'", str13, "[100, 106, 109, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 107, 110, 52]" + "'", str14, "[100, 107, 110, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 108, 111, 52]" + "'", str15, "[100, 108, 111, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 109, 112, 52]" + "'", str16, "[100, 109, 112, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 110, 113, 52]" + "'", str17, "[100, 110, 113, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 111, 114, 52]" + "'", str18, "[100, 111, 114, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 112, 115, 52]" + "'", str19, "[100, 112, 115, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 113, 116, 52]" + "'", str20, "[100, 113, 116, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 114, 117, 52]" + "'", str21, "[100, 114, 117, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 115, 118, 52]" + "'", str22, "[100, 115, 118, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 116, 119, 52]" + "'", str23, "[100, 116, 119, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 117, 120, 52]" + "'", str24, "[100, 117, 120, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 118, 121, 52]" + "'", str25, "[100, 118, 121, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 119, 122, 52]" + "'", str26, "[100, 119, 122, 52]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 120, 123, 52]" + "'", str27, "[100, 120, 123, 52]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 121, 124, 52]" + "'", str28, "[100, 121, 124, 52]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 122, 125, 52]" + "'", str29, "[100, 122, 125, 52]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 123, 126, 52]" + "'", str30, "[100, 123, 126, 52]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 124, 127, 52]" + "'", str31, "[100, 124, 127, 52]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 125, 128, 52]" + "'", str32, "[100, 125, 128, 52]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 126, 129, 52]" + "'", str33, "[100, 126, 129, 52]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 127, 130, 52]" + "'", str34, "[100, 127, 130, 52]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 128, 131, 52]" + "'", str35, "[100, 128, 131, 52]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 129, 132, 52]" + "'", str36, "[100, 129, 132, 52]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 130, 133, 52]" + "'", str37, "[100, 130, 133, 52]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 131, 134, 52]" + "'", str38, "[100, 131, 134, 52]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 132, 135, 52]" + "'", str39, "[100, 132, 135, 52]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 133, 136, 52]" + "'", str40, "[100, 133, 136, 52]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 134, 137, 52]" + "'", str41, "[100, 134, 137, 52]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 135, 138, 52]" + "'", str42, "[100, 135, 138, 52]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 136, 139, 52]" + "'", str43, "[100, 136, 139, 52]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 137, 140, 52]" + "'", str44, "[100, 137, 140, 52]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 138, 141, 52]" + "'", str45, "[100, 138, 141, 52]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 139, 142, 52]" + "'", str46, "[100, 139, 142, 52]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 140, 143, 52]" + "'", str47, "[100, 140, 143, 52]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 141, 144, 52]" + "'", str48, "[100, 141, 144, 52]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 142, 145, 52]" + "'", str49, "[100, 142, 145, 52]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 143, 146, 52]" + "'", str50, "[100, 143, 146, 52]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 144, 147, 52]" + "'", str51, "[100, 144, 147, 52]");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test2577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2577");
        int[] intArray5 = new int[] { 1, (byte) 0, (short) 100, 0, (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass30 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 124, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 0, 1]" + "'", str6, "[1, 0, 101, 0, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 0, 1]" + "'", str7, "[1, 0, 102, 0, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 0, 1]" + "'", str8, "[1, 0, 103, 0, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 0, 1]" + "'", str9, "[1, 0, 104, 0, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 0, 1]" + "'", str10, "[1, 0, 105, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 0, 1]" + "'", str11, "[1, 0, 106, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 0, 1]" + "'", str12, "[1, 0, 107, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 108, 0, 1]" + "'", str13, "[1, 0, 108, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 109, 0, 1]" + "'", str14, "[1, 0, 109, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 110, 0, 1]" + "'", str15, "[1, 0, 110, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 111, 0, 1]" + "'", str16, "[1, 0, 111, 0, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 0, 112, 0, 1]" + "'", str17, "[1, 0, 112, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 0, 113, 0, 1]" + "'", str18, "[1, 0, 113, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 0, 114, 0, 1]" + "'", str19, "[1, 0, 114, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 0, 115, 0, 1]" + "'", str20, "[1, 0, 115, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 116, 0, 1]" + "'", str21, "[1, 0, 116, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 117, 0, 1]" + "'", str22, "[1, 0, 117, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 118, 0, 1]" + "'", str23, "[1, 0, 118, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 119, 0, 1]" + "'", str24, "[1, 0, 119, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 0, 120, 0, 1]" + "'", str25, "[1, 0, 120, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 0, 121, 0, 1]" + "'", str26, "[1, 0, 121, 0, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 0, 122, 0, 1]" + "'", str27, "[1, 0, 122, 0, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 0, 123, 0, 1]" + "'", str28, "[1, 0, 123, 0, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 0, 124, 0, 1]" + "'", str29, "[1, 0, 124, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test2578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2578");
        int[] intArray5 = new int[] { 1, (short) 100, (byte) 100, (short) 10, (byte) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass9 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 100, 103, 10, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 100, 101, 10, 1]" + "'", str6, "[1, 100, 101, 10, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 100, 102, 10, 1]" + "'", str7, "[1, 100, 102, 10, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 100, 103, 10, 1]" + "'", str8, "[1, 100, 103, 10, 1]");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test2579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2579");
        int[] intArray5 = new int[] { (short) 100, 'a', ' ', 0, (byte) -1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass67 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 97, 93, 0, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 97, 33, 0, -1]" + "'", str6, "[100, 97, 33, 0, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 97, 34, 0, -1]" + "'", str7, "[100, 97, 34, 0, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 97, 35, 0, -1]" + "'", str8, "[100, 97, 35, 0, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 97, 36, 0, -1]" + "'", str9, "[100, 97, 36, 0, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 97, 37, 0, -1]" + "'", str10, "[100, 97, 37, 0, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 97, 38, 0, -1]" + "'", str11, "[100, 97, 38, 0, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 97, 39, 0, -1]" + "'", str12, "[100, 97, 39, 0, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 97, 40, 0, -1]" + "'", str13, "[100, 97, 40, 0, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 97, 41, 0, -1]" + "'", str14, "[100, 97, 41, 0, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 97, 42, 0, -1]" + "'", str15, "[100, 97, 42, 0, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 97, 43, 0, -1]" + "'", str16, "[100, 97, 43, 0, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 97, 44, 0, -1]" + "'", str17, "[100, 97, 44, 0, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 97, 45, 0, -1]" + "'", str18, "[100, 97, 45, 0, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 97, 46, 0, -1]" + "'", str19, "[100, 97, 46, 0, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 97, 47, 0, -1]" + "'", str20, "[100, 97, 47, 0, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 97, 48, 0, -1]" + "'", str21, "[100, 97, 48, 0, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 97, 49, 0, -1]" + "'", str22, "[100, 97, 49, 0, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 97, 50, 0, -1]" + "'", str23, "[100, 97, 50, 0, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 97, 51, 0, -1]" + "'", str24, "[100, 97, 51, 0, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 97, 52, 0, -1]" + "'", str25, "[100, 97, 52, 0, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 97, 53, 0, -1]" + "'", str26, "[100, 97, 53, 0, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 97, 54, 0, -1]" + "'", str27, "[100, 97, 54, 0, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 97, 55, 0, -1]" + "'", str28, "[100, 97, 55, 0, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 97, 56, 0, -1]" + "'", str29, "[100, 97, 56, 0, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 97, 57, 0, -1]" + "'", str30, "[100, 97, 57, 0, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 97, 58, 0, -1]" + "'", str31, "[100, 97, 58, 0, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 97, 59, 0, -1]" + "'", str32, "[100, 97, 59, 0, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 97, 60, 0, -1]" + "'", str33, "[100, 97, 60, 0, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 97, 61, 0, -1]" + "'", str34, "[100, 97, 61, 0, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 97, 62, 0, -1]" + "'", str35, "[100, 97, 62, 0, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 97, 63, 0, -1]" + "'", str36, "[100, 97, 63, 0, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 97, 64, 0, -1]" + "'", str37, "[100, 97, 64, 0, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 97, 65, 0, -1]" + "'", str38, "[100, 97, 65, 0, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 97, 66, 0, -1]" + "'", str39, "[100, 97, 66, 0, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 97, 67, 0, -1]" + "'", str40, "[100, 97, 67, 0, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 97, 68, 0, -1]" + "'", str41, "[100, 97, 68, 0, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 97, 69, 0, -1]" + "'", str42, "[100, 97, 69, 0, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 97, 70, 0, -1]" + "'", str43, "[100, 97, 70, 0, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 97, 71, 0, -1]" + "'", str44, "[100, 97, 71, 0, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 97, 72, 0, -1]" + "'", str45, "[100, 97, 72, 0, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 97, 73, 0, -1]" + "'", str46, "[100, 97, 73, 0, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 97, 74, 0, -1]" + "'", str47, "[100, 97, 74, 0, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 97, 75, 0, -1]" + "'", str48, "[100, 97, 75, 0, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 97, 76, 0, -1]" + "'", str49, "[100, 97, 76, 0, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 97, 77, 0, -1]" + "'", str50, "[100, 97, 77, 0, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 97, 78, 0, -1]" + "'", str51, "[100, 97, 78, 0, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 97, 79, 0, -1]" + "'", str52, "[100, 97, 79, 0, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 97, 80, 0, -1]" + "'", str53, "[100, 97, 80, 0, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 97, 81, 0, -1]" + "'", str54, "[100, 97, 81, 0, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 97, 82, 0, -1]" + "'", str55, "[100, 97, 82, 0, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 97, 83, 0, -1]" + "'", str56, "[100, 97, 83, 0, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 97, 84, 0, -1]" + "'", str57, "[100, 97, 84, 0, -1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 97, 85, 0, -1]" + "'", str58, "[100, 97, 85, 0, -1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 97, 86, 0, -1]" + "'", str59, "[100, 97, 86, 0, -1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 97, 87, 0, -1]" + "'", str60, "[100, 97, 87, 0, -1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 97, 88, 0, -1]" + "'", str61, "[100, 97, 88, 0, -1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[100, 97, 89, 0, -1]" + "'", str62, "[100, 97, 89, 0, -1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[100, 97, 90, 0, -1]" + "'", str63, "[100, 97, 90, 0, -1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[100, 97, 91, 0, -1]" + "'", str64, "[100, 97, 91, 0, -1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[100, 97, 92, 0, -1]" + "'", str65, "[100, 97, 92, 0, -1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[100, 97, 93, 0, -1]" + "'", str66, "[100, 97, 93, 0, -1]");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test2580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2580");
        int[] intArray4 = new int[] { (short) 1, (byte) 10, (byte) 0, (-1) };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass61 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[6, 6, 6, 4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 11, 1, -1]" + "'", str5, "[1, 11, 1, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 12, 2, -1]" + "'", str6, "[1, 12, 2, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 13, 3, -1]" + "'", str7, "[1, 13, 3, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 14, 4, -1]" + "'", str8, "[1, 14, 4, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 15, 5, -1]" + "'", str9, "[1, 15, 5, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 16, 6, -1]" + "'", str10, "[1, 16, 6, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 17, 7, -1]" + "'", str11, "[1, 17, 7, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 18, 8, -1]" + "'", str12, "[1, 18, 8, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 19, 9, -1]" + "'", str13, "[1, 19, 9, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 0, 0, 0]" + "'", str14, "[2, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 1, 1, 0]" + "'", str15, "[2, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 2, 2, 0]" + "'", str16, "[2, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 3, 3, 0]" + "'", str17, "[2, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 4, 4, 0]" + "'", str18, "[2, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 5, 5, 0]" + "'", str19, "[2, 5, 5, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 6, 6, 0]" + "'", str20, "[2, 6, 6, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 7, 7, 0]" + "'", str21, "[2, 7, 7, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 8, 8, 0]" + "'", str22, "[2, 8, 8, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 9, 9, 0]" + "'", str23, "[2, 9, 9, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 0, 0, 1]" + "'", str24, "[3, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 1, 1, 1]" + "'", str25, "[3, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 2, 2, 1]" + "'", str26, "[3, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 3, 3, 1]" + "'", str27, "[3, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 4, 4, 1]" + "'", str28, "[3, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[3, 5, 5, 1]" + "'", str29, "[3, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[3, 6, 6, 1]" + "'", str30, "[3, 6, 6, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[3, 7, 7, 1]" + "'", str31, "[3, 7, 7, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[3, 8, 8, 1]" + "'", str32, "[3, 8, 8, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[3, 9, 9, 1]" + "'", str33, "[3, 9, 9, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4, 0, 0, 2]" + "'", str34, "[4, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 1, 1, 2]" + "'", str35, "[4, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 2, 2, 2]" + "'", str36, "[4, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 3, 3, 2]" + "'", str37, "[4, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[4, 4, 4, 2]" + "'", str38, "[4, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[4, 5, 5, 2]" + "'", str39, "[4, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[4, 6, 6, 2]" + "'", str40, "[4, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[4, 7, 7, 2]" + "'", str41, "[4, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[4, 8, 8, 2]" + "'", str42, "[4, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[4, 9, 9, 2]" + "'", str43, "[4, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[5, 0, 0, 3]" + "'", str44, "[5, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[5, 1, 1, 3]" + "'", str45, "[5, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 2, 2, 3]" + "'", str46, "[5, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 3, 3, 3]" + "'", str47, "[5, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 4, 4, 3]" + "'", str48, "[5, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[5, 5, 5, 3]" + "'", str49, "[5, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[5, 6, 6, 3]" + "'", str50, "[5, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[5, 7, 7, 3]" + "'", str51, "[5, 7, 7, 3]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[5, 8, 8, 3]" + "'", str52, "[5, 8, 8, 3]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[5, 9, 9, 3]" + "'", str53, "[5, 9, 9, 3]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[6, 0, 0, 4]" + "'", str54, "[6, 0, 0, 4]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[6, 1, 1, 4]" + "'", str55, "[6, 1, 1, 4]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[6, 2, 2, 4]" + "'", str56, "[6, 2, 2, 4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6, 3, 3, 4]" + "'", str57, "[6, 3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6, 4, 4, 4]" + "'", str58, "[6, 4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 5, 5, 4]" + "'", str59, "[6, 5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[6, 6, 6, 4]" + "'", str60, "[6, 6, 6, 4]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test2581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2581");
        int[] intArray5 = new int[] { 1, (byte) 0, (short) 100, 0, (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass29 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 123, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 0, 1]" + "'", str6, "[1, 0, 101, 0, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 0, 1]" + "'", str7, "[1, 0, 102, 0, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 0, 1]" + "'", str8, "[1, 0, 103, 0, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 0, 1]" + "'", str9, "[1, 0, 104, 0, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 0, 1]" + "'", str10, "[1, 0, 105, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 0, 1]" + "'", str11, "[1, 0, 106, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 0, 1]" + "'", str12, "[1, 0, 107, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 108, 0, 1]" + "'", str13, "[1, 0, 108, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 109, 0, 1]" + "'", str14, "[1, 0, 109, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 110, 0, 1]" + "'", str15, "[1, 0, 110, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 111, 0, 1]" + "'", str16, "[1, 0, 111, 0, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 0, 112, 0, 1]" + "'", str17, "[1, 0, 112, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 0, 113, 0, 1]" + "'", str18, "[1, 0, 113, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 0, 114, 0, 1]" + "'", str19, "[1, 0, 114, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 0, 115, 0, 1]" + "'", str20, "[1, 0, 115, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 116, 0, 1]" + "'", str21, "[1, 0, 116, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 117, 0, 1]" + "'", str22, "[1, 0, 117, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 118, 0, 1]" + "'", str23, "[1, 0, 118, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 119, 0, 1]" + "'", str24, "[1, 0, 119, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 0, 120, 0, 1]" + "'", str25, "[1, 0, 120, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 0, 121, 0, 1]" + "'", str26, "[1, 0, 121, 0, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 0, 122, 0, 1]" + "'", str27, "[1, 0, 122, 0, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 0, 123, 0, 1]" + "'", str28, "[1, 0, 123, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test2582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2582");
        int[] intArray3 = new int[] { ' ', (-1), 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass79 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[39, 4, 8]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 0, 1]" + "'", str4, "[32, 0, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 1, 1]" + "'", str5, "[32, 1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 2, 1]" + "'", str6, "[32, 2, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 3, 1]" + "'", str7, "[32, 3, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 4, 1]" + "'", str8, "[32, 4, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 5, 1]" + "'", str9, "[32, 5, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 6, 1]" + "'", str10, "[32, 6, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 7, 1]" + "'", str11, "[32, 7, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 8, 1]" + "'", str12, "[32, 8, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 9, 1]" + "'", str13, "[32, 9, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[33, 0, 2]" + "'", str14, "[33, 0, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[33, 1, 2]" + "'", str15, "[33, 1, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[33, 2, 2]" + "'", str16, "[33, 2, 2]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[33, 3, 2]" + "'", str17, "[33, 3, 2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[33, 4, 2]" + "'", str18, "[33, 4, 2]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[33, 5, 2]" + "'", str19, "[33, 5, 2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[33, 6, 2]" + "'", str20, "[33, 6, 2]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[33, 7, 2]" + "'", str21, "[33, 7, 2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[33, 8, 2]" + "'", str22, "[33, 8, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[33, 9, 2]" + "'", str23, "[33, 9, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[34, 0, 3]" + "'", str24, "[34, 0, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34, 1, 3]" + "'", str25, "[34, 1, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 2, 3]" + "'", str26, "[34, 2, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[34, 3, 3]" + "'", str27, "[34, 3, 3]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[34, 4, 3]" + "'", str28, "[34, 4, 3]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[34, 5, 3]" + "'", str29, "[34, 5, 3]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[34, 6, 3]" + "'", str30, "[34, 6, 3]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[34, 7, 3]" + "'", str31, "[34, 7, 3]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[34, 8, 3]" + "'", str32, "[34, 8, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[34, 9, 3]" + "'", str33, "[34, 9, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 0, 4]" + "'", str34, "[35, 0, 4]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 1, 4]" + "'", str35, "[35, 1, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 2, 4]" + "'", str36, "[35, 2, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 3, 4]" + "'", str37, "[35, 3, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 4, 4]" + "'", str38, "[35, 4, 4]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 5, 4]" + "'", str39, "[35, 5, 4]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 6, 4]" + "'", str40, "[35, 6, 4]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 7, 4]" + "'", str41, "[35, 7, 4]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 8, 4]" + "'", str42, "[35, 8, 4]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 9, 4]" + "'", str43, "[35, 9, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[36, 0, 5]" + "'", str44, "[36, 0, 5]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[36, 1, 5]" + "'", str45, "[36, 1, 5]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[36, 2, 5]" + "'", str46, "[36, 2, 5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[36, 3, 5]" + "'", str47, "[36, 3, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[36, 4, 5]" + "'", str48, "[36, 4, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[36, 5, 5]" + "'", str49, "[36, 5, 5]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[36, 6, 5]" + "'", str50, "[36, 6, 5]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[36, 7, 5]" + "'", str51, "[36, 7, 5]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[36, 8, 5]" + "'", str52, "[36, 8, 5]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[36, 9, 5]" + "'", str53, "[36, 9, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[37, 0, 6]" + "'", str54, "[37, 0, 6]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[37, 1, 6]" + "'", str55, "[37, 1, 6]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[37, 2, 6]" + "'", str56, "[37, 2, 6]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[37, 3, 6]" + "'", str57, "[37, 3, 6]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[37, 4, 6]" + "'", str58, "[37, 4, 6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[37, 5, 6]" + "'", str59, "[37, 5, 6]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[37, 6, 6]" + "'", str60, "[37, 6, 6]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[37, 7, 6]" + "'", str61, "[37, 7, 6]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[37, 8, 6]" + "'", str62, "[37, 8, 6]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[37, 9, 6]" + "'", str63, "[37, 9, 6]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[38, 0, 7]" + "'", str64, "[38, 0, 7]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[38, 1, 7]" + "'", str65, "[38, 1, 7]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[38, 2, 7]" + "'", str66, "[38, 2, 7]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[38, 3, 7]" + "'", str67, "[38, 3, 7]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[38, 4, 7]" + "'", str68, "[38, 4, 7]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[38, 5, 7]" + "'", str69, "[38, 5, 7]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[38, 6, 7]" + "'", str70, "[38, 6, 7]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[38, 7, 7]" + "'", str71, "[38, 7, 7]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[38, 8, 7]" + "'", str72, "[38, 8, 7]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[38, 9, 7]" + "'", str73, "[38, 9, 7]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[39, 0, 8]" + "'", str74, "[39, 0, 8]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[39, 1, 8]" + "'", str75, "[39, 1, 8]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[39, 2, 8]" + "'", str76, "[39, 2, 8]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[39, 3, 8]" + "'", str77, "[39, 3, 8]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[39, 4, 8]" + "'", str78, "[39, 4, 8]");
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test2583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2583");
        int[] intArray1 = new int[] { (byte) -1 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass70 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[7]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1]" + "'", str32, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1]" + "'", str33, "[1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2]" + "'", str34, "[2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3]" + "'", str35, "[3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4]" + "'", str36, "[4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5]" + "'", str37, "[5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6]" + "'", str38, "[6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7]" + "'", str39, "[7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8]" + "'", str40, "[8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9]" + "'", str41, "[9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1]" + "'", str42, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1]" + "'", str43, "[1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2]" + "'", str44, "[2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3]" + "'", str45, "[3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4]" + "'", str46, "[4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5]" + "'", str47, "[5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6]" + "'", str48, "[6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7]" + "'", str49, "[7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8]" + "'", str50, "[8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9]" + "'", str51, "[9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1]" + "'", str52, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1]" + "'", str53, "[1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2]" + "'", str54, "[2]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[3]" + "'", str55, "[3]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4]" + "'", str56, "[4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5]" + "'", str57, "[5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6]" + "'", str58, "[6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[7]" + "'", str59, "[7]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[8]" + "'", str60, "[8]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[9]" + "'", str61, "[9]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 1]" + "'", str62, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1]" + "'", str63, "[1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[2]" + "'", str64, "[2]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[3]" + "'", str65, "[3]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[4]" + "'", str66, "[4]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[5]" + "'", str67, "[5]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[6]" + "'", str68, "[6]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[7]" + "'", str69, "[7]");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test2584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2584");
        int[] intArray1 = new int[] { (short) 1 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass33 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[2]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[2]" + "'", str2, "[2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[3]" + "'", str3, "[3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[4]" + "'", str4, "[4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[5]" + "'", str5, "[5]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[6]" + "'", str6, "[6]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[7]" + "'", str7, "[7]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[8]" + "'", str8, "[8]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[9]" + "'", str9, "[9]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1]" + "'", str10, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1]" + "'", str11, "[1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[2]" + "'", str12, "[2]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[3]" + "'", str13, "[3]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[4]" + "'", str14, "[4]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[5]" + "'", str15, "[5]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[6]" + "'", str16, "[6]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[7]" + "'", str17, "[7]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[8]" + "'", str18, "[8]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[9]" + "'", str19, "[9]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1]" + "'", str20, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1]" + "'", str21, "[1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2]" + "'", str22, "[2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3]" + "'", str23, "[3]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[4]" + "'", str24, "[4]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[5]" + "'", str25, "[5]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[6]" + "'", str26, "[6]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[7]" + "'", str27, "[7]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[8]" + "'", str28, "[8]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[9]" + "'", str29, "[9]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 1]" + "'", str30, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1]" + "'", str31, "[1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2]" + "'", str32, "[2]");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test2585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2585");
        int[] intArray2 = new int[] { (short) 1, (short) -1 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass89 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[5, 5]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 0]" + "'", str3, "[2, 0]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 1]" + "'", str4, "[3, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 2]" + "'", str5, "[4, 2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 3]" + "'", str6, "[5, 3]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 4]" + "'", str7, "[6, 4]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 5]" + "'", str8, "[7, 5]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 6]" + "'", str9, "[8, 6]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 7]" + "'", str10, "[9, 7]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 8]" + "'", str11, "[10, 8]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 9]" + "'", str12, "[11, 9]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 1]" + "'", str13, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1]" + "'", str14, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2]" + "'", str15, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[3, 3]" + "'", str16, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[4, 4]" + "'", str17, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[5, 5]" + "'", str18, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[6, 6]" + "'", str19, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[7, 7]" + "'", str20, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[8, 8]" + "'", str21, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[9, 9]" + "'", str22, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 1]" + "'", str23, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1]" + "'", str24, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 2]" + "'", str25, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3]" + "'", str26, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[4, 4]" + "'", str27, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[5, 5]" + "'", str28, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[6, 6]" + "'", str29, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[7, 7]" + "'", str30, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[8, 8]" + "'", str31, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[9, 9]" + "'", str32, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 0, 1]" + "'", str33, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1]" + "'", str34, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 2]" + "'", str35, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 3]" + "'", str36, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4]" + "'", str37, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[5, 5]" + "'", str38, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[6, 6]" + "'", str39, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[7, 7]" + "'", str40, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[8, 8]" + "'", str41, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[9, 9]" + "'", str42, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 0, 1]" + "'", str43, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1]" + "'", str44, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[2, 2]" + "'", str45, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 3]" + "'", str46, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 4]" + "'", str47, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5]" + "'", str48, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[6, 6]" + "'", str49, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[7, 7]" + "'", str50, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[8, 8]" + "'", str51, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[9, 9]" + "'", str52, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 0, 1]" + "'", str53, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 1]" + "'", str54, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[2, 2]" + "'", str55, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[3, 3]" + "'", str56, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[4, 4]" + "'", str57, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 5]" + "'", str58, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 6]" + "'", str59, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[7, 7]" + "'", str60, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[8, 8]" + "'", str61, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[9, 9]" + "'", str62, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 0, 1]" + "'", str63, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 1]" + "'", str64, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[2, 2]" + "'", str65, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[3, 3]" + "'", str66, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[4, 4]" + "'", str67, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[5, 5]" + "'", str68, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[6, 6]" + "'", str69, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[7, 7]" + "'", str70, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[8, 8]" + "'", str71, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[9, 9]" + "'", str72, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 0, 1]" + "'", str73, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 1]" + "'", str74, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[2, 2]" + "'", str75, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[3, 3]" + "'", str76, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[4, 4]" + "'", str77, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[5, 5]" + "'", str78, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[6, 6]" + "'", str79, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[7, 7]" + "'", str80, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[8, 8]" + "'", str81, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[9, 9]" + "'", str82, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[1, 0, 1]" + "'", str83, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[1, 1]" + "'", str84, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[2, 2]" + "'", str85, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[3, 3]" + "'", str86, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[4, 4]" + "'", str87, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[5, 5]" + "'", str88, "[5, 5]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2586");
        int[] intArray2 = new int[] { 1, 'a' };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass43 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[41, 137]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 98]" + "'", str3, "[2, 98]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 99]" + "'", str4, "[3, 99]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 100]" + "'", str5, "[4, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 101]" + "'", str6, "[5, 101]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 102]" + "'", str7, "[6, 102]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 103]" + "'", str8, "[7, 103]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 104]" + "'", str9, "[8, 104]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 105]" + "'", str10, "[9, 105]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 106]" + "'", str11, "[10, 106]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 107]" + "'", str12, "[11, 107]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[12, 108]" + "'", str13, "[12, 108]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[13, 109]" + "'", str14, "[13, 109]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[14, 110]" + "'", str15, "[14, 110]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[15, 111]" + "'", str16, "[15, 111]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[16, 112]" + "'", str17, "[16, 112]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[17, 113]" + "'", str18, "[17, 113]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[18, 114]" + "'", str19, "[18, 114]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[19, 115]" + "'", str20, "[19, 115]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[20, 116]" + "'", str21, "[20, 116]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[21, 117]" + "'", str22, "[21, 117]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[22, 118]" + "'", str23, "[22, 118]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[23, 119]" + "'", str24, "[23, 119]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[24, 120]" + "'", str25, "[24, 120]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[25, 121]" + "'", str26, "[25, 121]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[26, 122]" + "'", str27, "[26, 122]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[27, 123]" + "'", str28, "[27, 123]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[28, 124]" + "'", str29, "[28, 124]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[29, 125]" + "'", str30, "[29, 125]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[30, 126]" + "'", str31, "[30, 126]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[31, 127]" + "'", str32, "[31, 127]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[32, 128]" + "'", str33, "[32, 128]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[33, 129]" + "'", str34, "[33, 129]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[34, 130]" + "'", str35, "[34, 130]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 131]" + "'", str36, "[35, 131]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[36, 132]" + "'", str37, "[36, 132]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[37, 133]" + "'", str38, "[37, 133]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[38, 134]" + "'", str39, "[38, 134]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[39, 135]" + "'", str40, "[39, 135]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[40, 136]" + "'", str41, "[40, 136]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[41, 137]" + "'", str42, "[41, 137]");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test2587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2587");
        int[] intArray6 = new int[] { (short) 1, 1, ' ', ' ', 10, (-1) };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str90 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str91 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str92 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str93 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str94 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str95 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str96 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str97 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass98 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 1, 123, 123, 10, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1, 33, 33, 10, -1]" + "'", str7, "[1, 1, 33, 33, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1, 34, 34, 10, -1]" + "'", str8, "[1, 1, 34, 34, 10, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1, 35, 35, 10, -1]" + "'", str9, "[1, 1, 35, 35, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1, 36, 36, 10, -1]" + "'", str10, "[1, 1, 36, 36, 10, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1, 37, 37, 10, -1]" + "'", str11, "[1, 1, 37, 37, 10, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1, 38, 38, 10, -1]" + "'", str12, "[1, 1, 38, 38, 10, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 39, 39, 10, -1]" + "'", str13, "[1, 1, 39, 39, 10, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1, 40, 40, 10, -1]" + "'", str14, "[1, 1, 40, 40, 10, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 1, 41, 41, 10, -1]" + "'", str15, "[1, 1, 41, 41, 10, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 42, 42, 10, -1]" + "'", str16, "[1, 1, 42, 42, 10, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 1, 43, 43, 10, -1]" + "'", str17, "[1, 1, 43, 43, 10, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 1, 44, 44, 10, -1]" + "'", str18, "[1, 1, 44, 44, 10, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 1, 45, 45, 10, -1]" + "'", str19, "[1, 1, 45, 45, 10, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1, 46, 46, 10, -1]" + "'", str20, "[1, 1, 46, 46, 10, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1, 47, 47, 10, -1]" + "'", str21, "[1, 1, 47, 47, 10, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1, 48, 48, 10, -1]" + "'", str22, "[1, 1, 48, 48, 10, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 49, 49, 10, -1]" + "'", str23, "[1, 1, 49, 49, 10, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1, 50, 50, 10, -1]" + "'", str24, "[1, 1, 50, 50, 10, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1, 51, 51, 10, -1]" + "'", str25, "[1, 1, 51, 51, 10, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 1, 52, 52, 10, -1]" + "'", str26, "[1, 1, 52, 52, 10, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 1, 53, 53, 10, -1]" + "'", str27, "[1, 1, 53, 53, 10, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 1, 54, 54, 10, -1]" + "'", str28, "[1, 1, 54, 54, 10, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 1, 55, 55, 10, -1]" + "'", str29, "[1, 1, 55, 55, 10, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 1, 56, 56, 10, -1]" + "'", str30, "[1, 1, 56, 56, 10, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 1, 57, 57, 10, -1]" + "'", str31, "[1, 1, 57, 57, 10, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1, 58, 58, 10, -1]" + "'", str32, "[1, 1, 58, 58, 10, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1, 59, 59, 10, -1]" + "'", str33, "[1, 1, 59, 59, 10, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1, 60, 60, 10, -1]" + "'", str34, "[1, 1, 60, 60, 10, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 1, 61, 61, 10, -1]" + "'", str35, "[1, 1, 61, 61, 10, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 1, 62, 62, 10, -1]" + "'", str36, "[1, 1, 62, 62, 10, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 1, 63, 63, 10, -1]" + "'", str37, "[1, 1, 63, 63, 10, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 1, 64, 64, 10, -1]" + "'", str38, "[1, 1, 64, 64, 10, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 1, 65, 65, 10, -1]" + "'", str39, "[1, 1, 65, 65, 10, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 1, 66, 66, 10, -1]" + "'", str40, "[1, 1, 66, 66, 10, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 1, 67, 67, 10, -1]" + "'", str41, "[1, 1, 67, 67, 10, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1, 68, 68, 10, -1]" + "'", str42, "[1, 1, 68, 68, 10, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1, 69, 69, 10, -1]" + "'", str43, "[1, 1, 69, 69, 10, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1, 70, 70, 10, -1]" + "'", str44, "[1, 1, 70, 70, 10, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 1, 71, 71, 10, -1]" + "'", str45, "[1, 1, 71, 71, 10, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 1, 72, 72, 10, -1]" + "'", str46, "[1, 1, 72, 72, 10, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 1, 73, 73, 10, -1]" + "'", str47, "[1, 1, 73, 73, 10, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 1, 74, 74, 10, -1]" + "'", str48, "[1, 1, 74, 74, 10, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 1, 75, 75, 10, -1]" + "'", str49, "[1, 1, 75, 75, 10, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 1, 76, 76, 10, -1]" + "'", str50, "[1, 1, 76, 76, 10, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 1, 77, 77, 10, -1]" + "'", str51, "[1, 1, 77, 77, 10, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1, 78, 78, 10, -1]" + "'", str52, "[1, 1, 78, 78, 10, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 1, 79, 79, 10, -1]" + "'", str53, "[1, 1, 79, 79, 10, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 1, 80, 80, 10, -1]" + "'", str54, "[1, 1, 80, 80, 10, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 1, 81, 81, 10, -1]" + "'", str55, "[1, 1, 81, 81, 10, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 1, 82, 82, 10, -1]" + "'", str56, "[1, 1, 82, 82, 10, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 1, 83, 83, 10, -1]" + "'", str57, "[1, 1, 83, 83, 10, -1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 1, 84, 84, 10, -1]" + "'", str58, "[1, 1, 84, 84, 10, -1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 1, 85, 85, 10, -1]" + "'", str59, "[1, 1, 85, 85, 10, -1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 1, 86, 86, 10, -1]" + "'", str60, "[1, 1, 86, 86, 10, -1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 1, 87, 87, 10, -1]" + "'", str61, "[1, 1, 87, 87, 10, -1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 1, 88, 88, 10, -1]" + "'", str62, "[1, 1, 88, 88, 10, -1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 1, 89, 89, 10, -1]" + "'", str63, "[1, 1, 89, 89, 10, -1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 1, 90, 90, 10, -1]" + "'", str64, "[1, 1, 90, 90, 10, -1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 1, 91, 91, 10, -1]" + "'", str65, "[1, 1, 91, 91, 10, -1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 1, 92, 92, 10, -1]" + "'", str66, "[1, 1, 92, 92, 10, -1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 1, 93, 93, 10, -1]" + "'", str67, "[1, 1, 93, 93, 10, -1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 1, 94, 94, 10, -1]" + "'", str68, "[1, 1, 94, 94, 10, -1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 1, 95, 95, 10, -1]" + "'", str69, "[1, 1, 95, 95, 10, -1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 1, 96, 96, 10, -1]" + "'", str70, "[1, 1, 96, 96, 10, -1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 1, 97, 97, 10, -1]" + "'", str71, "[1, 1, 97, 97, 10, -1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 1, 98, 98, 10, -1]" + "'", str72, "[1, 1, 98, 98, 10, -1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 1, 99, 99, 10, -1]" + "'", str73, "[1, 1, 99, 99, 10, -1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 1, 100, 100, 10, -1]" + "'", str74, "[1, 1, 100, 100, 10, -1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[1, 1, 101, 101, 10, -1]" + "'", str75, "[1, 1, 101, 101, 10, -1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[1, 1, 102, 102, 10, -1]" + "'", str76, "[1, 1, 102, 102, 10, -1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[1, 1, 103, 103, 10, -1]" + "'", str77, "[1, 1, 103, 103, 10, -1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[1, 1, 104, 104, 10, -1]" + "'", str78, "[1, 1, 104, 104, 10, -1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[1, 1, 105, 105, 10, -1]" + "'", str79, "[1, 1, 105, 105, 10, -1]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[1, 1, 106, 106, 10, -1]" + "'", str80, "[1, 1, 106, 106, 10, -1]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[1, 1, 107, 107, 10, -1]" + "'", str81, "[1, 1, 107, 107, 10, -1]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[1, 1, 108, 108, 10, -1]" + "'", str82, "[1, 1, 108, 108, 10, -1]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[1, 1, 109, 109, 10, -1]" + "'", str83, "[1, 1, 109, 109, 10, -1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[1, 1, 110, 110, 10, -1]" + "'", str84, "[1, 1, 110, 110, 10, -1]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[1, 1, 111, 111, 10, -1]" + "'", str85, "[1, 1, 111, 111, 10, -1]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[1, 1, 112, 112, 10, -1]" + "'", str86, "[1, 1, 112, 112, 10, -1]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[1, 1, 113, 113, 10, -1]" + "'", str87, "[1, 1, 113, 113, 10, -1]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[1, 1, 114, 114, 10, -1]" + "'", str88, "[1, 1, 114, 114, 10, -1]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[1, 1, 115, 115, 10, -1]" + "'", str89, "[1, 1, 115, 115, 10, -1]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[1, 1, 116, 116, 10, -1]" + "'", str90, "[1, 1, 116, 116, 10, -1]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[1, 1, 117, 117, 10, -1]" + "'", str91, "[1, 1, 117, 117, 10, -1]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[1, 1, 118, 118, 10, -1]" + "'", str92, "[1, 1, 118, 118, 10, -1]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[1, 1, 119, 119, 10, -1]" + "'", str93, "[1, 1, 119, 119, 10, -1]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "[1, 1, 120, 120, 10, -1]" + "'", str94, "[1, 1, 120, 120, 10, -1]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "[1, 1, 121, 121, 10, -1]" + "'", str95, "[1, 1, 121, 121, 10, -1]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "[1, 1, 122, 122, 10, -1]" + "'", str96, "[1, 1, 122, 122, 10, -1]");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "[1, 1, 123, 123, 10, -1]" + "'", str97, "[1, 1, 123, 123, 10, -1]");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2588");
        int[] intArray3 = new int[] { (short) 10, (short) 0, (short) 10 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass69 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[16, 5, 16]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[10, 1, 10]" + "'", str4, "[10, 1, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 2, 10]" + "'", str5, "[10, 2, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 3, 10]" + "'", str6, "[10, 3, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 4, 10]" + "'", str7, "[10, 4, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 5, 10]" + "'", str8, "[10, 5, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 6, 10]" + "'", str9, "[10, 6, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 7, 10]" + "'", str10, "[10, 7, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 8, 10]" + "'", str11, "[10, 8, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 9, 10]" + "'", str12, "[10, 9, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[11, 0, 11]" + "'", str13, "[11, 0, 11]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[11, 1, 11]" + "'", str14, "[11, 1, 11]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[11, 2, 11]" + "'", str15, "[11, 2, 11]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[11, 3, 11]" + "'", str16, "[11, 3, 11]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[11, 4, 11]" + "'", str17, "[11, 4, 11]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[11, 5, 11]" + "'", str18, "[11, 5, 11]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[11, 6, 11]" + "'", str19, "[11, 6, 11]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[11, 7, 11]" + "'", str20, "[11, 7, 11]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[11, 8, 11]" + "'", str21, "[11, 8, 11]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[11, 9, 11]" + "'", str22, "[11, 9, 11]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[12, 0, 12]" + "'", str23, "[12, 0, 12]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[12, 1, 12]" + "'", str24, "[12, 1, 12]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[12, 2, 12]" + "'", str25, "[12, 2, 12]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[12, 3, 12]" + "'", str26, "[12, 3, 12]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[12, 4, 12]" + "'", str27, "[12, 4, 12]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[12, 5, 12]" + "'", str28, "[12, 5, 12]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[12, 6, 12]" + "'", str29, "[12, 6, 12]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[12, 7, 12]" + "'", str30, "[12, 7, 12]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[12, 8, 12]" + "'", str31, "[12, 8, 12]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[12, 9, 12]" + "'", str32, "[12, 9, 12]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[13, 0, 13]" + "'", str33, "[13, 0, 13]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[13, 1, 13]" + "'", str34, "[13, 1, 13]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[13, 2, 13]" + "'", str35, "[13, 2, 13]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[13, 3, 13]" + "'", str36, "[13, 3, 13]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[13, 4, 13]" + "'", str37, "[13, 4, 13]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[13, 5, 13]" + "'", str38, "[13, 5, 13]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[13, 6, 13]" + "'", str39, "[13, 6, 13]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[13, 7, 13]" + "'", str40, "[13, 7, 13]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[13, 8, 13]" + "'", str41, "[13, 8, 13]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[13, 9, 13]" + "'", str42, "[13, 9, 13]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[14, 0, 14]" + "'", str43, "[14, 0, 14]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[14, 1, 14]" + "'", str44, "[14, 1, 14]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[14, 2, 14]" + "'", str45, "[14, 2, 14]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[14, 3, 14]" + "'", str46, "[14, 3, 14]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[14, 4, 14]" + "'", str47, "[14, 4, 14]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[14, 5, 14]" + "'", str48, "[14, 5, 14]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[14, 6, 14]" + "'", str49, "[14, 6, 14]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[14, 7, 14]" + "'", str50, "[14, 7, 14]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[14, 8, 14]" + "'", str51, "[14, 8, 14]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[14, 9, 14]" + "'", str52, "[14, 9, 14]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[15, 0, 15]" + "'", str53, "[15, 0, 15]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[15, 1, 15]" + "'", str54, "[15, 1, 15]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[15, 2, 15]" + "'", str55, "[15, 2, 15]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[15, 3, 15]" + "'", str56, "[15, 3, 15]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[15, 4, 15]" + "'", str57, "[15, 4, 15]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[15, 5, 15]" + "'", str58, "[15, 5, 15]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[15, 6, 15]" + "'", str59, "[15, 6, 15]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[15, 7, 15]" + "'", str60, "[15, 7, 15]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[15, 8, 15]" + "'", str61, "[15, 8, 15]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[15, 9, 15]" + "'", str62, "[15, 9, 15]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[16, 0, 16]" + "'", str63, "[16, 0, 16]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[16, 1, 16]" + "'", str64, "[16, 1, 16]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[16, 2, 16]" + "'", str65, "[16, 2, 16]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[16, 3, 16]" + "'", str66, "[16, 3, 16]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[16, 4, 16]" + "'", str67, "[16, 4, 16]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[16, 5, 16]" + "'", str68, "[16, 5, 16]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test2589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2589");
        int[] intArray3 = new int[] { 0, (-1), (short) 100 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass6 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 1, 100]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 0, 100]" + "'", str4, "[0, 0, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 1, 100]" + "'", str5, "[0, 1, 100]");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test2590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2590");
        int[] intArray3 = new int[] { ' ', '#', (short) 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass25 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[32, 56, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 36, 1]" + "'", str4, "[32, 36, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 37, 1]" + "'", str5, "[32, 37, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 38, 1]" + "'", str6, "[32, 38, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 39, 1]" + "'", str7, "[32, 39, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 40, 1]" + "'", str8, "[32, 40, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 41, 1]" + "'", str9, "[32, 41, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 42, 1]" + "'", str10, "[32, 42, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 43, 1]" + "'", str11, "[32, 43, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 44, 1]" + "'", str12, "[32, 44, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 45, 1]" + "'", str13, "[32, 45, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 46, 1]" + "'", str14, "[32, 46, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[32, 47, 1]" + "'", str15, "[32, 47, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[32, 48, 1]" + "'", str16, "[32, 48, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[32, 49, 1]" + "'", str17, "[32, 49, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[32, 50, 1]" + "'", str18, "[32, 50, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[32, 51, 1]" + "'", str19, "[32, 51, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[32, 52, 1]" + "'", str20, "[32, 52, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[32, 53, 1]" + "'", str21, "[32, 53, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[32, 54, 1]" + "'", str22, "[32, 54, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32, 55, 1]" + "'", str23, "[32, 55, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 56, 1]" + "'", str24, "[32, 56, 1]");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test2591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2591");
        int[] intArray5 = new int[] { (short) 1, 0, (byte) 100, '4', (byte) 0 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass23 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 117, 52, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 52, 0]" + "'", str6, "[1, 0, 101, 52, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 52, 0]" + "'", str7, "[1, 0, 102, 52, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 52, 0]" + "'", str8, "[1, 0, 103, 52, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 52, 0]" + "'", str9, "[1, 0, 104, 52, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 52, 0]" + "'", str10, "[1, 0, 105, 52, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 52, 0]" + "'", str11, "[1, 0, 106, 52, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 52, 0]" + "'", str12, "[1, 0, 107, 52, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 108, 52, 0]" + "'", str13, "[1, 0, 108, 52, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 109, 52, 0]" + "'", str14, "[1, 0, 109, 52, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 110, 52, 0]" + "'", str15, "[1, 0, 110, 52, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 111, 52, 0]" + "'", str16, "[1, 0, 111, 52, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 0, 112, 52, 0]" + "'", str17, "[1, 0, 112, 52, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 0, 113, 52, 0]" + "'", str18, "[1, 0, 113, 52, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 0, 114, 52, 0]" + "'", str19, "[1, 0, 114, 52, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 0, 115, 52, 0]" + "'", str20, "[1, 0, 115, 52, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 116, 52, 0]" + "'", str21, "[1, 0, 116, 52, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 117, 52, 0]" + "'", str22, "[1, 0, 117, 52, 0]");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test2592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2592");
        int[] intArray5 = new int[] { (short) 1, 0, (byte) 100, '4', (byte) 0 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass24 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 118, 52, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 52, 0]" + "'", str6, "[1, 0, 101, 52, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 52, 0]" + "'", str7, "[1, 0, 102, 52, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 52, 0]" + "'", str8, "[1, 0, 103, 52, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 52, 0]" + "'", str9, "[1, 0, 104, 52, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 52, 0]" + "'", str10, "[1, 0, 105, 52, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 52, 0]" + "'", str11, "[1, 0, 106, 52, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 52, 0]" + "'", str12, "[1, 0, 107, 52, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 108, 52, 0]" + "'", str13, "[1, 0, 108, 52, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 109, 52, 0]" + "'", str14, "[1, 0, 109, 52, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 110, 52, 0]" + "'", str15, "[1, 0, 110, 52, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 111, 52, 0]" + "'", str16, "[1, 0, 111, 52, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 0, 112, 52, 0]" + "'", str17, "[1, 0, 112, 52, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 0, 113, 52, 0]" + "'", str18, "[1, 0, 113, 52, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 0, 114, 52, 0]" + "'", str19, "[1, 0, 114, 52, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 0, 115, 52, 0]" + "'", str20, "[1, 0, 115, 52, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 116, 52, 0]" + "'", str21, "[1, 0, 116, 52, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 117, 52, 0]" + "'", str22, "[1, 0, 117, 52, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 118, 52, 0]" + "'", str23, "[1, 0, 118, 52, 0]");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test2593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2593");
        int[] intArray5 = new int[] { 'a', '4', 10, (-1), 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass13 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[97, 52, 17, -1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 52, 11, -1, 1]" + "'", str6, "[97, 52, 11, -1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 52, 12, -1, 1]" + "'", str7, "[97, 52, 12, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 52, 13, -1, 1]" + "'", str8, "[97, 52, 13, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 52, 14, -1, 1]" + "'", str9, "[97, 52, 14, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 52, 15, -1, 1]" + "'", str10, "[97, 52, 15, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 52, 16, -1, 1]" + "'", str11, "[97, 52, 16, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 52, 17, -1, 1]" + "'", str12, "[97, 52, 17, -1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test2594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2594");
        int[] intArray3 = new int[] { '#', (byte) 100, 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass80 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[35, 176, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[35, 101, 1]" + "'", str4, "[35, 101, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 102, 1]" + "'", str5, "[35, 102, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 103, 1]" + "'", str6, "[35, 103, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 104, 1]" + "'", str7, "[35, 104, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 105, 1]" + "'", str8, "[35, 105, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 106, 1]" + "'", str9, "[35, 106, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 107, 1]" + "'", str10, "[35, 107, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 108, 1]" + "'", str11, "[35, 108, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 109, 1]" + "'", str12, "[35, 109, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 110, 1]" + "'", str13, "[35, 110, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 111, 1]" + "'", str14, "[35, 111, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[35, 112, 1]" + "'", str15, "[35, 112, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[35, 113, 1]" + "'", str16, "[35, 113, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[35, 114, 1]" + "'", str17, "[35, 114, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[35, 115, 1]" + "'", str18, "[35, 115, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[35, 116, 1]" + "'", str19, "[35, 116, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[35, 117, 1]" + "'", str20, "[35, 117, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[35, 118, 1]" + "'", str21, "[35, 118, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[35, 119, 1]" + "'", str22, "[35, 119, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[35, 120, 1]" + "'", str23, "[35, 120, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[35, 121, 1]" + "'", str24, "[35, 121, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[35, 122, 1]" + "'", str25, "[35, 122, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35, 123, 1]" + "'", str26, "[35, 123, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 124, 1]" + "'", str27, "[35, 124, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[35, 125, 1]" + "'", str28, "[35, 125, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[35, 126, 1]" + "'", str29, "[35, 126, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[35, 127, 1]" + "'", str30, "[35, 127, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[35, 128, 1]" + "'", str31, "[35, 128, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 129, 1]" + "'", str32, "[35, 129, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 130, 1]" + "'", str33, "[35, 130, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 131, 1]" + "'", str34, "[35, 131, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 132, 1]" + "'", str35, "[35, 132, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 133, 1]" + "'", str36, "[35, 133, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 134, 1]" + "'", str37, "[35, 134, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 135, 1]" + "'", str38, "[35, 135, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 136, 1]" + "'", str39, "[35, 136, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 137, 1]" + "'", str40, "[35, 137, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 138, 1]" + "'", str41, "[35, 138, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 139, 1]" + "'", str42, "[35, 139, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 140, 1]" + "'", str43, "[35, 140, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[35, 141, 1]" + "'", str44, "[35, 141, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[35, 142, 1]" + "'", str45, "[35, 142, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[35, 143, 1]" + "'", str46, "[35, 143, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[35, 144, 1]" + "'", str47, "[35, 144, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[35, 145, 1]" + "'", str48, "[35, 145, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[35, 146, 1]" + "'", str49, "[35, 146, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[35, 147, 1]" + "'", str50, "[35, 147, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[35, 148, 1]" + "'", str51, "[35, 148, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[35, 149, 1]" + "'", str52, "[35, 149, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[35, 150, 1]" + "'", str53, "[35, 150, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[35, 151, 1]" + "'", str54, "[35, 151, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[35, 152, 1]" + "'", str55, "[35, 152, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[35, 153, 1]" + "'", str56, "[35, 153, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[35, 154, 1]" + "'", str57, "[35, 154, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[35, 155, 1]" + "'", str58, "[35, 155, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[35, 156, 1]" + "'", str59, "[35, 156, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[35, 157, 1]" + "'", str60, "[35, 157, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[35, 158, 1]" + "'", str61, "[35, 158, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[35, 159, 1]" + "'", str62, "[35, 159, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[35, 160, 1]" + "'", str63, "[35, 160, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[35, 161, 1]" + "'", str64, "[35, 161, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[35, 162, 1]" + "'", str65, "[35, 162, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[35, 163, 1]" + "'", str66, "[35, 163, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[35, 164, 1]" + "'", str67, "[35, 164, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[35, 165, 1]" + "'", str68, "[35, 165, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[35, 166, 1]" + "'", str69, "[35, 166, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[35, 167, 1]" + "'", str70, "[35, 167, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[35, 168, 1]" + "'", str71, "[35, 168, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[35, 169, 1]" + "'", str72, "[35, 169, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[35, 170, 1]" + "'", str73, "[35, 170, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[35, 171, 1]" + "'", str74, "[35, 171, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[35, 172, 1]" + "'", str75, "[35, 172, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[35, 173, 1]" + "'", str76, "[35, 173, 1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[35, 174, 1]" + "'", str77, "[35, 174, 1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[35, 175, 1]" + "'", str78, "[35, 175, 1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[35, 176, 1]" + "'", str79, "[35, 176, 1]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test2595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2595");
        int[] intArray3 = new int[] { 1, 0, (short) 0 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass30 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[3, 6, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1, 0]" + "'", str4, "[1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 2, 0]" + "'", str5, "[1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 3, 0]" + "'", str6, "[1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 4, 0]" + "'", str7, "[1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 5, 0]" + "'", str8, "[1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 6, 0]" + "'", str9, "[1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 7, 0]" + "'", str10, "[1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 8, 0]" + "'", str11, "[1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 9, 0]" + "'", str12, "[1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 0, 1]" + "'", str13, "[2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 1, 1]" + "'", str14, "[2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2, 1]" + "'", str15, "[2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 3, 1]" + "'", str16, "[2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 4, 1]" + "'", str17, "[2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 5, 1]" + "'", str18, "[2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 6, 1]" + "'", str19, "[2, 6, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 7, 1]" + "'", str20, "[2, 7, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 8, 1]" + "'", str21, "[2, 8, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 9, 1]" + "'", str22, "[2, 9, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3, 0, 2]" + "'", str23, "[3, 0, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 1, 2]" + "'", str24, "[3, 1, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 2, 2]" + "'", str25, "[3, 2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3, 2]" + "'", str26, "[3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 4, 2]" + "'", str27, "[3, 4, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 5, 2]" + "'", str28, "[3, 5, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[3, 6, 2]" + "'", str29, "[3, 6, 2]");
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test2596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2596");
        int[] intArray4 = new int[] { (byte) 10, 'a', (byte) -1, '#' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass83 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[17, 7, 7, 42]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 98, 0, 35]" + "'", str5, "[10, 98, 0, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 99, 1, 35]" + "'", str6, "[10, 99, 1, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 100, 2, 35]" + "'", str7, "[10, 100, 2, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 101, 3, 35]" + "'", str8, "[10, 101, 3, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 102, 4, 35]" + "'", str9, "[10, 102, 4, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 103, 5, 35]" + "'", str10, "[10, 103, 5, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 104, 6, 35]" + "'", str11, "[10, 104, 6, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 105, 7, 35]" + "'", str12, "[10, 105, 7, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 106, 8, 35]" + "'", str13, "[10, 106, 8, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 107, 9, 35]" + "'", str14, "[10, 107, 9, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[11, 0, 0, 36]" + "'", str15, "[11, 0, 0, 36]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[11, 1, 1, 36]" + "'", str16, "[11, 1, 1, 36]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[11, 2, 2, 36]" + "'", str17, "[11, 2, 2, 36]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[11, 3, 3, 36]" + "'", str18, "[11, 3, 3, 36]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[11, 4, 4, 36]" + "'", str19, "[11, 4, 4, 36]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[11, 5, 5, 36]" + "'", str20, "[11, 5, 5, 36]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[11, 6, 6, 36]" + "'", str21, "[11, 6, 6, 36]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[11, 7, 7, 36]" + "'", str22, "[11, 7, 7, 36]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[11, 8, 8, 36]" + "'", str23, "[11, 8, 8, 36]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[11, 9, 9, 36]" + "'", str24, "[11, 9, 9, 36]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[12, 0, 0, 37]" + "'", str25, "[12, 0, 0, 37]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[12, 1, 1, 37]" + "'", str26, "[12, 1, 1, 37]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[12, 2, 2, 37]" + "'", str27, "[12, 2, 2, 37]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[12, 3, 3, 37]" + "'", str28, "[12, 3, 3, 37]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[12, 4, 4, 37]" + "'", str29, "[12, 4, 4, 37]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[12, 5, 5, 37]" + "'", str30, "[12, 5, 5, 37]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[12, 6, 6, 37]" + "'", str31, "[12, 6, 6, 37]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[12, 7, 7, 37]" + "'", str32, "[12, 7, 7, 37]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[12, 8, 8, 37]" + "'", str33, "[12, 8, 8, 37]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[12, 9, 9, 37]" + "'", str34, "[12, 9, 9, 37]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[13, 0, 0, 38]" + "'", str35, "[13, 0, 0, 38]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[13, 1, 1, 38]" + "'", str36, "[13, 1, 1, 38]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[13, 2, 2, 38]" + "'", str37, "[13, 2, 2, 38]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[13, 3, 3, 38]" + "'", str38, "[13, 3, 3, 38]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[13, 4, 4, 38]" + "'", str39, "[13, 4, 4, 38]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[13, 5, 5, 38]" + "'", str40, "[13, 5, 5, 38]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[13, 6, 6, 38]" + "'", str41, "[13, 6, 6, 38]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[13, 7, 7, 38]" + "'", str42, "[13, 7, 7, 38]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[13, 8, 8, 38]" + "'", str43, "[13, 8, 8, 38]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[13, 9, 9, 38]" + "'", str44, "[13, 9, 9, 38]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[14, 0, 0, 39]" + "'", str45, "[14, 0, 0, 39]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[14, 1, 1, 39]" + "'", str46, "[14, 1, 1, 39]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[14, 2, 2, 39]" + "'", str47, "[14, 2, 2, 39]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[14, 3, 3, 39]" + "'", str48, "[14, 3, 3, 39]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[14, 4, 4, 39]" + "'", str49, "[14, 4, 4, 39]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[14, 5, 5, 39]" + "'", str50, "[14, 5, 5, 39]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[14, 6, 6, 39]" + "'", str51, "[14, 6, 6, 39]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[14, 7, 7, 39]" + "'", str52, "[14, 7, 7, 39]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[14, 8, 8, 39]" + "'", str53, "[14, 8, 8, 39]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[14, 9, 9, 39]" + "'", str54, "[14, 9, 9, 39]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[15, 0, 0, 40]" + "'", str55, "[15, 0, 0, 40]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[15, 1, 1, 40]" + "'", str56, "[15, 1, 1, 40]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[15, 2, 2, 40]" + "'", str57, "[15, 2, 2, 40]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[15, 3, 3, 40]" + "'", str58, "[15, 3, 3, 40]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[15, 4, 4, 40]" + "'", str59, "[15, 4, 4, 40]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[15, 5, 5, 40]" + "'", str60, "[15, 5, 5, 40]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[15, 6, 6, 40]" + "'", str61, "[15, 6, 6, 40]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[15, 7, 7, 40]" + "'", str62, "[15, 7, 7, 40]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[15, 8, 8, 40]" + "'", str63, "[15, 8, 8, 40]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[15, 9, 9, 40]" + "'", str64, "[15, 9, 9, 40]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[16, 0, 0, 41]" + "'", str65, "[16, 0, 0, 41]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[16, 1, 1, 41]" + "'", str66, "[16, 1, 1, 41]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[16, 2, 2, 41]" + "'", str67, "[16, 2, 2, 41]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[16, 3, 3, 41]" + "'", str68, "[16, 3, 3, 41]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[16, 4, 4, 41]" + "'", str69, "[16, 4, 4, 41]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[16, 5, 5, 41]" + "'", str70, "[16, 5, 5, 41]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[16, 6, 6, 41]" + "'", str71, "[16, 6, 6, 41]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[16, 7, 7, 41]" + "'", str72, "[16, 7, 7, 41]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[16, 8, 8, 41]" + "'", str73, "[16, 8, 8, 41]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[16, 9, 9, 41]" + "'", str74, "[16, 9, 9, 41]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[17, 0, 0, 42]" + "'", str75, "[17, 0, 0, 42]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[17, 1, 1, 42]" + "'", str76, "[17, 1, 1, 42]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[17, 2, 2, 42]" + "'", str77, "[17, 2, 2, 42]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[17, 3, 3, 42]" + "'", str78, "[17, 3, 3, 42]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[17, 4, 4, 42]" + "'", str79, "[17, 4, 4, 42]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[17, 5, 5, 42]" + "'", str80, "[17, 5, 5, 42]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[17, 6, 6, 42]" + "'", str81, "[17, 6, 6, 42]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[17, 7, 7, 42]" + "'", str82, "[17, 7, 7, 42]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2597");
        int[] intArray2 = new int[] { '4', 'a' };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass40 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[89, 134]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[53, 98]" + "'", str3, "[53, 98]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[54, 99]" + "'", str4, "[54, 99]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[55, 100]" + "'", str5, "[55, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[56, 101]" + "'", str6, "[56, 101]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[57, 102]" + "'", str7, "[57, 102]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[58, 103]" + "'", str8, "[58, 103]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[59, 104]" + "'", str9, "[59, 104]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[60, 105]" + "'", str10, "[60, 105]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[61, 106]" + "'", str11, "[61, 106]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[62, 107]" + "'", str12, "[62, 107]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[63, 108]" + "'", str13, "[63, 108]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[64, 109]" + "'", str14, "[64, 109]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[65, 110]" + "'", str15, "[65, 110]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[66, 111]" + "'", str16, "[66, 111]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[67, 112]" + "'", str17, "[67, 112]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[68, 113]" + "'", str18, "[68, 113]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[69, 114]" + "'", str19, "[69, 114]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[70, 115]" + "'", str20, "[70, 115]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[71, 116]" + "'", str21, "[71, 116]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[72, 117]" + "'", str22, "[72, 117]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[73, 118]" + "'", str23, "[73, 118]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[74, 119]" + "'", str24, "[74, 119]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[75, 120]" + "'", str25, "[75, 120]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[76, 121]" + "'", str26, "[76, 121]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[77, 122]" + "'", str27, "[77, 122]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[78, 123]" + "'", str28, "[78, 123]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[79, 124]" + "'", str29, "[79, 124]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[80, 125]" + "'", str30, "[80, 125]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[81, 126]" + "'", str31, "[81, 126]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[82, 127]" + "'", str32, "[82, 127]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[83, 128]" + "'", str33, "[83, 128]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[84, 129]" + "'", str34, "[84, 129]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[85, 130]" + "'", str35, "[85, 130]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[86, 131]" + "'", str36, "[86, 131]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[87, 132]" + "'", str37, "[87, 132]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[88, 133]" + "'", str38, "[88, 133]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[89, 134]" + "'", str39, "[89, 134]");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test2598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2598");
        int[] intArray5 = new int[] { 1, (byte) 0, (short) 100, 0, (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass27 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 121, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 0, 1]" + "'", str6, "[1, 0, 101, 0, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 0, 1]" + "'", str7, "[1, 0, 102, 0, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 0, 1]" + "'", str8, "[1, 0, 103, 0, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 0, 1]" + "'", str9, "[1, 0, 104, 0, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 0, 1]" + "'", str10, "[1, 0, 105, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 0, 1]" + "'", str11, "[1, 0, 106, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 0, 1]" + "'", str12, "[1, 0, 107, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 108, 0, 1]" + "'", str13, "[1, 0, 108, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 109, 0, 1]" + "'", str14, "[1, 0, 109, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 110, 0, 1]" + "'", str15, "[1, 0, 110, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 111, 0, 1]" + "'", str16, "[1, 0, 111, 0, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 0, 112, 0, 1]" + "'", str17, "[1, 0, 112, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 0, 113, 0, 1]" + "'", str18, "[1, 0, 113, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 0, 114, 0, 1]" + "'", str19, "[1, 0, 114, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 0, 115, 0, 1]" + "'", str20, "[1, 0, 115, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 116, 0, 1]" + "'", str21, "[1, 0, 116, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 117, 0, 1]" + "'", str22, "[1, 0, 117, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 118, 0, 1]" + "'", str23, "[1, 0, 118, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 119, 0, 1]" + "'", str24, "[1, 0, 119, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 0, 120, 0, 1]" + "'", str25, "[1, 0, 120, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 0, 121, 0, 1]" + "'", str26, "[1, 0, 121, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test2599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2599");
        int[] intArray6 = new int[] { (byte) 100, 'a', ' ', (byte) -1, (short) -1, (short) 1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass78 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 104, 0, 0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 97, 33, 0, -1, 1]" + "'", str7, "[100, 97, 33, 0, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 97, 34, 1, -1, 1]" + "'", str8, "[100, 97, 34, 1, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 97, 35, 2, -1, 1]" + "'", str9, "[100, 97, 35, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 97, 36, 3, -1, 1]" + "'", str10, "[100, 97, 36, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 97, 37, 4, -1, 1]" + "'", str11, "[100, 97, 37, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 97, 38, 5, -1, 1]" + "'", str12, "[100, 97, 38, 5, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 97, 39, 6, -1, 1]" + "'", str13, "[100, 97, 39, 6, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 97, 40, 7, -1, 1]" + "'", str14, "[100, 97, 40, 7, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 97, 41, 8, -1, 1]" + "'", str15, "[100, 97, 41, 8, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 97, 42, 9, -1, 1]" + "'", str16, "[100, 97, 42, 9, -1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 98, 0, 0, 0, 1]" + "'", str17, "[100, 98, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 98, 1, 1, 0, 1]" + "'", str18, "[100, 98, 1, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 98, 2, 2, 0, 1]" + "'", str19, "[100, 98, 2, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 98, 3, 3, 0, 1]" + "'", str20, "[100, 98, 3, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 98, 4, 4, 0, 1]" + "'", str21, "[100, 98, 4, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 98, 5, 5, 0, 1]" + "'", str22, "[100, 98, 5, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 98, 6, 6, 0, 1]" + "'", str23, "[100, 98, 6, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 98, 7, 7, 0, 1]" + "'", str24, "[100, 98, 7, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 98, 8, 8, 0, 1]" + "'", str25, "[100, 98, 8, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 98, 9, 9, 0, 1]" + "'", str26, "[100, 98, 9, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 99, 0, 0, 1, 1]" + "'", str27, "[100, 99, 0, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 99, 1, 1, 1, 1]" + "'", str28, "[100, 99, 1, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 99, 2, 2, 1, 1]" + "'", str29, "[100, 99, 2, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 99, 3, 3, 1, 1]" + "'", str30, "[100, 99, 3, 3, 1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 99, 4, 4, 1, 1]" + "'", str31, "[100, 99, 4, 4, 1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 99, 5, 5, 1, 1]" + "'", str32, "[100, 99, 5, 5, 1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 99, 6, 6, 1, 1]" + "'", str33, "[100, 99, 6, 6, 1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 99, 7, 7, 1, 1]" + "'", str34, "[100, 99, 7, 7, 1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 99, 8, 8, 1, 1]" + "'", str35, "[100, 99, 8, 8, 1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 99, 9, 9, 1, 1]" + "'", str36, "[100, 99, 9, 9, 1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 100, 0, 0, 2, 1]" + "'", str37, "[100, 100, 0, 0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 100, 1, 1, 2, 1]" + "'", str38, "[100, 100, 1, 1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 100, 2, 2, 2, 1]" + "'", str39, "[100, 100, 2, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 100, 3, 3, 2, 1]" + "'", str40, "[100, 100, 3, 3, 2, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 100, 4, 4, 2, 1]" + "'", str41, "[100, 100, 4, 4, 2, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 100, 5, 5, 2, 1]" + "'", str42, "[100, 100, 5, 5, 2, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 100, 6, 6, 2, 1]" + "'", str43, "[100, 100, 6, 6, 2, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 100, 7, 7, 2, 1]" + "'", str44, "[100, 100, 7, 7, 2, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 100, 8, 8, 2, 1]" + "'", str45, "[100, 100, 8, 8, 2, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 100, 9, 9, 2, 1]" + "'", str46, "[100, 100, 9, 9, 2, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 101, 0, 0, 3, 1]" + "'", str47, "[100, 101, 0, 0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 101, 1, 1, 3, 1]" + "'", str48, "[100, 101, 1, 1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 101, 2, 2, 3, 1]" + "'", str49, "[100, 101, 2, 2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 101, 3, 3, 3, 1]" + "'", str50, "[100, 101, 3, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 101, 4, 4, 3, 1]" + "'", str51, "[100, 101, 4, 4, 3, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 101, 5, 5, 3, 1]" + "'", str52, "[100, 101, 5, 5, 3, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 101, 6, 6, 3, 1]" + "'", str53, "[100, 101, 6, 6, 3, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 101, 7, 7, 3, 1]" + "'", str54, "[100, 101, 7, 7, 3, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 101, 8, 8, 3, 1]" + "'", str55, "[100, 101, 8, 8, 3, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 101, 9, 9, 3, 1]" + "'", str56, "[100, 101, 9, 9, 3, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 102, 0, 0, 4, 1]" + "'", str57, "[100, 102, 0, 0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 102, 1, 1, 4, 1]" + "'", str58, "[100, 102, 1, 1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 102, 2, 2, 4, 1]" + "'", str59, "[100, 102, 2, 2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 102, 3, 3, 4, 1]" + "'", str60, "[100, 102, 3, 3, 4, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 102, 4, 4, 4, 1]" + "'", str61, "[100, 102, 4, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[100, 102, 5, 5, 4, 1]" + "'", str62, "[100, 102, 5, 5, 4, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[100, 102, 6, 6, 4, 1]" + "'", str63, "[100, 102, 6, 6, 4, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[100, 102, 7, 7, 4, 1]" + "'", str64, "[100, 102, 7, 7, 4, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[100, 102, 8, 8, 4, 1]" + "'", str65, "[100, 102, 8, 8, 4, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[100, 102, 9, 9, 4, 1]" + "'", str66, "[100, 102, 9, 9, 4, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[100, 103, 0, 0, 5, 1]" + "'", str67, "[100, 103, 0, 0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[100, 103, 1, 1, 5, 1]" + "'", str68, "[100, 103, 1, 1, 5, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[100, 103, 2, 2, 5, 1]" + "'", str69, "[100, 103, 2, 2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[100, 103, 3, 3, 5, 1]" + "'", str70, "[100, 103, 3, 3, 5, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[100, 103, 4, 4, 5, 1]" + "'", str71, "[100, 103, 4, 4, 5, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[100, 103, 5, 5, 5, 1]" + "'", str72, "[100, 103, 5, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[100, 103, 6, 6, 5, 1]" + "'", str73, "[100, 103, 6, 6, 5, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[100, 103, 7, 7, 5, 1]" + "'", str74, "[100, 103, 7, 7, 5, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[100, 103, 8, 8, 5, 1]" + "'", str75, "[100, 103, 8, 8, 5, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[100, 103, 9, 9, 5, 1]" + "'", str76, "[100, 103, 9, 9, 5, 1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[100, 104, 0, 0, 6, 1]" + "'", str77, "[100, 104, 0, 0, 6, 1]");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test2600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2600");
        int[] intArray6 = new int[] { (byte) 0, (short) 100, 0, (-1), (short) -1, (byte) 1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass61 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 105, 3, 3, 4, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 100, 1, 0, -1, 1]" + "'", str7, "[0, 100, 1, 0, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 100, 2, 1, -1, 1]" + "'", str8, "[0, 100, 2, 1, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 100, 3, 2, -1, 1]" + "'", str9, "[0, 100, 3, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 100, 4, 3, -1, 1]" + "'", str10, "[0, 100, 4, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 100, 5, 4, -1, 1]" + "'", str11, "[0, 100, 5, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 100, 6, 5, -1, 1]" + "'", str12, "[0, 100, 6, 5, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 100, 7, 6, -1, 1]" + "'", str13, "[0, 100, 7, 6, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 100, 8, 7, -1, 1]" + "'", str14, "[0, 100, 8, 7, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 100, 9, 8, -1, 1]" + "'", str15, "[0, 100, 9, 8, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 100, 10, 9, -1, 1]" + "'", str16, "[0, 100, 10, 9, -1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 101, 0, 0, 0, 1]" + "'", str17, "[0, 101, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 101, 1, 1, 0, 1]" + "'", str18, "[0, 101, 1, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 101, 2, 2, 0, 1]" + "'", str19, "[0, 101, 2, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 101, 3, 3, 0, 1]" + "'", str20, "[0, 101, 3, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 101, 4, 4, 0, 1]" + "'", str21, "[0, 101, 4, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 101, 5, 5, 0, 1]" + "'", str22, "[0, 101, 5, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 101, 6, 6, 0, 1]" + "'", str23, "[0, 101, 6, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 101, 7, 7, 0, 1]" + "'", str24, "[0, 101, 7, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 101, 8, 8, 0, 1]" + "'", str25, "[0, 101, 8, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 101, 9, 9, 0, 1]" + "'", str26, "[0, 101, 9, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 102, 0, 0, 1, 1]" + "'", str27, "[0, 102, 0, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 102, 1, 1, 1, 1]" + "'", str28, "[0, 102, 1, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 102, 2, 2, 1, 1]" + "'", str29, "[0, 102, 2, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 102, 3, 3, 1, 1]" + "'", str30, "[0, 102, 3, 3, 1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 102, 4, 4, 1, 1]" + "'", str31, "[0, 102, 4, 4, 1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 102, 5, 5, 1, 1]" + "'", str32, "[0, 102, 5, 5, 1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 102, 6, 6, 1, 1]" + "'", str33, "[0, 102, 6, 6, 1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 102, 7, 7, 1, 1]" + "'", str34, "[0, 102, 7, 7, 1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 102, 8, 8, 1, 1]" + "'", str35, "[0, 102, 8, 8, 1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 102, 9, 9, 1, 1]" + "'", str36, "[0, 102, 9, 9, 1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 103, 0, 0, 2, 1]" + "'", str37, "[0, 103, 0, 0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 103, 1, 1, 2, 1]" + "'", str38, "[0, 103, 1, 1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 103, 2, 2, 2, 1]" + "'", str39, "[0, 103, 2, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 103, 3, 3, 2, 1]" + "'", str40, "[0, 103, 3, 3, 2, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 103, 4, 4, 2, 1]" + "'", str41, "[0, 103, 4, 4, 2, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 103, 5, 5, 2, 1]" + "'", str42, "[0, 103, 5, 5, 2, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 103, 6, 6, 2, 1]" + "'", str43, "[0, 103, 6, 6, 2, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 103, 7, 7, 2, 1]" + "'", str44, "[0, 103, 7, 7, 2, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 103, 8, 8, 2, 1]" + "'", str45, "[0, 103, 8, 8, 2, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 103, 9, 9, 2, 1]" + "'", str46, "[0, 103, 9, 9, 2, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 104, 0, 0, 3, 1]" + "'", str47, "[0, 104, 0, 0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 104, 1, 1, 3, 1]" + "'", str48, "[0, 104, 1, 1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 104, 2, 2, 3, 1]" + "'", str49, "[0, 104, 2, 2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 104, 3, 3, 3, 1]" + "'", str50, "[0, 104, 3, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 104, 4, 4, 3, 1]" + "'", str51, "[0, 104, 4, 4, 3, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 104, 5, 5, 3, 1]" + "'", str52, "[0, 104, 5, 5, 3, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 104, 6, 6, 3, 1]" + "'", str53, "[0, 104, 6, 6, 3, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 104, 7, 7, 3, 1]" + "'", str54, "[0, 104, 7, 7, 3, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, 104, 8, 8, 3, 1]" + "'", str55, "[0, 104, 8, 8, 3, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, 104, 9, 9, 3, 1]" + "'", str56, "[0, 104, 9, 9, 3, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, 105, 0, 0, 4, 1]" + "'", str57, "[0, 105, 0, 0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, 105, 1, 1, 4, 1]" + "'", str58, "[0, 105, 1, 1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, 105, 2, 2, 4, 1]" + "'", str59, "[0, 105, 2, 2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, 105, 3, 3, 4, 1]" + "'", str60, "[0, 105, 3, 3, 4, 1]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test2601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2601");
        int[] intArray5 = new int[] { (short) 100, 'a', ' ', 0, (byte) -1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass66 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 97, 92, 0, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 97, 33, 0, -1]" + "'", str6, "[100, 97, 33, 0, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 97, 34, 0, -1]" + "'", str7, "[100, 97, 34, 0, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 97, 35, 0, -1]" + "'", str8, "[100, 97, 35, 0, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 97, 36, 0, -1]" + "'", str9, "[100, 97, 36, 0, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 97, 37, 0, -1]" + "'", str10, "[100, 97, 37, 0, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 97, 38, 0, -1]" + "'", str11, "[100, 97, 38, 0, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 97, 39, 0, -1]" + "'", str12, "[100, 97, 39, 0, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 97, 40, 0, -1]" + "'", str13, "[100, 97, 40, 0, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 97, 41, 0, -1]" + "'", str14, "[100, 97, 41, 0, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 97, 42, 0, -1]" + "'", str15, "[100, 97, 42, 0, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 97, 43, 0, -1]" + "'", str16, "[100, 97, 43, 0, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 97, 44, 0, -1]" + "'", str17, "[100, 97, 44, 0, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 97, 45, 0, -1]" + "'", str18, "[100, 97, 45, 0, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 97, 46, 0, -1]" + "'", str19, "[100, 97, 46, 0, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 97, 47, 0, -1]" + "'", str20, "[100, 97, 47, 0, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 97, 48, 0, -1]" + "'", str21, "[100, 97, 48, 0, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 97, 49, 0, -1]" + "'", str22, "[100, 97, 49, 0, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 97, 50, 0, -1]" + "'", str23, "[100, 97, 50, 0, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 97, 51, 0, -1]" + "'", str24, "[100, 97, 51, 0, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 97, 52, 0, -1]" + "'", str25, "[100, 97, 52, 0, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 97, 53, 0, -1]" + "'", str26, "[100, 97, 53, 0, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 97, 54, 0, -1]" + "'", str27, "[100, 97, 54, 0, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 97, 55, 0, -1]" + "'", str28, "[100, 97, 55, 0, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 97, 56, 0, -1]" + "'", str29, "[100, 97, 56, 0, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 97, 57, 0, -1]" + "'", str30, "[100, 97, 57, 0, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 97, 58, 0, -1]" + "'", str31, "[100, 97, 58, 0, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 97, 59, 0, -1]" + "'", str32, "[100, 97, 59, 0, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 97, 60, 0, -1]" + "'", str33, "[100, 97, 60, 0, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 97, 61, 0, -1]" + "'", str34, "[100, 97, 61, 0, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 97, 62, 0, -1]" + "'", str35, "[100, 97, 62, 0, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 97, 63, 0, -1]" + "'", str36, "[100, 97, 63, 0, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 97, 64, 0, -1]" + "'", str37, "[100, 97, 64, 0, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 97, 65, 0, -1]" + "'", str38, "[100, 97, 65, 0, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 97, 66, 0, -1]" + "'", str39, "[100, 97, 66, 0, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 97, 67, 0, -1]" + "'", str40, "[100, 97, 67, 0, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 97, 68, 0, -1]" + "'", str41, "[100, 97, 68, 0, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 97, 69, 0, -1]" + "'", str42, "[100, 97, 69, 0, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 97, 70, 0, -1]" + "'", str43, "[100, 97, 70, 0, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 97, 71, 0, -1]" + "'", str44, "[100, 97, 71, 0, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 97, 72, 0, -1]" + "'", str45, "[100, 97, 72, 0, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 97, 73, 0, -1]" + "'", str46, "[100, 97, 73, 0, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 97, 74, 0, -1]" + "'", str47, "[100, 97, 74, 0, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 97, 75, 0, -1]" + "'", str48, "[100, 97, 75, 0, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 97, 76, 0, -1]" + "'", str49, "[100, 97, 76, 0, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 97, 77, 0, -1]" + "'", str50, "[100, 97, 77, 0, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 97, 78, 0, -1]" + "'", str51, "[100, 97, 78, 0, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 97, 79, 0, -1]" + "'", str52, "[100, 97, 79, 0, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 97, 80, 0, -1]" + "'", str53, "[100, 97, 80, 0, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 97, 81, 0, -1]" + "'", str54, "[100, 97, 81, 0, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 97, 82, 0, -1]" + "'", str55, "[100, 97, 82, 0, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 97, 83, 0, -1]" + "'", str56, "[100, 97, 83, 0, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 97, 84, 0, -1]" + "'", str57, "[100, 97, 84, 0, -1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 97, 85, 0, -1]" + "'", str58, "[100, 97, 85, 0, -1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 97, 86, 0, -1]" + "'", str59, "[100, 97, 86, 0, -1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 97, 87, 0, -1]" + "'", str60, "[100, 97, 87, 0, -1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 97, 88, 0, -1]" + "'", str61, "[100, 97, 88, 0, -1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[100, 97, 89, 0, -1]" + "'", str62, "[100, 97, 89, 0, -1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[100, 97, 90, 0, -1]" + "'", str63, "[100, 97, 90, 0, -1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[100, 97, 91, 0, -1]" + "'", str64, "[100, 97, 91, 0, -1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[100, 97, 92, 0, -1]" + "'", str65, "[100, 97, 92, 0, -1]");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test2602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2602");
        int[] intArray3 = new int[] { 1, (-1), '4' };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str90 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str91 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str92 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str93 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str94 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str95 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str96 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass97 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[10, 2, 61]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 0, 52]" + "'", str4, "[1, 0, 52]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 1, 52]" + "'", str5, "[1, 1, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 2, 52]" + "'", str6, "[1, 2, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 3, 52]" + "'", str7, "[1, 3, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 4, 52]" + "'", str8, "[1, 4, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 5, 52]" + "'", str9, "[1, 5, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 6, 52]" + "'", str10, "[1, 6, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 7, 52]" + "'", str11, "[1, 7, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 8, 52]" + "'", str12, "[1, 8, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 9, 52]" + "'", str13, "[1, 9, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 0, 53]" + "'", str14, "[2, 0, 53]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 1, 53]" + "'", str15, "[2, 1, 53]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 2, 53]" + "'", str16, "[2, 2, 53]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 3, 53]" + "'", str17, "[2, 3, 53]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 4, 53]" + "'", str18, "[2, 4, 53]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 5, 53]" + "'", str19, "[2, 5, 53]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 6, 53]" + "'", str20, "[2, 6, 53]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 7, 53]" + "'", str21, "[2, 7, 53]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 8, 53]" + "'", str22, "[2, 8, 53]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 9, 53]" + "'", str23, "[2, 9, 53]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 0, 54]" + "'", str24, "[3, 0, 54]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 1, 54]" + "'", str25, "[3, 1, 54]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 2, 54]" + "'", str26, "[3, 2, 54]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 3, 54]" + "'", str27, "[3, 3, 54]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 4, 54]" + "'", str28, "[3, 4, 54]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[3, 5, 54]" + "'", str29, "[3, 5, 54]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[3, 6, 54]" + "'", str30, "[3, 6, 54]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[3, 7, 54]" + "'", str31, "[3, 7, 54]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[3, 8, 54]" + "'", str32, "[3, 8, 54]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[3, 9, 54]" + "'", str33, "[3, 9, 54]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4, 0, 55]" + "'", str34, "[4, 0, 55]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 1, 55]" + "'", str35, "[4, 1, 55]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 2, 55]" + "'", str36, "[4, 2, 55]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 3, 55]" + "'", str37, "[4, 3, 55]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[4, 4, 55]" + "'", str38, "[4, 4, 55]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[4, 5, 55]" + "'", str39, "[4, 5, 55]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[4, 6, 55]" + "'", str40, "[4, 6, 55]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[4, 7, 55]" + "'", str41, "[4, 7, 55]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[4, 8, 55]" + "'", str42, "[4, 8, 55]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[4, 9, 55]" + "'", str43, "[4, 9, 55]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[5, 0, 56]" + "'", str44, "[5, 0, 56]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[5, 1, 56]" + "'", str45, "[5, 1, 56]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 2, 56]" + "'", str46, "[5, 2, 56]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 3, 56]" + "'", str47, "[5, 3, 56]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 4, 56]" + "'", str48, "[5, 4, 56]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[5, 5, 56]" + "'", str49, "[5, 5, 56]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[5, 6, 56]" + "'", str50, "[5, 6, 56]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[5, 7, 56]" + "'", str51, "[5, 7, 56]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[5, 8, 56]" + "'", str52, "[5, 8, 56]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[5, 9, 56]" + "'", str53, "[5, 9, 56]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[6, 0, 57]" + "'", str54, "[6, 0, 57]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[6, 1, 57]" + "'", str55, "[6, 1, 57]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[6, 2, 57]" + "'", str56, "[6, 2, 57]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6, 3, 57]" + "'", str57, "[6, 3, 57]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6, 4, 57]" + "'", str58, "[6, 4, 57]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 5, 57]" + "'", str59, "[6, 5, 57]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[6, 6, 57]" + "'", str60, "[6, 6, 57]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[6, 7, 57]" + "'", str61, "[6, 7, 57]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[6, 8, 57]" + "'", str62, "[6, 8, 57]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[6, 9, 57]" + "'", str63, "[6, 9, 57]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[7, 0, 58]" + "'", str64, "[7, 0, 58]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[7, 1, 58]" + "'", str65, "[7, 1, 58]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[7, 2, 58]" + "'", str66, "[7, 2, 58]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[7, 3, 58]" + "'", str67, "[7, 3, 58]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[7, 4, 58]" + "'", str68, "[7, 4, 58]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[7, 5, 58]" + "'", str69, "[7, 5, 58]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[7, 6, 58]" + "'", str70, "[7, 6, 58]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[7, 7, 58]" + "'", str71, "[7, 7, 58]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[7, 8, 58]" + "'", str72, "[7, 8, 58]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[7, 9, 58]" + "'", str73, "[7, 9, 58]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[8, 0, 59]" + "'", str74, "[8, 0, 59]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[8, 1, 59]" + "'", str75, "[8, 1, 59]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[8, 2, 59]" + "'", str76, "[8, 2, 59]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[8, 3, 59]" + "'", str77, "[8, 3, 59]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[8, 4, 59]" + "'", str78, "[8, 4, 59]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[8, 5, 59]" + "'", str79, "[8, 5, 59]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[8, 6, 59]" + "'", str80, "[8, 6, 59]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[8, 7, 59]" + "'", str81, "[8, 7, 59]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[8, 8, 59]" + "'", str82, "[8, 8, 59]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[8, 9, 59]" + "'", str83, "[8, 9, 59]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[9, 0, 60]" + "'", str84, "[9, 0, 60]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[9, 1, 60]" + "'", str85, "[9, 1, 60]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[9, 2, 60]" + "'", str86, "[9, 2, 60]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[9, 3, 60]" + "'", str87, "[9, 3, 60]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[9, 4, 60]" + "'", str88, "[9, 4, 60]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[9, 5, 60]" + "'", str89, "[9, 5, 60]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[9, 6, 60]" + "'", str90, "[9, 6, 60]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[9, 7, 60]" + "'", str91, "[9, 7, 60]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[9, 8, 60]" + "'", str92, "[9, 8, 60]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[9, 9, 60]" + "'", str93, "[9, 9, 60]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "[10, 0, 61]" + "'", str94, "[10, 0, 61]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "[10, 1, 61]" + "'", str95, "[10, 1, 61]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "[10, 2, 61]" + "'", str96, "[10, 2, 61]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2603");
        int[] intArray2 = new int[] { (byte) 1, (-1) };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass65 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[1, 1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 0]" + "'", str3, "[2, 0]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 1]" + "'", str4, "[3, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 2]" + "'", str5, "[4, 2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 3]" + "'", str6, "[5, 3]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 4]" + "'", str7, "[6, 4]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 5]" + "'", str8, "[7, 5]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 6]" + "'", str9, "[8, 6]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 7]" + "'", str10, "[9, 7]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 8]" + "'", str11, "[10, 8]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 9]" + "'", str12, "[11, 9]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 1]" + "'", str13, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1]" + "'", str14, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2]" + "'", str15, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[3, 3]" + "'", str16, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[4, 4]" + "'", str17, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[5, 5]" + "'", str18, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[6, 6]" + "'", str19, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[7, 7]" + "'", str20, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[8, 8]" + "'", str21, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[9, 9]" + "'", str22, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 1]" + "'", str23, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1]" + "'", str24, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 2]" + "'", str25, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3]" + "'", str26, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[4, 4]" + "'", str27, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[5, 5]" + "'", str28, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[6, 6]" + "'", str29, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[7, 7]" + "'", str30, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[8, 8]" + "'", str31, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[9, 9]" + "'", str32, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 0, 1]" + "'", str33, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1]" + "'", str34, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 2]" + "'", str35, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 3]" + "'", str36, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4]" + "'", str37, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[5, 5]" + "'", str38, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[6, 6]" + "'", str39, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[7, 7]" + "'", str40, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[8, 8]" + "'", str41, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[9, 9]" + "'", str42, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 0, 1]" + "'", str43, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1]" + "'", str44, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[2, 2]" + "'", str45, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 3]" + "'", str46, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 4]" + "'", str47, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5]" + "'", str48, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[6, 6]" + "'", str49, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[7, 7]" + "'", str50, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[8, 8]" + "'", str51, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[9, 9]" + "'", str52, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 0, 1]" + "'", str53, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 1]" + "'", str54, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[2, 2]" + "'", str55, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[3, 3]" + "'", str56, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[4, 4]" + "'", str57, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 5]" + "'", str58, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 6]" + "'", str59, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[7, 7]" + "'", str60, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[8, 8]" + "'", str61, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[9, 9]" + "'", str62, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 0, 1]" + "'", str63, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 1]" + "'", str64, "[1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test2604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2604");
        int[] intArray1 = new int[] { (short) 100 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass80 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[178]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[101]" + "'", str2, "[101]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[102]" + "'", str3, "[102]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[103]" + "'", str4, "[103]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[104]" + "'", str5, "[104]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[105]" + "'", str6, "[105]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[106]" + "'", str7, "[106]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[107]" + "'", str8, "[107]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[108]" + "'", str9, "[108]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[109]" + "'", str10, "[109]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[110]" + "'", str11, "[110]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[111]" + "'", str12, "[111]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[112]" + "'", str13, "[112]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[113]" + "'", str14, "[113]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[114]" + "'", str15, "[114]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[115]" + "'", str16, "[115]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[116]" + "'", str17, "[116]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[117]" + "'", str18, "[117]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[118]" + "'", str19, "[118]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[119]" + "'", str20, "[119]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[120]" + "'", str21, "[120]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[121]" + "'", str22, "[121]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[122]" + "'", str23, "[122]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[123]" + "'", str24, "[123]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[124]" + "'", str25, "[124]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[125]" + "'", str26, "[125]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[126]" + "'", str27, "[126]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[127]" + "'", str28, "[127]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[128]" + "'", str29, "[128]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[129]" + "'", str30, "[129]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[130]" + "'", str31, "[130]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[131]" + "'", str32, "[131]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[132]" + "'", str33, "[132]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[133]" + "'", str34, "[133]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[134]" + "'", str35, "[134]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[135]" + "'", str36, "[135]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[136]" + "'", str37, "[136]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[137]" + "'", str38, "[137]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[138]" + "'", str39, "[138]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[139]" + "'", str40, "[139]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[140]" + "'", str41, "[140]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[141]" + "'", str42, "[141]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[142]" + "'", str43, "[142]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[143]" + "'", str44, "[143]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[144]" + "'", str45, "[144]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[145]" + "'", str46, "[145]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[146]" + "'", str47, "[146]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[147]" + "'", str48, "[147]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[148]" + "'", str49, "[148]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[149]" + "'", str50, "[149]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[150]" + "'", str51, "[150]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[151]" + "'", str52, "[151]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[152]" + "'", str53, "[152]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[153]" + "'", str54, "[153]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[154]" + "'", str55, "[154]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[155]" + "'", str56, "[155]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[156]" + "'", str57, "[156]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[157]" + "'", str58, "[157]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[158]" + "'", str59, "[158]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[159]" + "'", str60, "[159]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[160]" + "'", str61, "[160]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[161]" + "'", str62, "[161]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[162]" + "'", str63, "[162]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[163]" + "'", str64, "[163]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[164]" + "'", str65, "[164]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[165]" + "'", str66, "[165]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[166]" + "'", str67, "[166]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[167]" + "'", str68, "[167]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[168]" + "'", str69, "[168]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[169]" + "'", str70, "[169]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[170]" + "'", str71, "[170]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[171]" + "'", str72, "[171]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[172]" + "'", str73, "[172]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[173]" + "'", str74, "[173]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[174]" + "'", str75, "[174]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[175]" + "'", str76, "[175]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[176]" + "'", str77, "[176]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[177]" + "'", str78, "[177]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[178]" + "'", str79, "[178]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test2605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2605");
        int[] intArray3 = new int[] { (byte) 1, 'a', (short) 100 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass73 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 166, 100]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 98, 100]" + "'", str4, "[1, 98, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 99, 100]" + "'", str5, "[1, 99, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 100, 100]" + "'", str6, "[1, 100, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 101, 100]" + "'", str7, "[1, 101, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 102, 100]" + "'", str8, "[1, 102, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 103, 100]" + "'", str9, "[1, 103, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 104, 100]" + "'", str10, "[1, 104, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 105, 100]" + "'", str11, "[1, 105, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 106, 100]" + "'", str12, "[1, 106, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 107, 100]" + "'", str13, "[1, 107, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 108, 100]" + "'", str14, "[1, 108, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 109, 100]" + "'", str15, "[1, 109, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 110, 100]" + "'", str16, "[1, 110, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 111, 100]" + "'", str17, "[1, 111, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 112, 100]" + "'", str18, "[1, 112, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 113, 100]" + "'", str19, "[1, 113, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 114, 100]" + "'", str20, "[1, 114, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 115, 100]" + "'", str21, "[1, 115, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 116, 100]" + "'", str22, "[1, 116, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 117, 100]" + "'", str23, "[1, 117, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 118, 100]" + "'", str24, "[1, 118, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 119, 100]" + "'", str25, "[1, 119, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 120, 100]" + "'", str26, "[1, 120, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 121, 100]" + "'", str27, "[1, 121, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 122, 100]" + "'", str28, "[1, 122, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 123, 100]" + "'", str29, "[1, 123, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 124, 100]" + "'", str30, "[1, 124, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 125, 100]" + "'", str31, "[1, 125, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 126, 100]" + "'", str32, "[1, 126, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 127, 100]" + "'", str33, "[1, 127, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 128, 100]" + "'", str34, "[1, 128, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 129, 100]" + "'", str35, "[1, 129, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 130, 100]" + "'", str36, "[1, 130, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 131, 100]" + "'", str37, "[1, 131, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 132, 100]" + "'", str38, "[1, 132, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 133, 100]" + "'", str39, "[1, 133, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 134, 100]" + "'", str40, "[1, 134, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 135, 100]" + "'", str41, "[1, 135, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 136, 100]" + "'", str42, "[1, 136, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 137, 100]" + "'", str43, "[1, 137, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 138, 100]" + "'", str44, "[1, 138, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 139, 100]" + "'", str45, "[1, 139, 100]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 140, 100]" + "'", str46, "[1, 140, 100]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 141, 100]" + "'", str47, "[1, 141, 100]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 142, 100]" + "'", str48, "[1, 142, 100]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 143, 100]" + "'", str49, "[1, 143, 100]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 144, 100]" + "'", str50, "[1, 144, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 145, 100]" + "'", str51, "[1, 145, 100]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 146, 100]" + "'", str52, "[1, 146, 100]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 147, 100]" + "'", str53, "[1, 147, 100]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 148, 100]" + "'", str54, "[1, 148, 100]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 149, 100]" + "'", str55, "[1, 149, 100]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 150, 100]" + "'", str56, "[1, 150, 100]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 151, 100]" + "'", str57, "[1, 151, 100]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 152, 100]" + "'", str58, "[1, 152, 100]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 153, 100]" + "'", str59, "[1, 153, 100]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 154, 100]" + "'", str60, "[1, 154, 100]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 155, 100]" + "'", str61, "[1, 155, 100]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 156, 100]" + "'", str62, "[1, 156, 100]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 157, 100]" + "'", str63, "[1, 157, 100]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 158, 100]" + "'", str64, "[1, 158, 100]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 159, 100]" + "'", str65, "[1, 159, 100]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 160, 100]" + "'", str66, "[1, 160, 100]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 161, 100]" + "'", str67, "[1, 161, 100]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 162, 100]" + "'", str68, "[1, 162, 100]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 163, 100]" + "'", str69, "[1, 163, 100]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 164, 100]" + "'", str70, "[1, 164, 100]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 165, 100]" + "'", str71, "[1, 165, 100]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 166, 100]" + "'", str72, "[1, 166, 100]");
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test2606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2606");
        int[] intArray2 = new int[] { (byte) 1, (-1) };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass66 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[2, 2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 0]" + "'", str3, "[2, 0]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 1]" + "'", str4, "[3, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 2]" + "'", str5, "[4, 2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 3]" + "'", str6, "[5, 3]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 4]" + "'", str7, "[6, 4]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 5]" + "'", str8, "[7, 5]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 6]" + "'", str9, "[8, 6]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 7]" + "'", str10, "[9, 7]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 8]" + "'", str11, "[10, 8]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 9]" + "'", str12, "[11, 9]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 1]" + "'", str13, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1]" + "'", str14, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2]" + "'", str15, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[3, 3]" + "'", str16, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[4, 4]" + "'", str17, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[5, 5]" + "'", str18, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[6, 6]" + "'", str19, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[7, 7]" + "'", str20, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[8, 8]" + "'", str21, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[9, 9]" + "'", str22, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 1]" + "'", str23, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1]" + "'", str24, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 2]" + "'", str25, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3]" + "'", str26, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[4, 4]" + "'", str27, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[5, 5]" + "'", str28, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[6, 6]" + "'", str29, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[7, 7]" + "'", str30, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[8, 8]" + "'", str31, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[9, 9]" + "'", str32, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 0, 1]" + "'", str33, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1]" + "'", str34, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 2]" + "'", str35, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 3]" + "'", str36, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4]" + "'", str37, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[5, 5]" + "'", str38, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[6, 6]" + "'", str39, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[7, 7]" + "'", str40, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[8, 8]" + "'", str41, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[9, 9]" + "'", str42, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 0, 1]" + "'", str43, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1]" + "'", str44, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[2, 2]" + "'", str45, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 3]" + "'", str46, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 4]" + "'", str47, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5]" + "'", str48, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[6, 6]" + "'", str49, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[7, 7]" + "'", str50, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[8, 8]" + "'", str51, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[9, 9]" + "'", str52, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 0, 1]" + "'", str53, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 1]" + "'", str54, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[2, 2]" + "'", str55, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[3, 3]" + "'", str56, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[4, 4]" + "'", str57, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 5]" + "'", str58, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 6]" + "'", str59, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[7, 7]" + "'", str60, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[8, 8]" + "'", str61, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[9, 9]" + "'", str62, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 0, 1]" + "'", str63, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 1]" + "'", str64, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[2, 2]" + "'", str65, "[2, 2]");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test2607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2607");
        int[] intArray6 = new int[] { (byte) 0, (byte) 100, (short) 10, 10, (byte) 100, (short) 10 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass84 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 100, 87, 87, 100, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 100, 11, 11, 100, 10]" + "'", str7, "[0, 100, 11, 11, 100, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 100, 12, 12, 100, 10]" + "'", str8, "[0, 100, 12, 12, 100, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 100, 13, 13, 100, 10]" + "'", str9, "[0, 100, 13, 13, 100, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 100, 14, 14, 100, 10]" + "'", str10, "[0, 100, 14, 14, 100, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 100, 15, 15, 100, 10]" + "'", str11, "[0, 100, 15, 15, 100, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 100, 16, 16, 100, 10]" + "'", str12, "[0, 100, 16, 16, 100, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 100, 17, 17, 100, 10]" + "'", str13, "[0, 100, 17, 17, 100, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 100, 18, 18, 100, 10]" + "'", str14, "[0, 100, 18, 18, 100, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 100, 19, 19, 100, 10]" + "'", str15, "[0, 100, 19, 19, 100, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 100, 20, 20, 100, 10]" + "'", str16, "[0, 100, 20, 20, 100, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 100, 21, 21, 100, 10]" + "'", str17, "[0, 100, 21, 21, 100, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 100, 22, 22, 100, 10]" + "'", str18, "[0, 100, 22, 22, 100, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 100, 23, 23, 100, 10]" + "'", str19, "[0, 100, 23, 23, 100, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 100, 24, 24, 100, 10]" + "'", str20, "[0, 100, 24, 24, 100, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 100, 25, 25, 100, 10]" + "'", str21, "[0, 100, 25, 25, 100, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 100, 26, 26, 100, 10]" + "'", str22, "[0, 100, 26, 26, 100, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 100, 27, 27, 100, 10]" + "'", str23, "[0, 100, 27, 27, 100, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 100, 28, 28, 100, 10]" + "'", str24, "[0, 100, 28, 28, 100, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 100, 29, 29, 100, 10]" + "'", str25, "[0, 100, 29, 29, 100, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 100, 30, 30, 100, 10]" + "'", str26, "[0, 100, 30, 30, 100, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 100, 31, 31, 100, 10]" + "'", str27, "[0, 100, 31, 31, 100, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 100, 32, 32, 100, 10]" + "'", str28, "[0, 100, 32, 32, 100, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 100, 33, 33, 100, 10]" + "'", str29, "[0, 100, 33, 33, 100, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 100, 34, 34, 100, 10]" + "'", str30, "[0, 100, 34, 34, 100, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 100, 35, 35, 100, 10]" + "'", str31, "[0, 100, 35, 35, 100, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 100, 36, 36, 100, 10]" + "'", str32, "[0, 100, 36, 36, 100, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 100, 37, 37, 100, 10]" + "'", str33, "[0, 100, 37, 37, 100, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 100, 38, 38, 100, 10]" + "'", str34, "[0, 100, 38, 38, 100, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 100, 39, 39, 100, 10]" + "'", str35, "[0, 100, 39, 39, 100, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 100, 40, 40, 100, 10]" + "'", str36, "[0, 100, 40, 40, 100, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 100, 41, 41, 100, 10]" + "'", str37, "[0, 100, 41, 41, 100, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 100, 42, 42, 100, 10]" + "'", str38, "[0, 100, 42, 42, 100, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 100, 43, 43, 100, 10]" + "'", str39, "[0, 100, 43, 43, 100, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 100, 44, 44, 100, 10]" + "'", str40, "[0, 100, 44, 44, 100, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 100, 45, 45, 100, 10]" + "'", str41, "[0, 100, 45, 45, 100, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 100, 46, 46, 100, 10]" + "'", str42, "[0, 100, 46, 46, 100, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 100, 47, 47, 100, 10]" + "'", str43, "[0, 100, 47, 47, 100, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 100, 48, 48, 100, 10]" + "'", str44, "[0, 100, 48, 48, 100, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 100, 49, 49, 100, 10]" + "'", str45, "[0, 100, 49, 49, 100, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 100, 50, 50, 100, 10]" + "'", str46, "[0, 100, 50, 50, 100, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 100, 51, 51, 100, 10]" + "'", str47, "[0, 100, 51, 51, 100, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 100, 52, 52, 100, 10]" + "'", str48, "[0, 100, 52, 52, 100, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 100, 53, 53, 100, 10]" + "'", str49, "[0, 100, 53, 53, 100, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 100, 54, 54, 100, 10]" + "'", str50, "[0, 100, 54, 54, 100, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 100, 55, 55, 100, 10]" + "'", str51, "[0, 100, 55, 55, 100, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 100, 56, 56, 100, 10]" + "'", str52, "[0, 100, 56, 56, 100, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 100, 57, 57, 100, 10]" + "'", str53, "[0, 100, 57, 57, 100, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 100, 58, 58, 100, 10]" + "'", str54, "[0, 100, 58, 58, 100, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, 100, 59, 59, 100, 10]" + "'", str55, "[0, 100, 59, 59, 100, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, 100, 60, 60, 100, 10]" + "'", str56, "[0, 100, 60, 60, 100, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, 100, 61, 61, 100, 10]" + "'", str57, "[0, 100, 61, 61, 100, 10]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, 100, 62, 62, 100, 10]" + "'", str58, "[0, 100, 62, 62, 100, 10]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, 100, 63, 63, 100, 10]" + "'", str59, "[0, 100, 63, 63, 100, 10]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, 100, 64, 64, 100, 10]" + "'", str60, "[0, 100, 64, 64, 100, 10]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, 100, 65, 65, 100, 10]" + "'", str61, "[0, 100, 65, 65, 100, 10]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, 100, 66, 66, 100, 10]" + "'", str62, "[0, 100, 66, 66, 100, 10]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[0, 100, 67, 67, 100, 10]" + "'", str63, "[0, 100, 67, 67, 100, 10]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[0, 100, 68, 68, 100, 10]" + "'", str64, "[0, 100, 68, 68, 100, 10]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[0, 100, 69, 69, 100, 10]" + "'", str65, "[0, 100, 69, 69, 100, 10]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[0, 100, 70, 70, 100, 10]" + "'", str66, "[0, 100, 70, 70, 100, 10]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[0, 100, 71, 71, 100, 10]" + "'", str67, "[0, 100, 71, 71, 100, 10]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[0, 100, 72, 72, 100, 10]" + "'", str68, "[0, 100, 72, 72, 100, 10]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[0, 100, 73, 73, 100, 10]" + "'", str69, "[0, 100, 73, 73, 100, 10]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[0, 100, 74, 74, 100, 10]" + "'", str70, "[0, 100, 74, 74, 100, 10]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[0, 100, 75, 75, 100, 10]" + "'", str71, "[0, 100, 75, 75, 100, 10]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[0, 100, 76, 76, 100, 10]" + "'", str72, "[0, 100, 76, 76, 100, 10]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[0, 100, 77, 77, 100, 10]" + "'", str73, "[0, 100, 77, 77, 100, 10]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[0, 100, 78, 78, 100, 10]" + "'", str74, "[0, 100, 78, 78, 100, 10]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[0, 100, 79, 79, 100, 10]" + "'", str75, "[0, 100, 79, 79, 100, 10]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[0, 100, 80, 80, 100, 10]" + "'", str76, "[0, 100, 80, 80, 100, 10]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[0, 100, 81, 81, 100, 10]" + "'", str77, "[0, 100, 81, 81, 100, 10]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[0, 100, 82, 82, 100, 10]" + "'", str78, "[0, 100, 82, 82, 100, 10]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[0, 100, 83, 83, 100, 10]" + "'", str79, "[0, 100, 83, 83, 100, 10]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[0, 100, 84, 84, 100, 10]" + "'", str80, "[0, 100, 84, 84, 100, 10]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[0, 100, 85, 85, 100, 10]" + "'", str81, "[0, 100, 85, 85, 100, 10]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[0, 100, 86, 86, 100, 10]" + "'", str82, "[0, 100, 86, 86, 100, 10]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[0, 100, 87, 87, 100, 10]" + "'", str83, "[0, 100, 87, 87, 100, 10]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test2608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2608");
        int[] intArray1 = new int[] { 10 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass68 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[76]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[11]" + "'", str2, "[11]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[12]" + "'", str3, "[12]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[13]" + "'", str4, "[13]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[14]" + "'", str5, "[14]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[15]" + "'", str6, "[15]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[16]" + "'", str7, "[16]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[17]" + "'", str8, "[17]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[18]" + "'", str9, "[18]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[19]" + "'", str10, "[19]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[20]" + "'", str11, "[20]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[21]" + "'", str12, "[21]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[22]" + "'", str13, "[22]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[23]" + "'", str14, "[23]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[24]" + "'", str15, "[24]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[25]" + "'", str16, "[25]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[26]" + "'", str17, "[26]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[27]" + "'", str18, "[27]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[28]" + "'", str19, "[28]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[29]" + "'", str20, "[29]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[30]" + "'", str21, "[30]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[31]" + "'", str22, "[31]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32]" + "'", str23, "[32]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[33]" + "'", str24, "[33]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34]" + "'", str25, "[34]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35]" + "'", str26, "[35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[36]" + "'", str27, "[36]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[37]" + "'", str28, "[37]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[38]" + "'", str29, "[38]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[39]" + "'", str30, "[39]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[40]" + "'", str31, "[40]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[41]" + "'", str32, "[41]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[42]" + "'", str33, "[42]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[43]" + "'", str34, "[43]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[44]" + "'", str35, "[44]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[45]" + "'", str36, "[45]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[46]" + "'", str37, "[46]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[47]" + "'", str38, "[47]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[48]" + "'", str39, "[48]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[49]" + "'", str40, "[49]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[50]" + "'", str41, "[50]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[51]" + "'", str42, "[51]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[52]" + "'", str43, "[52]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[53]" + "'", str44, "[53]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[54]" + "'", str45, "[54]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[55]" + "'", str46, "[55]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[56]" + "'", str47, "[56]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[57]" + "'", str48, "[57]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[58]" + "'", str49, "[58]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[59]" + "'", str50, "[59]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[60]" + "'", str51, "[60]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[61]" + "'", str52, "[61]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[62]" + "'", str53, "[62]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[63]" + "'", str54, "[63]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[64]" + "'", str55, "[64]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[65]" + "'", str56, "[65]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[66]" + "'", str57, "[66]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[67]" + "'", str58, "[67]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[68]" + "'", str59, "[68]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[69]" + "'", str60, "[69]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[70]" + "'", str61, "[70]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[71]" + "'", str62, "[71]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[72]" + "'", str63, "[72]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[73]" + "'", str64, "[73]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[74]" + "'", str65, "[74]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[75]" + "'", str66, "[75]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[76]" + "'", str67, "[76]");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test2609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2609");
        int[] intArray1 = new int[] { (short) 100 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass82 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[180]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[101]" + "'", str2, "[101]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[102]" + "'", str3, "[102]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[103]" + "'", str4, "[103]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[104]" + "'", str5, "[104]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[105]" + "'", str6, "[105]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[106]" + "'", str7, "[106]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[107]" + "'", str8, "[107]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[108]" + "'", str9, "[108]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[109]" + "'", str10, "[109]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[110]" + "'", str11, "[110]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[111]" + "'", str12, "[111]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[112]" + "'", str13, "[112]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[113]" + "'", str14, "[113]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[114]" + "'", str15, "[114]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[115]" + "'", str16, "[115]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[116]" + "'", str17, "[116]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[117]" + "'", str18, "[117]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[118]" + "'", str19, "[118]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[119]" + "'", str20, "[119]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[120]" + "'", str21, "[120]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[121]" + "'", str22, "[121]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[122]" + "'", str23, "[122]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[123]" + "'", str24, "[123]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[124]" + "'", str25, "[124]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[125]" + "'", str26, "[125]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[126]" + "'", str27, "[126]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[127]" + "'", str28, "[127]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[128]" + "'", str29, "[128]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[129]" + "'", str30, "[129]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[130]" + "'", str31, "[130]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[131]" + "'", str32, "[131]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[132]" + "'", str33, "[132]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[133]" + "'", str34, "[133]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[134]" + "'", str35, "[134]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[135]" + "'", str36, "[135]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[136]" + "'", str37, "[136]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[137]" + "'", str38, "[137]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[138]" + "'", str39, "[138]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[139]" + "'", str40, "[139]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[140]" + "'", str41, "[140]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[141]" + "'", str42, "[141]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[142]" + "'", str43, "[142]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[143]" + "'", str44, "[143]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[144]" + "'", str45, "[144]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[145]" + "'", str46, "[145]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[146]" + "'", str47, "[146]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[147]" + "'", str48, "[147]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[148]" + "'", str49, "[148]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[149]" + "'", str50, "[149]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[150]" + "'", str51, "[150]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[151]" + "'", str52, "[151]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[152]" + "'", str53, "[152]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[153]" + "'", str54, "[153]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[154]" + "'", str55, "[154]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[155]" + "'", str56, "[155]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[156]" + "'", str57, "[156]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[157]" + "'", str58, "[157]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[158]" + "'", str59, "[158]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[159]" + "'", str60, "[159]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[160]" + "'", str61, "[160]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[161]" + "'", str62, "[161]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[162]" + "'", str63, "[162]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[163]" + "'", str64, "[163]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[164]" + "'", str65, "[164]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[165]" + "'", str66, "[165]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[166]" + "'", str67, "[166]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[167]" + "'", str68, "[167]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[168]" + "'", str69, "[168]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[169]" + "'", str70, "[169]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[170]" + "'", str71, "[170]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[171]" + "'", str72, "[171]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[172]" + "'", str73, "[172]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[173]" + "'", str74, "[173]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[174]" + "'", str75, "[174]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[175]" + "'", str76, "[175]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[176]" + "'", str77, "[176]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[177]" + "'", str78, "[177]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[178]" + "'", str79, "[178]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[179]" + "'", str80, "[179]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[180]" + "'", str81, "[180]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2610");
        int[] intArray4 = new int[] { 1, (short) 10, (short) 10, (short) -1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass71 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 76, 76, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 11, 11, -1]" + "'", str5, "[1, 11, 11, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 12, 12, -1]" + "'", str6, "[1, 12, 12, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 13, 13, -1]" + "'", str7, "[1, 13, 13, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 14, 14, -1]" + "'", str8, "[1, 14, 14, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 15, 15, -1]" + "'", str9, "[1, 15, 15, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 16, 16, -1]" + "'", str10, "[1, 16, 16, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 17, 17, -1]" + "'", str11, "[1, 17, 17, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 18, 18, -1]" + "'", str12, "[1, 18, 18, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 19, 19, -1]" + "'", str13, "[1, 19, 19, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 20, 20, -1]" + "'", str14, "[1, 20, 20, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 21, 21, -1]" + "'", str15, "[1, 21, 21, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 22, 22, -1]" + "'", str16, "[1, 22, 22, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 23, 23, -1]" + "'", str17, "[1, 23, 23, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 24, 24, -1]" + "'", str18, "[1, 24, 24, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 25, 25, -1]" + "'", str19, "[1, 25, 25, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 26, 26, -1]" + "'", str20, "[1, 26, 26, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 27, 27, -1]" + "'", str21, "[1, 27, 27, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 28, 28, -1]" + "'", str22, "[1, 28, 28, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 29, 29, -1]" + "'", str23, "[1, 29, 29, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 30, 30, -1]" + "'", str24, "[1, 30, 30, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 31, 31, -1]" + "'", str25, "[1, 31, 31, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 32, 32, -1]" + "'", str26, "[1, 32, 32, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 33, 33, -1]" + "'", str27, "[1, 33, 33, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 34, 34, -1]" + "'", str28, "[1, 34, 34, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 35, 35, -1]" + "'", str29, "[1, 35, 35, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 36, 36, -1]" + "'", str30, "[1, 36, 36, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 37, 37, -1]" + "'", str31, "[1, 37, 37, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 38, 38, -1]" + "'", str32, "[1, 38, 38, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 39, 39, -1]" + "'", str33, "[1, 39, 39, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 40, 40, -1]" + "'", str34, "[1, 40, 40, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 41, 41, -1]" + "'", str35, "[1, 41, 41, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 42, 42, -1]" + "'", str36, "[1, 42, 42, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 43, 43, -1]" + "'", str37, "[1, 43, 43, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 44, 44, -1]" + "'", str38, "[1, 44, 44, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 45, 45, -1]" + "'", str39, "[1, 45, 45, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 46, 46, -1]" + "'", str40, "[1, 46, 46, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 47, 47, -1]" + "'", str41, "[1, 47, 47, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 48, 48, -1]" + "'", str42, "[1, 48, 48, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 49, 49, -1]" + "'", str43, "[1, 49, 49, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 50, 50, -1]" + "'", str44, "[1, 50, 50, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 51, 51, -1]" + "'", str45, "[1, 51, 51, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 52, 52, -1]" + "'", str46, "[1, 52, 52, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 53, 53, -1]" + "'", str47, "[1, 53, 53, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 54, 54, -1]" + "'", str48, "[1, 54, 54, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 55, 55, -1]" + "'", str49, "[1, 55, 55, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 56, 56, -1]" + "'", str50, "[1, 56, 56, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 57, 57, -1]" + "'", str51, "[1, 57, 57, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 58, 58, -1]" + "'", str52, "[1, 58, 58, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 59, 59, -1]" + "'", str53, "[1, 59, 59, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 60, 60, -1]" + "'", str54, "[1, 60, 60, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 61, 61, -1]" + "'", str55, "[1, 61, 61, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 62, 62, -1]" + "'", str56, "[1, 62, 62, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 63, 63, -1]" + "'", str57, "[1, 63, 63, -1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 64, 64, -1]" + "'", str58, "[1, 64, 64, -1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 65, 65, -1]" + "'", str59, "[1, 65, 65, -1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 66, 66, -1]" + "'", str60, "[1, 66, 66, -1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 67, 67, -1]" + "'", str61, "[1, 67, 67, -1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 68, 68, -1]" + "'", str62, "[1, 68, 68, -1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 69, 69, -1]" + "'", str63, "[1, 69, 69, -1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 70, 70, -1]" + "'", str64, "[1, 70, 70, -1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 71, 71, -1]" + "'", str65, "[1, 71, 71, -1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 72, 72, -1]" + "'", str66, "[1, 72, 72, -1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 73, 73, -1]" + "'", str67, "[1, 73, 73, -1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 74, 74, -1]" + "'", str68, "[1, 74, 74, -1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 75, 75, -1]" + "'", str69, "[1, 75, 75, -1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 76, 76, -1]" + "'", str70, "[1, 76, 76, -1]");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test2611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2611");
        int[] intArray2 = new int[] { (byte) 1, (-1) };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass67 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[3, 3]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 0]" + "'", str3, "[2, 0]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 1]" + "'", str4, "[3, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 2]" + "'", str5, "[4, 2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 3]" + "'", str6, "[5, 3]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 4]" + "'", str7, "[6, 4]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 5]" + "'", str8, "[7, 5]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 6]" + "'", str9, "[8, 6]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 7]" + "'", str10, "[9, 7]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 8]" + "'", str11, "[10, 8]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 9]" + "'", str12, "[11, 9]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 1]" + "'", str13, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1]" + "'", str14, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2]" + "'", str15, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[3, 3]" + "'", str16, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[4, 4]" + "'", str17, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[5, 5]" + "'", str18, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[6, 6]" + "'", str19, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[7, 7]" + "'", str20, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[8, 8]" + "'", str21, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[9, 9]" + "'", str22, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 1]" + "'", str23, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1]" + "'", str24, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 2]" + "'", str25, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3]" + "'", str26, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[4, 4]" + "'", str27, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[5, 5]" + "'", str28, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[6, 6]" + "'", str29, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[7, 7]" + "'", str30, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[8, 8]" + "'", str31, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[9, 9]" + "'", str32, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 0, 1]" + "'", str33, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1]" + "'", str34, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 2]" + "'", str35, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 3]" + "'", str36, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4]" + "'", str37, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[5, 5]" + "'", str38, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[6, 6]" + "'", str39, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[7, 7]" + "'", str40, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[8, 8]" + "'", str41, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[9, 9]" + "'", str42, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 0, 1]" + "'", str43, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1]" + "'", str44, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[2, 2]" + "'", str45, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 3]" + "'", str46, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 4]" + "'", str47, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5]" + "'", str48, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[6, 6]" + "'", str49, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[7, 7]" + "'", str50, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[8, 8]" + "'", str51, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[9, 9]" + "'", str52, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 0, 1]" + "'", str53, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 1]" + "'", str54, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[2, 2]" + "'", str55, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[3, 3]" + "'", str56, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[4, 4]" + "'", str57, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 5]" + "'", str58, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 6]" + "'", str59, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[7, 7]" + "'", str60, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[8, 8]" + "'", str61, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[9, 9]" + "'", str62, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 0, 1]" + "'", str63, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 1]" + "'", str64, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[2, 2]" + "'", str65, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[3, 3]" + "'", str66, "[3, 3]");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test2612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2612");
        int[] intArray6 = new int[] { 1, (byte) 0, (byte) 0, (byte) -1, (byte) 1, '4' };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass42 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 3, 4, 4, 4, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 1, 0, 1, 52]" + "'", str7, "[1, 0, 1, 0, 1, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 2, 1, 1, 52]" + "'", str8, "[1, 0, 2, 1, 1, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 3, 2, 1, 52]" + "'", str9, "[1, 0, 3, 2, 1, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 4, 3, 1, 52]" + "'", str10, "[1, 0, 4, 3, 1, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 5, 4, 1, 52]" + "'", str11, "[1, 0, 5, 4, 1, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 6, 5, 1, 52]" + "'", str12, "[1, 0, 6, 5, 1, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 7, 6, 1, 52]" + "'", str13, "[1, 0, 7, 6, 1, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 8, 7, 1, 52]" + "'", str14, "[1, 0, 8, 7, 1, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 9, 8, 1, 52]" + "'", str15, "[1, 0, 9, 8, 1, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 10, 9, 1, 52]" + "'", str16, "[1, 0, 10, 9, 1, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 1, 0, 0, 2, 52]" + "'", str17, "[1, 1, 0, 0, 2, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 1, 1, 1, 2, 52]" + "'", str18, "[1, 1, 1, 1, 2, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 1, 2, 2, 2, 52]" + "'", str19, "[1, 1, 2, 2, 2, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1, 3, 3, 2, 52]" + "'", str20, "[1, 1, 3, 3, 2, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1, 4, 4, 2, 52]" + "'", str21, "[1, 1, 4, 4, 2, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1, 5, 5, 2, 52]" + "'", str22, "[1, 1, 5, 5, 2, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 6, 6, 2, 52]" + "'", str23, "[1, 1, 6, 6, 2, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1, 7, 7, 2, 52]" + "'", str24, "[1, 1, 7, 7, 2, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1, 8, 8, 2, 52]" + "'", str25, "[1, 1, 8, 8, 2, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 1, 9, 9, 2, 52]" + "'", str26, "[1, 1, 9, 9, 2, 52]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 2, 0, 0, 3, 52]" + "'", str27, "[1, 2, 0, 0, 3, 52]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 2, 1, 1, 3, 52]" + "'", str28, "[1, 2, 1, 1, 3, 52]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 2, 2, 2, 3, 52]" + "'", str29, "[1, 2, 2, 2, 3, 52]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 2, 3, 3, 3, 52]" + "'", str30, "[1, 2, 3, 3, 3, 52]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 2, 4, 4, 3, 52]" + "'", str31, "[1, 2, 4, 4, 3, 52]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 2, 5, 5, 3, 52]" + "'", str32, "[1, 2, 5, 5, 3, 52]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 2, 6, 6, 3, 52]" + "'", str33, "[1, 2, 6, 6, 3, 52]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 2, 7, 7, 3, 52]" + "'", str34, "[1, 2, 7, 7, 3, 52]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 2, 8, 8, 3, 52]" + "'", str35, "[1, 2, 8, 8, 3, 52]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 2, 9, 9, 3, 52]" + "'", str36, "[1, 2, 9, 9, 3, 52]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 3, 0, 0, 4, 52]" + "'", str37, "[1, 3, 0, 0, 4, 52]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 3, 1, 1, 4, 52]" + "'", str38, "[1, 3, 1, 1, 4, 52]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 3, 2, 2, 4, 52]" + "'", str39, "[1, 3, 2, 2, 4, 52]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 3, 3, 3, 4, 52]" + "'", str40, "[1, 3, 3, 3, 4, 52]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 3, 4, 4, 4, 52]" + "'", str41, "[1, 3, 4, 4, 4, 52]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test2613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2613");
        int[] intArray5 = new int[] { 'a', '4', 10, (-1), 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass12 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[97, 52, 16, -1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 52, 11, -1, 1]" + "'", str6, "[97, 52, 11, -1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 52, 12, -1, 1]" + "'", str7, "[97, 52, 12, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 52, 13, -1, 1]" + "'", str8, "[97, 52, 13, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 52, 14, -1, 1]" + "'", str9, "[97, 52, 14, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 52, 15, -1, 1]" + "'", str10, "[97, 52, 15, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 52, 16, -1, 1]" + "'", str11, "[97, 52, 16, -1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test2614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2614");
        int[] intArray2 = new int[] { 'a', 1 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass29 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[7, 7]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[98, 2]" + "'", str3, "[98, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[99, 3]" + "'", str4, "[99, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 4]" + "'", str5, "[100, 4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[101, 5]" + "'", str6, "[101, 5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[102, 6]" + "'", str7, "[102, 6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[103, 7]" + "'", str8, "[103, 7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[104, 8]" + "'", str9, "[104, 8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[105, 9]" + "'", str10, "[105, 9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 2]" + "'", str13, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3, 3]" + "'", str14, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4, 4]" + "'", str15, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5, 5]" + "'", str16, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6, 6]" + "'", str17, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7, 7]" + "'", str18, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8, 8]" + "'", str19, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9, 9]" + "'", str20, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 2]" + "'", str23, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 3]" + "'", str24, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4, 4]" + "'", str25, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5, 5]" + "'", str26, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6, 6]" + "'", str27, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7, 7]" + "'", str28, "[7, 7]");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test2615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2615");
        int[] intArray6 = new int[] { (short) 1, 1, ' ', ' ', 10, (-1) };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str90 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str91 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str92 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str93 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str94 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str95 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str96 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str97 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str98 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass99 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 1, 124, 124, 10, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1, 33, 33, 10, -1]" + "'", str7, "[1, 1, 33, 33, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1, 34, 34, 10, -1]" + "'", str8, "[1, 1, 34, 34, 10, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1, 35, 35, 10, -1]" + "'", str9, "[1, 1, 35, 35, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1, 36, 36, 10, -1]" + "'", str10, "[1, 1, 36, 36, 10, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1, 37, 37, 10, -1]" + "'", str11, "[1, 1, 37, 37, 10, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1, 38, 38, 10, -1]" + "'", str12, "[1, 1, 38, 38, 10, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 39, 39, 10, -1]" + "'", str13, "[1, 1, 39, 39, 10, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1, 40, 40, 10, -1]" + "'", str14, "[1, 1, 40, 40, 10, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 1, 41, 41, 10, -1]" + "'", str15, "[1, 1, 41, 41, 10, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 42, 42, 10, -1]" + "'", str16, "[1, 1, 42, 42, 10, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 1, 43, 43, 10, -1]" + "'", str17, "[1, 1, 43, 43, 10, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 1, 44, 44, 10, -1]" + "'", str18, "[1, 1, 44, 44, 10, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 1, 45, 45, 10, -1]" + "'", str19, "[1, 1, 45, 45, 10, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1, 46, 46, 10, -1]" + "'", str20, "[1, 1, 46, 46, 10, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1, 47, 47, 10, -1]" + "'", str21, "[1, 1, 47, 47, 10, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1, 48, 48, 10, -1]" + "'", str22, "[1, 1, 48, 48, 10, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 49, 49, 10, -1]" + "'", str23, "[1, 1, 49, 49, 10, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1, 50, 50, 10, -1]" + "'", str24, "[1, 1, 50, 50, 10, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1, 51, 51, 10, -1]" + "'", str25, "[1, 1, 51, 51, 10, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 1, 52, 52, 10, -1]" + "'", str26, "[1, 1, 52, 52, 10, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 1, 53, 53, 10, -1]" + "'", str27, "[1, 1, 53, 53, 10, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 1, 54, 54, 10, -1]" + "'", str28, "[1, 1, 54, 54, 10, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 1, 55, 55, 10, -1]" + "'", str29, "[1, 1, 55, 55, 10, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 1, 56, 56, 10, -1]" + "'", str30, "[1, 1, 56, 56, 10, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 1, 57, 57, 10, -1]" + "'", str31, "[1, 1, 57, 57, 10, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1, 58, 58, 10, -1]" + "'", str32, "[1, 1, 58, 58, 10, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1, 59, 59, 10, -1]" + "'", str33, "[1, 1, 59, 59, 10, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1, 60, 60, 10, -1]" + "'", str34, "[1, 1, 60, 60, 10, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 1, 61, 61, 10, -1]" + "'", str35, "[1, 1, 61, 61, 10, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 1, 62, 62, 10, -1]" + "'", str36, "[1, 1, 62, 62, 10, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 1, 63, 63, 10, -1]" + "'", str37, "[1, 1, 63, 63, 10, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 1, 64, 64, 10, -1]" + "'", str38, "[1, 1, 64, 64, 10, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 1, 65, 65, 10, -1]" + "'", str39, "[1, 1, 65, 65, 10, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 1, 66, 66, 10, -1]" + "'", str40, "[1, 1, 66, 66, 10, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 1, 67, 67, 10, -1]" + "'", str41, "[1, 1, 67, 67, 10, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1, 68, 68, 10, -1]" + "'", str42, "[1, 1, 68, 68, 10, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1, 69, 69, 10, -1]" + "'", str43, "[1, 1, 69, 69, 10, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1, 70, 70, 10, -1]" + "'", str44, "[1, 1, 70, 70, 10, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 1, 71, 71, 10, -1]" + "'", str45, "[1, 1, 71, 71, 10, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 1, 72, 72, 10, -1]" + "'", str46, "[1, 1, 72, 72, 10, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 1, 73, 73, 10, -1]" + "'", str47, "[1, 1, 73, 73, 10, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 1, 74, 74, 10, -1]" + "'", str48, "[1, 1, 74, 74, 10, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 1, 75, 75, 10, -1]" + "'", str49, "[1, 1, 75, 75, 10, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 1, 76, 76, 10, -1]" + "'", str50, "[1, 1, 76, 76, 10, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 1, 77, 77, 10, -1]" + "'", str51, "[1, 1, 77, 77, 10, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1, 78, 78, 10, -1]" + "'", str52, "[1, 1, 78, 78, 10, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 1, 79, 79, 10, -1]" + "'", str53, "[1, 1, 79, 79, 10, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 1, 80, 80, 10, -1]" + "'", str54, "[1, 1, 80, 80, 10, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 1, 81, 81, 10, -1]" + "'", str55, "[1, 1, 81, 81, 10, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 1, 82, 82, 10, -1]" + "'", str56, "[1, 1, 82, 82, 10, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 1, 83, 83, 10, -1]" + "'", str57, "[1, 1, 83, 83, 10, -1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 1, 84, 84, 10, -1]" + "'", str58, "[1, 1, 84, 84, 10, -1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 1, 85, 85, 10, -1]" + "'", str59, "[1, 1, 85, 85, 10, -1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 1, 86, 86, 10, -1]" + "'", str60, "[1, 1, 86, 86, 10, -1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 1, 87, 87, 10, -1]" + "'", str61, "[1, 1, 87, 87, 10, -1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 1, 88, 88, 10, -1]" + "'", str62, "[1, 1, 88, 88, 10, -1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 1, 89, 89, 10, -1]" + "'", str63, "[1, 1, 89, 89, 10, -1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 1, 90, 90, 10, -1]" + "'", str64, "[1, 1, 90, 90, 10, -1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 1, 91, 91, 10, -1]" + "'", str65, "[1, 1, 91, 91, 10, -1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 1, 92, 92, 10, -1]" + "'", str66, "[1, 1, 92, 92, 10, -1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 1, 93, 93, 10, -1]" + "'", str67, "[1, 1, 93, 93, 10, -1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 1, 94, 94, 10, -1]" + "'", str68, "[1, 1, 94, 94, 10, -1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 1, 95, 95, 10, -1]" + "'", str69, "[1, 1, 95, 95, 10, -1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 1, 96, 96, 10, -1]" + "'", str70, "[1, 1, 96, 96, 10, -1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 1, 97, 97, 10, -1]" + "'", str71, "[1, 1, 97, 97, 10, -1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 1, 98, 98, 10, -1]" + "'", str72, "[1, 1, 98, 98, 10, -1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 1, 99, 99, 10, -1]" + "'", str73, "[1, 1, 99, 99, 10, -1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 1, 100, 100, 10, -1]" + "'", str74, "[1, 1, 100, 100, 10, -1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[1, 1, 101, 101, 10, -1]" + "'", str75, "[1, 1, 101, 101, 10, -1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[1, 1, 102, 102, 10, -1]" + "'", str76, "[1, 1, 102, 102, 10, -1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[1, 1, 103, 103, 10, -1]" + "'", str77, "[1, 1, 103, 103, 10, -1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[1, 1, 104, 104, 10, -1]" + "'", str78, "[1, 1, 104, 104, 10, -1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[1, 1, 105, 105, 10, -1]" + "'", str79, "[1, 1, 105, 105, 10, -1]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[1, 1, 106, 106, 10, -1]" + "'", str80, "[1, 1, 106, 106, 10, -1]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[1, 1, 107, 107, 10, -1]" + "'", str81, "[1, 1, 107, 107, 10, -1]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[1, 1, 108, 108, 10, -1]" + "'", str82, "[1, 1, 108, 108, 10, -1]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[1, 1, 109, 109, 10, -1]" + "'", str83, "[1, 1, 109, 109, 10, -1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[1, 1, 110, 110, 10, -1]" + "'", str84, "[1, 1, 110, 110, 10, -1]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[1, 1, 111, 111, 10, -1]" + "'", str85, "[1, 1, 111, 111, 10, -1]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[1, 1, 112, 112, 10, -1]" + "'", str86, "[1, 1, 112, 112, 10, -1]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[1, 1, 113, 113, 10, -1]" + "'", str87, "[1, 1, 113, 113, 10, -1]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[1, 1, 114, 114, 10, -1]" + "'", str88, "[1, 1, 114, 114, 10, -1]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[1, 1, 115, 115, 10, -1]" + "'", str89, "[1, 1, 115, 115, 10, -1]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[1, 1, 116, 116, 10, -1]" + "'", str90, "[1, 1, 116, 116, 10, -1]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[1, 1, 117, 117, 10, -1]" + "'", str91, "[1, 1, 117, 117, 10, -1]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[1, 1, 118, 118, 10, -1]" + "'", str92, "[1, 1, 118, 118, 10, -1]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[1, 1, 119, 119, 10, -1]" + "'", str93, "[1, 1, 119, 119, 10, -1]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "[1, 1, 120, 120, 10, -1]" + "'", str94, "[1, 1, 120, 120, 10, -1]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "[1, 1, 121, 121, 10, -1]" + "'", str95, "[1, 1, 121, 121, 10, -1]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "[1, 1, 122, 122, 10, -1]" + "'", str96, "[1, 1, 122, 122, 10, -1]");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "[1, 1, 123, 123, 10, -1]" + "'", str97, "[1, 1, 123, 123, 10, -1]");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "[1, 1, 124, 124, 10, -1]" + "'", str98, "[1, 1, 124, 124, 10, -1]");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2616");
        int[] intArray6 = new int[] { ' ', (byte) 0, ' ', (byte) 0, (-1), (short) 1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass18 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[32, 1, 1, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 0, 33, 1, -1, 1]" + "'", str7, "[32, 0, 33, 1, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 0, 34, 2, -1, 1]" + "'", str8, "[32, 0, 34, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 0, 35, 3, -1, 1]" + "'", str9, "[32, 0, 35, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 0, 36, 4, -1, 1]" + "'", str10, "[32, 0, 36, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 0, 37, 5, -1, 1]" + "'", str11, "[32, 0, 37, 5, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 0, 38, 6, -1, 1]" + "'", str12, "[32, 0, 38, 6, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 0, 39, 7, -1, 1]" + "'", str13, "[32, 0, 39, 7, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 0, 40, 8, -1, 1]" + "'", str14, "[32, 0, 40, 8, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[32, 0, 41, 9, -1, 1]" + "'", str15, "[32, 0, 41, 9, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[32, 1, 0, 0, 0, 1]" + "'", str16, "[32, 1, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[32, 1, 1, 1, 0, 1]" + "'", str17, "[32, 1, 1, 1, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test2617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2617");
        int[] intArray2 = new int[] { 1, 'a' };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass41 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[39, 135]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 98]" + "'", str3, "[2, 98]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 99]" + "'", str4, "[3, 99]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 100]" + "'", str5, "[4, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 101]" + "'", str6, "[5, 101]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 102]" + "'", str7, "[6, 102]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 103]" + "'", str8, "[7, 103]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 104]" + "'", str9, "[8, 104]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 105]" + "'", str10, "[9, 105]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 106]" + "'", str11, "[10, 106]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 107]" + "'", str12, "[11, 107]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[12, 108]" + "'", str13, "[12, 108]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[13, 109]" + "'", str14, "[13, 109]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[14, 110]" + "'", str15, "[14, 110]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[15, 111]" + "'", str16, "[15, 111]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[16, 112]" + "'", str17, "[16, 112]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[17, 113]" + "'", str18, "[17, 113]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[18, 114]" + "'", str19, "[18, 114]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[19, 115]" + "'", str20, "[19, 115]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[20, 116]" + "'", str21, "[20, 116]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[21, 117]" + "'", str22, "[21, 117]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[22, 118]" + "'", str23, "[22, 118]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[23, 119]" + "'", str24, "[23, 119]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[24, 120]" + "'", str25, "[24, 120]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[25, 121]" + "'", str26, "[25, 121]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[26, 122]" + "'", str27, "[26, 122]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[27, 123]" + "'", str28, "[27, 123]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[28, 124]" + "'", str29, "[28, 124]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[29, 125]" + "'", str30, "[29, 125]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[30, 126]" + "'", str31, "[30, 126]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[31, 127]" + "'", str32, "[31, 127]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[32, 128]" + "'", str33, "[32, 128]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[33, 129]" + "'", str34, "[33, 129]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[34, 130]" + "'", str35, "[34, 130]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 131]" + "'", str36, "[35, 131]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[36, 132]" + "'", str37, "[36, 132]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[37, 133]" + "'", str38, "[37, 133]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[38, 134]" + "'", str39, "[38, 134]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[39, 135]" + "'", str40, "[39, 135]");
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test2618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2618");
        int[] intArray2 = new int[] { 1, 'a' };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass44 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[42, 138]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 98]" + "'", str3, "[2, 98]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 99]" + "'", str4, "[3, 99]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 100]" + "'", str5, "[4, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 101]" + "'", str6, "[5, 101]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 102]" + "'", str7, "[6, 102]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 103]" + "'", str8, "[7, 103]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 104]" + "'", str9, "[8, 104]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 105]" + "'", str10, "[9, 105]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 106]" + "'", str11, "[10, 106]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 107]" + "'", str12, "[11, 107]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[12, 108]" + "'", str13, "[12, 108]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[13, 109]" + "'", str14, "[13, 109]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[14, 110]" + "'", str15, "[14, 110]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[15, 111]" + "'", str16, "[15, 111]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[16, 112]" + "'", str17, "[16, 112]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[17, 113]" + "'", str18, "[17, 113]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[18, 114]" + "'", str19, "[18, 114]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[19, 115]" + "'", str20, "[19, 115]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[20, 116]" + "'", str21, "[20, 116]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[21, 117]" + "'", str22, "[21, 117]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[22, 118]" + "'", str23, "[22, 118]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[23, 119]" + "'", str24, "[23, 119]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[24, 120]" + "'", str25, "[24, 120]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[25, 121]" + "'", str26, "[25, 121]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[26, 122]" + "'", str27, "[26, 122]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[27, 123]" + "'", str28, "[27, 123]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[28, 124]" + "'", str29, "[28, 124]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[29, 125]" + "'", str30, "[29, 125]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[30, 126]" + "'", str31, "[30, 126]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[31, 127]" + "'", str32, "[31, 127]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[32, 128]" + "'", str33, "[32, 128]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[33, 129]" + "'", str34, "[33, 129]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[34, 130]" + "'", str35, "[34, 130]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 131]" + "'", str36, "[35, 131]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[36, 132]" + "'", str37, "[36, 132]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[37, 133]" + "'", str38, "[37, 133]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[38, 134]" + "'", str39, "[38, 134]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[39, 135]" + "'", str40, "[39, 135]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[40, 136]" + "'", str41, "[40, 136]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[41, 137]" + "'", str42, "[41, 137]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[42, 138]" + "'", str43, "[42, 138]");
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test2619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2619");
        int[] intArray2 = new int[] { 1, 'a' };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass42 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[40, 136]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 98]" + "'", str3, "[2, 98]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 99]" + "'", str4, "[3, 99]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 100]" + "'", str5, "[4, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 101]" + "'", str6, "[5, 101]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 102]" + "'", str7, "[6, 102]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 103]" + "'", str8, "[7, 103]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 104]" + "'", str9, "[8, 104]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 105]" + "'", str10, "[9, 105]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 106]" + "'", str11, "[10, 106]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 107]" + "'", str12, "[11, 107]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[12, 108]" + "'", str13, "[12, 108]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[13, 109]" + "'", str14, "[13, 109]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[14, 110]" + "'", str15, "[14, 110]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[15, 111]" + "'", str16, "[15, 111]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[16, 112]" + "'", str17, "[16, 112]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[17, 113]" + "'", str18, "[17, 113]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[18, 114]" + "'", str19, "[18, 114]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[19, 115]" + "'", str20, "[19, 115]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[20, 116]" + "'", str21, "[20, 116]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[21, 117]" + "'", str22, "[21, 117]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[22, 118]" + "'", str23, "[22, 118]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[23, 119]" + "'", str24, "[23, 119]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[24, 120]" + "'", str25, "[24, 120]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[25, 121]" + "'", str26, "[25, 121]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[26, 122]" + "'", str27, "[26, 122]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[27, 123]" + "'", str28, "[27, 123]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[28, 124]" + "'", str29, "[28, 124]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[29, 125]" + "'", str30, "[29, 125]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[30, 126]" + "'", str31, "[30, 126]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[31, 127]" + "'", str32, "[31, 127]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[32, 128]" + "'", str33, "[32, 128]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[33, 129]" + "'", str34, "[33, 129]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[34, 130]" + "'", str35, "[34, 130]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 131]" + "'", str36, "[35, 131]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[36, 132]" + "'", str37, "[36, 132]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[37, 133]" + "'", str38, "[37, 133]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[38, 134]" + "'", str39, "[38, 134]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[39, 135]" + "'", str40, "[39, 135]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[40, 136]" + "'", str41, "[40, 136]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test2620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2620");
        int[] intArray2 = new int[] { (short) 1, (short) -1 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass90 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[6, 6]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 0]" + "'", str3, "[2, 0]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 1]" + "'", str4, "[3, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 2]" + "'", str5, "[4, 2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 3]" + "'", str6, "[5, 3]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 4]" + "'", str7, "[6, 4]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 5]" + "'", str8, "[7, 5]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 6]" + "'", str9, "[8, 6]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 7]" + "'", str10, "[9, 7]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 8]" + "'", str11, "[10, 8]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 9]" + "'", str12, "[11, 9]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 1]" + "'", str13, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1]" + "'", str14, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2]" + "'", str15, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[3, 3]" + "'", str16, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[4, 4]" + "'", str17, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[5, 5]" + "'", str18, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[6, 6]" + "'", str19, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[7, 7]" + "'", str20, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[8, 8]" + "'", str21, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[9, 9]" + "'", str22, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 1]" + "'", str23, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1]" + "'", str24, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 2]" + "'", str25, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3]" + "'", str26, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[4, 4]" + "'", str27, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[5, 5]" + "'", str28, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[6, 6]" + "'", str29, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[7, 7]" + "'", str30, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[8, 8]" + "'", str31, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[9, 9]" + "'", str32, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 0, 1]" + "'", str33, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1]" + "'", str34, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 2]" + "'", str35, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 3]" + "'", str36, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4]" + "'", str37, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[5, 5]" + "'", str38, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[6, 6]" + "'", str39, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[7, 7]" + "'", str40, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[8, 8]" + "'", str41, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[9, 9]" + "'", str42, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 0, 1]" + "'", str43, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1]" + "'", str44, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[2, 2]" + "'", str45, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 3]" + "'", str46, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 4]" + "'", str47, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5]" + "'", str48, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[6, 6]" + "'", str49, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[7, 7]" + "'", str50, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[8, 8]" + "'", str51, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[9, 9]" + "'", str52, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 0, 1]" + "'", str53, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 1]" + "'", str54, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[2, 2]" + "'", str55, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[3, 3]" + "'", str56, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[4, 4]" + "'", str57, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 5]" + "'", str58, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 6]" + "'", str59, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[7, 7]" + "'", str60, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[8, 8]" + "'", str61, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[9, 9]" + "'", str62, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 0, 1]" + "'", str63, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 1]" + "'", str64, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[2, 2]" + "'", str65, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[3, 3]" + "'", str66, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[4, 4]" + "'", str67, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[5, 5]" + "'", str68, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[6, 6]" + "'", str69, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[7, 7]" + "'", str70, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[8, 8]" + "'", str71, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[9, 9]" + "'", str72, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 0, 1]" + "'", str73, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 1]" + "'", str74, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[2, 2]" + "'", str75, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[3, 3]" + "'", str76, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[4, 4]" + "'", str77, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[5, 5]" + "'", str78, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[6, 6]" + "'", str79, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[7, 7]" + "'", str80, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[8, 8]" + "'", str81, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[9, 9]" + "'", str82, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[1, 0, 1]" + "'", str83, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[1, 1]" + "'", str84, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[2, 2]" + "'", str85, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[3, 3]" + "'", str86, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[4, 4]" + "'", str87, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[5, 5]" + "'", str88, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[6, 6]" + "'", str89, "[6, 6]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2621");
        int[] intArray4 = new int[] { (byte) -1, 10, (byte) 0, (short) 100 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass83 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[6, 8, 8, 107]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 11, 1, 100]" + "'", str5, "[-1, 11, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 12, 2, 100]" + "'", str6, "[-1, 12, 2, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 13, 3, 100]" + "'", str7, "[-1, 13, 3, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 14, 4, 100]" + "'", str8, "[-1, 14, 4, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 15, 5, 100]" + "'", str9, "[-1, 15, 5, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 16, 6, 100]" + "'", str10, "[-1, 16, 6, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 17, 7, 100]" + "'", str11, "[-1, 17, 7, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 18, 8, 100]" + "'", str12, "[-1, 18, 8, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 19, 9, 100]" + "'", str13, "[-1, 19, 9, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 0, 0, 101]" + "'", str14, "[0, 0, 0, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 1, 1, 101]" + "'", str15, "[0, 1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 2, 2, 101]" + "'", str16, "[0, 2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 3, 3, 101]" + "'", str17, "[0, 3, 3, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 4, 4, 101]" + "'", str18, "[0, 4, 4, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 5, 5, 101]" + "'", str19, "[0, 5, 5, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 6, 6, 101]" + "'", str20, "[0, 6, 6, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 7, 7, 101]" + "'", str21, "[0, 7, 7, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 8, 8, 101]" + "'", str22, "[0, 8, 8, 101]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 9, 9, 101]" + "'", str23, "[0, 9, 9, 101]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 0, 102]" + "'", str24, "[1, 0, 0, 102]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1, 1, 102]" + "'", str25, "[1, 1, 1, 102]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 2, 2, 102]" + "'", str26, "[1, 2, 2, 102]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 3, 3, 102]" + "'", str27, "[1, 3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 4, 4, 102]" + "'", str28, "[1, 4, 4, 102]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 5, 5, 102]" + "'", str29, "[1, 5, 5, 102]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 6, 6, 102]" + "'", str30, "[1, 6, 6, 102]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 7, 7, 102]" + "'", str31, "[1, 7, 7, 102]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 8, 8, 102]" + "'", str32, "[1, 8, 8, 102]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 9, 9, 102]" + "'", str33, "[1, 9, 9, 102]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 0, 0, 103]" + "'", str34, "[2, 0, 0, 103]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 1, 1, 103]" + "'", str35, "[2, 1, 1, 103]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[2, 2, 2, 103]" + "'", str36, "[2, 2, 2, 103]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[2, 3, 3, 103]" + "'", str37, "[2, 3, 3, 103]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[2, 4, 4, 103]" + "'", str38, "[2, 4, 4, 103]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[2, 5, 5, 103]" + "'", str39, "[2, 5, 5, 103]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[2, 6, 6, 103]" + "'", str40, "[2, 6, 6, 103]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[2, 7, 7, 103]" + "'", str41, "[2, 7, 7, 103]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[2, 8, 8, 103]" + "'", str42, "[2, 8, 8, 103]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2, 9, 9, 103]" + "'", str43, "[2, 9, 9, 103]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 0, 0, 104]" + "'", str44, "[3, 0, 0, 104]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 1, 1, 104]" + "'", str45, "[3, 1, 1, 104]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 2, 2, 104]" + "'", str46, "[3, 2, 2, 104]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[3, 3, 3, 104]" + "'", str47, "[3, 3, 3, 104]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[3, 4, 4, 104]" + "'", str48, "[3, 4, 4, 104]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[3, 5, 5, 104]" + "'", str49, "[3, 5, 5, 104]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[3, 6, 6, 104]" + "'", str50, "[3, 6, 6, 104]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[3, 7, 7, 104]" + "'", str51, "[3, 7, 7, 104]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[3, 8, 8, 104]" + "'", str52, "[3, 8, 8, 104]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[3, 9, 9, 104]" + "'", str53, "[3, 9, 9, 104]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[4, 0, 0, 105]" + "'", str54, "[4, 0, 0, 105]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[4, 1, 1, 105]" + "'", str55, "[4, 1, 1, 105]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4, 2, 2, 105]" + "'", str56, "[4, 2, 2, 105]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[4, 3, 3, 105]" + "'", str57, "[4, 3, 3, 105]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[4, 4, 4, 105]" + "'", str58, "[4, 4, 4, 105]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[4, 5, 5, 105]" + "'", str59, "[4, 5, 5, 105]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[4, 6, 6, 105]" + "'", str60, "[4, 6, 6, 105]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[4, 7, 7, 105]" + "'", str61, "[4, 7, 7, 105]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[4, 8, 8, 105]" + "'", str62, "[4, 8, 8, 105]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[4, 9, 9, 105]" + "'", str63, "[4, 9, 9, 105]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[5, 0, 0, 106]" + "'", str64, "[5, 0, 0, 106]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[5, 1, 1, 106]" + "'", str65, "[5, 1, 1, 106]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[5, 2, 2, 106]" + "'", str66, "[5, 2, 2, 106]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[5, 3, 3, 106]" + "'", str67, "[5, 3, 3, 106]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[5, 4, 4, 106]" + "'", str68, "[5, 4, 4, 106]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[5, 5, 5, 106]" + "'", str69, "[5, 5, 5, 106]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[5, 6, 6, 106]" + "'", str70, "[5, 6, 6, 106]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[5, 7, 7, 106]" + "'", str71, "[5, 7, 7, 106]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[5, 8, 8, 106]" + "'", str72, "[5, 8, 8, 106]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[5, 9, 9, 106]" + "'", str73, "[5, 9, 9, 106]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[6, 0, 0, 107]" + "'", str74, "[6, 0, 0, 107]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[6, 1, 1, 107]" + "'", str75, "[6, 1, 1, 107]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[6, 2, 2, 107]" + "'", str76, "[6, 2, 2, 107]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[6, 3, 3, 107]" + "'", str77, "[6, 3, 3, 107]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[6, 4, 4, 107]" + "'", str78, "[6, 4, 4, 107]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[6, 5, 5, 107]" + "'", str79, "[6, 5, 5, 107]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[6, 6, 6, 107]" + "'", str80, "[6, 6, 6, 107]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[6, 7, 7, 107]" + "'", str81, "[6, 7, 7, 107]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[6, 8, 8, 107]" + "'", str82, "[6, 8, 8, 107]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2622");
        int[] intArray5 = new int[] { (short) 100, 'a', ' ', 0, (byte) -1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass68 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 97, 94, 0, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 97, 33, 0, -1]" + "'", str6, "[100, 97, 33, 0, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 97, 34, 0, -1]" + "'", str7, "[100, 97, 34, 0, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 97, 35, 0, -1]" + "'", str8, "[100, 97, 35, 0, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 97, 36, 0, -1]" + "'", str9, "[100, 97, 36, 0, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 97, 37, 0, -1]" + "'", str10, "[100, 97, 37, 0, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 97, 38, 0, -1]" + "'", str11, "[100, 97, 38, 0, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 97, 39, 0, -1]" + "'", str12, "[100, 97, 39, 0, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 97, 40, 0, -1]" + "'", str13, "[100, 97, 40, 0, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 97, 41, 0, -1]" + "'", str14, "[100, 97, 41, 0, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 97, 42, 0, -1]" + "'", str15, "[100, 97, 42, 0, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 97, 43, 0, -1]" + "'", str16, "[100, 97, 43, 0, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 97, 44, 0, -1]" + "'", str17, "[100, 97, 44, 0, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 97, 45, 0, -1]" + "'", str18, "[100, 97, 45, 0, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 97, 46, 0, -1]" + "'", str19, "[100, 97, 46, 0, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 97, 47, 0, -1]" + "'", str20, "[100, 97, 47, 0, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 97, 48, 0, -1]" + "'", str21, "[100, 97, 48, 0, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 97, 49, 0, -1]" + "'", str22, "[100, 97, 49, 0, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 97, 50, 0, -1]" + "'", str23, "[100, 97, 50, 0, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 97, 51, 0, -1]" + "'", str24, "[100, 97, 51, 0, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 97, 52, 0, -1]" + "'", str25, "[100, 97, 52, 0, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 97, 53, 0, -1]" + "'", str26, "[100, 97, 53, 0, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 97, 54, 0, -1]" + "'", str27, "[100, 97, 54, 0, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 97, 55, 0, -1]" + "'", str28, "[100, 97, 55, 0, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 97, 56, 0, -1]" + "'", str29, "[100, 97, 56, 0, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 97, 57, 0, -1]" + "'", str30, "[100, 97, 57, 0, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 97, 58, 0, -1]" + "'", str31, "[100, 97, 58, 0, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 97, 59, 0, -1]" + "'", str32, "[100, 97, 59, 0, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 97, 60, 0, -1]" + "'", str33, "[100, 97, 60, 0, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 97, 61, 0, -1]" + "'", str34, "[100, 97, 61, 0, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 97, 62, 0, -1]" + "'", str35, "[100, 97, 62, 0, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 97, 63, 0, -1]" + "'", str36, "[100, 97, 63, 0, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 97, 64, 0, -1]" + "'", str37, "[100, 97, 64, 0, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 97, 65, 0, -1]" + "'", str38, "[100, 97, 65, 0, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 97, 66, 0, -1]" + "'", str39, "[100, 97, 66, 0, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 97, 67, 0, -1]" + "'", str40, "[100, 97, 67, 0, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 97, 68, 0, -1]" + "'", str41, "[100, 97, 68, 0, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 97, 69, 0, -1]" + "'", str42, "[100, 97, 69, 0, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 97, 70, 0, -1]" + "'", str43, "[100, 97, 70, 0, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 97, 71, 0, -1]" + "'", str44, "[100, 97, 71, 0, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 97, 72, 0, -1]" + "'", str45, "[100, 97, 72, 0, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 97, 73, 0, -1]" + "'", str46, "[100, 97, 73, 0, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 97, 74, 0, -1]" + "'", str47, "[100, 97, 74, 0, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 97, 75, 0, -1]" + "'", str48, "[100, 97, 75, 0, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 97, 76, 0, -1]" + "'", str49, "[100, 97, 76, 0, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 97, 77, 0, -1]" + "'", str50, "[100, 97, 77, 0, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 97, 78, 0, -1]" + "'", str51, "[100, 97, 78, 0, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 97, 79, 0, -1]" + "'", str52, "[100, 97, 79, 0, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 97, 80, 0, -1]" + "'", str53, "[100, 97, 80, 0, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 97, 81, 0, -1]" + "'", str54, "[100, 97, 81, 0, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 97, 82, 0, -1]" + "'", str55, "[100, 97, 82, 0, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 97, 83, 0, -1]" + "'", str56, "[100, 97, 83, 0, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 97, 84, 0, -1]" + "'", str57, "[100, 97, 84, 0, -1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 97, 85, 0, -1]" + "'", str58, "[100, 97, 85, 0, -1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 97, 86, 0, -1]" + "'", str59, "[100, 97, 86, 0, -1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 97, 87, 0, -1]" + "'", str60, "[100, 97, 87, 0, -1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 97, 88, 0, -1]" + "'", str61, "[100, 97, 88, 0, -1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[100, 97, 89, 0, -1]" + "'", str62, "[100, 97, 89, 0, -1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[100, 97, 90, 0, -1]" + "'", str63, "[100, 97, 90, 0, -1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[100, 97, 91, 0, -1]" + "'", str64, "[100, 97, 91, 0, -1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[100, 97, 92, 0, -1]" + "'", str65, "[100, 97, 92, 0, -1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[100, 97, 93, 0, -1]" + "'", str66, "[100, 97, 93, 0, -1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[100, 97, 94, 0, -1]" + "'", str67, "[100, 97, 94, 0, -1]");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test2623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2623");
        int[] intArray6 = new int[] { (short) 0, (short) 100, (-1), (short) 1, (short) -1, (byte) 0 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass40 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 103, 4, 4, 2, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 100, 0, 2, -1, 0]" + "'", str7, "[0, 100, 0, 2, -1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 100, 1, 3, -1, 0]" + "'", str8, "[0, 100, 1, 3, -1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 100, 2, 4, -1, 0]" + "'", str9, "[0, 100, 2, 4, -1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 100, 3, 5, -1, 0]" + "'", str10, "[0, 100, 3, 5, -1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 100, 4, 6, -1, 0]" + "'", str11, "[0, 100, 4, 6, -1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 100, 5, 7, -1, 0]" + "'", str12, "[0, 100, 5, 7, -1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 100, 6, 8, -1, 0]" + "'", str13, "[0, 100, 6, 8, -1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 100, 7, 9, -1, 0]" + "'", str14, "[0, 100, 7, 9, -1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 101, 0, 0, 0, 0]" + "'", str15, "[0, 101, 0, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 101, 1, 1, 0, 0]" + "'", str16, "[0, 101, 1, 1, 0, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 101, 2, 2, 0, 0]" + "'", str17, "[0, 101, 2, 2, 0, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 101, 3, 3, 0, 0]" + "'", str18, "[0, 101, 3, 3, 0, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 101, 4, 4, 0, 0]" + "'", str19, "[0, 101, 4, 4, 0, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 101, 5, 5, 0, 0]" + "'", str20, "[0, 101, 5, 5, 0, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 101, 6, 6, 0, 0]" + "'", str21, "[0, 101, 6, 6, 0, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 101, 7, 7, 0, 0]" + "'", str22, "[0, 101, 7, 7, 0, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 101, 8, 8, 0, 0]" + "'", str23, "[0, 101, 8, 8, 0, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 101, 9, 9, 0, 0]" + "'", str24, "[0, 101, 9, 9, 0, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 102, 0, 0, 1, 0]" + "'", str25, "[0, 102, 0, 0, 1, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 102, 1, 1, 1, 0]" + "'", str26, "[0, 102, 1, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 102, 2, 2, 1, 0]" + "'", str27, "[0, 102, 2, 2, 1, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 102, 3, 3, 1, 0]" + "'", str28, "[0, 102, 3, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 102, 4, 4, 1, 0]" + "'", str29, "[0, 102, 4, 4, 1, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 102, 5, 5, 1, 0]" + "'", str30, "[0, 102, 5, 5, 1, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 102, 6, 6, 1, 0]" + "'", str31, "[0, 102, 6, 6, 1, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 102, 7, 7, 1, 0]" + "'", str32, "[0, 102, 7, 7, 1, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 102, 8, 8, 1, 0]" + "'", str33, "[0, 102, 8, 8, 1, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 102, 9, 9, 1, 0]" + "'", str34, "[0, 102, 9, 9, 1, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 103, 0, 0, 2, 0]" + "'", str35, "[0, 103, 0, 0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 103, 1, 1, 2, 0]" + "'", str36, "[0, 103, 1, 1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 103, 2, 2, 2, 0]" + "'", str37, "[0, 103, 2, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 103, 3, 3, 2, 0]" + "'", str38, "[0, 103, 3, 3, 2, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 103, 4, 4, 2, 0]" + "'", str39, "[0, 103, 4, 4, 2, 0]");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test2624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2624");
        int[] intArray4 = new int[] { (short) 100, 'a', 100, '4' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass53 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 145, 148, 52]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 98, 101, 52]" + "'", str5, "[100, 98, 101, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 99, 102, 52]" + "'", str6, "[100, 99, 102, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 100, 103, 52]" + "'", str7, "[100, 100, 103, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 101, 104, 52]" + "'", str8, "[100, 101, 104, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 102, 105, 52]" + "'", str9, "[100, 102, 105, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 103, 106, 52]" + "'", str10, "[100, 103, 106, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 104, 107, 52]" + "'", str11, "[100, 104, 107, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 105, 108, 52]" + "'", str12, "[100, 105, 108, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 106, 109, 52]" + "'", str13, "[100, 106, 109, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 107, 110, 52]" + "'", str14, "[100, 107, 110, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 108, 111, 52]" + "'", str15, "[100, 108, 111, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 109, 112, 52]" + "'", str16, "[100, 109, 112, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 110, 113, 52]" + "'", str17, "[100, 110, 113, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 111, 114, 52]" + "'", str18, "[100, 111, 114, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 112, 115, 52]" + "'", str19, "[100, 112, 115, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 113, 116, 52]" + "'", str20, "[100, 113, 116, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 114, 117, 52]" + "'", str21, "[100, 114, 117, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 115, 118, 52]" + "'", str22, "[100, 115, 118, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 116, 119, 52]" + "'", str23, "[100, 116, 119, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 117, 120, 52]" + "'", str24, "[100, 117, 120, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 118, 121, 52]" + "'", str25, "[100, 118, 121, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 119, 122, 52]" + "'", str26, "[100, 119, 122, 52]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 120, 123, 52]" + "'", str27, "[100, 120, 123, 52]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 121, 124, 52]" + "'", str28, "[100, 121, 124, 52]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 122, 125, 52]" + "'", str29, "[100, 122, 125, 52]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 123, 126, 52]" + "'", str30, "[100, 123, 126, 52]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 124, 127, 52]" + "'", str31, "[100, 124, 127, 52]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 125, 128, 52]" + "'", str32, "[100, 125, 128, 52]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 126, 129, 52]" + "'", str33, "[100, 126, 129, 52]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 127, 130, 52]" + "'", str34, "[100, 127, 130, 52]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 128, 131, 52]" + "'", str35, "[100, 128, 131, 52]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 129, 132, 52]" + "'", str36, "[100, 129, 132, 52]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 130, 133, 52]" + "'", str37, "[100, 130, 133, 52]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 131, 134, 52]" + "'", str38, "[100, 131, 134, 52]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 132, 135, 52]" + "'", str39, "[100, 132, 135, 52]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 133, 136, 52]" + "'", str40, "[100, 133, 136, 52]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 134, 137, 52]" + "'", str41, "[100, 134, 137, 52]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 135, 138, 52]" + "'", str42, "[100, 135, 138, 52]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 136, 139, 52]" + "'", str43, "[100, 136, 139, 52]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 137, 140, 52]" + "'", str44, "[100, 137, 140, 52]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 138, 141, 52]" + "'", str45, "[100, 138, 141, 52]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 139, 142, 52]" + "'", str46, "[100, 139, 142, 52]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 140, 143, 52]" + "'", str47, "[100, 140, 143, 52]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 141, 144, 52]" + "'", str48, "[100, 141, 144, 52]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 142, 145, 52]" + "'", str49, "[100, 142, 145, 52]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 143, 146, 52]" + "'", str50, "[100, 143, 146, 52]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 144, 147, 52]" + "'", str51, "[100, 144, 147, 52]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 145, 148, 52]" + "'", str52, "[100, 145, 148, 52]");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test2625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2625");
        int[] intArray4 = new int[] { (byte) 0, (short) 10, (short) -1, 'a' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass68 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[6, 2, 2, 103]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 11, 0, 97]" + "'", str5, "[0, 11, 0, 97]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 12, 1, 97]" + "'", str6, "[0, 12, 1, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 13, 2, 97]" + "'", str7, "[0, 13, 2, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 14, 3, 97]" + "'", str8, "[0, 14, 3, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 15, 4, 97]" + "'", str9, "[0, 15, 4, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 16, 5, 97]" + "'", str10, "[0, 16, 5, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 17, 6, 97]" + "'", str11, "[0, 17, 6, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 18, 7, 97]" + "'", str12, "[0, 18, 7, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 19, 8, 97]" + "'", str13, "[0, 19, 8, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 20, 9, 97]" + "'", str14, "[0, 20, 9, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 0, 98]" + "'", str15, "[1, 0, 0, 98]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 1, 98]" + "'", str16, "[1, 1, 1, 98]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 2, 98]" + "'", str17, "[1, 2, 2, 98]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 3, 3, 98]" + "'", str18, "[1, 3, 3, 98]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 4, 4, 98]" + "'", str19, "[1, 4, 4, 98]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 5, 5, 98]" + "'", str20, "[1, 5, 5, 98]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 6, 6, 98]" + "'", str21, "[1, 6, 6, 98]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 7, 7, 98]" + "'", str22, "[1, 7, 7, 98]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 8, 8, 98]" + "'", str23, "[1, 8, 8, 98]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 9, 9, 98]" + "'", str24, "[1, 9, 9, 98]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 0, 0, 99]" + "'", str25, "[2, 0, 0, 99]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 1, 1, 99]" + "'", str26, "[2, 1, 1, 99]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 2, 2, 99]" + "'", str27, "[2, 2, 2, 99]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 3, 3, 99]" + "'", str28, "[2, 3, 3, 99]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 4, 4, 99]" + "'", str29, "[2, 4, 4, 99]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 5, 5, 99]" + "'", str30, "[2, 5, 5, 99]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 6, 6, 99]" + "'", str31, "[2, 6, 6, 99]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 7, 7, 99]" + "'", str32, "[2, 7, 7, 99]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 8, 8, 99]" + "'", str33, "[2, 8, 8, 99]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 9, 9, 99]" + "'", str34, "[2, 9, 9, 99]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 0, 0, 100]" + "'", str35, "[3, 0, 0, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 1, 1, 100]" + "'", str36, "[3, 1, 1, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 2, 2, 100]" + "'", str37, "[3, 2, 2, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 3, 3, 100]" + "'", str38, "[3, 3, 3, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 4, 4, 100]" + "'", str39, "[3, 4, 4, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 5, 5, 100]" + "'", str40, "[3, 5, 5, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 6, 6, 100]" + "'", str41, "[3, 6, 6, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[3, 7, 7, 100]" + "'", str42, "[3, 7, 7, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 8, 8, 100]" + "'", str43, "[3, 8, 8, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 9, 9, 100]" + "'", str44, "[3, 9, 9, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 0, 0, 101]" + "'", str45, "[4, 0, 0, 101]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 1, 1, 101]" + "'", str46, "[4, 1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 2, 2, 101]" + "'", str47, "[4, 2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[4, 3, 3, 101]" + "'", str48, "[4, 3, 3, 101]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[4, 4, 4, 101]" + "'", str49, "[4, 4, 4, 101]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[4, 5, 5, 101]" + "'", str50, "[4, 5, 5, 101]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[4, 6, 6, 101]" + "'", str51, "[4, 6, 6, 101]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[4, 7, 7, 101]" + "'", str52, "[4, 7, 7, 101]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[4, 8, 8, 101]" + "'", str53, "[4, 8, 8, 101]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[4, 9, 9, 101]" + "'", str54, "[4, 9, 9, 101]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[5, 0, 0, 102]" + "'", str55, "[5, 0, 0, 102]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5, 1, 1, 102]" + "'", str56, "[5, 1, 1, 102]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5, 2, 2, 102]" + "'", str57, "[5, 2, 2, 102]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 3, 3, 102]" + "'", str58, "[5, 3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[5, 4, 4, 102]" + "'", str59, "[5, 4, 4, 102]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[5, 5, 5, 102]" + "'", str60, "[5, 5, 5, 102]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[5, 6, 6, 102]" + "'", str61, "[5, 6, 6, 102]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[5, 7, 7, 102]" + "'", str62, "[5, 7, 7, 102]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[5, 8, 8, 102]" + "'", str63, "[5, 8, 8, 102]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[5, 9, 9, 102]" + "'", str64, "[5, 9, 9, 102]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[6, 0, 0, 103]" + "'", str65, "[6, 0, 0, 103]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[6, 1, 1, 103]" + "'", str66, "[6, 1, 1, 103]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[6, 2, 2, 103]" + "'", str67, "[6, 2, 2, 103]");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test2626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2626");
        int[] intArray3 = new int[] { '#', (byte) 100, 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass79 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[35, 175, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[35, 101, 1]" + "'", str4, "[35, 101, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 102, 1]" + "'", str5, "[35, 102, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 103, 1]" + "'", str6, "[35, 103, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 104, 1]" + "'", str7, "[35, 104, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 105, 1]" + "'", str8, "[35, 105, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 106, 1]" + "'", str9, "[35, 106, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 107, 1]" + "'", str10, "[35, 107, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 108, 1]" + "'", str11, "[35, 108, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 109, 1]" + "'", str12, "[35, 109, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 110, 1]" + "'", str13, "[35, 110, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 111, 1]" + "'", str14, "[35, 111, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[35, 112, 1]" + "'", str15, "[35, 112, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[35, 113, 1]" + "'", str16, "[35, 113, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[35, 114, 1]" + "'", str17, "[35, 114, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[35, 115, 1]" + "'", str18, "[35, 115, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[35, 116, 1]" + "'", str19, "[35, 116, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[35, 117, 1]" + "'", str20, "[35, 117, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[35, 118, 1]" + "'", str21, "[35, 118, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[35, 119, 1]" + "'", str22, "[35, 119, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[35, 120, 1]" + "'", str23, "[35, 120, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[35, 121, 1]" + "'", str24, "[35, 121, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[35, 122, 1]" + "'", str25, "[35, 122, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35, 123, 1]" + "'", str26, "[35, 123, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 124, 1]" + "'", str27, "[35, 124, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[35, 125, 1]" + "'", str28, "[35, 125, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[35, 126, 1]" + "'", str29, "[35, 126, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[35, 127, 1]" + "'", str30, "[35, 127, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[35, 128, 1]" + "'", str31, "[35, 128, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 129, 1]" + "'", str32, "[35, 129, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 130, 1]" + "'", str33, "[35, 130, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 131, 1]" + "'", str34, "[35, 131, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 132, 1]" + "'", str35, "[35, 132, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 133, 1]" + "'", str36, "[35, 133, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 134, 1]" + "'", str37, "[35, 134, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 135, 1]" + "'", str38, "[35, 135, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 136, 1]" + "'", str39, "[35, 136, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 137, 1]" + "'", str40, "[35, 137, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 138, 1]" + "'", str41, "[35, 138, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 139, 1]" + "'", str42, "[35, 139, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 140, 1]" + "'", str43, "[35, 140, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[35, 141, 1]" + "'", str44, "[35, 141, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[35, 142, 1]" + "'", str45, "[35, 142, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[35, 143, 1]" + "'", str46, "[35, 143, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[35, 144, 1]" + "'", str47, "[35, 144, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[35, 145, 1]" + "'", str48, "[35, 145, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[35, 146, 1]" + "'", str49, "[35, 146, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[35, 147, 1]" + "'", str50, "[35, 147, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[35, 148, 1]" + "'", str51, "[35, 148, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[35, 149, 1]" + "'", str52, "[35, 149, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[35, 150, 1]" + "'", str53, "[35, 150, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[35, 151, 1]" + "'", str54, "[35, 151, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[35, 152, 1]" + "'", str55, "[35, 152, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[35, 153, 1]" + "'", str56, "[35, 153, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[35, 154, 1]" + "'", str57, "[35, 154, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[35, 155, 1]" + "'", str58, "[35, 155, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[35, 156, 1]" + "'", str59, "[35, 156, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[35, 157, 1]" + "'", str60, "[35, 157, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[35, 158, 1]" + "'", str61, "[35, 158, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[35, 159, 1]" + "'", str62, "[35, 159, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[35, 160, 1]" + "'", str63, "[35, 160, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[35, 161, 1]" + "'", str64, "[35, 161, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[35, 162, 1]" + "'", str65, "[35, 162, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[35, 163, 1]" + "'", str66, "[35, 163, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[35, 164, 1]" + "'", str67, "[35, 164, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[35, 165, 1]" + "'", str68, "[35, 165, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[35, 166, 1]" + "'", str69, "[35, 166, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[35, 167, 1]" + "'", str70, "[35, 167, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[35, 168, 1]" + "'", str71, "[35, 168, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[35, 169, 1]" + "'", str72, "[35, 169, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[35, 170, 1]" + "'", str73, "[35, 170, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[35, 171, 1]" + "'", str74, "[35, 171, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[35, 172, 1]" + "'", str75, "[35, 172, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[35, 173, 1]" + "'", str76, "[35, 173, 1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[35, 174, 1]" + "'", str77, "[35, 174, 1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[35, 175, 1]" + "'", str78, "[35, 175, 1]");
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test2627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2627");
        int[] intArray6 = new int[] { 100, (byte) 10, 'a', 'a', (byte) 100, ' ' };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass13 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 10, 103, 103, 100, 32]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 10, 98, 98, 100, 32]" + "'", str7, "[100, 10, 98, 98, 100, 32]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 10, 99, 99, 100, 32]" + "'", str8, "[100, 10, 99, 99, 100, 32]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 10, 100, 100, 100, 32]" + "'", str9, "[100, 10, 100, 100, 100, 32]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 10, 101, 101, 100, 32]" + "'", str10, "[100, 10, 101, 101, 100, 32]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 10, 102, 102, 100, 32]" + "'", str11, "[100, 10, 102, 102, 100, 32]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 10, 103, 103, 100, 32]" + "'", str12, "[100, 10, 103, 103, 100, 32]");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test2628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2628");
        int[] intArray6 = new int[] { (byte) 100, 'a', ' ', (byte) -1, (short) -1, (short) 1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass79 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 104, 1, 1, 6, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 97, 33, 0, -1, 1]" + "'", str7, "[100, 97, 33, 0, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 97, 34, 1, -1, 1]" + "'", str8, "[100, 97, 34, 1, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 97, 35, 2, -1, 1]" + "'", str9, "[100, 97, 35, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 97, 36, 3, -1, 1]" + "'", str10, "[100, 97, 36, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 97, 37, 4, -1, 1]" + "'", str11, "[100, 97, 37, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 97, 38, 5, -1, 1]" + "'", str12, "[100, 97, 38, 5, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 97, 39, 6, -1, 1]" + "'", str13, "[100, 97, 39, 6, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 97, 40, 7, -1, 1]" + "'", str14, "[100, 97, 40, 7, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 97, 41, 8, -1, 1]" + "'", str15, "[100, 97, 41, 8, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 97, 42, 9, -1, 1]" + "'", str16, "[100, 97, 42, 9, -1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 98, 0, 0, 0, 1]" + "'", str17, "[100, 98, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 98, 1, 1, 0, 1]" + "'", str18, "[100, 98, 1, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 98, 2, 2, 0, 1]" + "'", str19, "[100, 98, 2, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 98, 3, 3, 0, 1]" + "'", str20, "[100, 98, 3, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 98, 4, 4, 0, 1]" + "'", str21, "[100, 98, 4, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 98, 5, 5, 0, 1]" + "'", str22, "[100, 98, 5, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 98, 6, 6, 0, 1]" + "'", str23, "[100, 98, 6, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 98, 7, 7, 0, 1]" + "'", str24, "[100, 98, 7, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 98, 8, 8, 0, 1]" + "'", str25, "[100, 98, 8, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 98, 9, 9, 0, 1]" + "'", str26, "[100, 98, 9, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 99, 0, 0, 1, 1]" + "'", str27, "[100, 99, 0, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 99, 1, 1, 1, 1]" + "'", str28, "[100, 99, 1, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 99, 2, 2, 1, 1]" + "'", str29, "[100, 99, 2, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 99, 3, 3, 1, 1]" + "'", str30, "[100, 99, 3, 3, 1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 99, 4, 4, 1, 1]" + "'", str31, "[100, 99, 4, 4, 1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 99, 5, 5, 1, 1]" + "'", str32, "[100, 99, 5, 5, 1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 99, 6, 6, 1, 1]" + "'", str33, "[100, 99, 6, 6, 1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 99, 7, 7, 1, 1]" + "'", str34, "[100, 99, 7, 7, 1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 99, 8, 8, 1, 1]" + "'", str35, "[100, 99, 8, 8, 1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 99, 9, 9, 1, 1]" + "'", str36, "[100, 99, 9, 9, 1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 100, 0, 0, 2, 1]" + "'", str37, "[100, 100, 0, 0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 100, 1, 1, 2, 1]" + "'", str38, "[100, 100, 1, 1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 100, 2, 2, 2, 1]" + "'", str39, "[100, 100, 2, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 100, 3, 3, 2, 1]" + "'", str40, "[100, 100, 3, 3, 2, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 100, 4, 4, 2, 1]" + "'", str41, "[100, 100, 4, 4, 2, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 100, 5, 5, 2, 1]" + "'", str42, "[100, 100, 5, 5, 2, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 100, 6, 6, 2, 1]" + "'", str43, "[100, 100, 6, 6, 2, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 100, 7, 7, 2, 1]" + "'", str44, "[100, 100, 7, 7, 2, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 100, 8, 8, 2, 1]" + "'", str45, "[100, 100, 8, 8, 2, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 100, 9, 9, 2, 1]" + "'", str46, "[100, 100, 9, 9, 2, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 101, 0, 0, 3, 1]" + "'", str47, "[100, 101, 0, 0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 101, 1, 1, 3, 1]" + "'", str48, "[100, 101, 1, 1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 101, 2, 2, 3, 1]" + "'", str49, "[100, 101, 2, 2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 101, 3, 3, 3, 1]" + "'", str50, "[100, 101, 3, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 101, 4, 4, 3, 1]" + "'", str51, "[100, 101, 4, 4, 3, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 101, 5, 5, 3, 1]" + "'", str52, "[100, 101, 5, 5, 3, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 101, 6, 6, 3, 1]" + "'", str53, "[100, 101, 6, 6, 3, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 101, 7, 7, 3, 1]" + "'", str54, "[100, 101, 7, 7, 3, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 101, 8, 8, 3, 1]" + "'", str55, "[100, 101, 8, 8, 3, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 101, 9, 9, 3, 1]" + "'", str56, "[100, 101, 9, 9, 3, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 102, 0, 0, 4, 1]" + "'", str57, "[100, 102, 0, 0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 102, 1, 1, 4, 1]" + "'", str58, "[100, 102, 1, 1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 102, 2, 2, 4, 1]" + "'", str59, "[100, 102, 2, 2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 102, 3, 3, 4, 1]" + "'", str60, "[100, 102, 3, 3, 4, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 102, 4, 4, 4, 1]" + "'", str61, "[100, 102, 4, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[100, 102, 5, 5, 4, 1]" + "'", str62, "[100, 102, 5, 5, 4, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[100, 102, 6, 6, 4, 1]" + "'", str63, "[100, 102, 6, 6, 4, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[100, 102, 7, 7, 4, 1]" + "'", str64, "[100, 102, 7, 7, 4, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[100, 102, 8, 8, 4, 1]" + "'", str65, "[100, 102, 8, 8, 4, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[100, 102, 9, 9, 4, 1]" + "'", str66, "[100, 102, 9, 9, 4, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[100, 103, 0, 0, 5, 1]" + "'", str67, "[100, 103, 0, 0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[100, 103, 1, 1, 5, 1]" + "'", str68, "[100, 103, 1, 1, 5, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[100, 103, 2, 2, 5, 1]" + "'", str69, "[100, 103, 2, 2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[100, 103, 3, 3, 5, 1]" + "'", str70, "[100, 103, 3, 3, 5, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[100, 103, 4, 4, 5, 1]" + "'", str71, "[100, 103, 4, 4, 5, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[100, 103, 5, 5, 5, 1]" + "'", str72, "[100, 103, 5, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[100, 103, 6, 6, 5, 1]" + "'", str73, "[100, 103, 6, 6, 5, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[100, 103, 7, 7, 5, 1]" + "'", str74, "[100, 103, 7, 7, 5, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[100, 103, 8, 8, 5, 1]" + "'", str75, "[100, 103, 8, 8, 5, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[100, 103, 9, 9, 5, 1]" + "'", str76, "[100, 103, 9, 9, 5, 1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[100, 104, 0, 0, 6, 1]" + "'", str77, "[100, 104, 0, 0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[100, 104, 1, 1, 6, 1]" + "'", str78, "[100, 104, 1, 1, 6, 1]");
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test2629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2629");
        int[] intArray4 = new int[] { 'a', (short) 1, (byte) -1, (short) 0 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass61 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[102, 5, 5, 5]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 2, 0, 0]" + "'", str5, "[97, 2, 0, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 3, 1, 0]" + "'", str6, "[97, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 4, 2, 0]" + "'", str7, "[97, 4, 2, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 5, 3, 0]" + "'", str8, "[97, 5, 3, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 6, 4, 0]" + "'", str9, "[97, 6, 4, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 7, 5, 0]" + "'", str10, "[97, 7, 5, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 8, 6, 0]" + "'", str11, "[97, 8, 6, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 9, 7, 0]" + "'", str12, "[97, 9, 7, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 10, 8, 0]" + "'", str13, "[97, 10, 8, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 11, 9, 0]" + "'", str14, "[97, 11, 9, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[98, 0, 0, 1]" + "'", str15, "[98, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[98, 1, 1, 1]" + "'", str16, "[98, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[98, 2, 2, 1]" + "'", str17, "[98, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[98, 3, 3, 1]" + "'", str18, "[98, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[98, 4, 4, 1]" + "'", str19, "[98, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[98, 5, 5, 1]" + "'", str20, "[98, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[98, 6, 6, 1]" + "'", str21, "[98, 6, 6, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[98, 7, 7, 1]" + "'", str22, "[98, 7, 7, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[98, 8, 8, 1]" + "'", str23, "[98, 8, 8, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[98, 9, 9, 1]" + "'", str24, "[98, 9, 9, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[99, 0, 0, 2]" + "'", str25, "[99, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[99, 1, 1, 2]" + "'", str26, "[99, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[99, 2, 2, 2]" + "'", str27, "[99, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[99, 3, 3, 2]" + "'", str28, "[99, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[99, 4, 4, 2]" + "'", str29, "[99, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[99, 5, 5, 2]" + "'", str30, "[99, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[99, 6, 6, 2]" + "'", str31, "[99, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[99, 7, 7, 2]" + "'", str32, "[99, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[99, 8, 8, 2]" + "'", str33, "[99, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[99, 9, 9, 2]" + "'", str34, "[99, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 0, 0, 3]" + "'", str35, "[100, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 1, 1, 3]" + "'", str36, "[100, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 2, 2, 3]" + "'", str37, "[100, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 3, 3, 3]" + "'", str38, "[100, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 4, 4, 3]" + "'", str39, "[100, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 5, 5, 3]" + "'", str40, "[100, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 6, 6, 3]" + "'", str41, "[100, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 7, 7, 3]" + "'", str42, "[100, 7, 7, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 8, 8, 3]" + "'", str43, "[100, 8, 8, 3]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 9, 9, 3]" + "'", str44, "[100, 9, 9, 3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[101, 0, 0, 4]" + "'", str45, "[101, 0, 0, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[101, 1, 1, 4]" + "'", str46, "[101, 1, 1, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[101, 2, 2, 4]" + "'", str47, "[101, 2, 2, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[101, 3, 3, 4]" + "'", str48, "[101, 3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[101, 4, 4, 4]" + "'", str49, "[101, 4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[101, 5, 5, 4]" + "'", str50, "[101, 5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[101, 6, 6, 4]" + "'", str51, "[101, 6, 6, 4]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[101, 7, 7, 4]" + "'", str52, "[101, 7, 7, 4]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[101, 8, 8, 4]" + "'", str53, "[101, 8, 8, 4]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[101, 9, 9, 4]" + "'", str54, "[101, 9, 9, 4]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[102, 0, 0, 5]" + "'", str55, "[102, 0, 0, 5]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[102, 1, 1, 5]" + "'", str56, "[102, 1, 1, 5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[102, 2, 2, 5]" + "'", str57, "[102, 2, 2, 5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[102, 3, 3, 5]" + "'", str58, "[102, 3, 3, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[102, 4, 4, 5]" + "'", str59, "[102, 4, 4, 5]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[102, 5, 5, 5]" + "'", str60, "[102, 5, 5, 5]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test2630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2630");
        int[] intArray6 = new int[] { (short) 1, 1, ' ', ' ', 10, (-1) };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str90 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str91 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str92 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str93 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str94 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str95 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str96 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass97 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 1, 122, 122, 10, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1, 33, 33, 10, -1]" + "'", str7, "[1, 1, 33, 33, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1, 34, 34, 10, -1]" + "'", str8, "[1, 1, 34, 34, 10, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1, 35, 35, 10, -1]" + "'", str9, "[1, 1, 35, 35, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1, 36, 36, 10, -1]" + "'", str10, "[1, 1, 36, 36, 10, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1, 37, 37, 10, -1]" + "'", str11, "[1, 1, 37, 37, 10, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1, 38, 38, 10, -1]" + "'", str12, "[1, 1, 38, 38, 10, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 39, 39, 10, -1]" + "'", str13, "[1, 1, 39, 39, 10, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1, 40, 40, 10, -1]" + "'", str14, "[1, 1, 40, 40, 10, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 1, 41, 41, 10, -1]" + "'", str15, "[1, 1, 41, 41, 10, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 42, 42, 10, -1]" + "'", str16, "[1, 1, 42, 42, 10, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 1, 43, 43, 10, -1]" + "'", str17, "[1, 1, 43, 43, 10, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 1, 44, 44, 10, -1]" + "'", str18, "[1, 1, 44, 44, 10, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 1, 45, 45, 10, -1]" + "'", str19, "[1, 1, 45, 45, 10, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1, 46, 46, 10, -1]" + "'", str20, "[1, 1, 46, 46, 10, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1, 47, 47, 10, -1]" + "'", str21, "[1, 1, 47, 47, 10, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1, 48, 48, 10, -1]" + "'", str22, "[1, 1, 48, 48, 10, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 49, 49, 10, -1]" + "'", str23, "[1, 1, 49, 49, 10, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1, 50, 50, 10, -1]" + "'", str24, "[1, 1, 50, 50, 10, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1, 51, 51, 10, -1]" + "'", str25, "[1, 1, 51, 51, 10, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 1, 52, 52, 10, -1]" + "'", str26, "[1, 1, 52, 52, 10, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 1, 53, 53, 10, -1]" + "'", str27, "[1, 1, 53, 53, 10, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 1, 54, 54, 10, -1]" + "'", str28, "[1, 1, 54, 54, 10, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 1, 55, 55, 10, -1]" + "'", str29, "[1, 1, 55, 55, 10, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 1, 56, 56, 10, -1]" + "'", str30, "[1, 1, 56, 56, 10, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 1, 57, 57, 10, -1]" + "'", str31, "[1, 1, 57, 57, 10, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1, 58, 58, 10, -1]" + "'", str32, "[1, 1, 58, 58, 10, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1, 59, 59, 10, -1]" + "'", str33, "[1, 1, 59, 59, 10, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1, 60, 60, 10, -1]" + "'", str34, "[1, 1, 60, 60, 10, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 1, 61, 61, 10, -1]" + "'", str35, "[1, 1, 61, 61, 10, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 1, 62, 62, 10, -1]" + "'", str36, "[1, 1, 62, 62, 10, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 1, 63, 63, 10, -1]" + "'", str37, "[1, 1, 63, 63, 10, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 1, 64, 64, 10, -1]" + "'", str38, "[1, 1, 64, 64, 10, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 1, 65, 65, 10, -1]" + "'", str39, "[1, 1, 65, 65, 10, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 1, 66, 66, 10, -1]" + "'", str40, "[1, 1, 66, 66, 10, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 1, 67, 67, 10, -1]" + "'", str41, "[1, 1, 67, 67, 10, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1, 68, 68, 10, -1]" + "'", str42, "[1, 1, 68, 68, 10, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1, 69, 69, 10, -1]" + "'", str43, "[1, 1, 69, 69, 10, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1, 70, 70, 10, -1]" + "'", str44, "[1, 1, 70, 70, 10, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 1, 71, 71, 10, -1]" + "'", str45, "[1, 1, 71, 71, 10, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 1, 72, 72, 10, -1]" + "'", str46, "[1, 1, 72, 72, 10, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 1, 73, 73, 10, -1]" + "'", str47, "[1, 1, 73, 73, 10, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 1, 74, 74, 10, -1]" + "'", str48, "[1, 1, 74, 74, 10, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 1, 75, 75, 10, -1]" + "'", str49, "[1, 1, 75, 75, 10, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 1, 76, 76, 10, -1]" + "'", str50, "[1, 1, 76, 76, 10, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 1, 77, 77, 10, -1]" + "'", str51, "[1, 1, 77, 77, 10, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1, 78, 78, 10, -1]" + "'", str52, "[1, 1, 78, 78, 10, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 1, 79, 79, 10, -1]" + "'", str53, "[1, 1, 79, 79, 10, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 1, 80, 80, 10, -1]" + "'", str54, "[1, 1, 80, 80, 10, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 1, 81, 81, 10, -1]" + "'", str55, "[1, 1, 81, 81, 10, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 1, 82, 82, 10, -1]" + "'", str56, "[1, 1, 82, 82, 10, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 1, 83, 83, 10, -1]" + "'", str57, "[1, 1, 83, 83, 10, -1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 1, 84, 84, 10, -1]" + "'", str58, "[1, 1, 84, 84, 10, -1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 1, 85, 85, 10, -1]" + "'", str59, "[1, 1, 85, 85, 10, -1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 1, 86, 86, 10, -1]" + "'", str60, "[1, 1, 86, 86, 10, -1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 1, 87, 87, 10, -1]" + "'", str61, "[1, 1, 87, 87, 10, -1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 1, 88, 88, 10, -1]" + "'", str62, "[1, 1, 88, 88, 10, -1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 1, 89, 89, 10, -1]" + "'", str63, "[1, 1, 89, 89, 10, -1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 1, 90, 90, 10, -1]" + "'", str64, "[1, 1, 90, 90, 10, -1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 1, 91, 91, 10, -1]" + "'", str65, "[1, 1, 91, 91, 10, -1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 1, 92, 92, 10, -1]" + "'", str66, "[1, 1, 92, 92, 10, -1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 1, 93, 93, 10, -1]" + "'", str67, "[1, 1, 93, 93, 10, -1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 1, 94, 94, 10, -1]" + "'", str68, "[1, 1, 94, 94, 10, -1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 1, 95, 95, 10, -1]" + "'", str69, "[1, 1, 95, 95, 10, -1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 1, 96, 96, 10, -1]" + "'", str70, "[1, 1, 96, 96, 10, -1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 1, 97, 97, 10, -1]" + "'", str71, "[1, 1, 97, 97, 10, -1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 1, 98, 98, 10, -1]" + "'", str72, "[1, 1, 98, 98, 10, -1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 1, 99, 99, 10, -1]" + "'", str73, "[1, 1, 99, 99, 10, -1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 1, 100, 100, 10, -1]" + "'", str74, "[1, 1, 100, 100, 10, -1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[1, 1, 101, 101, 10, -1]" + "'", str75, "[1, 1, 101, 101, 10, -1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[1, 1, 102, 102, 10, -1]" + "'", str76, "[1, 1, 102, 102, 10, -1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[1, 1, 103, 103, 10, -1]" + "'", str77, "[1, 1, 103, 103, 10, -1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[1, 1, 104, 104, 10, -1]" + "'", str78, "[1, 1, 104, 104, 10, -1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[1, 1, 105, 105, 10, -1]" + "'", str79, "[1, 1, 105, 105, 10, -1]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[1, 1, 106, 106, 10, -1]" + "'", str80, "[1, 1, 106, 106, 10, -1]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[1, 1, 107, 107, 10, -1]" + "'", str81, "[1, 1, 107, 107, 10, -1]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[1, 1, 108, 108, 10, -1]" + "'", str82, "[1, 1, 108, 108, 10, -1]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[1, 1, 109, 109, 10, -1]" + "'", str83, "[1, 1, 109, 109, 10, -1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[1, 1, 110, 110, 10, -1]" + "'", str84, "[1, 1, 110, 110, 10, -1]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[1, 1, 111, 111, 10, -1]" + "'", str85, "[1, 1, 111, 111, 10, -1]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[1, 1, 112, 112, 10, -1]" + "'", str86, "[1, 1, 112, 112, 10, -1]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[1, 1, 113, 113, 10, -1]" + "'", str87, "[1, 1, 113, 113, 10, -1]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[1, 1, 114, 114, 10, -1]" + "'", str88, "[1, 1, 114, 114, 10, -1]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[1, 1, 115, 115, 10, -1]" + "'", str89, "[1, 1, 115, 115, 10, -1]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[1, 1, 116, 116, 10, -1]" + "'", str90, "[1, 1, 116, 116, 10, -1]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[1, 1, 117, 117, 10, -1]" + "'", str91, "[1, 1, 117, 117, 10, -1]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[1, 1, 118, 118, 10, -1]" + "'", str92, "[1, 1, 118, 118, 10, -1]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[1, 1, 119, 119, 10, -1]" + "'", str93, "[1, 1, 119, 119, 10, -1]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "[1, 1, 120, 120, 10, -1]" + "'", str94, "[1, 1, 120, 120, 10, -1]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "[1, 1, 121, 121, 10, -1]" + "'", str95, "[1, 1, 121, 121, 10, -1]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "[1, 1, 122, 122, 10, -1]" + "'", str96, "[1, 1, 122, 122, 10, -1]");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2631");
        int[] intArray5 = new int[] { 1, (short) 100, (byte) 100, (short) 10, (byte) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass10 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 100, 104, 10, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 100, 101, 10, 1]" + "'", str6, "[1, 100, 101, 10, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 100, 102, 10, 1]" + "'", str7, "[1, 100, 102, 10, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 100, 103, 10, 1]" + "'", str8, "[1, 100, 103, 10, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 100, 104, 10, 1]" + "'", str9, "[1, 100, 104, 10, 1]");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test2632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2632");
        int[] intArray4 = new int[] { 1, (short) 10, (short) 10, (short) -1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass72 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 77, 77, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 11, 11, -1]" + "'", str5, "[1, 11, 11, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 12, 12, -1]" + "'", str6, "[1, 12, 12, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 13, 13, -1]" + "'", str7, "[1, 13, 13, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 14, 14, -1]" + "'", str8, "[1, 14, 14, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 15, 15, -1]" + "'", str9, "[1, 15, 15, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 16, 16, -1]" + "'", str10, "[1, 16, 16, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 17, 17, -1]" + "'", str11, "[1, 17, 17, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 18, 18, -1]" + "'", str12, "[1, 18, 18, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 19, 19, -1]" + "'", str13, "[1, 19, 19, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 20, 20, -1]" + "'", str14, "[1, 20, 20, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 21, 21, -1]" + "'", str15, "[1, 21, 21, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 22, 22, -1]" + "'", str16, "[1, 22, 22, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 23, 23, -1]" + "'", str17, "[1, 23, 23, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 24, 24, -1]" + "'", str18, "[1, 24, 24, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 25, 25, -1]" + "'", str19, "[1, 25, 25, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 26, 26, -1]" + "'", str20, "[1, 26, 26, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 27, 27, -1]" + "'", str21, "[1, 27, 27, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 28, 28, -1]" + "'", str22, "[1, 28, 28, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 29, 29, -1]" + "'", str23, "[1, 29, 29, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 30, 30, -1]" + "'", str24, "[1, 30, 30, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 31, 31, -1]" + "'", str25, "[1, 31, 31, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 32, 32, -1]" + "'", str26, "[1, 32, 32, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 33, 33, -1]" + "'", str27, "[1, 33, 33, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 34, 34, -1]" + "'", str28, "[1, 34, 34, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 35, 35, -1]" + "'", str29, "[1, 35, 35, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 36, 36, -1]" + "'", str30, "[1, 36, 36, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 37, 37, -1]" + "'", str31, "[1, 37, 37, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 38, 38, -1]" + "'", str32, "[1, 38, 38, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 39, 39, -1]" + "'", str33, "[1, 39, 39, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 40, 40, -1]" + "'", str34, "[1, 40, 40, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 41, 41, -1]" + "'", str35, "[1, 41, 41, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 42, 42, -1]" + "'", str36, "[1, 42, 42, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 43, 43, -1]" + "'", str37, "[1, 43, 43, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 44, 44, -1]" + "'", str38, "[1, 44, 44, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 45, 45, -1]" + "'", str39, "[1, 45, 45, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 46, 46, -1]" + "'", str40, "[1, 46, 46, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 47, 47, -1]" + "'", str41, "[1, 47, 47, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 48, 48, -1]" + "'", str42, "[1, 48, 48, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 49, 49, -1]" + "'", str43, "[1, 49, 49, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 50, 50, -1]" + "'", str44, "[1, 50, 50, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 51, 51, -1]" + "'", str45, "[1, 51, 51, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 52, 52, -1]" + "'", str46, "[1, 52, 52, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 53, 53, -1]" + "'", str47, "[1, 53, 53, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 54, 54, -1]" + "'", str48, "[1, 54, 54, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 55, 55, -1]" + "'", str49, "[1, 55, 55, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 56, 56, -1]" + "'", str50, "[1, 56, 56, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 57, 57, -1]" + "'", str51, "[1, 57, 57, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 58, 58, -1]" + "'", str52, "[1, 58, 58, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 59, 59, -1]" + "'", str53, "[1, 59, 59, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 60, 60, -1]" + "'", str54, "[1, 60, 60, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 61, 61, -1]" + "'", str55, "[1, 61, 61, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 62, 62, -1]" + "'", str56, "[1, 62, 62, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 63, 63, -1]" + "'", str57, "[1, 63, 63, -1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 64, 64, -1]" + "'", str58, "[1, 64, 64, -1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 65, 65, -1]" + "'", str59, "[1, 65, 65, -1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 66, 66, -1]" + "'", str60, "[1, 66, 66, -1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 67, 67, -1]" + "'", str61, "[1, 67, 67, -1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 68, 68, -1]" + "'", str62, "[1, 68, 68, -1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 69, 69, -1]" + "'", str63, "[1, 69, 69, -1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 70, 70, -1]" + "'", str64, "[1, 70, 70, -1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 71, 71, -1]" + "'", str65, "[1, 71, 71, -1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 72, 72, -1]" + "'", str66, "[1, 72, 72, -1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 73, 73, -1]" + "'", str67, "[1, 73, 73, -1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 74, 74, -1]" + "'", str68, "[1, 74, 74, -1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 75, 75, -1]" + "'", str69, "[1, 75, 75, -1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 76, 76, -1]" + "'", str70, "[1, 76, 76, -1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 77, 77, -1]" + "'", str71, "[1, 77, 77, -1]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test2633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2633");
        int[] intArray4 = new int[] { '#', ' ', (byte) -1, (short) 1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass54 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[39, 8, 8, 5]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 33, 0, 1]" + "'", str5, "[35, 33, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 34, 1, 1]" + "'", str6, "[35, 34, 1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 35, 2, 1]" + "'", str7, "[35, 35, 2, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 36, 3, 1]" + "'", str8, "[35, 36, 3, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 37, 4, 1]" + "'", str9, "[35, 37, 4, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 38, 5, 1]" + "'", str10, "[35, 38, 5, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 39, 6, 1]" + "'", str11, "[35, 39, 6, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 40, 7, 1]" + "'", str12, "[35, 40, 7, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 41, 8, 1]" + "'", str13, "[35, 41, 8, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 42, 9, 1]" + "'", str14, "[35, 42, 9, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[36, 0, 0, 2]" + "'", str15, "[36, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[36, 1, 1, 2]" + "'", str16, "[36, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[36, 2, 2, 2]" + "'", str17, "[36, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[36, 3, 3, 2]" + "'", str18, "[36, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[36, 4, 4, 2]" + "'", str19, "[36, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[36, 5, 5, 2]" + "'", str20, "[36, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[36, 6, 6, 2]" + "'", str21, "[36, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[36, 7, 7, 2]" + "'", str22, "[36, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[36, 8, 8, 2]" + "'", str23, "[36, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[36, 9, 9, 2]" + "'", str24, "[36, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[37, 0, 0, 3]" + "'", str25, "[37, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[37, 1, 1, 3]" + "'", str26, "[37, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[37, 2, 2, 3]" + "'", str27, "[37, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[37, 3, 3, 3]" + "'", str28, "[37, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[37, 4, 4, 3]" + "'", str29, "[37, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[37, 5, 5, 3]" + "'", str30, "[37, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[37, 6, 6, 3]" + "'", str31, "[37, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[37, 7, 7, 3]" + "'", str32, "[37, 7, 7, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[37, 8, 8, 3]" + "'", str33, "[37, 8, 8, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[37, 9, 9, 3]" + "'", str34, "[37, 9, 9, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[38, 0, 0, 4]" + "'", str35, "[38, 0, 0, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[38, 1, 1, 4]" + "'", str36, "[38, 1, 1, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[38, 2, 2, 4]" + "'", str37, "[38, 2, 2, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[38, 3, 3, 4]" + "'", str38, "[38, 3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[38, 4, 4, 4]" + "'", str39, "[38, 4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[38, 5, 5, 4]" + "'", str40, "[38, 5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[38, 6, 6, 4]" + "'", str41, "[38, 6, 6, 4]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[38, 7, 7, 4]" + "'", str42, "[38, 7, 7, 4]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[38, 8, 8, 4]" + "'", str43, "[38, 8, 8, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[38, 9, 9, 4]" + "'", str44, "[38, 9, 9, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[39, 0, 0, 5]" + "'", str45, "[39, 0, 0, 5]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[39, 1, 1, 5]" + "'", str46, "[39, 1, 1, 5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[39, 2, 2, 5]" + "'", str47, "[39, 2, 2, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[39, 3, 3, 5]" + "'", str48, "[39, 3, 3, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[39, 4, 4, 5]" + "'", str49, "[39, 4, 4, 5]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[39, 5, 5, 5]" + "'", str50, "[39, 5, 5, 5]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[39, 6, 6, 5]" + "'", str51, "[39, 6, 6, 5]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[39, 7, 7, 5]" + "'", str52, "[39, 7, 7, 5]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[39, 8, 8, 5]" + "'", str53, "[39, 8, 8, 5]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test2634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2634");
        int[] intArray3 = new int[] { ' ', (-1), 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass83 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[39, 8, 8]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 0, 1]" + "'", str4, "[32, 0, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 1, 1]" + "'", str5, "[32, 1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 2, 1]" + "'", str6, "[32, 2, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 3, 1]" + "'", str7, "[32, 3, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 4, 1]" + "'", str8, "[32, 4, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 5, 1]" + "'", str9, "[32, 5, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 6, 1]" + "'", str10, "[32, 6, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 7, 1]" + "'", str11, "[32, 7, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 8, 1]" + "'", str12, "[32, 8, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 9, 1]" + "'", str13, "[32, 9, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[33, 0, 2]" + "'", str14, "[33, 0, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[33, 1, 2]" + "'", str15, "[33, 1, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[33, 2, 2]" + "'", str16, "[33, 2, 2]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[33, 3, 2]" + "'", str17, "[33, 3, 2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[33, 4, 2]" + "'", str18, "[33, 4, 2]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[33, 5, 2]" + "'", str19, "[33, 5, 2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[33, 6, 2]" + "'", str20, "[33, 6, 2]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[33, 7, 2]" + "'", str21, "[33, 7, 2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[33, 8, 2]" + "'", str22, "[33, 8, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[33, 9, 2]" + "'", str23, "[33, 9, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[34, 0, 3]" + "'", str24, "[34, 0, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34, 1, 3]" + "'", str25, "[34, 1, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 2, 3]" + "'", str26, "[34, 2, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[34, 3, 3]" + "'", str27, "[34, 3, 3]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[34, 4, 3]" + "'", str28, "[34, 4, 3]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[34, 5, 3]" + "'", str29, "[34, 5, 3]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[34, 6, 3]" + "'", str30, "[34, 6, 3]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[34, 7, 3]" + "'", str31, "[34, 7, 3]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[34, 8, 3]" + "'", str32, "[34, 8, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[34, 9, 3]" + "'", str33, "[34, 9, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 0, 4]" + "'", str34, "[35, 0, 4]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 1, 4]" + "'", str35, "[35, 1, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 2, 4]" + "'", str36, "[35, 2, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 3, 4]" + "'", str37, "[35, 3, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 4, 4]" + "'", str38, "[35, 4, 4]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 5, 4]" + "'", str39, "[35, 5, 4]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 6, 4]" + "'", str40, "[35, 6, 4]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 7, 4]" + "'", str41, "[35, 7, 4]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 8, 4]" + "'", str42, "[35, 8, 4]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 9, 4]" + "'", str43, "[35, 9, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[36, 0, 5]" + "'", str44, "[36, 0, 5]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[36, 1, 5]" + "'", str45, "[36, 1, 5]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[36, 2, 5]" + "'", str46, "[36, 2, 5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[36, 3, 5]" + "'", str47, "[36, 3, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[36, 4, 5]" + "'", str48, "[36, 4, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[36, 5, 5]" + "'", str49, "[36, 5, 5]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[36, 6, 5]" + "'", str50, "[36, 6, 5]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[36, 7, 5]" + "'", str51, "[36, 7, 5]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[36, 8, 5]" + "'", str52, "[36, 8, 5]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[36, 9, 5]" + "'", str53, "[36, 9, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[37, 0, 6]" + "'", str54, "[37, 0, 6]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[37, 1, 6]" + "'", str55, "[37, 1, 6]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[37, 2, 6]" + "'", str56, "[37, 2, 6]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[37, 3, 6]" + "'", str57, "[37, 3, 6]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[37, 4, 6]" + "'", str58, "[37, 4, 6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[37, 5, 6]" + "'", str59, "[37, 5, 6]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[37, 6, 6]" + "'", str60, "[37, 6, 6]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[37, 7, 6]" + "'", str61, "[37, 7, 6]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[37, 8, 6]" + "'", str62, "[37, 8, 6]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[37, 9, 6]" + "'", str63, "[37, 9, 6]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[38, 0, 7]" + "'", str64, "[38, 0, 7]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[38, 1, 7]" + "'", str65, "[38, 1, 7]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[38, 2, 7]" + "'", str66, "[38, 2, 7]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[38, 3, 7]" + "'", str67, "[38, 3, 7]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[38, 4, 7]" + "'", str68, "[38, 4, 7]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[38, 5, 7]" + "'", str69, "[38, 5, 7]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[38, 6, 7]" + "'", str70, "[38, 6, 7]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[38, 7, 7]" + "'", str71, "[38, 7, 7]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[38, 8, 7]" + "'", str72, "[38, 8, 7]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[38, 9, 7]" + "'", str73, "[38, 9, 7]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[39, 0, 8]" + "'", str74, "[39, 0, 8]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[39, 1, 8]" + "'", str75, "[39, 1, 8]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[39, 2, 8]" + "'", str76, "[39, 2, 8]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[39, 3, 8]" + "'", str77, "[39, 3, 8]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[39, 4, 8]" + "'", str78, "[39, 4, 8]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[39, 5, 8]" + "'", str79, "[39, 5, 8]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[39, 6, 8]" + "'", str80, "[39, 6, 8]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[39, 7, 8]" + "'", str81, "[39, 7, 8]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[39, 8, 8]" + "'", str82, "[39, 8, 8]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2635");
        int[] intArray1 = new int[] { (byte) 10 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass65 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[73]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[11]" + "'", str2, "[11]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[12]" + "'", str3, "[12]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[13]" + "'", str4, "[13]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[14]" + "'", str5, "[14]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[15]" + "'", str6, "[15]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[16]" + "'", str7, "[16]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[17]" + "'", str8, "[17]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[18]" + "'", str9, "[18]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[19]" + "'", str10, "[19]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[20]" + "'", str11, "[20]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[21]" + "'", str12, "[21]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[22]" + "'", str13, "[22]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[23]" + "'", str14, "[23]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[24]" + "'", str15, "[24]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[25]" + "'", str16, "[25]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[26]" + "'", str17, "[26]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[27]" + "'", str18, "[27]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[28]" + "'", str19, "[28]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[29]" + "'", str20, "[29]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[30]" + "'", str21, "[30]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[31]" + "'", str22, "[31]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32]" + "'", str23, "[32]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[33]" + "'", str24, "[33]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34]" + "'", str25, "[34]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35]" + "'", str26, "[35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[36]" + "'", str27, "[36]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[37]" + "'", str28, "[37]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[38]" + "'", str29, "[38]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[39]" + "'", str30, "[39]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[40]" + "'", str31, "[40]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[41]" + "'", str32, "[41]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[42]" + "'", str33, "[42]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[43]" + "'", str34, "[43]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[44]" + "'", str35, "[44]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[45]" + "'", str36, "[45]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[46]" + "'", str37, "[46]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[47]" + "'", str38, "[47]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[48]" + "'", str39, "[48]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[49]" + "'", str40, "[49]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[50]" + "'", str41, "[50]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[51]" + "'", str42, "[51]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[52]" + "'", str43, "[52]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[53]" + "'", str44, "[53]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[54]" + "'", str45, "[54]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[55]" + "'", str46, "[55]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[56]" + "'", str47, "[56]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[57]" + "'", str48, "[57]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[58]" + "'", str49, "[58]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[59]" + "'", str50, "[59]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[60]" + "'", str51, "[60]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[61]" + "'", str52, "[61]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[62]" + "'", str53, "[62]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[63]" + "'", str54, "[63]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[64]" + "'", str55, "[64]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[65]" + "'", str56, "[65]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[66]" + "'", str57, "[66]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[67]" + "'", str58, "[67]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[68]" + "'", str59, "[68]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[69]" + "'", str60, "[69]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[70]" + "'", str61, "[70]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[71]" + "'", str62, "[71]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[72]" + "'", str63, "[72]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[73]" + "'", str64, "[73]");
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test2636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2636");
        int[] intArray4 = new int[] { (byte) 10, 'a', (byte) -1, '#' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass84 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[17, 8, 8, 42]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 98, 0, 35]" + "'", str5, "[10, 98, 0, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 99, 1, 35]" + "'", str6, "[10, 99, 1, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 100, 2, 35]" + "'", str7, "[10, 100, 2, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 101, 3, 35]" + "'", str8, "[10, 101, 3, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 102, 4, 35]" + "'", str9, "[10, 102, 4, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 103, 5, 35]" + "'", str10, "[10, 103, 5, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 104, 6, 35]" + "'", str11, "[10, 104, 6, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 105, 7, 35]" + "'", str12, "[10, 105, 7, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 106, 8, 35]" + "'", str13, "[10, 106, 8, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 107, 9, 35]" + "'", str14, "[10, 107, 9, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[11, 0, 0, 36]" + "'", str15, "[11, 0, 0, 36]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[11, 1, 1, 36]" + "'", str16, "[11, 1, 1, 36]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[11, 2, 2, 36]" + "'", str17, "[11, 2, 2, 36]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[11, 3, 3, 36]" + "'", str18, "[11, 3, 3, 36]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[11, 4, 4, 36]" + "'", str19, "[11, 4, 4, 36]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[11, 5, 5, 36]" + "'", str20, "[11, 5, 5, 36]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[11, 6, 6, 36]" + "'", str21, "[11, 6, 6, 36]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[11, 7, 7, 36]" + "'", str22, "[11, 7, 7, 36]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[11, 8, 8, 36]" + "'", str23, "[11, 8, 8, 36]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[11, 9, 9, 36]" + "'", str24, "[11, 9, 9, 36]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[12, 0, 0, 37]" + "'", str25, "[12, 0, 0, 37]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[12, 1, 1, 37]" + "'", str26, "[12, 1, 1, 37]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[12, 2, 2, 37]" + "'", str27, "[12, 2, 2, 37]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[12, 3, 3, 37]" + "'", str28, "[12, 3, 3, 37]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[12, 4, 4, 37]" + "'", str29, "[12, 4, 4, 37]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[12, 5, 5, 37]" + "'", str30, "[12, 5, 5, 37]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[12, 6, 6, 37]" + "'", str31, "[12, 6, 6, 37]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[12, 7, 7, 37]" + "'", str32, "[12, 7, 7, 37]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[12, 8, 8, 37]" + "'", str33, "[12, 8, 8, 37]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[12, 9, 9, 37]" + "'", str34, "[12, 9, 9, 37]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[13, 0, 0, 38]" + "'", str35, "[13, 0, 0, 38]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[13, 1, 1, 38]" + "'", str36, "[13, 1, 1, 38]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[13, 2, 2, 38]" + "'", str37, "[13, 2, 2, 38]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[13, 3, 3, 38]" + "'", str38, "[13, 3, 3, 38]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[13, 4, 4, 38]" + "'", str39, "[13, 4, 4, 38]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[13, 5, 5, 38]" + "'", str40, "[13, 5, 5, 38]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[13, 6, 6, 38]" + "'", str41, "[13, 6, 6, 38]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[13, 7, 7, 38]" + "'", str42, "[13, 7, 7, 38]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[13, 8, 8, 38]" + "'", str43, "[13, 8, 8, 38]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[13, 9, 9, 38]" + "'", str44, "[13, 9, 9, 38]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[14, 0, 0, 39]" + "'", str45, "[14, 0, 0, 39]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[14, 1, 1, 39]" + "'", str46, "[14, 1, 1, 39]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[14, 2, 2, 39]" + "'", str47, "[14, 2, 2, 39]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[14, 3, 3, 39]" + "'", str48, "[14, 3, 3, 39]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[14, 4, 4, 39]" + "'", str49, "[14, 4, 4, 39]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[14, 5, 5, 39]" + "'", str50, "[14, 5, 5, 39]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[14, 6, 6, 39]" + "'", str51, "[14, 6, 6, 39]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[14, 7, 7, 39]" + "'", str52, "[14, 7, 7, 39]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[14, 8, 8, 39]" + "'", str53, "[14, 8, 8, 39]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[14, 9, 9, 39]" + "'", str54, "[14, 9, 9, 39]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[15, 0, 0, 40]" + "'", str55, "[15, 0, 0, 40]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[15, 1, 1, 40]" + "'", str56, "[15, 1, 1, 40]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[15, 2, 2, 40]" + "'", str57, "[15, 2, 2, 40]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[15, 3, 3, 40]" + "'", str58, "[15, 3, 3, 40]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[15, 4, 4, 40]" + "'", str59, "[15, 4, 4, 40]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[15, 5, 5, 40]" + "'", str60, "[15, 5, 5, 40]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[15, 6, 6, 40]" + "'", str61, "[15, 6, 6, 40]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[15, 7, 7, 40]" + "'", str62, "[15, 7, 7, 40]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[15, 8, 8, 40]" + "'", str63, "[15, 8, 8, 40]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[15, 9, 9, 40]" + "'", str64, "[15, 9, 9, 40]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[16, 0, 0, 41]" + "'", str65, "[16, 0, 0, 41]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[16, 1, 1, 41]" + "'", str66, "[16, 1, 1, 41]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[16, 2, 2, 41]" + "'", str67, "[16, 2, 2, 41]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[16, 3, 3, 41]" + "'", str68, "[16, 3, 3, 41]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[16, 4, 4, 41]" + "'", str69, "[16, 4, 4, 41]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[16, 5, 5, 41]" + "'", str70, "[16, 5, 5, 41]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[16, 6, 6, 41]" + "'", str71, "[16, 6, 6, 41]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[16, 7, 7, 41]" + "'", str72, "[16, 7, 7, 41]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[16, 8, 8, 41]" + "'", str73, "[16, 8, 8, 41]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[16, 9, 9, 41]" + "'", str74, "[16, 9, 9, 41]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[17, 0, 0, 42]" + "'", str75, "[17, 0, 0, 42]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[17, 1, 1, 42]" + "'", str76, "[17, 1, 1, 42]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[17, 2, 2, 42]" + "'", str77, "[17, 2, 2, 42]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[17, 3, 3, 42]" + "'", str78, "[17, 3, 3, 42]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[17, 4, 4, 42]" + "'", str79, "[17, 4, 4, 42]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[17, 5, 5, 42]" + "'", str80, "[17, 5, 5, 42]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[17, 6, 6, 42]" + "'", str81, "[17, 6, 6, 42]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[17, 7, 7, 42]" + "'", str82, "[17, 7, 7, 42]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[17, 8, 8, 42]" + "'", str83, "[17, 8, 8, 42]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test2637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2637");
        int[] intArray5 = new int[] { ' ', (byte) 0, 1, ' ', (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass27 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[32, 2, 2, 34, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 0, 2, 32, 1]" + "'", str6, "[32, 0, 2, 32, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 0, 3, 32, 1]" + "'", str7, "[32, 0, 3, 32, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 0, 4, 32, 1]" + "'", str8, "[32, 0, 4, 32, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 0, 5, 32, 1]" + "'", str9, "[32, 0, 5, 32, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 0, 6, 32, 1]" + "'", str10, "[32, 0, 6, 32, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 0, 7, 32, 1]" + "'", str11, "[32, 0, 7, 32, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 0, 8, 32, 1]" + "'", str12, "[32, 0, 8, 32, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 0, 9, 32, 1]" + "'", str13, "[32, 0, 9, 32, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 1, 0, 33, 1]" + "'", str14, "[32, 1, 0, 33, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[32, 1, 1, 33, 1]" + "'", str15, "[32, 1, 1, 33, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[32, 1, 2, 33, 1]" + "'", str16, "[32, 1, 2, 33, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[32, 1, 3, 33, 1]" + "'", str17, "[32, 1, 3, 33, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[32, 1, 4, 33, 1]" + "'", str18, "[32, 1, 4, 33, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[32, 1, 5, 33, 1]" + "'", str19, "[32, 1, 5, 33, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[32, 1, 6, 33, 1]" + "'", str20, "[32, 1, 6, 33, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[32, 1, 7, 33, 1]" + "'", str21, "[32, 1, 7, 33, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[32, 1, 8, 33, 1]" + "'", str22, "[32, 1, 8, 33, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32, 1, 9, 33, 1]" + "'", str23, "[32, 1, 9, 33, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 2, 0, 34, 1]" + "'", str24, "[32, 2, 0, 34, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[32, 2, 1, 34, 1]" + "'", str25, "[32, 2, 1, 34, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[32, 2, 2, 34, 1]" + "'", str26, "[32, 2, 2, 34, 1]");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test2638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2638");
        int[] intArray2 = new int[] { (short) 1, (short) -1 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str90 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass91 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[7, 7]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 0]" + "'", str3, "[2, 0]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 1]" + "'", str4, "[3, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 2]" + "'", str5, "[4, 2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 3]" + "'", str6, "[5, 3]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 4]" + "'", str7, "[6, 4]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 5]" + "'", str8, "[7, 5]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 6]" + "'", str9, "[8, 6]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 7]" + "'", str10, "[9, 7]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 8]" + "'", str11, "[10, 8]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 9]" + "'", str12, "[11, 9]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 1]" + "'", str13, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1]" + "'", str14, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2]" + "'", str15, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[3, 3]" + "'", str16, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[4, 4]" + "'", str17, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[5, 5]" + "'", str18, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[6, 6]" + "'", str19, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[7, 7]" + "'", str20, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[8, 8]" + "'", str21, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[9, 9]" + "'", str22, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 1]" + "'", str23, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1]" + "'", str24, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 2]" + "'", str25, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3]" + "'", str26, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[4, 4]" + "'", str27, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[5, 5]" + "'", str28, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[6, 6]" + "'", str29, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[7, 7]" + "'", str30, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[8, 8]" + "'", str31, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[9, 9]" + "'", str32, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 0, 1]" + "'", str33, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1]" + "'", str34, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 2]" + "'", str35, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 3]" + "'", str36, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4]" + "'", str37, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[5, 5]" + "'", str38, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[6, 6]" + "'", str39, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[7, 7]" + "'", str40, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[8, 8]" + "'", str41, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[9, 9]" + "'", str42, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 0, 1]" + "'", str43, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1]" + "'", str44, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[2, 2]" + "'", str45, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 3]" + "'", str46, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 4]" + "'", str47, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5]" + "'", str48, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[6, 6]" + "'", str49, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[7, 7]" + "'", str50, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[8, 8]" + "'", str51, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[9, 9]" + "'", str52, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 0, 1]" + "'", str53, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 1]" + "'", str54, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[2, 2]" + "'", str55, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[3, 3]" + "'", str56, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[4, 4]" + "'", str57, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 5]" + "'", str58, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 6]" + "'", str59, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[7, 7]" + "'", str60, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[8, 8]" + "'", str61, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[9, 9]" + "'", str62, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 0, 1]" + "'", str63, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 1]" + "'", str64, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[2, 2]" + "'", str65, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[3, 3]" + "'", str66, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[4, 4]" + "'", str67, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[5, 5]" + "'", str68, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[6, 6]" + "'", str69, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[7, 7]" + "'", str70, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[8, 8]" + "'", str71, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[9, 9]" + "'", str72, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 0, 1]" + "'", str73, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 1]" + "'", str74, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[2, 2]" + "'", str75, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[3, 3]" + "'", str76, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[4, 4]" + "'", str77, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[5, 5]" + "'", str78, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[6, 6]" + "'", str79, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[7, 7]" + "'", str80, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[8, 8]" + "'", str81, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[9, 9]" + "'", str82, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[1, 0, 1]" + "'", str83, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[1, 1]" + "'", str84, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[2, 2]" + "'", str85, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[3, 3]" + "'", str86, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[4, 4]" + "'", str87, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[5, 5]" + "'", str88, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[6, 6]" + "'", str89, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[7, 7]" + "'", str90, "[7, 7]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2639");
        int[] intArray2 = new int[] { 'a', 1 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass30 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[8, 8]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[98, 2]" + "'", str3, "[98, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[99, 3]" + "'", str4, "[99, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 4]" + "'", str5, "[100, 4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[101, 5]" + "'", str6, "[101, 5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[102, 6]" + "'", str7, "[102, 6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[103, 7]" + "'", str8, "[103, 7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[104, 8]" + "'", str9, "[104, 8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[105, 9]" + "'", str10, "[105, 9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 2]" + "'", str13, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3, 3]" + "'", str14, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4, 4]" + "'", str15, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5, 5]" + "'", str16, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6, 6]" + "'", str17, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7, 7]" + "'", str18, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8, 8]" + "'", str19, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9, 9]" + "'", str20, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 2]" + "'", str23, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 3]" + "'", str24, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4, 4]" + "'", str25, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5, 5]" + "'", str26, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6, 6]" + "'", str27, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7, 7]" + "'", str28, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8, 8]" + "'", str29, "[8, 8]");
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test2640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2640");
        int[] intArray1 = new int[] { (short) 100 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass81 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[179]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[101]" + "'", str2, "[101]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[102]" + "'", str3, "[102]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[103]" + "'", str4, "[103]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[104]" + "'", str5, "[104]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[105]" + "'", str6, "[105]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[106]" + "'", str7, "[106]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[107]" + "'", str8, "[107]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[108]" + "'", str9, "[108]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[109]" + "'", str10, "[109]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[110]" + "'", str11, "[110]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[111]" + "'", str12, "[111]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[112]" + "'", str13, "[112]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[113]" + "'", str14, "[113]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[114]" + "'", str15, "[114]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[115]" + "'", str16, "[115]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[116]" + "'", str17, "[116]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[117]" + "'", str18, "[117]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[118]" + "'", str19, "[118]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[119]" + "'", str20, "[119]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[120]" + "'", str21, "[120]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[121]" + "'", str22, "[121]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[122]" + "'", str23, "[122]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[123]" + "'", str24, "[123]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[124]" + "'", str25, "[124]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[125]" + "'", str26, "[125]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[126]" + "'", str27, "[126]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[127]" + "'", str28, "[127]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[128]" + "'", str29, "[128]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[129]" + "'", str30, "[129]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[130]" + "'", str31, "[130]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[131]" + "'", str32, "[131]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[132]" + "'", str33, "[132]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[133]" + "'", str34, "[133]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[134]" + "'", str35, "[134]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[135]" + "'", str36, "[135]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[136]" + "'", str37, "[136]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[137]" + "'", str38, "[137]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[138]" + "'", str39, "[138]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[139]" + "'", str40, "[139]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[140]" + "'", str41, "[140]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[141]" + "'", str42, "[141]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[142]" + "'", str43, "[142]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[143]" + "'", str44, "[143]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[144]" + "'", str45, "[144]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[145]" + "'", str46, "[145]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[146]" + "'", str47, "[146]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[147]" + "'", str48, "[147]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[148]" + "'", str49, "[148]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[149]" + "'", str50, "[149]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[150]" + "'", str51, "[150]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[151]" + "'", str52, "[151]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[152]" + "'", str53, "[152]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[153]" + "'", str54, "[153]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[154]" + "'", str55, "[154]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[155]" + "'", str56, "[155]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[156]" + "'", str57, "[156]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[157]" + "'", str58, "[157]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[158]" + "'", str59, "[158]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[159]" + "'", str60, "[159]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[160]" + "'", str61, "[160]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[161]" + "'", str62, "[161]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[162]" + "'", str63, "[162]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[163]" + "'", str64, "[163]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[164]" + "'", str65, "[164]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[165]" + "'", str66, "[165]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[166]" + "'", str67, "[166]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[167]" + "'", str68, "[167]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[168]" + "'", str69, "[168]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[169]" + "'", str70, "[169]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[170]" + "'", str71, "[170]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[171]" + "'", str72, "[171]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[172]" + "'", str73, "[172]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[173]" + "'", str74, "[173]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[174]" + "'", str75, "[174]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[175]" + "'", str76, "[175]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[176]" + "'", str77, "[176]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[177]" + "'", str78, "[177]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[178]" + "'", str79, "[178]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[179]" + "'", str80, "[179]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test2641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2641");
        int[] intArray4 = new int[] { (short) 1, (byte) 10, (byte) 0, (-1) };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass60 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[6, 5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 11, 1, -1]" + "'", str5, "[1, 11, 1, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 12, 2, -1]" + "'", str6, "[1, 12, 2, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 13, 3, -1]" + "'", str7, "[1, 13, 3, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 14, 4, -1]" + "'", str8, "[1, 14, 4, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 15, 5, -1]" + "'", str9, "[1, 15, 5, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 16, 6, -1]" + "'", str10, "[1, 16, 6, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 17, 7, -1]" + "'", str11, "[1, 17, 7, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 18, 8, -1]" + "'", str12, "[1, 18, 8, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 19, 9, -1]" + "'", str13, "[1, 19, 9, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 0, 0, 0]" + "'", str14, "[2, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 1, 1, 0]" + "'", str15, "[2, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 2, 2, 0]" + "'", str16, "[2, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 3, 3, 0]" + "'", str17, "[2, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 4, 4, 0]" + "'", str18, "[2, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 5, 5, 0]" + "'", str19, "[2, 5, 5, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 6, 6, 0]" + "'", str20, "[2, 6, 6, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 7, 7, 0]" + "'", str21, "[2, 7, 7, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 8, 8, 0]" + "'", str22, "[2, 8, 8, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 9, 9, 0]" + "'", str23, "[2, 9, 9, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 0, 0, 1]" + "'", str24, "[3, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 1, 1, 1]" + "'", str25, "[3, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 2, 2, 1]" + "'", str26, "[3, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 3, 3, 1]" + "'", str27, "[3, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 4, 4, 1]" + "'", str28, "[3, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[3, 5, 5, 1]" + "'", str29, "[3, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[3, 6, 6, 1]" + "'", str30, "[3, 6, 6, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[3, 7, 7, 1]" + "'", str31, "[3, 7, 7, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[3, 8, 8, 1]" + "'", str32, "[3, 8, 8, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[3, 9, 9, 1]" + "'", str33, "[3, 9, 9, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4, 0, 0, 2]" + "'", str34, "[4, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 1, 1, 2]" + "'", str35, "[4, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 2, 2, 2]" + "'", str36, "[4, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 3, 3, 2]" + "'", str37, "[4, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[4, 4, 4, 2]" + "'", str38, "[4, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[4, 5, 5, 2]" + "'", str39, "[4, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[4, 6, 6, 2]" + "'", str40, "[4, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[4, 7, 7, 2]" + "'", str41, "[4, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[4, 8, 8, 2]" + "'", str42, "[4, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[4, 9, 9, 2]" + "'", str43, "[4, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[5, 0, 0, 3]" + "'", str44, "[5, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[5, 1, 1, 3]" + "'", str45, "[5, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 2, 2, 3]" + "'", str46, "[5, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 3, 3, 3]" + "'", str47, "[5, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 4, 4, 3]" + "'", str48, "[5, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[5, 5, 5, 3]" + "'", str49, "[5, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[5, 6, 6, 3]" + "'", str50, "[5, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[5, 7, 7, 3]" + "'", str51, "[5, 7, 7, 3]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[5, 8, 8, 3]" + "'", str52, "[5, 8, 8, 3]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[5, 9, 9, 3]" + "'", str53, "[5, 9, 9, 3]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[6, 0, 0, 4]" + "'", str54, "[6, 0, 0, 4]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[6, 1, 1, 4]" + "'", str55, "[6, 1, 1, 4]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[6, 2, 2, 4]" + "'", str56, "[6, 2, 2, 4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6, 3, 3, 4]" + "'", str57, "[6, 3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6, 4, 4, 4]" + "'", str58, "[6, 4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 5, 5, 4]" + "'", str59, "[6, 5, 5, 4]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test2642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2642");
        int[] intArray4 = new int[] { (byte) -1, 10, (byte) 0, (short) 100 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass82 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[6, 7, 7, 107]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 11, 1, 100]" + "'", str5, "[-1, 11, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 12, 2, 100]" + "'", str6, "[-1, 12, 2, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 13, 3, 100]" + "'", str7, "[-1, 13, 3, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 14, 4, 100]" + "'", str8, "[-1, 14, 4, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 15, 5, 100]" + "'", str9, "[-1, 15, 5, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 16, 6, 100]" + "'", str10, "[-1, 16, 6, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 17, 7, 100]" + "'", str11, "[-1, 17, 7, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 18, 8, 100]" + "'", str12, "[-1, 18, 8, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 19, 9, 100]" + "'", str13, "[-1, 19, 9, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 0, 0, 101]" + "'", str14, "[0, 0, 0, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 1, 1, 101]" + "'", str15, "[0, 1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 2, 2, 101]" + "'", str16, "[0, 2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 3, 3, 101]" + "'", str17, "[0, 3, 3, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 4, 4, 101]" + "'", str18, "[0, 4, 4, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 5, 5, 101]" + "'", str19, "[0, 5, 5, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 6, 6, 101]" + "'", str20, "[0, 6, 6, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 7, 7, 101]" + "'", str21, "[0, 7, 7, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 8, 8, 101]" + "'", str22, "[0, 8, 8, 101]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 9, 9, 101]" + "'", str23, "[0, 9, 9, 101]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 0, 102]" + "'", str24, "[1, 0, 0, 102]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1, 1, 102]" + "'", str25, "[1, 1, 1, 102]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 2, 2, 102]" + "'", str26, "[1, 2, 2, 102]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 3, 3, 102]" + "'", str27, "[1, 3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 4, 4, 102]" + "'", str28, "[1, 4, 4, 102]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 5, 5, 102]" + "'", str29, "[1, 5, 5, 102]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 6, 6, 102]" + "'", str30, "[1, 6, 6, 102]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 7, 7, 102]" + "'", str31, "[1, 7, 7, 102]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 8, 8, 102]" + "'", str32, "[1, 8, 8, 102]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 9, 9, 102]" + "'", str33, "[1, 9, 9, 102]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 0, 0, 103]" + "'", str34, "[2, 0, 0, 103]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 1, 1, 103]" + "'", str35, "[2, 1, 1, 103]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[2, 2, 2, 103]" + "'", str36, "[2, 2, 2, 103]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[2, 3, 3, 103]" + "'", str37, "[2, 3, 3, 103]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[2, 4, 4, 103]" + "'", str38, "[2, 4, 4, 103]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[2, 5, 5, 103]" + "'", str39, "[2, 5, 5, 103]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[2, 6, 6, 103]" + "'", str40, "[2, 6, 6, 103]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[2, 7, 7, 103]" + "'", str41, "[2, 7, 7, 103]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[2, 8, 8, 103]" + "'", str42, "[2, 8, 8, 103]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2, 9, 9, 103]" + "'", str43, "[2, 9, 9, 103]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 0, 0, 104]" + "'", str44, "[3, 0, 0, 104]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 1, 1, 104]" + "'", str45, "[3, 1, 1, 104]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 2, 2, 104]" + "'", str46, "[3, 2, 2, 104]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[3, 3, 3, 104]" + "'", str47, "[3, 3, 3, 104]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[3, 4, 4, 104]" + "'", str48, "[3, 4, 4, 104]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[3, 5, 5, 104]" + "'", str49, "[3, 5, 5, 104]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[3, 6, 6, 104]" + "'", str50, "[3, 6, 6, 104]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[3, 7, 7, 104]" + "'", str51, "[3, 7, 7, 104]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[3, 8, 8, 104]" + "'", str52, "[3, 8, 8, 104]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[3, 9, 9, 104]" + "'", str53, "[3, 9, 9, 104]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[4, 0, 0, 105]" + "'", str54, "[4, 0, 0, 105]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[4, 1, 1, 105]" + "'", str55, "[4, 1, 1, 105]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4, 2, 2, 105]" + "'", str56, "[4, 2, 2, 105]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[4, 3, 3, 105]" + "'", str57, "[4, 3, 3, 105]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[4, 4, 4, 105]" + "'", str58, "[4, 4, 4, 105]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[4, 5, 5, 105]" + "'", str59, "[4, 5, 5, 105]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[4, 6, 6, 105]" + "'", str60, "[4, 6, 6, 105]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[4, 7, 7, 105]" + "'", str61, "[4, 7, 7, 105]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[4, 8, 8, 105]" + "'", str62, "[4, 8, 8, 105]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[4, 9, 9, 105]" + "'", str63, "[4, 9, 9, 105]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[5, 0, 0, 106]" + "'", str64, "[5, 0, 0, 106]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[5, 1, 1, 106]" + "'", str65, "[5, 1, 1, 106]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[5, 2, 2, 106]" + "'", str66, "[5, 2, 2, 106]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[5, 3, 3, 106]" + "'", str67, "[5, 3, 3, 106]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[5, 4, 4, 106]" + "'", str68, "[5, 4, 4, 106]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[5, 5, 5, 106]" + "'", str69, "[5, 5, 5, 106]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[5, 6, 6, 106]" + "'", str70, "[5, 6, 6, 106]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[5, 7, 7, 106]" + "'", str71, "[5, 7, 7, 106]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[5, 8, 8, 106]" + "'", str72, "[5, 8, 8, 106]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[5, 9, 9, 106]" + "'", str73, "[5, 9, 9, 106]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[6, 0, 0, 107]" + "'", str74, "[6, 0, 0, 107]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[6, 1, 1, 107]" + "'", str75, "[6, 1, 1, 107]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[6, 2, 2, 107]" + "'", str76, "[6, 2, 2, 107]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[6, 3, 3, 107]" + "'", str77, "[6, 3, 3, 107]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[6, 4, 4, 107]" + "'", str78, "[6, 4, 4, 107]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[6, 5, 5, 107]" + "'", str79, "[6, 5, 5, 107]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[6, 6, 6, 107]" + "'", str80, "[6, 6, 6, 107]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[6, 7, 7, 107]" + "'", str81, "[6, 7, 7, 107]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2643");
        int[] intArray6 = new int[] { 1, (byte) 0, (byte) 0, (byte) -1, (byte) 1, '4' };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass43 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 3, 5, 5, 4, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 1, 0, 1, 52]" + "'", str7, "[1, 0, 1, 0, 1, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 2, 1, 1, 52]" + "'", str8, "[1, 0, 2, 1, 1, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 3, 2, 1, 52]" + "'", str9, "[1, 0, 3, 2, 1, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 4, 3, 1, 52]" + "'", str10, "[1, 0, 4, 3, 1, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 5, 4, 1, 52]" + "'", str11, "[1, 0, 5, 4, 1, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 6, 5, 1, 52]" + "'", str12, "[1, 0, 6, 5, 1, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 7, 6, 1, 52]" + "'", str13, "[1, 0, 7, 6, 1, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 8, 7, 1, 52]" + "'", str14, "[1, 0, 8, 7, 1, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 9, 8, 1, 52]" + "'", str15, "[1, 0, 9, 8, 1, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 10, 9, 1, 52]" + "'", str16, "[1, 0, 10, 9, 1, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 1, 0, 0, 2, 52]" + "'", str17, "[1, 1, 0, 0, 2, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 1, 1, 1, 2, 52]" + "'", str18, "[1, 1, 1, 1, 2, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 1, 2, 2, 2, 52]" + "'", str19, "[1, 1, 2, 2, 2, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1, 3, 3, 2, 52]" + "'", str20, "[1, 1, 3, 3, 2, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1, 4, 4, 2, 52]" + "'", str21, "[1, 1, 4, 4, 2, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1, 5, 5, 2, 52]" + "'", str22, "[1, 1, 5, 5, 2, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 6, 6, 2, 52]" + "'", str23, "[1, 1, 6, 6, 2, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1, 7, 7, 2, 52]" + "'", str24, "[1, 1, 7, 7, 2, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1, 8, 8, 2, 52]" + "'", str25, "[1, 1, 8, 8, 2, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 1, 9, 9, 2, 52]" + "'", str26, "[1, 1, 9, 9, 2, 52]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 2, 0, 0, 3, 52]" + "'", str27, "[1, 2, 0, 0, 3, 52]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 2, 1, 1, 3, 52]" + "'", str28, "[1, 2, 1, 1, 3, 52]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 2, 2, 2, 3, 52]" + "'", str29, "[1, 2, 2, 2, 3, 52]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 2, 3, 3, 3, 52]" + "'", str30, "[1, 2, 3, 3, 3, 52]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 2, 4, 4, 3, 52]" + "'", str31, "[1, 2, 4, 4, 3, 52]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 2, 5, 5, 3, 52]" + "'", str32, "[1, 2, 5, 5, 3, 52]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 2, 6, 6, 3, 52]" + "'", str33, "[1, 2, 6, 6, 3, 52]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 2, 7, 7, 3, 52]" + "'", str34, "[1, 2, 7, 7, 3, 52]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 2, 8, 8, 3, 52]" + "'", str35, "[1, 2, 8, 8, 3, 52]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 2, 9, 9, 3, 52]" + "'", str36, "[1, 2, 9, 9, 3, 52]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 3, 0, 0, 4, 52]" + "'", str37, "[1, 3, 0, 0, 4, 52]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 3, 1, 1, 4, 52]" + "'", str38, "[1, 3, 1, 1, 4, 52]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 3, 2, 2, 4, 52]" + "'", str39, "[1, 3, 2, 2, 4, 52]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 3, 3, 3, 4, 52]" + "'", str40, "[1, 3, 3, 3, 4, 52]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 3, 4, 4, 4, 52]" + "'", str41, "[1, 3, 4, 4, 4, 52]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 3, 5, 5, 4, 52]" + "'", str42, "[1, 3, 5, 5, 4, 52]");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test2644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2644");
        int[] intArray1 = new int[] { (byte) -1 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass71 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[8]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1]" + "'", str32, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1]" + "'", str33, "[1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2]" + "'", str34, "[2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3]" + "'", str35, "[3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4]" + "'", str36, "[4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5]" + "'", str37, "[5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6]" + "'", str38, "[6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7]" + "'", str39, "[7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8]" + "'", str40, "[8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9]" + "'", str41, "[9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1]" + "'", str42, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1]" + "'", str43, "[1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2]" + "'", str44, "[2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3]" + "'", str45, "[3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4]" + "'", str46, "[4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5]" + "'", str47, "[5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6]" + "'", str48, "[6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7]" + "'", str49, "[7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8]" + "'", str50, "[8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9]" + "'", str51, "[9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1]" + "'", str52, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1]" + "'", str53, "[1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2]" + "'", str54, "[2]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[3]" + "'", str55, "[3]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4]" + "'", str56, "[4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5]" + "'", str57, "[5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6]" + "'", str58, "[6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[7]" + "'", str59, "[7]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[8]" + "'", str60, "[8]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[9]" + "'", str61, "[9]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 1]" + "'", str62, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1]" + "'", str63, "[1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[2]" + "'", str64, "[2]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[3]" + "'", str65, "[3]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[4]" + "'", str66, "[4]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[5]" + "'", str67, "[5]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[6]" + "'", str68, "[6]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[7]" + "'", str69, "[7]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[8]" + "'", str70, "[8]");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test2645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2645");
        int[] intArray5 = new int[] { (short) 100, 'a', ' ', 0, (byte) -1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass69 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 97, 95, 0, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 97, 33, 0, -1]" + "'", str6, "[100, 97, 33, 0, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 97, 34, 0, -1]" + "'", str7, "[100, 97, 34, 0, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 97, 35, 0, -1]" + "'", str8, "[100, 97, 35, 0, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 97, 36, 0, -1]" + "'", str9, "[100, 97, 36, 0, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 97, 37, 0, -1]" + "'", str10, "[100, 97, 37, 0, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 97, 38, 0, -1]" + "'", str11, "[100, 97, 38, 0, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 97, 39, 0, -1]" + "'", str12, "[100, 97, 39, 0, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 97, 40, 0, -1]" + "'", str13, "[100, 97, 40, 0, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 97, 41, 0, -1]" + "'", str14, "[100, 97, 41, 0, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 97, 42, 0, -1]" + "'", str15, "[100, 97, 42, 0, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 97, 43, 0, -1]" + "'", str16, "[100, 97, 43, 0, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 97, 44, 0, -1]" + "'", str17, "[100, 97, 44, 0, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 97, 45, 0, -1]" + "'", str18, "[100, 97, 45, 0, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 97, 46, 0, -1]" + "'", str19, "[100, 97, 46, 0, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 97, 47, 0, -1]" + "'", str20, "[100, 97, 47, 0, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 97, 48, 0, -1]" + "'", str21, "[100, 97, 48, 0, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 97, 49, 0, -1]" + "'", str22, "[100, 97, 49, 0, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 97, 50, 0, -1]" + "'", str23, "[100, 97, 50, 0, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 97, 51, 0, -1]" + "'", str24, "[100, 97, 51, 0, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 97, 52, 0, -1]" + "'", str25, "[100, 97, 52, 0, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 97, 53, 0, -1]" + "'", str26, "[100, 97, 53, 0, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 97, 54, 0, -1]" + "'", str27, "[100, 97, 54, 0, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 97, 55, 0, -1]" + "'", str28, "[100, 97, 55, 0, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 97, 56, 0, -1]" + "'", str29, "[100, 97, 56, 0, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 97, 57, 0, -1]" + "'", str30, "[100, 97, 57, 0, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 97, 58, 0, -1]" + "'", str31, "[100, 97, 58, 0, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 97, 59, 0, -1]" + "'", str32, "[100, 97, 59, 0, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 97, 60, 0, -1]" + "'", str33, "[100, 97, 60, 0, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 97, 61, 0, -1]" + "'", str34, "[100, 97, 61, 0, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 97, 62, 0, -1]" + "'", str35, "[100, 97, 62, 0, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 97, 63, 0, -1]" + "'", str36, "[100, 97, 63, 0, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 97, 64, 0, -1]" + "'", str37, "[100, 97, 64, 0, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 97, 65, 0, -1]" + "'", str38, "[100, 97, 65, 0, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 97, 66, 0, -1]" + "'", str39, "[100, 97, 66, 0, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 97, 67, 0, -1]" + "'", str40, "[100, 97, 67, 0, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 97, 68, 0, -1]" + "'", str41, "[100, 97, 68, 0, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 97, 69, 0, -1]" + "'", str42, "[100, 97, 69, 0, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 97, 70, 0, -1]" + "'", str43, "[100, 97, 70, 0, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 97, 71, 0, -1]" + "'", str44, "[100, 97, 71, 0, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 97, 72, 0, -1]" + "'", str45, "[100, 97, 72, 0, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 97, 73, 0, -1]" + "'", str46, "[100, 97, 73, 0, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 97, 74, 0, -1]" + "'", str47, "[100, 97, 74, 0, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 97, 75, 0, -1]" + "'", str48, "[100, 97, 75, 0, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 97, 76, 0, -1]" + "'", str49, "[100, 97, 76, 0, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 97, 77, 0, -1]" + "'", str50, "[100, 97, 77, 0, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 97, 78, 0, -1]" + "'", str51, "[100, 97, 78, 0, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 97, 79, 0, -1]" + "'", str52, "[100, 97, 79, 0, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 97, 80, 0, -1]" + "'", str53, "[100, 97, 80, 0, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 97, 81, 0, -1]" + "'", str54, "[100, 97, 81, 0, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 97, 82, 0, -1]" + "'", str55, "[100, 97, 82, 0, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 97, 83, 0, -1]" + "'", str56, "[100, 97, 83, 0, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 97, 84, 0, -1]" + "'", str57, "[100, 97, 84, 0, -1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 97, 85, 0, -1]" + "'", str58, "[100, 97, 85, 0, -1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 97, 86, 0, -1]" + "'", str59, "[100, 97, 86, 0, -1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 97, 87, 0, -1]" + "'", str60, "[100, 97, 87, 0, -1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 97, 88, 0, -1]" + "'", str61, "[100, 97, 88, 0, -1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[100, 97, 89, 0, -1]" + "'", str62, "[100, 97, 89, 0, -1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[100, 97, 90, 0, -1]" + "'", str63, "[100, 97, 90, 0, -1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[100, 97, 91, 0, -1]" + "'", str64, "[100, 97, 91, 0, -1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[100, 97, 92, 0, -1]" + "'", str65, "[100, 97, 92, 0, -1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[100, 97, 93, 0, -1]" + "'", str66, "[100, 97, 93, 0, -1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[100, 97, 94, 0, -1]" + "'", str67, "[100, 97, 94, 0, -1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[100, 97, 95, 0, -1]" + "'", str68, "[100, 97, 95, 0, -1]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test2646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2646");
        int[] intArray3 = new int[] { (short) 10, (short) 0, (short) 10 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass70 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[16, 6, 16]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[10, 1, 10]" + "'", str4, "[10, 1, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 2, 10]" + "'", str5, "[10, 2, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 3, 10]" + "'", str6, "[10, 3, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 4, 10]" + "'", str7, "[10, 4, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 5, 10]" + "'", str8, "[10, 5, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 6, 10]" + "'", str9, "[10, 6, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 7, 10]" + "'", str10, "[10, 7, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 8, 10]" + "'", str11, "[10, 8, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 9, 10]" + "'", str12, "[10, 9, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[11, 0, 11]" + "'", str13, "[11, 0, 11]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[11, 1, 11]" + "'", str14, "[11, 1, 11]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[11, 2, 11]" + "'", str15, "[11, 2, 11]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[11, 3, 11]" + "'", str16, "[11, 3, 11]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[11, 4, 11]" + "'", str17, "[11, 4, 11]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[11, 5, 11]" + "'", str18, "[11, 5, 11]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[11, 6, 11]" + "'", str19, "[11, 6, 11]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[11, 7, 11]" + "'", str20, "[11, 7, 11]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[11, 8, 11]" + "'", str21, "[11, 8, 11]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[11, 9, 11]" + "'", str22, "[11, 9, 11]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[12, 0, 12]" + "'", str23, "[12, 0, 12]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[12, 1, 12]" + "'", str24, "[12, 1, 12]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[12, 2, 12]" + "'", str25, "[12, 2, 12]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[12, 3, 12]" + "'", str26, "[12, 3, 12]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[12, 4, 12]" + "'", str27, "[12, 4, 12]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[12, 5, 12]" + "'", str28, "[12, 5, 12]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[12, 6, 12]" + "'", str29, "[12, 6, 12]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[12, 7, 12]" + "'", str30, "[12, 7, 12]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[12, 8, 12]" + "'", str31, "[12, 8, 12]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[12, 9, 12]" + "'", str32, "[12, 9, 12]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[13, 0, 13]" + "'", str33, "[13, 0, 13]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[13, 1, 13]" + "'", str34, "[13, 1, 13]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[13, 2, 13]" + "'", str35, "[13, 2, 13]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[13, 3, 13]" + "'", str36, "[13, 3, 13]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[13, 4, 13]" + "'", str37, "[13, 4, 13]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[13, 5, 13]" + "'", str38, "[13, 5, 13]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[13, 6, 13]" + "'", str39, "[13, 6, 13]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[13, 7, 13]" + "'", str40, "[13, 7, 13]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[13, 8, 13]" + "'", str41, "[13, 8, 13]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[13, 9, 13]" + "'", str42, "[13, 9, 13]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[14, 0, 14]" + "'", str43, "[14, 0, 14]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[14, 1, 14]" + "'", str44, "[14, 1, 14]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[14, 2, 14]" + "'", str45, "[14, 2, 14]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[14, 3, 14]" + "'", str46, "[14, 3, 14]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[14, 4, 14]" + "'", str47, "[14, 4, 14]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[14, 5, 14]" + "'", str48, "[14, 5, 14]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[14, 6, 14]" + "'", str49, "[14, 6, 14]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[14, 7, 14]" + "'", str50, "[14, 7, 14]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[14, 8, 14]" + "'", str51, "[14, 8, 14]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[14, 9, 14]" + "'", str52, "[14, 9, 14]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[15, 0, 15]" + "'", str53, "[15, 0, 15]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[15, 1, 15]" + "'", str54, "[15, 1, 15]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[15, 2, 15]" + "'", str55, "[15, 2, 15]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[15, 3, 15]" + "'", str56, "[15, 3, 15]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[15, 4, 15]" + "'", str57, "[15, 4, 15]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[15, 5, 15]" + "'", str58, "[15, 5, 15]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[15, 6, 15]" + "'", str59, "[15, 6, 15]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[15, 7, 15]" + "'", str60, "[15, 7, 15]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[15, 8, 15]" + "'", str61, "[15, 8, 15]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[15, 9, 15]" + "'", str62, "[15, 9, 15]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[16, 0, 16]" + "'", str63, "[16, 0, 16]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[16, 1, 16]" + "'", str64, "[16, 1, 16]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[16, 2, 16]" + "'", str65, "[16, 2, 16]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[16, 3, 16]" + "'", str66, "[16, 3, 16]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[16, 4, 16]" + "'", str67, "[16, 4, 16]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[16, 5, 16]" + "'", str68, "[16, 5, 16]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[16, 6, 16]" + "'", str69, "[16, 6, 16]");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test2647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2647");
        int[] intArray3 = new int[] { 0, (-1), (short) 100 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass7 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 2, 100]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 0, 100]" + "'", str4, "[0, 0, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 1, 100]" + "'", str5, "[0, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 2, 100]" + "'", str6, "[0, 2, 100]");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test2648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2648");
        int[] intArray4 = new int[] { '4', (byte) -1, (short) 1, (byte) 10 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass26 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[54, 2, 2, 12]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[52, 0, 2, 10]" + "'", str5, "[52, 0, 2, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[52, 1, 3, 10]" + "'", str6, "[52, 1, 3, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[52, 2, 4, 10]" + "'", str7, "[52, 2, 4, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[52, 3, 5, 10]" + "'", str8, "[52, 3, 5, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[52, 4, 6, 10]" + "'", str9, "[52, 4, 6, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[52, 5, 7, 10]" + "'", str10, "[52, 5, 7, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[52, 6, 8, 10]" + "'", str11, "[52, 6, 8, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[52, 7, 9, 10]" + "'", str12, "[52, 7, 9, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[53, 0, 0, 11]" + "'", str13, "[53, 0, 0, 11]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[53, 1, 1, 11]" + "'", str14, "[53, 1, 1, 11]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[53, 2, 2, 11]" + "'", str15, "[53, 2, 2, 11]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[53, 3, 3, 11]" + "'", str16, "[53, 3, 3, 11]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[53, 4, 4, 11]" + "'", str17, "[53, 4, 4, 11]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[53, 5, 5, 11]" + "'", str18, "[53, 5, 5, 11]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[53, 6, 6, 11]" + "'", str19, "[53, 6, 6, 11]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[53, 7, 7, 11]" + "'", str20, "[53, 7, 7, 11]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[53, 8, 8, 11]" + "'", str21, "[53, 8, 8, 11]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[53, 9, 9, 11]" + "'", str22, "[53, 9, 9, 11]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[54, 0, 0, 12]" + "'", str23, "[54, 0, 0, 12]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[54, 1, 1, 12]" + "'", str24, "[54, 1, 1, 12]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[54, 2, 2, 12]" + "'", str25, "[54, 2, 2, 12]");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test2649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2649");
        int[] intArray4 = new int[] { 'a', (short) 1, (byte) -1, (short) 0 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass63 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[102, 7, 7, 5]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 2, 0, 0]" + "'", str5, "[97, 2, 0, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 3, 1, 0]" + "'", str6, "[97, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 4, 2, 0]" + "'", str7, "[97, 4, 2, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 5, 3, 0]" + "'", str8, "[97, 5, 3, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 6, 4, 0]" + "'", str9, "[97, 6, 4, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 7, 5, 0]" + "'", str10, "[97, 7, 5, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 8, 6, 0]" + "'", str11, "[97, 8, 6, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 9, 7, 0]" + "'", str12, "[97, 9, 7, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 10, 8, 0]" + "'", str13, "[97, 10, 8, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 11, 9, 0]" + "'", str14, "[97, 11, 9, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[98, 0, 0, 1]" + "'", str15, "[98, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[98, 1, 1, 1]" + "'", str16, "[98, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[98, 2, 2, 1]" + "'", str17, "[98, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[98, 3, 3, 1]" + "'", str18, "[98, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[98, 4, 4, 1]" + "'", str19, "[98, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[98, 5, 5, 1]" + "'", str20, "[98, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[98, 6, 6, 1]" + "'", str21, "[98, 6, 6, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[98, 7, 7, 1]" + "'", str22, "[98, 7, 7, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[98, 8, 8, 1]" + "'", str23, "[98, 8, 8, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[98, 9, 9, 1]" + "'", str24, "[98, 9, 9, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[99, 0, 0, 2]" + "'", str25, "[99, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[99, 1, 1, 2]" + "'", str26, "[99, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[99, 2, 2, 2]" + "'", str27, "[99, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[99, 3, 3, 2]" + "'", str28, "[99, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[99, 4, 4, 2]" + "'", str29, "[99, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[99, 5, 5, 2]" + "'", str30, "[99, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[99, 6, 6, 2]" + "'", str31, "[99, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[99, 7, 7, 2]" + "'", str32, "[99, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[99, 8, 8, 2]" + "'", str33, "[99, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[99, 9, 9, 2]" + "'", str34, "[99, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 0, 0, 3]" + "'", str35, "[100, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 1, 1, 3]" + "'", str36, "[100, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 2, 2, 3]" + "'", str37, "[100, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 3, 3, 3]" + "'", str38, "[100, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 4, 4, 3]" + "'", str39, "[100, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 5, 5, 3]" + "'", str40, "[100, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 6, 6, 3]" + "'", str41, "[100, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 7, 7, 3]" + "'", str42, "[100, 7, 7, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 8, 8, 3]" + "'", str43, "[100, 8, 8, 3]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 9, 9, 3]" + "'", str44, "[100, 9, 9, 3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[101, 0, 0, 4]" + "'", str45, "[101, 0, 0, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[101, 1, 1, 4]" + "'", str46, "[101, 1, 1, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[101, 2, 2, 4]" + "'", str47, "[101, 2, 2, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[101, 3, 3, 4]" + "'", str48, "[101, 3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[101, 4, 4, 4]" + "'", str49, "[101, 4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[101, 5, 5, 4]" + "'", str50, "[101, 5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[101, 6, 6, 4]" + "'", str51, "[101, 6, 6, 4]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[101, 7, 7, 4]" + "'", str52, "[101, 7, 7, 4]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[101, 8, 8, 4]" + "'", str53, "[101, 8, 8, 4]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[101, 9, 9, 4]" + "'", str54, "[101, 9, 9, 4]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[102, 0, 0, 5]" + "'", str55, "[102, 0, 0, 5]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[102, 1, 1, 5]" + "'", str56, "[102, 1, 1, 5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[102, 2, 2, 5]" + "'", str57, "[102, 2, 2, 5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[102, 3, 3, 5]" + "'", str58, "[102, 3, 3, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[102, 4, 4, 5]" + "'", str59, "[102, 4, 4, 5]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[102, 5, 5, 5]" + "'", str60, "[102, 5, 5, 5]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[102, 6, 6, 5]" + "'", str61, "[102, 6, 6, 5]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[102, 7, 7, 5]" + "'", str62, "[102, 7, 7, 5]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test2650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2650");
        int[] intArray4 = new int[] { (byte) -1, 10, (byte) 0, (short) 100 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass85 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[7, 0, 0, 108]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 11, 1, 100]" + "'", str5, "[-1, 11, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 12, 2, 100]" + "'", str6, "[-1, 12, 2, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 13, 3, 100]" + "'", str7, "[-1, 13, 3, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 14, 4, 100]" + "'", str8, "[-1, 14, 4, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 15, 5, 100]" + "'", str9, "[-1, 15, 5, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 16, 6, 100]" + "'", str10, "[-1, 16, 6, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 17, 7, 100]" + "'", str11, "[-1, 17, 7, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 18, 8, 100]" + "'", str12, "[-1, 18, 8, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 19, 9, 100]" + "'", str13, "[-1, 19, 9, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 0, 0, 101]" + "'", str14, "[0, 0, 0, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 1, 1, 101]" + "'", str15, "[0, 1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 2, 2, 101]" + "'", str16, "[0, 2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 3, 3, 101]" + "'", str17, "[0, 3, 3, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 4, 4, 101]" + "'", str18, "[0, 4, 4, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 5, 5, 101]" + "'", str19, "[0, 5, 5, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 6, 6, 101]" + "'", str20, "[0, 6, 6, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 7, 7, 101]" + "'", str21, "[0, 7, 7, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 8, 8, 101]" + "'", str22, "[0, 8, 8, 101]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 9, 9, 101]" + "'", str23, "[0, 9, 9, 101]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 0, 102]" + "'", str24, "[1, 0, 0, 102]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1, 1, 102]" + "'", str25, "[1, 1, 1, 102]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 2, 2, 102]" + "'", str26, "[1, 2, 2, 102]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 3, 3, 102]" + "'", str27, "[1, 3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 4, 4, 102]" + "'", str28, "[1, 4, 4, 102]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 5, 5, 102]" + "'", str29, "[1, 5, 5, 102]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 6, 6, 102]" + "'", str30, "[1, 6, 6, 102]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 7, 7, 102]" + "'", str31, "[1, 7, 7, 102]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 8, 8, 102]" + "'", str32, "[1, 8, 8, 102]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 9, 9, 102]" + "'", str33, "[1, 9, 9, 102]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 0, 0, 103]" + "'", str34, "[2, 0, 0, 103]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 1, 1, 103]" + "'", str35, "[2, 1, 1, 103]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[2, 2, 2, 103]" + "'", str36, "[2, 2, 2, 103]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[2, 3, 3, 103]" + "'", str37, "[2, 3, 3, 103]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[2, 4, 4, 103]" + "'", str38, "[2, 4, 4, 103]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[2, 5, 5, 103]" + "'", str39, "[2, 5, 5, 103]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[2, 6, 6, 103]" + "'", str40, "[2, 6, 6, 103]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[2, 7, 7, 103]" + "'", str41, "[2, 7, 7, 103]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[2, 8, 8, 103]" + "'", str42, "[2, 8, 8, 103]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2, 9, 9, 103]" + "'", str43, "[2, 9, 9, 103]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 0, 0, 104]" + "'", str44, "[3, 0, 0, 104]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 1, 1, 104]" + "'", str45, "[3, 1, 1, 104]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 2, 2, 104]" + "'", str46, "[3, 2, 2, 104]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[3, 3, 3, 104]" + "'", str47, "[3, 3, 3, 104]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[3, 4, 4, 104]" + "'", str48, "[3, 4, 4, 104]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[3, 5, 5, 104]" + "'", str49, "[3, 5, 5, 104]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[3, 6, 6, 104]" + "'", str50, "[3, 6, 6, 104]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[3, 7, 7, 104]" + "'", str51, "[3, 7, 7, 104]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[3, 8, 8, 104]" + "'", str52, "[3, 8, 8, 104]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[3, 9, 9, 104]" + "'", str53, "[3, 9, 9, 104]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[4, 0, 0, 105]" + "'", str54, "[4, 0, 0, 105]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[4, 1, 1, 105]" + "'", str55, "[4, 1, 1, 105]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4, 2, 2, 105]" + "'", str56, "[4, 2, 2, 105]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[4, 3, 3, 105]" + "'", str57, "[4, 3, 3, 105]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[4, 4, 4, 105]" + "'", str58, "[4, 4, 4, 105]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[4, 5, 5, 105]" + "'", str59, "[4, 5, 5, 105]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[4, 6, 6, 105]" + "'", str60, "[4, 6, 6, 105]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[4, 7, 7, 105]" + "'", str61, "[4, 7, 7, 105]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[4, 8, 8, 105]" + "'", str62, "[4, 8, 8, 105]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[4, 9, 9, 105]" + "'", str63, "[4, 9, 9, 105]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[5, 0, 0, 106]" + "'", str64, "[5, 0, 0, 106]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[5, 1, 1, 106]" + "'", str65, "[5, 1, 1, 106]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[5, 2, 2, 106]" + "'", str66, "[5, 2, 2, 106]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[5, 3, 3, 106]" + "'", str67, "[5, 3, 3, 106]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[5, 4, 4, 106]" + "'", str68, "[5, 4, 4, 106]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[5, 5, 5, 106]" + "'", str69, "[5, 5, 5, 106]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[5, 6, 6, 106]" + "'", str70, "[5, 6, 6, 106]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[5, 7, 7, 106]" + "'", str71, "[5, 7, 7, 106]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[5, 8, 8, 106]" + "'", str72, "[5, 8, 8, 106]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[5, 9, 9, 106]" + "'", str73, "[5, 9, 9, 106]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[6, 0, 0, 107]" + "'", str74, "[6, 0, 0, 107]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[6, 1, 1, 107]" + "'", str75, "[6, 1, 1, 107]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[6, 2, 2, 107]" + "'", str76, "[6, 2, 2, 107]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[6, 3, 3, 107]" + "'", str77, "[6, 3, 3, 107]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[6, 4, 4, 107]" + "'", str78, "[6, 4, 4, 107]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[6, 5, 5, 107]" + "'", str79, "[6, 5, 5, 107]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[6, 6, 6, 107]" + "'", str80, "[6, 6, 6, 107]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[6, 7, 7, 107]" + "'", str81, "[6, 7, 7, 107]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[6, 8, 8, 107]" + "'", str82, "[6, 8, 8, 107]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[6, 9, 9, 107]" + "'", str83, "[6, 9, 9, 107]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[7, 0, 0, 108]" + "'", str84, "[7, 0, 0, 108]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2651");
        int[] intArray6 = new int[] { (short) 100, (byte) 0, 10, (byte) 0, (byte) 1, (byte) 0 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass14 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 0, 17, 7, 1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 0, 11, 1, 1, 0]" + "'", str7, "[100, 0, 11, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 0, 12, 2, 1, 0]" + "'", str8, "[100, 0, 12, 2, 1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 0, 13, 3, 1, 0]" + "'", str9, "[100, 0, 13, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 0, 14, 4, 1, 0]" + "'", str10, "[100, 0, 14, 4, 1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 0, 15, 5, 1, 0]" + "'", str11, "[100, 0, 15, 5, 1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 0, 16, 6, 1, 0]" + "'", str12, "[100, 0, 16, 6, 1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 0, 17, 7, 1, 0]" + "'", str13, "[100, 0, 17, 7, 1, 0]");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2652");
        int[] intArray4 = new int[] { 'a', 10, 100, (short) 10 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass89 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, 94, 184, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 11, 101, 10]" + "'", str5, "[97, 11, 101, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 12, 102, 10]" + "'", str6, "[97, 12, 102, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 13, 103, 10]" + "'", str7, "[97, 13, 103, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 14, 104, 10]" + "'", str8, "[97, 14, 104, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 15, 105, 10]" + "'", str9, "[97, 15, 105, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 16, 106, 10]" + "'", str10, "[97, 16, 106, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 17, 107, 10]" + "'", str11, "[97, 17, 107, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 18, 108, 10]" + "'", str12, "[97, 18, 108, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 19, 109, 10]" + "'", str13, "[97, 19, 109, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 20, 110, 10]" + "'", str14, "[97, 20, 110, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[97, 21, 111, 10]" + "'", str15, "[97, 21, 111, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[97, 22, 112, 10]" + "'", str16, "[97, 22, 112, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[97, 23, 113, 10]" + "'", str17, "[97, 23, 113, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[97, 24, 114, 10]" + "'", str18, "[97, 24, 114, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[97, 25, 115, 10]" + "'", str19, "[97, 25, 115, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[97, 26, 116, 10]" + "'", str20, "[97, 26, 116, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[97, 27, 117, 10]" + "'", str21, "[97, 27, 117, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[97, 28, 118, 10]" + "'", str22, "[97, 28, 118, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[97, 29, 119, 10]" + "'", str23, "[97, 29, 119, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[97, 30, 120, 10]" + "'", str24, "[97, 30, 120, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[97, 31, 121, 10]" + "'", str25, "[97, 31, 121, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[97, 32, 122, 10]" + "'", str26, "[97, 32, 122, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[97, 33, 123, 10]" + "'", str27, "[97, 33, 123, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[97, 34, 124, 10]" + "'", str28, "[97, 34, 124, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[97, 35, 125, 10]" + "'", str29, "[97, 35, 125, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[97, 36, 126, 10]" + "'", str30, "[97, 36, 126, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[97, 37, 127, 10]" + "'", str31, "[97, 37, 127, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[97, 38, 128, 10]" + "'", str32, "[97, 38, 128, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[97, 39, 129, 10]" + "'", str33, "[97, 39, 129, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[97, 40, 130, 10]" + "'", str34, "[97, 40, 130, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[97, 41, 131, 10]" + "'", str35, "[97, 41, 131, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[97, 42, 132, 10]" + "'", str36, "[97, 42, 132, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[97, 43, 133, 10]" + "'", str37, "[97, 43, 133, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[97, 44, 134, 10]" + "'", str38, "[97, 44, 134, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[97, 45, 135, 10]" + "'", str39, "[97, 45, 135, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[97, 46, 136, 10]" + "'", str40, "[97, 46, 136, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[97, 47, 137, 10]" + "'", str41, "[97, 47, 137, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[97, 48, 138, 10]" + "'", str42, "[97, 48, 138, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[97, 49, 139, 10]" + "'", str43, "[97, 49, 139, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[97, 50, 140, 10]" + "'", str44, "[97, 50, 140, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[97, 51, 141, 10]" + "'", str45, "[97, 51, 141, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[97, 52, 142, 10]" + "'", str46, "[97, 52, 142, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[97, 53, 143, 10]" + "'", str47, "[97, 53, 143, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[97, 54, 144, 10]" + "'", str48, "[97, 54, 144, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[97, 55, 145, 10]" + "'", str49, "[97, 55, 145, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[97, 56, 146, 10]" + "'", str50, "[97, 56, 146, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[97, 57, 147, 10]" + "'", str51, "[97, 57, 147, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[97, 58, 148, 10]" + "'", str52, "[97, 58, 148, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[97, 59, 149, 10]" + "'", str53, "[97, 59, 149, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[97, 60, 150, 10]" + "'", str54, "[97, 60, 150, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[97, 61, 151, 10]" + "'", str55, "[97, 61, 151, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[97, 62, 152, 10]" + "'", str56, "[97, 62, 152, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[97, 63, 153, 10]" + "'", str57, "[97, 63, 153, 10]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[97, 64, 154, 10]" + "'", str58, "[97, 64, 154, 10]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[97, 65, 155, 10]" + "'", str59, "[97, 65, 155, 10]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[97, 66, 156, 10]" + "'", str60, "[97, 66, 156, 10]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[97, 67, 157, 10]" + "'", str61, "[97, 67, 157, 10]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[97, 68, 158, 10]" + "'", str62, "[97, 68, 158, 10]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[97, 69, 159, 10]" + "'", str63, "[97, 69, 159, 10]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[97, 70, 160, 10]" + "'", str64, "[97, 70, 160, 10]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[97, 71, 161, 10]" + "'", str65, "[97, 71, 161, 10]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[97, 72, 162, 10]" + "'", str66, "[97, 72, 162, 10]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[97, 73, 163, 10]" + "'", str67, "[97, 73, 163, 10]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[97, 74, 164, 10]" + "'", str68, "[97, 74, 164, 10]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[97, 75, 165, 10]" + "'", str69, "[97, 75, 165, 10]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[97, 76, 166, 10]" + "'", str70, "[97, 76, 166, 10]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[97, 77, 167, 10]" + "'", str71, "[97, 77, 167, 10]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[97, 78, 168, 10]" + "'", str72, "[97, 78, 168, 10]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[97, 79, 169, 10]" + "'", str73, "[97, 79, 169, 10]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[97, 80, 170, 10]" + "'", str74, "[97, 80, 170, 10]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[97, 81, 171, 10]" + "'", str75, "[97, 81, 171, 10]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[97, 82, 172, 10]" + "'", str76, "[97, 82, 172, 10]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[97, 83, 173, 10]" + "'", str77, "[97, 83, 173, 10]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[97, 84, 174, 10]" + "'", str78, "[97, 84, 174, 10]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[97, 85, 175, 10]" + "'", str79, "[97, 85, 175, 10]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[97, 86, 176, 10]" + "'", str80, "[97, 86, 176, 10]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[97, 87, 177, 10]" + "'", str81, "[97, 87, 177, 10]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[97, 88, 178, 10]" + "'", str82, "[97, 88, 178, 10]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[97, 89, 179, 10]" + "'", str83, "[97, 89, 179, 10]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[97, 90, 180, 10]" + "'", str84, "[97, 90, 180, 10]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[97, 91, 181, 10]" + "'", str85, "[97, 91, 181, 10]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[97, 92, 182, 10]" + "'", str86, "[97, 92, 182, 10]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[97, 93, 183, 10]" + "'", str87, "[97, 93, 183, 10]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[97, 94, 184, 10]" + "'", str88, "[97, 94, 184, 10]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2653");
        int[] intArray5 = new int[] { 1, (byte) 0, (short) 100, 0, (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass31 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 125, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 0, 1]" + "'", str6, "[1, 0, 101, 0, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 0, 1]" + "'", str7, "[1, 0, 102, 0, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 0, 1]" + "'", str8, "[1, 0, 103, 0, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 0, 1]" + "'", str9, "[1, 0, 104, 0, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 0, 1]" + "'", str10, "[1, 0, 105, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 0, 1]" + "'", str11, "[1, 0, 106, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 0, 1]" + "'", str12, "[1, 0, 107, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 108, 0, 1]" + "'", str13, "[1, 0, 108, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 109, 0, 1]" + "'", str14, "[1, 0, 109, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 110, 0, 1]" + "'", str15, "[1, 0, 110, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 111, 0, 1]" + "'", str16, "[1, 0, 111, 0, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 0, 112, 0, 1]" + "'", str17, "[1, 0, 112, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 0, 113, 0, 1]" + "'", str18, "[1, 0, 113, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 0, 114, 0, 1]" + "'", str19, "[1, 0, 114, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 0, 115, 0, 1]" + "'", str20, "[1, 0, 115, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 116, 0, 1]" + "'", str21, "[1, 0, 116, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 117, 0, 1]" + "'", str22, "[1, 0, 117, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 118, 0, 1]" + "'", str23, "[1, 0, 118, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 119, 0, 1]" + "'", str24, "[1, 0, 119, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 0, 120, 0, 1]" + "'", str25, "[1, 0, 120, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 0, 121, 0, 1]" + "'", str26, "[1, 0, 121, 0, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 0, 122, 0, 1]" + "'", str27, "[1, 0, 122, 0, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 0, 123, 0, 1]" + "'", str28, "[1, 0, 123, 0, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 0, 124, 0, 1]" + "'", str29, "[1, 0, 124, 0, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 0, 125, 0, 1]" + "'", str30, "[1, 0, 125, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test2654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2654");
        int[] intArray2 = new int[] { '4', 'a' };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass42 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[91, 136]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[53, 98]" + "'", str3, "[53, 98]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[54, 99]" + "'", str4, "[54, 99]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[55, 100]" + "'", str5, "[55, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[56, 101]" + "'", str6, "[56, 101]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[57, 102]" + "'", str7, "[57, 102]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[58, 103]" + "'", str8, "[58, 103]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[59, 104]" + "'", str9, "[59, 104]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[60, 105]" + "'", str10, "[60, 105]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[61, 106]" + "'", str11, "[61, 106]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[62, 107]" + "'", str12, "[62, 107]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[63, 108]" + "'", str13, "[63, 108]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[64, 109]" + "'", str14, "[64, 109]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[65, 110]" + "'", str15, "[65, 110]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[66, 111]" + "'", str16, "[66, 111]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[67, 112]" + "'", str17, "[67, 112]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[68, 113]" + "'", str18, "[68, 113]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[69, 114]" + "'", str19, "[69, 114]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[70, 115]" + "'", str20, "[70, 115]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[71, 116]" + "'", str21, "[71, 116]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[72, 117]" + "'", str22, "[72, 117]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[73, 118]" + "'", str23, "[73, 118]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[74, 119]" + "'", str24, "[74, 119]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[75, 120]" + "'", str25, "[75, 120]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[76, 121]" + "'", str26, "[76, 121]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[77, 122]" + "'", str27, "[77, 122]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[78, 123]" + "'", str28, "[78, 123]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[79, 124]" + "'", str29, "[79, 124]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[80, 125]" + "'", str30, "[80, 125]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[81, 126]" + "'", str31, "[81, 126]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[82, 127]" + "'", str32, "[82, 127]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[83, 128]" + "'", str33, "[83, 128]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[84, 129]" + "'", str34, "[84, 129]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[85, 130]" + "'", str35, "[85, 130]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[86, 131]" + "'", str36, "[86, 131]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[87, 132]" + "'", str37, "[87, 132]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[88, 133]" + "'", str38, "[88, 133]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[89, 134]" + "'", str39, "[89, 134]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[90, 135]" + "'", str40, "[90, 135]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[91, 136]" + "'", str41, "[91, 136]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test2655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2655");
        int[] intArray4 = new int[] { (short) 100, 'a', 100, '4' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass54 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 146, 149, 52]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 98, 101, 52]" + "'", str5, "[100, 98, 101, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 99, 102, 52]" + "'", str6, "[100, 99, 102, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 100, 103, 52]" + "'", str7, "[100, 100, 103, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 101, 104, 52]" + "'", str8, "[100, 101, 104, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 102, 105, 52]" + "'", str9, "[100, 102, 105, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 103, 106, 52]" + "'", str10, "[100, 103, 106, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 104, 107, 52]" + "'", str11, "[100, 104, 107, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 105, 108, 52]" + "'", str12, "[100, 105, 108, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 106, 109, 52]" + "'", str13, "[100, 106, 109, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 107, 110, 52]" + "'", str14, "[100, 107, 110, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 108, 111, 52]" + "'", str15, "[100, 108, 111, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 109, 112, 52]" + "'", str16, "[100, 109, 112, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 110, 113, 52]" + "'", str17, "[100, 110, 113, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 111, 114, 52]" + "'", str18, "[100, 111, 114, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 112, 115, 52]" + "'", str19, "[100, 112, 115, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 113, 116, 52]" + "'", str20, "[100, 113, 116, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 114, 117, 52]" + "'", str21, "[100, 114, 117, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 115, 118, 52]" + "'", str22, "[100, 115, 118, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 116, 119, 52]" + "'", str23, "[100, 116, 119, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 117, 120, 52]" + "'", str24, "[100, 117, 120, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 118, 121, 52]" + "'", str25, "[100, 118, 121, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 119, 122, 52]" + "'", str26, "[100, 119, 122, 52]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 120, 123, 52]" + "'", str27, "[100, 120, 123, 52]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 121, 124, 52]" + "'", str28, "[100, 121, 124, 52]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 122, 125, 52]" + "'", str29, "[100, 122, 125, 52]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 123, 126, 52]" + "'", str30, "[100, 123, 126, 52]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 124, 127, 52]" + "'", str31, "[100, 124, 127, 52]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 125, 128, 52]" + "'", str32, "[100, 125, 128, 52]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 126, 129, 52]" + "'", str33, "[100, 126, 129, 52]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 127, 130, 52]" + "'", str34, "[100, 127, 130, 52]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 128, 131, 52]" + "'", str35, "[100, 128, 131, 52]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 129, 132, 52]" + "'", str36, "[100, 129, 132, 52]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 130, 133, 52]" + "'", str37, "[100, 130, 133, 52]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 131, 134, 52]" + "'", str38, "[100, 131, 134, 52]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 132, 135, 52]" + "'", str39, "[100, 132, 135, 52]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 133, 136, 52]" + "'", str40, "[100, 133, 136, 52]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 134, 137, 52]" + "'", str41, "[100, 134, 137, 52]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 135, 138, 52]" + "'", str42, "[100, 135, 138, 52]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 136, 139, 52]" + "'", str43, "[100, 136, 139, 52]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 137, 140, 52]" + "'", str44, "[100, 137, 140, 52]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 138, 141, 52]" + "'", str45, "[100, 138, 141, 52]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 139, 142, 52]" + "'", str46, "[100, 139, 142, 52]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 140, 143, 52]" + "'", str47, "[100, 140, 143, 52]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 141, 144, 52]" + "'", str48, "[100, 141, 144, 52]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 142, 145, 52]" + "'", str49, "[100, 142, 145, 52]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 143, 146, 52]" + "'", str50, "[100, 143, 146, 52]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 144, 147, 52]" + "'", str51, "[100, 144, 147, 52]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 145, 148, 52]" + "'", str52, "[100, 145, 148, 52]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 146, 149, 52]" + "'", str53, "[100, 146, 149, 52]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test2656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2656");
        int[] intArray3 = new int[] { ' ', (-1), 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass84 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[39, 9, 8]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 0, 1]" + "'", str4, "[32, 0, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 1, 1]" + "'", str5, "[32, 1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 2, 1]" + "'", str6, "[32, 2, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 3, 1]" + "'", str7, "[32, 3, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 4, 1]" + "'", str8, "[32, 4, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 5, 1]" + "'", str9, "[32, 5, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 6, 1]" + "'", str10, "[32, 6, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 7, 1]" + "'", str11, "[32, 7, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 8, 1]" + "'", str12, "[32, 8, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 9, 1]" + "'", str13, "[32, 9, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[33, 0, 2]" + "'", str14, "[33, 0, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[33, 1, 2]" + "'", str15, "[33, 1, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[33, 2, 2]" + "'", str16, "[33, 2, 2]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[33, 3, 2]" + "'", str17, "[33, 3, 2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[33, 4, 2]" + "'", str18, "[33, 4, 2]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[33, 5, 2]" + "'", str19, "[33, 5, 2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[33, 6, 2]" + "'", str20, "[33, 6, 2]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[33, 7, 2]" + "'", str21, "[33, 7, 2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[33, 8, 2]" + "'", str22, "[33, 8, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[33, 9, 2]" + "'", str23, "[33, 9, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[34, 0, 3]" + "'", str24, "[34, 0, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34, 1, 3]" + "'", str25, "[34, 1, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 2, 3]" + "'", str26, "[34, 2, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[34, 3, 3]" + "'", str27, "[34, 3, 3]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[34, 4, 3]" + "'", str28, "[34, 4, 3]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[34, 5, 3]" + "'", str29, "[34, 5, 3]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[34, 6, 3]" + "'", str30, "[34, 6, 3]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[34, 7, 3]" + "'", str31, "[34, 7, 3]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[34, 8, 3]" + "'", str32, "[34, 8, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[34, 9, 3]" + "'", str33, "[34, 9, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 0, 4]" + "'", str34, "[35, 0, 4]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 1, 4]" + "'", str35, "[35, 1, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 2, 4]" + "'", str36, "[35, 2, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 3, 4]" + "'", str37, "[35, 3, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 4, 4]" + "'", str38, "[35, 4, 4]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 5, 4]" + "'", str39, "[35, 5, 4]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 6, 4]" + "'", str40, "[35, 6, 4]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 7, 4]" + "'", str41, "[35, 7, 4]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 8, 4]" + "'", str42, "[35, 8, 4]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 9, 4]" + "'", str43, "[35, 9, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[36, 0, 5]" + "'", str44, "[36, 0, 5]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[36, 1, 5]" + "'", str45, "[36, 1, 5]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[36, 2, 5]" + "'", str46, "[36, 2, 5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[36, 3, 5]" + "'", str47, "[36, 3, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[36, 4, 5]" + "'", str48, "[36, 4, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[36, 5, 5]" + "'", str49, "[36, 5, 5]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[36, 6, 5]" + "'", str50, "[36, 6, 5]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[36, 7, 5]" + "'", str51, "[36, 7, 5]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[36, 8, 5]" + "'", str52, "[36, 8, 5]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[36, 9, 5]" + "'", str53, "[36, 9, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[37, 0, 6]" + "'", str54, "[37, 0, 6]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[37, 1, 6]" + "'", str55, "[37, 1, 6]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[37, 2, 6]" + "'", str56, "[37, 2, 6]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[37, 3, 6]" + "'", str57, "[37, 3, 6]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[37, 4, 6]" + "'", str58, "[37, 4, 6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[37, 5, 6]" + "'", str59, "[37, 5, 6]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[37, 6, 6]" + "'", str60, "[37, 6, 6]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[37, 7, 6]" + "'", str61, "[37, 7, 6]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[37, 8, 6]" + "'", str62, "[37, 8, 6]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[37, 9, 6]" + "'", str63, "[37, 9, 6]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[38, 0, 7]" + "'", str64, "[38, 0, 7]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[38, 1, 7]" + "'", str65, "[38, 1, 7]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[38, 2, 7]" + "'", str66, "[38, 2, 7]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[38, 3, 7]" + "'", str67, "[38, 3, 7]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[38, 4, 7]" + "'", str68, "[38, 4, 7]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[38, 5, 7]" + "'", str69, "[38, 5, 7]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[38, 6, 7]" + "'", str70, "[38, 6, 7]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[38, 7, 7]" + "'", str71, "[38, 7, 7]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[38, 8, 7]" + "'", str72, "[38, 8, 7]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[38, 9, 7]" + "'", str73, "[38, 9, 7]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[39, 0, 8]" + "'", str74, "[39, 0, 8]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[39, 1, 8]" + "'", str75, "[39, 1, 8]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[39, 2, 8]" + "'", str76, "[39, 2, 8]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[39, 3, 8]" + "'", str77, "[39, 3, 8]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[39, 4, 8]" + "'", str78, "[39, 4, 8]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[39, 5, 8]" + "'", str79, "[39, 5, 8]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[39, 6, 8]" + "'", str80, "[39, 6, 8]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[39, 7, 8]" + "'", str81, "[39, 7, 8]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[39, 8, 8]" + "'", str82, "[39, 8, 8]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[39, 9, 8]" + "'", str83, "[39, 9, 8]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test2657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2657");
        int[] intArray6 = new int[] { (short) 1, 1, ' ', ' ', 10, (-1) };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str90 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str91 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str92 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str93 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str94 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str95 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str96 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str97 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str98 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str99 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 1, 125, 125, 10, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1, 33, 33, 10, -1]" + "'", str7, "[1, 1, 33, 33, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1, 34, 34, 10, -1]" + "'", str8, "[1, 1, 34, 34, 10, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1, 35, 35, 10, -1]" + "'", str9, "[1, 1, 35, 35, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1, 36, 36, 10, -1]" + "'", str10, "[1, 1, 36, 36, 10, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1, 37, 37, 10, -1]" + "'", str11, "[1, 1, 37, 37, 10, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1, 38, 38, 10, -1]" + "'", str12, "[1, 1, 38, 38, 10, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 39, 39, 10, -1]" + "'", str13, "[1, 1, 39, 39, 10, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1, 40, 40, 10, -1]" + "'", str14, "[1, 1, 40, 40, 10, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 1, 41, 41, 10, -1]" + "'", str15, "[1, 1, 41, 41, 10, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 42, 42, 10, -1]" + "'", str16, "[1, 1, 42, 42, 10, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 1, 43, 43, 10, -1]" + "'", str17, "[1, 1, 43, 43, 10, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 1, 44, 44, 10, -1]" + "'", str18, "[1, 1, 44, 44, 10, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 1, 45, 45, 10, -1]" + "'", str19, "[1, 1, 45, 45, 10, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1, 46, 46, 10, -1]" + "'", str20, "[1, 1, 46, 46, 10, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1, 47, 47, 10, -1]" + "'", str21, "[1, 1, 47, 47, 10, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1, 48, 48, 10, -1]" + "'", str22, "[1, 1, 48, 48, 10, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 49, 49, 10, -1]" + "'", str23, "[1, 1, 49, 49, 10, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1, 50, 50, 10, -1]" + "'", str24, "[1, 1, 50, 50, 10, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1, 51, 51, 10, -1]" + "'", str25, "[1, 1, 51, 51, 10, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 1, 52, 52, 10, -1]" + "'", str26, "[1, 1, 52, 52, 10, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 1, 53, 53, 10, -1]" + "'", str27, "[1, 1, 53, 53, 10, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 1, 54, 54, 10, -1]" + "'", str28, "[1, 1, 54, 54, 10, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 1, 55, 55, 10, -1]" + "'", str29, "[1, 1, 55, 55, 10, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 1, 56, 56, 10, -1]" + "'", str30, "[1, 1, 56, 56, 10, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 1, 57, 57, 10, -1]" + "'", str31, "[1, 1, 57, 57, 10, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1, 58, 58, 10, -1]" + "'", str32, "[1, 1, 58, 58, 10, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 1, 59, 59, 10, -1]" + "'", str33, "[1, 1, 59, 59, 10, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1, 60, 60, 10, -1]" + "'", str34, "[1, 1, 60, 60, 10, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 1, 61, 61, 10, -1]" + "'", str35, "[1, 1, 61, 61, 10, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 1, 62, 62, 10, -1]" + "'", str36, "[1, 1, 62, 62, 10, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 1, 63, 63, 10, -1]" + "'", str37, "[1, 1, 63, 63, 10, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 1, 64, 64, 10, -1]" + "'", str38, "[1, 1, 64, 64, 10, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 1, 65, 65, 10, -1]" + "'", str39, "[1, 1, 65, 65, 10, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 1, 66, 66, 10, -1]" + "'", str40, "[1, 1, 66, 66, 10, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 1, 67, 67, 10, -1]" + "'", str41, "[1, 1, 67, 67, 10, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1, 68, 68, 10, -1]" + "'", str42, "[1, 1, 68, 68, 10, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 1, 69, 69, 10, -1]" + "'", str43, "[1, 1, 69, 69, 10, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1, 70, 70, 10, -1]" + "'", str44, "[1, 1, 70, 70, 10, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 1, 71, 71, 10, -1]" + "'", str45, "[1, 1, 71, 71, 10, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 1, 72, 72, 10, -1]" + "'", str46, "[1, 1, 72, 72, 10, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 1, 73, 73, 10, -1]" + "'", str47, "[1, 1, 73, 73, 10, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 1, 74, 74, 10, -1]" + "'", str48, "[1, 1, 74, 74, 10, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 1, 75, 75, 10, -1]" + "'", str49, "[1, 1, 75, 75, 10, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 1, 76, 76, 10, -1]" + "'", str50, "[1, 1, 76, 76, 10, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 1, 77, 77, 10, -1]" + "'", str51, "[1, 1, 77, 77, 10, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1, 78, 78, 10, -1]" + "'", str52, "[1, 1, 78, 78, 10, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 1, 79, 79, 10, -1]" + "'", str53, "[1, 1, 79, 79, 10, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 1, 80, 80, 10, -1]" + "'", str54, "[1, 1, 80, 80, 10, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 1, 81, 81, 10, -1]" + "'", str55, "[1, 1, 81, 81, 10, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 1, 82, 82, 10, -1]" + "'", str56, "[1, 1, 82, 82, 10, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 1, 83, 83, 10, -1]" + "'", str57, "[1, 1, 83, 83, 10, -1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 1, 84, 84, 10, -1]" + "'", str58, "[1, 1, 84, 84, 10, -1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 1, 85, 85, 10, -1]" + "'", str59, "[1, 1, 85, 85, 10, -1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 1, 86, 86, 10, -1]" + "'", str60, "[1, 1, 86, 86, 10, -1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 1, 87, 87, 10, -1]" + "'", str61, "[1, 1, 87, 87, 10, -1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 1, 88, 88, 10, -1]" + "'", str62, "[1, 1, 88, 88, 10, -1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 1, 89, 89, 10, -1]" + "'", str63, "[1, 1, 89, 89, 10, -1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 1, 90, 90, 10, -1]" + "'", str64, "[1, 1, 90, 90, 10, -1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 1, 91, 91, 10, -1]" + "'", str65, "[1, 1, 91, 91, 10, -1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 1, 92, 92, 10, -1]" + "'", str66, "[1, 1, 92, 92, 10, -1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 1, 93, 93, 10, -1]" + "'", str67, "[1, 1, 93, 93, 10, -1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 1, 94, 94, 10, -1]" + "'", str68, "[1, 1, 94, 94, 10, -1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 1, 95, 95, 10, -1]" + "'", str69, "[1, 1, 95, 95, 10, -1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 1, 96, 96, 10, -1]" + "'", str70, "[1, 1, 96, 96, 10, -1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 1, 97, 97, 10, -1]" + "'", str71, "[1, 1, 97, 97, 10, -1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 1, 98, 98, 10, -1]" + "'", str72, "[1, 1, 98, 98, 10, -1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 1, 99, 99, 10, -1]" + "'", str73, "[1, 1, 99, 99, 10, -1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 1, 100, 100, 10, -1]" + "'", str74, "[1, 1, 100, 100, 10, -1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[1, 1, 101, 101, 10, -1]" + "'", str75, "[1, 1, 101, 101, 10, -1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[1, 1, 102, 102, 10, -1]" + "'", str76, "[1, 1, 102, 102, 10, -1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[1, 1, 103, 103, 10, -1]" + "'", str77, "[1, 1, 103, 103, 10, -1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[1, 1, 104, 104, 10, -1]" + "'", str78, "[1, 1, 104, 104, 10, -1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[1, 1, 105, 105, 10, -1]" + "'", str79, "[1, 1, 105, 105, 10, -1]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[1, 1, 106, 106, 10, -1]" + "'", str80, "[1, 1, 106, 106, 10, -1]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[1, 1, 107, 107, 10, -1]" + "'", str81, "[1, 1, 107, 107, 10, -1]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[1, 1, 108, 108, 10, -1]" + "'", str82, "[1, 1, 108, 108, 10, -1]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[1, 1, 109, 109, 10, -1]" + "'", str83, "[1, 1, 109, 109, 10, -1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[1, 1, 110, 110, 10, -1]" + "'", str84, "[1, 1, 110, 110, 10, -1]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[1, 1, 111, 111, 10, -1]" + "'", str85, "[1, 1, 111, 111, 10, -1]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[1, 1, 112, 112, 10, -1]" + "'", str86, "[1, 1, 112, 112, 10, -1]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[1, 1, 113, 113, 10, -1]" + "'", str87, "[1, 1, 113, 113, 10, -1]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[1, 1, 114, 114, 10, -1]" + "'", str88, "[1, 1, 114, 114, 10, -1]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[1, 1, 115, 115, 10, -1]" + "'", str89, "[1, 1, 115, 115, 10, -1]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[1, 1, 116, 116, 10, -1]" + "'", str90, "[1, 1, 116, 116, 10, -1]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[1, 1, 117, 117, 10, -1]" + "'", str91, "[1, 1, 117, 117, 10, -1]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[1, 1, 118, 118, 10, -1]" + "'", str92, "[1, 1, 118, 118, 10, -1]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[1, 1, 119, 119, 10, -1]" + "'", str93, "[1, 1, 119, 119, 10, -1]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "[1, 1, 120, 120, 10, -1]" + "'", str94, "[1, 1, 120, 120, 10, -1]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "[1, 1, 121, 121, 10, -1]" + "'", str95, "[1, 1, 121, 121, 10, -1]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "[1, 1, 122, 122, 10, -1]" + "'", str96, "[1, 1, 122, 122, 10, -1]");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "[1, 1, 123, 123, 10, -1]" + "'", str97, "[1, 1, 123, 123, 10, -1]");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "[1, 1, 124, 124, 10, -1]" + "'", str98, "[1, 1, 124, 124, 10, -1]");
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "[1, 1, 125, 125, 10, -1]" + "'", str99, "[1, 1, 125, 125, 10, -1]");
    }

    @Test
    public void test2658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2658");
        int[] intArray5 = new int[] { 'a', 0, (byte) 100, (-1), (byte) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass10 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[97, 0, 104, -1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 0, 101, -1, 1]" + "'", str6, "[97, 0, 101, -1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 0, 102, -1, 1]" + "'", str7, "[97, 0, 102, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 0, 103, -1, 1]" + "'", str8, "[97, 0, 103, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 0, 104, -1, 1]" + "'", str9, "[97, 0, 104, -1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test2659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2659");
        int[] intArray6 = new int[] { 100, (byte) 10, 'a', 'a', (byte) 100, ' ' };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass14 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 10, 104, 104, 100, 32]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 10, 98, 98, 100, 32]" + "'", str7, "[100, 10, 98, 98, 100, 32]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 10, 99, 99, 100, 32]" + "'", str8, "[100, 10, 99, 99, 100, 32]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 10, 100, 100, 100, 32]" + "'", str9, "[100, 10, 100, 100, 100, 32]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 10, 101, 101, 100, 32]" + "'", str10, "[100, 10, 101, 101, 100, 32]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 10, 102, 102, 100, 32]" + "'", str11, "[100, 10, 102, 102, 100, 32]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 10, 103, 103, 100, 32]" + "'", str12, "[100, 10, 103, 103, 100, 32]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 10, 104, 104, 100, 32]" + "'", str13, "[100, 10, 104, 104, 100, 32]");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2660");
        int[] intArray4 = new int[] { 'a', (short) 1, (byte) -1, (short) 0 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass64 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[102, 8, 8, 5]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 2, 0, 0]" + "'", str5, "[97, 2, 0, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 3, 1, 0]" + "'", str6, "[97, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 4, 2, 0]" + "'", str7, "[97, 4, 2, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 5, 3, 0]" + "'", str8, "[97, 5, 3, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 6, 4, 0]" + "'", str9, "[97, 6, 4, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 7, 5, 0]" + "'", str10, "[97, 7, 5, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 8, 6, 0]" + "'", str11, "[97, 8, 6, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 9, 7, 0]" + "'", str12, "[97, 9, 7, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 10, 8, 0]" + "'", str13, "[97, 10, 8, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 11, 9, 0]" + "'", str14, "[97, 11, 9, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[98, 0, 0, 1]" + "'", str15, "[98, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[98, 1, 1, 1]" + "'", str16, "[98, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[98, 2, 2, 1]" + "'", str17, "[98, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[98, 3, 3, 1]" + "'", str18, "[98, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[98, 4, 4, 1]" + "'", str19, "[98, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[98, 5, 5, 1]" + "'", str20, "[98, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[98, 6, 6, 1]" + "'", str21, "[98, 6, 6, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[98, 7, 7, 1]" + "'", str22, "[98, 7, 7, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[98, 8, 8, 1]" + "'", str23, "[98, 8, 8, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[98, 9, 9, 1]" + "'", str24, "[98, 9, 9, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[99, 0, 0, 2]" + "'", str25, "[99, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[99, 1, 1, 2]" + "'", str26, "[99, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[99, 2, 2, 2]" + "'", str27, "[99, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[99, 3, 3, 2]" + "'", str28, "[99, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[99, 4, 4, 2]" + "'", str29, "[99, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[99, 5, 5, 2]" + "'", str30, "[99, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[99, 6, 6, 2]" + "'", str31, "[99, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[99, 7, 7, 2]" + "'", str32, "[99, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[99, 8, 8, 2]" + "'", str33, "[99, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[99, 9, 9, 2]" + "'", str34, "[99, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 0, 0, 3]" + "'", str35, "[100, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 1, 1, 3]" + "'", str36, "[100, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 2, 2, 3]" + "'", str37, "[100, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 3, 3, 3]" + "'", str38, "[100, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 4, 4, 3]" + "'", str39, "[100, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 5, 5, 3]" + "'", str40, "[100, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 6, 6, 3]" + "'", str41, "[100, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 7, 7, 3]" + "'", str42, "[100, 7, 7, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 8, 8, 3]" + "'", str43, "[100, 8, 8, 3]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 9, 9, 3]" + "'", str44, "[100, 9, 9, 3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[101, 0, 0, 4]" + "'", str45, "[101, 0, 0, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[101, 1, 1, 4]" + "'", str46, "[101, 1, 1, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[101, 2, 2, 4]" + "'", str47, "[101, 2, 2, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[101, 3, 3, 4]" + "'", str48, "[101, 3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[101, 4, 4, 4]" + "'", str49, "[101, 4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[101, 5, 5, 4]" + "'", str50, "[101, 5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[101, 6, 6, 4]" + "'", str51, "[101, 6, 6, 4]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[101, 7, 7, 4]" + "'", str52, "[101, 7, 7, 4]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[101, 8, 8, 4]" + "'", str53, "[101, 8, 8, 4]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[101, 9, 9, 4]" + "'", str54, "[101, 9, 9, 4]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[102, 0, 0, 5]" + "'", str55, "[102, 0, 0, 5]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[102, 1, 1, 5]" + "'", str56, "[102, 1, 1, 5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[102, 2, 2, 5]" + "'", str57, "[102, 2, 2, 5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[102, 3, 3, 5]" + "'", str58, "[102, 3, 3, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[102, 4, 4, 5]" + "'", str59, "[102, 4, 4, 5]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[102, 5, 5, 5]" + "'", str60, "[102, 5, 5, 5]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[102, 6, 6, 5]" + "'", str61, "[102, 6, 6, 5]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[102, 7, 7, 5]" + "'", str62, "[102, 7, 7, 5]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[102, 8, 8, 5]" + "'", str63, "[102, 8, 8, 5]");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test2661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2661");
        int[] intArray1 = new int[] { 10 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass70 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[78]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[11]" + "'", str2, "[11]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[12]" + "'", str3, "[12]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[13]" + "'", str4, "[13]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[14]" + "'", str5, "[14]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[15]" + "'", str6, "[15]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[16]" + "'", str7, "[16]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[17]" + "'", str8, "[17]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[18]" + "'", str9, "[18]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[19]" + "'", str10, "[19]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[20]" + "'", str11, "[20]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[21]" + "'", str12, "[21]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[22]" + "'", str13, "[22]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[23]" + "'", str14, "[23]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[24]" + "'", str15, "[24]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[25]" + "'", str16, "[25]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[26]" + "'", str17, "[26]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[27]" + "'", str18, "[27]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[28]" + "'", str19, "[28]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[29]" + "'", str20, "[29]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[30]" + "'", str21, "[30]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[31]" + "'", str22, "[31]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32]" + "'", str23, "[32]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[33]" + "'", str24, "[33]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34]" + "'", str25, "[34]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35]" + "'", str26, "[35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[36]" + "'", str27, "[36]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[37]" + "'", str28, "[37]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[38]" + "'", str29, "[38]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[39]" + "'", str30, "[39]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[40]" + "'", str31, "[40]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[41]" + "'", str32, "[41]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[42]" + "'", str33, "[42]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[43]" + "'", str34, "[43]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[44]" + "'", str35, "[44]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[45]" + "'", str36, "[45]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[46]" + "'", str37, "[46]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[47]" + "'", str38, "[47]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[48]" + "'", str39, "[48]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[49]" + "'", str40, "[49]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[50]" + "'", str41, "[50]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[51]" + "'", str42, "[51]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[52]" + "'", str43, "[52]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[53]" + "'", str44, "[53]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[54]" + "'", str45, "[54]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[55]" + "'", str46, "[55]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[56]" + "'", str47, "[56]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[57]" + "'", str48, "[57]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[58]" + "'", str49, "[58]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[59]" + "'", str50, "[59]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[60]" + "'", str51, "[60]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[61]" + "'", str52, "[61]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[62]" + "'", str53, "[62]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[63]" + "'", str54, "[63]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[64]" + "'", str55, "[64]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[65]" + "'", str56, "[65]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[66]" + "'", str57, "[66]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[67]" + "'", str58, "[67]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[68]" + "'", str59, "[68]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[69]" + "'", str60, "[69]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[70]" + "'", str61, "[70]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[71]" + "'", str62, "[71]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[72]" + "'", str63, "[72]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[73]" + "'", str64, "[73]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[74]" + "'", str65, "[74]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[75]" + "'", str66, "[75]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[76]" + "'", str67, "[76]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[77]" + "'", str68, "[77]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[78]" + "'", str69, "[78]");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test2662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2662");
        int[] intArray4 = new int[] { (short) 100, 'a', 100, '4' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass55 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 147, 150, 52]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 98, 101, 52]" + "'", str5, "[100, 98, 101, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 99, 102, 52]" + "'", str6, "[100, 99, 102, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 100, 103, 52]" + "'", str7, "[100, 100, 103, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 101, 104, 52]" + "'", str8, "[100, 101, 104, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 102, 105, 52]" + "'", str9, "[100, 102, 105, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 103, 106, 52]" + "'", str10, "[100, 103, 106, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 104, 107, 52]" + "'", str11, "[100, 104, 107, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 105, 108, 52]" + "'", str12, "[100, 105, 108, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 106, 109, 52]" + "'", str13, "[100, 106, 109, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 107, 110, 52]" + "'", str14, "[100, 107, 110, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 108, 111, 52]" + "'", str15, "[100, 108, 111, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 109, 112, 52]" + "'", str16, "[100, 109, 112, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 110, 113, 52]" + "'", str17, "[100, 110, 113, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 111, 114, 52]" + "'", str18, "[100, 111, 114, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 112, 115, 52]" + "'", str19, "[100, 112, 115, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 113, 116, 52]" + "'", str20, "[100, 113, 116, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 114, 117, 52]" + "'", str21, "[100, 114, 117, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 115, 118, 52]" + "'", str22, "[100, 115, 118, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 116, 119, 52]" + "'", str23, "[100, 116, 119, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 117, 120, 52]" + "'", str24, "[100, 117, 120, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 118, 121, 52]" + "'", str25, "[100, 118, 121, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 119, 122, 52]" + "'", str26, "[100, 119, 122, 52]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 120, 123, 52]" + "'", str27, "[100, 120, 123, 52]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 121, 124, 52]" + "'", str28, "[100, 121, 124, 52]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 122, 125, 52]" + "'", str29, "[100, 122, 125, 52]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 123, 126, 52]" + "'", str30, "[100, 123, 126, 52]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 124, 127, 52]" + "'", str31, "[100, 124, 127, 52]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 125, 128, 52]" + "'", str32, "[100, 125, 128, 52]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 126, 129, 52]" + "'", str33, "[100, 126, 129, 52]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 127, 130, 52]" + "'", str34, "[100, 127, 130, 52]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 128, 131, 52]" + "'", str35, "[100, 128, 131, 52]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 129, 132, 52]" + "'", str36, "[100, 129, 132, 52]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 130, 133, 52]" + "'", str37, "[100, 130, 133, 52]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 131, 134, 52]" + "'", str38, "[100, 131, 134, 52]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 132, 135, 52]" + "'", str39, "[100, 132, 135, 52]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 133, 136, 52]" + "'", str40, "[100, 133, 136, 52]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 134, 137, 52]" + "'", str41, "[100, 134, 137, 52]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 135, 138, 52]" + "'", str42, "[100, 135, 138, 52]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 136, 139, 52]" + "'", str43, "[100, 136, 139, 52]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 137, 140, 52]" + "'", str44, "[100, 137, 140, 52]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 138, 141, 52]" + "'", str45, "[100, 138, 141, 52]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 139, 142, 52]" + "'", str46, "[100, 139, 142, 52]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 140, 143, 52]" + "'", str47, "[100, 140, 143, 52]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 141, 144, 52]" + "'", str48, "[100, 141, 144, 52]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 142, 145, 52]" + "'", str49, "[100, 142, 145, 52]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 143, 146, 52]" + "'", str50, "[100, 143, 146, 52]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 144, 147, 52]" + "'", str51, "[100, 144, 147, 52]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 145, 148, 52]" + "'", str52, "[100, 145, 148, 52]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 146, 149, 52]" + "'", str53, "[100, 146, 149, 52]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 147, 150, 52]" + "'", str54, "[100, 147, 150, 52]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test2663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2663");
        int[] intArray4 = new int[] { (byte) 0, (short) 10, (short) -1, 'a' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass70 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[6, 4, 4, 103]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 11, 0, 97]" + "'", str5, "[0, 11, 0, 97]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 12, 1, 97]" + "'", str6, "[0, 12, 1, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 13, 2, 97]" + "'", str7, "[0, 13, 2, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 14, 3, 97]" + "'", str8, "[0, 14, 3, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 15, 4, 97]" + "'", str9, "[0, 15, 4, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 16, 5, 97]" + "'", str10, "[0, 16, 5, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 17, 6, 97]" + "'", str11, "[0, 17, 6, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 18, 7, 97]" + "'", str12, "[0, 18, 7, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 19, 8, 97]" + "'", str13, "[0, 19, 8, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 20, 9, 97]" + "'", str14, "[0, 20, 9, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 0, 98]" + "'", str15, "[1, 0, 0, 98]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 1, 98]" + "'", str16, "[1, 1, 1, 98]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 2, 98]" + "'", str17, "[1, 2, 2, 98]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 3, 3, 98]" + "'", str18, "[1, 3, 3, 98]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 4, 4, 98]" + "'", str19, "[1, 4, 4, 98]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 5, 5, 98]" + "'", str20, "[1, 5, 5, 98]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 6, 6, 98]" + "'", str21, "[1, 6, 6, 98]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 7, 7, 98]" + "'", str22, "[1, 7, 7, 98]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 8, 8, 98]" + "'", str23, "[1, 8, 8, 98]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 9, 9, 98]" + "'", str24, "[1, 9, 9, 98]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 0, 0, 99]" + "'", str25, "[2, 0, 0, 99]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 1, 1, 99]" + "'", str26, "[2, 1, 1, 99]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 2, 2, 99]" + "'", str27, "[2, 2, 2, 99]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 3, 3, 99]" + "'", str28, "[2, 3, 3, 99]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 4, 4, 99]" + "'", str29, "[2, 4, 4, 99]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 5, 5, 99]" + "'", str30, "[2, 5, 5, 99]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 6, 6, 99]" + "'", str31, "[2, 6, 6, 99]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 7, 7, 99]" + "'", str32, "[2, 7, 7, 99]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 8, 8, 99]" + "'", str33, "[2, 8, 8, 99]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 9, 9, 99]" + "'", str34, "[2, 9, 9, 99]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 0, 0, 100]" + "'", str35, "[3, 0, 0, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 1, 1, 100]" + "'", str36, "[3, 1, 1, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 2, 2, 100]" + "'", str37, "[3, 2, 2, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 3, 3, 100]" + "'", str38, "[3, 3, 3, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 4, 4, 100]" + "'", str39, "[3, 4, 4, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 5, 5, 100]" + "'", str40, "[3, 5, 5, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 6, 6, 100]" + "'", str41, "[3, 6, 6, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[3, 7, 7, 100]" + "'", str42, "[3, 7, 7, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 8, 8, 100]" + "'", str43, "[3, 8, 8, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 9, 9, 100]" + "'", str44, "[3, 9, 9, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 0, 0, 101]" + "'", str45, "[4, 0, 0, 101]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 1, 1, 101]" + "'", str46, "[4, 1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 2, 2, 101]" + "'", str47, "[4, 2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[4, 3, 3, 101]" + "'", str48, "[4, 3, 3, 101]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[4, 4, 4, 101]" + "'", str49, "[4, 4, 4, 101]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[4, 5, 5, 101]" + "'", str50, "[4, 5, 5, 101]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[4, 6, 6, 101]" + "'", str51, "[4, 6, 6, 101]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[4, 7, 7, 101]" + "'", str52, "[4, 7, 7, 101]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[4, 8, 8, 101]" + "'", str53, "[4, 8, 8, 101]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[4, 9, 9, 101]" + "'", str54, "[4, 9, 9, 101]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[5, 0, 0, 102]" + "'", str55, "[5, 0, 0, 102]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5, 1, 1, 102]" + "'", str56, "[5, 1, 1, 102]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5, 2, 2, 102]" + "'", str57, "[5, 2, 2, 102]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 3, 3, 102]" + "'", str58, "[5, 3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[5, 4, 4, 102]" + "'", str59, "[5, 4, 4, 102]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[5, 5, 5, 102]" + "'", str60, "[5, 5, 5, 102]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[5, 6, 6, 102]" + "'", str61, "[5, 6, 6, 102]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[5, 7, 7, 102]" + "'", str62, "[5, 7, 7, 102]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[5, 8, 8, 102]" + "'", str63, "[5, 8, 8, 102]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[5, 9, 9, 102]" + "'", str64, "[5, 9, 9, 102]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[6, 0, 0, 103]" + "'", str65, "[6, 0, 0, 103]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[6, 1, 1, 103]" + "'", str66, "[6, 1, 1, 103]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[6, 2, 2, 103]" + "'", str67, "[6, 2, 2, 103]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[6, 3, 3, 103]" + "'", str68, "[6, 3, 3, 103]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[6, 4, 4, 103]" + "'", str69, "[6, 4, 4, 103]");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test2664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2664");
        int[] intArray2 = new int[] { '4', 'a' };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass43 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[92, 137]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[53, 98]" + "'", str3, "[53, 98]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[54, 99]" + "'", str4, "[54, 99]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[55, 100]" + "'", str5, "[55, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[56, 101]" + "'", str6, "[56, 101]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[57, 102]" + "'", str7, "[57, 102]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[58, 103]" + "'", str8, "[58, 103]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[59, 104]" + "'", str9, "[59, 104]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[60, 105]" + "'", str10, "[60, 105]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[61, 106]" + "'", str11, "[61, 106]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[62, 107]" + "'", str12, "[62, 107]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[63, 108]" + "'", str13, "[63, 108]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[64, 109]" + "'", str14, "[64, 109]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[65, 110]" + "'", str15, "[65, 110]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[66, 111]" + "'", str16, "[66, 111]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[67, 112]" + "'", str17, "[67, 112]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[68, 113]" + "'", str18, "[68, 113]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[69, 114]" + "'", str19, "[69, 114]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[70, 115]" + "'", str20, "[70, 115]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[71, 116]" + "'", str21, "[71, 116]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[72, 117]" + "'", str22, "[72, 117]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[73, 118]" + "'", str23, "[73, 118]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[74, 119]" + "'", str24, "[74, 119]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[75, 120]" + "'", str25, "[75, 120]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[76, 121]" + "'", str26, "[76, 121]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[77, 122]" + "'", str27, "[77, 122]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[78, 123]" + "'", str28, "[78, 123]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[79, 124]" + "'", str29, "[79, 124]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[80, 125]" + "'", str30, "[80, 125]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[81, 126]" + "'", str31, "[81, 126]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[82, 127]" + "'", str32, "[82, 127]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[83, 128]" + "'", str33, "[83, 128]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[84, 129]" + "'", str34, "[84, 129]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[85, 130]" + "'", str35, "[85, 130]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[86, 131]" + "'", str36, "[86, 131]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[87, 132]" + "'", str37, "[87, 132]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[88, 133]" + "'", str38, "[88, 133]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[89, 134]" + "'", str39, "[89, 134]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[90, 135]" + "'", str40, "[90, 135]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[91, 136]" + "'", str41, "[91, 136]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[92, 137]" + "'", str42, "[92, 137]");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test2665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2665");
        int[] intArray6 = new int[] { ' ', (byte) 0, ' ', (byte) 0, (-1), (short) 1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass19 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[32, 1, 2, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 0, 33, 1, -1, 1]" + "'", str7, "[32, 0, 33, 1, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 0, 34, 2, -1, 1]" + "'", str8, "[32, 0, 34, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 0, 35, 3, -1, 1]" + "'", str9, "[32, 0, 35, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 0, 36, 4, -1, 1]" + "'", str10, "[32, 0, 36, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 0, 37, 5, -1, 1]" + "'", str11, "[32, 0, 37, 5, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 0, 38, 6, -1, 1]" + "'", str12, "[32, 0, 38, 6, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 0, 39, 7, -1, 1]" + "'", str13, "[32, 0, 39, 7, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 0, 40, 8, -1, 1]" + "'", str14, "[32, 0, 40, 8, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[32, 0, 41, 9, -1, 1]" + "'", str15, "[32, 0, 41, 9, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[32, 1, 0, 0, 0, 1]" + "'", str16, "[32, 1, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[32, 1, 1, 1, 0, 1]" + "'", str17, "[32, 1, 1, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[32, 1, 2, 2, 0, 1]" + "'", str18, "[32, 1, 2, 2, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test2666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2666");
        int[] intArray5 = new int[] { 1, (byte) 0, (short) 100, 0, (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass32 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 126, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 0, 1]" + "'", str6, "[1, 0, 101, 0, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 0, 1]" + "'", str7, "[1, 0, 102, 0, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 0, 1]" + "'", str8, "[1, 0, 103, 0, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 0, 1]" + "'", str9, "[1, 0, 104, 0, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 0, 1]" + "'", str10, "[1, 0, 105, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 0, 1]" + "'", str11, "[1, 0, 106, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 0, 1]" + "'", str12, "[1, 0, 107, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 108, 0, 1]" + "'", str13, "[1, 0, 108, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 109, 0, 1]" + "'", str14, "[1, 0, 109, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 110, 0, 1]" + "'", str15, "[1, 0, 110, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 111, 0, 1]" + "'", str16, "[1, 0, 111, 0, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 0, 112, 0, 1]" + "'", str17, "[1, 0, 112, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 0, 113, 0, 1]" + "'", str18, "[1, 0, 113, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 0, 114, 0, 1]" + "'", str19, "[1, 0, 114, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 0, 115, 0, 1]" + "'", str20, "[1, 0, 115, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 116, 0, 1]" + "'", str21, "[1, 0, 116, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 117, 0, 1]" + "'", str22, "[1, 0, 117, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 118, 0, 1]" + "'", str23, "[1, 0, 118, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 119, 0, 1]" + "'", str24, "[1, 0, 119, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 0, 120, 0, 1]" + "'", str25, "[1, 0, 120, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 0, 121, 0, 1]" + "'", str26, "[1, 0, 121, 0, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 0, 122, 0, 1]" + "'", str27, "[1, 0, 122, 0, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 0, 123, 0, 1]" + "'", str28, "[1, 0, 123, 0, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 0, 124, 0, 1]" + "'", str29, "[1, 0, 124, 0, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 0, 125, 0, 1]" + "'", str30, "[1, 0, 125, 0, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 126, 0, 1]" + "'", str31, "[1, 0, 126, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test2667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2667");
        int[] intArray1 = new int[] { (short) 100 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass83 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[181]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[101]" + "'", str2, "[101]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[102]" + "'", str3, "[102]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[103]" + "'", str4, "[103]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[104]" + "'", str5, "[104]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[105]" + "'", str6, "[105]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[106]" + "'", str7, "[106]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[107]" + "'", str8, "[107]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[108]" + "'", str9, "[108]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[109]" + "'", str10, "[109]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[110]" + "'", str11, "[110]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[111]" + "'", str12, "[111]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[112]" + "'", str13, "[112]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[113]" + "'", str14, "[113]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[114]" + "'", str15, "[114]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[115]" + "'", str16, "[115]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[116]" + "'", str17, "[116]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[117]" + "'", str18, "[117]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[118]" + "'", str19, "[118]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[119]" + "'", str20, "[119]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[120]" + "'", str21, "[120]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[121]" + "'", str22, "[121]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[122]" + "'", str23, "[122]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[123]" + "'", str24, "[123]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[124]" + "'", str25, "[124]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[125]" + "'", str26, "[125]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[126]" + "'", str27, "[126]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[127]" + "'", str28, "[127]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[128]" + "'", str29, "[128]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[129]" + "'", str30, "[129]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[130]" + "'", str31, "[130]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[131]" + "'", str32, "[131]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[132]" + "'", str33, "[132]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[133]" + "'", str34, "[133]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[134]" + "'", str35, "[134]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[135]" + "'", str36, "[135]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[136]" + "'", str37, "[136]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[137]" + "'", str38, "[137]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[138]" + "'", str39, "[138]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[139]" + "'", str40, "[139]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[140]" + "'", str41, "[140]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[141]" + "'", str42, "[141]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[142]" + "'", str43, "[142]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[143]" + "'", str44, "[143]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[144]" + "'", str45, "[144]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[145]" + "'", str46, "[145]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[146]" + "'", str47, "[146]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[147]" + "'", str48, "[147]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[148]" + "'", str49, "[148]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[149]" + "'", str50, "[149]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[150]" + "'", str51, "[150]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[151]" + "'", str52, "[151]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[152]" + "'", str53, "[152]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[153]" + "'", str54, "[153]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[154]" + "'", str55, "[154]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[155]" + "'", str56, "[155]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[156]" + "'", str57, "[156]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[157]" + "'", str58, "[157]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[158]" + "'", str59, "[158]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[159]" + "'", str60, "[159]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[160]" + "'", str61, "[160]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[161]" + "'", str62, "[161]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[162]" + "'", str63, "[162]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[163]" + "'", str64, "[163]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[164]" + "'", str65, "[164]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[165]" + "'", str66, "[165]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[166]" + "'", str67, "[166]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[167]" + "'", str68, "[167]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[168]" + "'", str69, "[168]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[169]" + "'", str70, "[169]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[170]" + "'", str71, "[170]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[171]" + "'", str72, "[171]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[172]" + "'", str73, "[172]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[173]" + "'", str74, "[173]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[174]" + "'", str75, "[174]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[175]" + "'", str76, "[175]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[176]" + "'", str77, "[176]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[177]" + "'", str78, "[177]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[178]" + "'", str79, "[178]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[179]" + "'", str80, "[179]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[180]" + "'", str81, "[180]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[181]" + "'", str82, "[181]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2668");
        int[] intArray6 = new int[] { (byte) 0, (short) 100, 0, (-1), (short) -1, (byte) 1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass60 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 105, 2, 2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 100, 1, 0, -1, 1]" + "'", str7, "[0, 100, 1, 0, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 100, 2, 1, -1, 1]" + "'", str8, "[0, 100, 2, 1, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 100, 3, 2, -1, 1]" + "'", str9, "[0, 100, 3, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 100, 4, 3, -1, 1]" + "'", str10, "[0, 100, 4, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 100, 5, 4, -1, 1]" + "'", str11, "[0, 100, 5, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 100, 6, 5, -1, 1]" + "'", str12, "[0, 100, 6, 5, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 100, 7, 6, -1, 1]" + "'", str13, "[0, 100, 7, 6, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 100, 8, 7, -1, 1]" + "'", str14, "[0, 100, 8, 7, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 100, 9, 8, -1, 1]" + "'", str15, "[0, 100, 9, 8, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 100, 10, 9, -1, 1]" + "'", str16, "[0, 100, 10, 9, -1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 101, 0, 0, 0, 1]" + "'", str17, "[0, 101, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 101, 1, 1, 0, 1]" + "'", str18, "[0, 101, 1, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 101, 2, 2, 0, 1]" + "'", str19, "[0, 101, 2, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 101, 3, 3, 0, 1]" + "'", str20, "[0, 101, 3, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 101, 4, 4, 0, 1]" + "'", str21, "[0, 101, 4, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 101, 5, 5, 0, 1]" + "'", str22, "[0, 101, 5, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 101, 6, 6, 0, 1]" + "'", str23, "[0, 101, 6, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 101, 7, 7, 0, 1]" + "'", str24, "[0, 101, 7, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 101, 8, 8, 0, 1]" + "'", str25, "[0, 101, 8, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 101, 9, 9, 0, 1]" + "'", str26, "[0, 101, 9, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 102, 0, 0, 1, 1]" + "'", str27, "[0, 102, 0, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 102, 1, 1, 1, 1]" + "'", str28, "[0, 102, 1, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 102, 2, 2, 1, 1]" + "'", str29, "[0, 102, 2, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 102, 3, 3, 1, 1]" + "'", str30, "[0, 102, 3, 3, 1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 102, 4, 4, 1, 1]" + "'", str31, "[0, 102, 4, 4, 1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 102, 5, 5, 1, 1]" + "'", str32, "[0, 102, 5, 5, 1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 102, 6, 6, 1, 1]" + "'", str33, "[0, 102, 6, 6, 1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 102, 7, 7, 1, 1]" + "'", str34, "[0, 102, 7, 7, 1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 102, 8, 8, 1, 1]" + "'", str35, "[0, 102, 8, 8, 1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 102, 9, 9, 1, 1]" + "'", str36, "[0, 102, 9, 9, 1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 103, 0, 0, 2, 1]" + "'", str37, "[0, 103, 0, 0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 103, 1, 1, 2, 1]" + "'", str38, "[0, 103, 1, 1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 103, 2, 2, 2, 1]" + "'", str39, "[0, 103, 2, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 103, 3, 3, 2, 1]" + "'", str40, "[0, 103, 3, 3, 2, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 103, 4, 4, 2, 1]" + "'", str41, "[0, 103, 4, 4, 2, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 103, 5, 5, 2, 1]" + "'", str42, "[0, 103, 5, 5, 2, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 103, 6, 6, 2, 1]" + "'", str43, "[0, 103, 6, 6, 2, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 103, 7, 7, 2, 1]" + "'", str44, "[0, 103, 7, 7, 2, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 103, 8, 8, 2, 1]" + "'", str45, "[0, 103, 8, 8, 2, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 103, 9, 9, 2, 1]" + "'", str46, "[0, 103, 9, 9, 2, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 104, 0, 0, 3, 1]" + "'", str47, "[0, 104, 0, 0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 104, 1, 1, 3, 1]" + "'", str48, "[0, 104, 1, 1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 104, 2, 2, 3, 1]" + "'", str49, "[0, 104, 2, 2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 104, 3, 3, 3, 1]" + "'", str50, "[0, 104, 3, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 104, 4, 4, 3, 1]" + "'", str51, "[0, 104, 4, 4, 3, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 104, 5, 5, 3, 1]" + "'", str52, "[0, 104, 5, 5, 3, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 104, 6, 6, 3, 1]" + "'", str53, "[0, 104, 6, 6, 3, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 104, 7, 7, 3, 1]" + "'", str54, "[0, 104, 7, 7, 3, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, 104, 8, 8, 3, 1]" + "'", str55, "[0, 104, 8, 8, 3, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, 104, 9, 9, 3, 1]" + "'", str56, "[0, 104, 9, 9, 3, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, 105, 0, 0, 4, 1]" + "'", str57, "[0, 105, 0, 0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, 105, 1, 1, 4, 1]" + "'", str58, "[0, 105, 1, 1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, 105, 2, 2, 4, 1]" + "'", str59, "[0, 105, 2, 2, 4, 1]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test2669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2669");
        int[] intArray4 = new int[] { '4', (byte) -1, (short) 1, (byte) 10 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass27 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[54, 3, 3, 12]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[52, 0, 2, 10]" + "'", str5, "[52, 0, 2, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[52, 1, 3, 10]" + "'", str6, "[52, 1, 3, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[52, 2, 4, 10]" + "'", str7, "[52, 2, 4, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[52, 3, 5, 10]" + "'", str8, "[52, 3, 5, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[52, 4, 6, 10]" + "'", str9, "[52, 4, 6, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[52, 5, 7, 10]" + "'", str10, "[52, 5, 7, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[52, 6, 8, 10]" + "'", str11, "[52, 6, 8, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[52, 7, 9, 10]" + "'", str12, "[52, 7, 9, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[53, 0, 0, 11]" + "'", str13, "[53, 0, 0, 11]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[53, 1, 1, 11]" + "'", str14, "[53, 1, 1, 11]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[53, 2, 2, 11]" + "'", str15, "[53, 2, 2, 11]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[53, 3, 3, 11]" + "'", str16, "[53, 3, 3, 11]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[53, 4, 4, 11]" + "'", str17, "[53, 4, 4, 11]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[53, 5, 5, 11]" + "'", str18, "[53, 5, 5, 11]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[53, 6, 6, 11]" + "'", str19, "[53, 6, 6, 11]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[53, 7, 7, 11]" + "'", str20, "[53, 7, 7, 11]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[53, 8, 8, 11]" + "'", str21, "[53, 8, 8, 11]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[53, 9, 9, 11]" + "'", str22, "[53, 9, 9, 11]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[54, 0, 0, 12]" + "'", str23, "[54, 0, 0, 12]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[54, 1, 1, 12]" + "'", str24, "[54, 1, 1, 12]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[54, 2, 2, 12]" + "'", str25, "[54, 2, 2, 12]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[54, 3, 3, 12]" + "'", str26, "[54, 3, 3, 12]");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test2670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2670");
        int[] intArray3 = new int[] { (byte) 1, 'a', (short) 100 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass74 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 167, 100]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 98, 100]" + "'", str4, "[1, 98, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 99, 100]" + "'", str5, "[1, 99, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 100, 100]" + "'", str6, "[1, 100, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 101, 100]" + "'", str7, "[1, 101, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 102, 100]" + "'", str8, "[1, 102, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 103, 100]" + "'", str9, "[1, 103, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 104, 100]" + "'", str10, "[1, 104, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 105, 100]" + "'", str11, "[1, 105, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 106, 100]" + "'", str12, "[1, 106, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 107, 100]" + "'", str13, "[1, 107, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 108, 100]" + "'", str14, "[1, 108, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 109, 100]" + "'", str15, "[1, 109, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 110, 100]" + "'", str16, "[1, 110, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 111, 100]" + "'", str17, "[1, 111, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 112, 100]" + "'", str18, "[1, 112, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 113, 100]" + "'", str19, "[1, 113, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 114, 100]" + "'", str20, "[1, 114, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 115, 100]" + "'", str21, "[1, 115, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 116, 100]" + "'", str22, "[1, 116, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 117, 100]" + "'", str23, "[1, 117, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 118, 100]" + "'", str24, "[1, 118, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 119, 100]" + "'", str25, "[1, 119, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 120, 100]" + "'", str26, "[1, 120, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 121, 100]" + "'", str27, "[1, 121, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 122, 100]" + "'", str28, "[1, 122, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 123, 100]" + "'", str29, "[1, 123, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 124, 100]" + "'", str30, "[1, 124, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 125, 100]" + "'", str31, "[1, 125, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 126, 100]" + "'", str32, "[1, 126, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 127, 100]" + "'", str33, "[1, 127, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 128, 100]" + "'", str34, "[1, 128, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 129, 100]" + "'", str35, "[1, 129, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 130, 100]" + "'", str36, "[1, 130, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 131, 100]" + "'", str37, "[1, 131, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 132, 100]" + "'", str38, "[1, 132, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 133, 100]" + "'", str39, "[1, 133, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 134, 100]" + "'", str40, "[1, 134, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 135, 100]" + "'", str41, "[1, 135, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 136, 100]" + "'", str42, "[1, 136, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 137, 100]" + "'", str43, "[1, 137, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 138, 100]" + "'", str44, "[1, 138, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 139, 100]" + "'", str45, "[1, 139, 100]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 140, 100]" + "'", str46, "[1, 140, 100]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 141, 100]" + "'", str47, "[1, 141, 100]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 142, 100]" + "'", str48, "[1, 142, 100]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 143, 100]" + "'", str49, "[1, 143, 100]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 144, 100]" + "'", str50, "[1, 144, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 145, 100]" + "'", str51, "[1, 145, 100]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 146, 100]" + "'", str52, "[1, 146, 100]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 147, 100]" + "'", str53, "[1, 147, 100]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 148, 100]" + "'", str54, "[1, 148, 100]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 149, 100]" + "'", str55, "[1, 149, 100]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 150, 100]" + "'", str56, "[1, 150, 100]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 151, 100]" + "'", str57, "[1, 151, 100]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 152, 100]" + "'", str58, "[1, 152, 100]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 153, 100]" + "'", str59, "[1, 153, 100]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 154, 100]" + "'", str60, "[1, 154, 100]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 155, 100]" + "'", str61, "[1, 155, 100]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 156, 100]" + "'", str62, "[1, 156, 100]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 157, 100]" + "'", str63, "[1, 157, 100]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 158, 100]" + "'", str64, "[1, 158, 100]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 159, 100]" + "'", str65, "[1, 159, 100]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 160, 100]" + "'", str66, "[1, 160, 100]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 161, 100]" + "'", str67, "[1, 161, 100]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 162, 100]" + "'", str68, "[1, 162, 100]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 163, 100]" + "'", str69, "[1, 163, 100]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 164, 100]" + "'", str70, "[1, 164, 100]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 165, 100]" + "'", str71, "[1, 165, 100]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 166, 100]" + "'", str72, "[1, 166, 100]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 167, 100]" + "'", str73, "[1, 167, 100]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test2671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2671");
        int[] intArray2 = new int[] { 1, 'a' };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass45 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[43, 139]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 98]" + "'", str3, "[2, 98]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 99]" + "'", str4, "[3, 99]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 100]" + "'", str5, "[4, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 101]" + "'", str6, "[5, 101]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 102]" + "'", str7, "[6, 102]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 103]" + "'", str8, "[7, 103]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 104]" + "'", str9, "[8, 104]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 105]" + "'", str10, "[9, 105]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 106]" + "'", str11, "[10, 106]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 107]" + "'", str12, "[11, 107]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[12, 108]" + "'", str13, "[12, 108]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[13, 109]" + "'", str14, "[13, 109]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[14, 110]" + "'", str15, "[14, 110]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[15, 111]" + "'", str16, "[15, 111]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[16, 112]" + "'", str17, "[16, 112]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[17, 113]" + "'", str18, "[17, 113]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[18, 114]" + "'", str19, "[18, 114]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[19, 115]" + "'", str20, "[19, 115]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[20, 116]" + "'", str21, "[20, 116]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[21, 117]" + "'", str22, "[21, 117]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[22, 118]" + "'", str23, "[22, 118]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[23, 119]" + "'", str24, "[23, 119]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[24, 120]" + "'", str25, "[24, 120]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[25, 121]" + "'", str26, "[25, 121]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[26, 122]" + "'", str27, "[26, 122]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[27, 123]" + "'", str28, "[27, 123]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[28, 124]" + "'", str29, "[28, 124]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[29, 125]" + "'", str30, "[29, 125]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[30, 126]" + "'", str31, "[30, 126]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[31, 127]" + "'", str32, "[31, 127]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[32, 128]" + "'", str33, "[32, 128]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[33, 129]" + "'", str34, "[33, 129]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[34, 130]" + "'", str35, "[34, 130]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 131]" + "'", str36, "[35, 131]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[36, 132]" + "'", str37, "[36, 132]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[37, 133]" + "'", str38, "[37, 133]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[38, 134]" + "'", str39, "[38, 134]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[39, 135]" + "'", str40, "[39, 135]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[40, 136]" + "'", str41, "[40, 136]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[41, 137]" + "'", str42, "[41, 137]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[42, 138]" + "'", str43, "[42, 138]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[43, 139]" + "'", str44, "[43, 139]");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test2672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2672");
        int[] intArray1 = new int[] { (short) 100 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass84 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[182]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[101]" + "'", str2, "[101]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[102]" + "'", str3, "[102]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[103]" + "'", str4, "[103]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[104]" + "'", str5, "[104]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[105]" + "'", str6, "[105]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[106]" + "'", str7, "[106]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[107]" + "'", str8, "[107]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[108]" + "'", str9, "[108]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[109]" + "'", str10, "[109]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[110]" + "'", str11, "[110]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[111]" + "'", str12, "[111]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[112]" + "'", str13, "[112]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[113]" + "'", str14, "[113]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[114]" + "'", str15, "[114]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[115]" + "'", str16, "[115]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[116]" + "'", str17, "[116]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[117]" + "'", str18, "[117]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[118]" + "'", str19, "[118]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[119]" + "'", str20, "[119]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[120]" + "'", str21, "[120]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[121]" + "'", str22, "[121]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[122]" + "'", str23, "[122]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[123]" + "'", str24, "[123]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[124]" + "'", str25, "[124]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[125]" + "'", str26, "[125]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[126]" + "'", str27, "[126]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[127]" + "'", str28, "[127]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[128]" + "'", str29, "[128]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[129]" + "'", str30, "[129]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[130]" + "'", str31, "[130]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[131]" + "'", str32, "[131]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[132]" + "'", str33, "[132]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[133]" + "'", str34, "[133]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[134]" + "'", str35, "[134]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[135]" + "'", str36, "[135]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[136]" + "'", str37, "[136]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[137]" + "'", str38, "[137]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[138]" + "'", str39, "[138]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[139]" + "'", str40, "[139]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[140]" + "'", str41, "[140]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[141]" + "'", str42, "[141]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[142]" + "'", str43, "[142]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[143]" + "'", str44, "[143]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[144]" + "'", str45, "[144]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[145]" + "'", str46, "[145]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[146]" + "'", str47, "[146]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[147]" + "'", str48, "[147]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[148]" + "'", str49, "[148]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[149]" + "'", str50, "[149]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[150]" + "'", str51, "[150]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[151]" + "'", str52, "[151]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[152]" + "'", str53, "[152]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[153]" + "'", str54, "[153]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[154]" + "'", str55, "[154]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[155]" + "'", str56, "[155]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[156]" + "'", str57, "[156]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[157]" + "'", str58, "[157]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[158]" + "'", str59, "[158]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[159]" + "'", str60, "[159]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[160]" + "'", str61, "[160]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[161]" + "'", str62, "[161]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[162]" + "'", str63, "[162]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[163]" + "'", str64, "[163]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[164]" + "'", str65, "[164]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[165]" + "'", str66, "[165]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[166]" + "'", str67, "[166]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[167]" + "'", str68, "[167]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[168]" + "'", str69, "[168]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[169]" + "'", str70, "[169]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[170]" + "'", str71, "[170]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[171]" + "'", str72, "[171]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[172]" + "'", str73, "[172]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[173]" + "'", str74, "[173]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[174]" + "'", str75, "[174]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[175]" + "'", str76, "[175]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[176]" + "'", str77, "[176]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[177]" + "'", str78, "[177]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[178]" + "'", str79, "[178]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[179]" + "'", str80, "[179]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[180]" + "'", str81, "[180]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[181]" + "'", str82, "[181]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[182]" + "'", str83, "[182]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test2673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2673");
        int[] intArray6 = new int[] { (short) 0, (short) 10, (-1), (short) 1, (byte) 1, 'a' };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass36 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 13, 0, 0, 4, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 10, 0, 2, 1, 97]" + "'", str7, "[0, 10, 0, 2, 1, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 10, 1, 3, 1, 97]" + "'", str8, "[0, 10, 1, 3, 1, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 10, 2, 4, 1, 97]" + "'", str9, "[0, 10, 2, 4, 1, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 10, 3, 5, 1, 97]" + "'", str10, "[0, 10, 3, 5, 1, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 10, 4, 6, 1, 97]" + "'", str11, "[0, 10, 4, 6, 1, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 10, 5, 7, 1, 97]" + "'", str12, "[0, 10, 5, 7, 1, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 10, 6, 8, 1, 97]" + "'", str13, "[0, 10, 6, 8, 1, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 10, 7, 9, 1, 97]" + "'", str14, "[0, 10, 7, 9, 1, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 11, 0, 0, 2, 97]" + "'", str15, "[0, 11, 0, 0, 2, 97]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 11, 1, 1, 2, 97]" + "'", str16, "[0, 11, 1, 1, 2, 97]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 11, 2, 2, 2, 97]" + "'", str17, "[0, 11, 2, 2, 2, 97]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 11, 3, 3, 2, 97]" + "'", str18, "[0, 11, 3, 3, 2, 97]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 11, 4, 4, 2, 97]" + "'", str19, "[0, 11, 4, 4, 2, 97]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 11, 5, 5, 2, 97]" + "'", str20, "[0, 11, 5, 5, 2, 97]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 11, 6, 6, 2, 97]" + "'", str21, "[0, 11, 6, 6, 2, 97]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 11, 7, 7, 2, 97]" + "'", str22, "[0, 11, 7, 7, 2, 97]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 11, 8, 8, 2, 97]" + "'", str23, "[0, 11, 8, 8, 2, 97]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 11, 9, 9, 2, 97]" + "'", str24, "[0, 11, 9, 9, 2, 97]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 12, 0, 0, 3, 97]" + "'", str25, "[0, 12, 0, 0, 3, 97]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 12, 1, 1, 3, 97]" + "'", str26, "[0, 12, 1, 1, 3, 97]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 12, 2, 2, 3, 97]" + "'", str27, "[0, 12, 2, 2, 3, 97]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 12, 3, 3, 3, 97]" + "'", str28, "[0, 12, 3, 3, 3, 97]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 12, 4, 4, 3, 97]" + "'", str29, "[0, 12, 4, 4, 3, 97]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 12, 5, 5, 3, 97]" + "'", str30, "[0, 12, 5, 5, 3, 97]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 12, 6, 6, 3, 97]" + "'", str31, "[0, 12, 6, 6, 3, 97]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 12, 7, 7, 3, 97]" + "'", str32, "[0, 12, 7, 7, 3, 97]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 12, 8, 8, 3, 97]" + "'", str33, "[0, 12, 8, 8, 3, 97]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 12, 9, 9, 3, 97]" + "'", str34, "[0, 12, 9, 9, 3, 97]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 13, 0, 0, 4, 97]" + "'", str35, "[0, 13, 0, 0, 4, 97]");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test2674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2674");
        int[] intArray5 = new int[] { (byte) 0, '#', ' ', 10, 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass68 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 35, 94, 10, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 35, 33, 10, 1]" + "'", str6, "[0, 35, 33, 10, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 35, 34, 10, 1]" + "'", str7, "[0, 35, 34, 10, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 35, 35, 10, 1]" + "'", str8, "[0, 35, 35, 10, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 35, 36, 10, 1]" + "'", str9, "[0, 35, 36, 10, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 35, 37, 10, 1]" + "'", str10, "[0, 35, 37, 10, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 35, 38, 10, 1]" + "'", str11, "[0, 35, 38, 10, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 35, 39, 10, 1]" + "'", str12, "[0, 35, 39, 10, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 35, 40, 10, 1]" + "'", str13, "[0, 35, 40, 10, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 35, 41, 10, 1]" + "'", str14, "[0, 35, 41, 10, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 35, 42, 10, 1]" + "'", str15, "[0, 35, 42, 10, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 35, 43, 10, 1]" + "'", str16, "[0, 35, 43, 10, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 35, 44, 10, 1]" + "'", str17, "[0, 35, 44, 10, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 35, 45, 10, 1]" + "'", str18, "[0, 35, 45, 10, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 35, 46, 10, 1]" + "'", str19, "[0, 35, 46, 10, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 35, 47, 10, 1]" + "'", str20, "[0, 35, 47, 10, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 35, 48, 10, 1]" + "'", str21, "[0, 35, 48, 10, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 35, 49, 10, 1]" + "'", str22, "[0, 35, 49, 10, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 35, 50, 10, 1]" + "'", str23, "[0, 35, 50, 10, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 35, 51, 10, 1]" + "'", str24, "[0, 35, 51, 10, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 35, 52, 10, 1]" + "'", str25, "[0, 35, 52, 10, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 35, 53, 10, 1]" + "'", str26, "[0, 35, 53, 10, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 35, 54, 10, 1]" + "'", str27, "[0, 35, 54, 10, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 35, 55, 10, 1]" + "'", str28, "[0, 35, 55, 10, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 35, 56, 10, 1]" + "'", str29, "[0, 35, 56, 10, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 35, 57, 10, 1]" + "'", str30, "[0, 35, 57, 10, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 35, 58, 10, 1]" + "'", str31, "[0, 35, 58, 10, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 35, 59, 10, 1]" + "'", str32, "[0, 35, 59, 10, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 35, 60, 10, 1]" + "'", str33, "[0, 35, 60, 10, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 35, 61, 10, 1]" + "'", str34, "[0, 35, 61, 10, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 35, 62, 10, 1]" + "'", str35, "[0, 35, 62, 10, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 35, 63, 10, 1]" + "'", str36, "[0, 35, 63, 10, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 35, 64, 10, 1]" + "'", str37, "[0, 35, 64, 10, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 35, 65, 10, 1]" + "'", str38, "[0, 35, 65, 10, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 35, 66, 10, 1]" + "'", str39, "[0, 35, 66, 10, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 35, 67, 10, 1]" + "'", str40, "[0, 35, 67, 10, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 35, 68, 10, 1]" + "'", str41, "[0, 35, 68, 10, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 35, 69, 10, 1]" + "'", str42, "[0, 35, 69, 10, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 35, 70, 10, 1]" + "'", str43, "[0, 35, 70, 10, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 35, 71, 10, 1]" + "'", str44, "[0, 35, 71, 10, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 35, 72, 10, 1]" + "'", str45, "[0, 35, 72, 10, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 35, 73, 10, 1]" + "'", str46, "[0, 35, 73, 10, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 35, 74, 10, 1]" + "'", str47, "[0, 35, 74, 10, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 35, 75, 10, 1]" + "'", str48, "[0, 35, 75, 10, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 35, 76, 10, 1]" + "'", str49, "[0, 35, 76, 10, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 35, 77, 10, 1]" + "'", str50, "[0, 35, 77, 10, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 35, 78, 10, 1]" + "'", str51, "[0, 35, 78, 10, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 35, 79, 10, 1]" + "'", str52, "[0, 35, 79, 10, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 35, 80, 10, 1]" + "'", str53, "[0, 35, 80, 10, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 35, 81, 10, 1]" + "'", str54, "[0, 35, 81, 10, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, 35, 82, 10, 1]" + "'", str55, "[0, 35, 82, 10, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, 35, 83, 10, 1]" + "'", str56, "[0, 35, 83, 10, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, 35, 84, 10, 1]" + "'", str57, "[0, 35, 84, 10, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, 35, 85, 10, 1]" + "'", str58, "[0, 35, 85, 10, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, 35, 86, 10, 1]" + "'", str59, "[0, 35, 86, 10, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, 35, 87, 10, 1]" + "'", str60, "[0, 35, 87, 10, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, 35, 88, 10, 1]" + "'", str61, "[0, 35, 88, 10, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, 35, 89, 10, 1]" + "'", str62, "[0, 35, 89, 10, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[0, 35, 90, 10, 1]" + "'", str63, "[0, 35, 90, 10, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[0, 35, 91, 10, 1]" + "'", str64, "[0, 35, 91, 10, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[0, 35, 92, 10, 1]" + "'", str65, "[0, 35, 92, 10, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[0, 35, 93, 10, 1]" + "'", str66, "[0, 35, 93, 10, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[0, 35, 94, 10, 1]" + "'", str67, "[0, 35, 94, 10, 1]");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test2675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2675");
        int[] intArray5 = new int[] { (short) 100, 'a', ' ', 0, (byte) -1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass70 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 97, 96, 0, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 97, 33, 0, -1]" + "'", str6, "[100, 97, 33, 0, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 97, 34, 0, -1]" + "'", str7, "[100, 97, 34, 0, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 97, 35, 0, -1]" + "'", str8, "[100, 97, 35, 0, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 97, 36, 0, -1]" + "'", str9, "[100, 97, 36, 0, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 97, 37, 0, -1]" + "'", str10, "[100, 97, 37, 0, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 97, 38, 0, -1]" + "'", str11, "[100, 97, 38, 0, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 97, 39, 0, -1]" + "'", str12, "[100, 97, 39, 0, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 97, 40, 0, -1]" + "'", str13, "[100, 97, 40, 0, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 97, 41, 0, -1]" + "'", str14, "[100, 97, 41, 0, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 97, 42, 0, -1]" + "'", str15, "[100, 97, 42, 0, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 97, 43, 0, -1]" + "'", str16, "[100, 97, 43, 0, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 97, 44, 0, -1]" + "'", str17, "[100, 97, 44, 0, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 97, 45, 0, -1]" + "'", str18, "[100, 97, 45, 0, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 97, 46, 0, -1]" + "'", str19, "[100, 97, 46, 0, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 97, 47, 0, -1]" + "'", str20, "[100, 97, 47, 0, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 97, 48, 0, -1]" + "'", str21, "[100, 97, 48, 0, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 97, 49, 0, -1]" + "'", str22, "[100, 97, 49, 0, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 97, 50, 0, -1]" + "'", str23, "[100, 97, 50, 0, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 97, 51, 0, -1]" + "'", str24, "[100, 97, 51, 0, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 97, 52, 0, -1]" + "'", str25, "[100, 97, 52, 0, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 97, 53, 0, -1]" + "'", str26, "[100, 97, 53, 0, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 97, 54, 0, -1]" + "'", str27, "[100, 97, 54, 0, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 97, 55, 0, -1]" + "'", str28, "[100, 97, 55, 0, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 97, 56, 0, -1]" + "'", str29, "[100, 97, 56, 0, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 97, 57, 0, -1]" + "'", str30, "[100, 97, 57, 0, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 97, 58, 0, -1]" + "'", str31, "[100, 97, 58, 0, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 97, 59, 0, -1]" + "'", str32, "[100, 97, 59, 0, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 97, 60, 0, -1]" + "'", str33, "[100, 97, 60, 0, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 97, 61, 0, -1]" + "'", str34, "[100, 97, 61, 0, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 97, 62, 0, -1]" + "'", str35, "[100, 97, 62, 0, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 97, 63, 0, -1]" + "'", str36, "[100, 97, 63, 0, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 97, 64, 0, -1]" + "'", str37, "[100, 97, 64, 0, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 97, 65, 0, -1]" + "'", str38, "[100, 97, 65, 0, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 97, 66, 0, -1]" + "'", str39, "[100, 97, 66, 0, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 97, 67, 0, -1]" + "'", str40, "[100, 97, 67, 0, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 97, 68, 0, -1]" + "'", str41, "[100, 97, 68, 0, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 97, 69, 0, -1]" + "'", str42, "[100, 97, 69, 0, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 97, 70, 0, -1]" + "'", str43, "[100, 97, 70, 0, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 97, 71, 0, -1]" + "'", str44, "[100, 97, 71, 0, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 97, 72, 0, -1]" + "'", str45, "[100, 97, 72, 0, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 97, 73, 0, -1]" + "'", str46, "[100, 97, 73, 0, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 97, 74, 0, -1]" + "'", str47, "[100, 97, 74, 0, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 97, 75, 0, -1]" + "'", str48, "[100, 97, 75, 0, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 97, 76, 0, -1]" + "'", str49, "[100, 97, 76, 0, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 97, 77, 0, -1]" + "'", str50, "[100, 97, 77, 0, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 97, 78, 0, -1]" + "'", str51, "[100, 97, 78, 0, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 97, 79, 0, -1]" + "'", str52, "[100, 97, 79, 0, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 97, 80, 0, -1]" + "'", str53, "[100, 97, 80, 0, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 97, 81, 0, -1]" + "'", str54, "[100, 97, 81, 0, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 97, 82, 0, -1]" + "'", str55, "[100, 97, 82, 0, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 97, 83, 0, -1]" + "'", str56, "[100, 97, 83, 0, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 97, 84, 0, -1]" + "'", str57, "[100, 97, 84, 0, -1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 97, 85, 0, -1]" + "'", str58, "[100, 97, 85, 0, -1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 97, 86, 0, -1]" + "'", str59, "[100, 97, 86, 0, -1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 97, 87, 0, -1]" + "'", str60, "[100, 97, 87, 0, -1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 97, 88, 0, -1]" + "'", str61, "[100, 97, 88, 0, -1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[100, 97, 89, 0, -1]" + "'", str62, "[100, 97, 89, 0, -1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[100, 97, 90, 0, -1]" + "'", str63, "[100, 97, 90, 0, -1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[100, 97, 91, 0, -1]" + "'", str64, "[100, 97, 91, 0, -1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[100, 97, 92, 0, -1]" + "'", str65, "[100, 97, 92, 0, -1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[100, 97, 93, 0, -1]" + "'", str66, "[100, 97, 93, 0, -1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[100, 97, 94, 0, -1]" + "'", str67, "[100, 97, 94, 0, -1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[100, 97, 95, 0, -1]" + "'", str68, "[100, 97, 95, 0, -1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[100, 97, 96, 0, -1]" + "'", str69, "[100, 97, 96, 0, -1]");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test2676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2676");
        int[] intArray5 = new int[] { (short) 1, (short) 1, (byte) 0, '4', '#' };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass14 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 1, 8, 52, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 1, 52, 35]" + "'", str6, "[1, 1, 1, 52, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1, 2, 52, 35]" + "'", str7, "[1, 1, 2, 52, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1, 3, 52, 35]" + "'", str8, "[1, 1, 3, 52, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1, 4, 52, 35]" + "'", str9, "[1, 1, 4, 52, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1, 5, 52, 35]" + "'", str10, "[1, 1, 5, 52, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1, 6, 52, 35]" + "'", str11, "[1, 1, 6, 52, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1, 7, 52, 35]" + "'", str12, "[1, 1, 7, 52, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 8, 52, 35]" + "'", str13, "[1, 1, 8, 52, 35]");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2677");
        int[] intArray3 = new int[] { ' ', '#', (short) 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass26 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[32, 57, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 36, 1]" + "'", str4, "[32, 36, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 37, 1]" + "'", str5, "[32, 37, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 38, 1]" + "'", str6, "[32, 38, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 39, 1]" + "'", str7, "[32, 39, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 40, 1]" + "'", str8, "[32, 40, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 41, 1]" + "'", str9, "[32, 41, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 42, 1]" + "'", str10, "[32, 42, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 43, 1]" + "'", str11, "[32, 43, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 44, 1]" + "'", str12, "[32, 44, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 45, 1]" + "'", str13, "[32, 45, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 46, 1]" + "'", str14, "[32, 46, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[32, 47, 1]" + "'", str15, "[32, 47, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[32, 48, 1]" + "'", str16, "[32, 48, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[32, 49, 1]" + "'", str17, "[32, 49, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[32, 50, 1]" + "'", str18, "[32, 50, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[32, 51, 1]" + "'", str19, "[32, 51, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[32, 52, 1]" + "'", str20, "[32, 52, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[32, 53, 1]" + "'", str21, "[32, 53, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[32, 54, 1]" + "'", str22, "[32, 54, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32, 55, 1]" + "'", str23, "[32, 55, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 56, 1]" + "'", str24, "[32, 56, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[32, 57, 1]" + "'", str25, "[32, 57, 1]");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test2678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2678");
        int[] intArray2 = new int[] { '4', 'a' };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass45 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[94, 139]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[53, 98]" + "'", str3, "[53, 98]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[54, 99]" + "'", str4, "[54, 99]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[55, 100]" + "'", str5, "[55, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[56, 101]" + "'", str6, "[56, 101]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[57, 102]" + "'", str7, "[57, 102]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[58, 103]" + "'", str8, "[58, 103]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[59, 104]" + "'", str9, "[59, 104]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[60, 105]" + "'", str10, "[60, 105]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[61, 106]" + "'", str11, "[61, 106]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[62, 107]" + "'", str12, "[62, 107]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[63, 108]" + "'", str13, "[63, 108]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[64, 109]" + "'", str14, "[64, 109]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[65, 110]" + "'", str15, "[65, 110]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[66, 111]" + "'", str16, "[66, 111]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[67, 112]" + "'", str17, "[67, 112]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[68, 113]" + "'", str18, "[68, 113]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[69, 114]" + "'", str19, "[69, 114]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[70, 115]" + "'", str20, "[70, 115]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[71, 116]" + "'", str21, "[71, 116]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[72, 117]" + "'", str22, "[72, 117]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[73, 118]" + "'", str23, "[73, 118]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[74, 119]" + "'", str24, "[74, 119]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[75, 120]" + "'", str25, "[75, 120]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[76, 121]" + "'", str26, "[76, 121]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[77, 122]" + "'", str27, "[77, 122]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[78, 123]" + "'", str28, "[78, 123]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[79, 124]" + "'", str29, "[79, 124]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[80, 125]" + "'", str30, "[80, 125]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[81, 126]" + "'", str31, "[81, 126]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[82, 127]" + "'", str32, "[82, 127]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[83, 128]" + "'", str33, "[83, 128]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[84, 129]" + "'", str34, "[84, 129]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[85, 130]" + "'", str35, "[85, 130]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[86, 131]" + "'", str36, "[86, 131]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[87, 132]" + "'", str37, "[87, 132]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[88, 133]" + "'", str38, "[88, 133]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[89, 134]" + "'", str39, "[89, 134]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[90, 135]" + "'", str40, "[90, 135]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[91, 136]" + "'", str41, "[91, 136]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[92, 137]" + "'", str42, "[92, 137]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[93, 138]" + "'", str43, "[93, 138]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[94, 139]" + "'", str44, "[94, 139]");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test2679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2679");
        int[] intArray4 = new int[] { (byte) -1, 1, 100, '#' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass37 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 33, 132, 35]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 2, 101, 35]" + "'", str5, "[-1, 2, 101, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 3, 102, 35]" + "'", str6, "[-1, 3, 102, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 4, 103, 35]" + "'", str7, "[-1, 4, 103, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 5, 104, 35]" + "'", str8, "[-1, 5, 104, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 6, 105, 35]" + "'", str9, "[-1, 6, 105, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 7, 106, 35]" + "'", str10, "[-1, 7, 106, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 8, 107, 35]" + "'", str11, "[-1, 8, 107, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 9, 108, 35]" + "'", str12, "[-1, 9, 108, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 10, 109, 35]" + "'", str13, "[-1, 10, 109, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 11, 110, 35]" + "'", str14, "[-1, 11, 110, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 12, 111, 35]" + "'", str15, "[-1, 12, 111, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 13, 112, 35]" + "'", str16, "[-1, 13, 112, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 14, 113, 35]" + "'", str17, "[-1, 14, 113, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 15, 114, 35]" + "'", str18, "[-1, 15, 114, 35]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 16, 115, 35]" + "'", str19, "[-1, 16, 115, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 17, 116, 35]" + "'", str20, "[-1, 17, 116, 35]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 18, 117, 35]" + "'", str21, "[-1, 18, 117, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 19, 118, 35]" + "'", str22, "[-1, 19, 118, 35]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 20, 119, 35]" + "'", str23, "[-1, 20, 119, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 21, 120, 35]" + "'", str24, "[-1, 21, 120, 35]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 22, 121, 35]" + "'", str25, "[-1, 22, 121, 35]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 23, 122, 35]" + "'", str26, "[-1, 23, 122, 35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 24, 123, 35]" + "'", str27, "[-1, 24, 123, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 25, 124, 35]" + "'", str28, "[-1, 25, 124, 35]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 26, 125, 35]" + "'", str29, "[-1, 26, 125, 35]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 27, 126, 35]" + "'", str30, "[-1, 27, 126, 35]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 28, 127, 35]" + "'", str31, "[-1, 28, 127, 35]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 29, 128, 35]" + "'", str32, "[-1, 29, 128, 35]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 30, 129, 35]" + "'", str33, "[-1, 30, 129, 35]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 31, 130, 35]" + "'", str34, "[-1, 31, 130, 35]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 32, 131, 35]" + "'", str35, "[-1, 32, 131, 35]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 33, 132, 35]" + "'", str36, "[-1, 33, 132, 35]");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test2680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2680");
        int[] intArray2 = new int[] { (short) 1, (short) -1 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str90 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str91 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass92 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[8, 8]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 0]" + "'", str3, "[2, 0]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 1]" + "'", str4, "[3, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 2]" + "'", str5, "[4, 2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 3]" + "'", str6, "[5, 3]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 4]" + "'", str7, "[6, 4]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 5]" + "'", str8, "[7, 5]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 6]" + "'", str9, "[8, 6]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 7]" + "'", str10, "[9, 7]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 8]" + "'", str11, "[10, 8]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 9]" + "'", str12, "[11, 9]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 1]" + "'", str13, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1]" + "'", str14, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2]" + "'", str15, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[3, 3]" + "'", str16, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[4, 4]" + "'", str17, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[5, 5]" + "'", str18, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[6, 6]" + "'", str19, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[7, 7]" + "'", str20, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[8, 8]" + "'", str21, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[9, 9]" + "'", str22, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 1]" + "'", str23, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1]" + "'", str24, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 2]" + "'", str25, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3]" + "'", str26, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[4, 4]" + "'", str27, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[5, 5]" + "'", str28, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[6, 6]" + "'", str29, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[7, 7]" + "'", str30, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[8, 8]" + "'", str31, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[9, 9]" + "'", str32, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 0, 1]" + "'", str33, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1]" + "'", str34, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 2]" + "'", str35, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 3]" + "'", str36, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4]" + "'", str37, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[5, 5]" + "'", str38, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[6, 6]" + "'", str39, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[7, 7]" + "'", str40, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[8, 8]" + "'", str41, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[9, 9]" + "'", str42, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 0, 1]" + "'", str43, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1]" + "'", str44, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[2, 2]" + "'", str45, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 3]" + "'", str46, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 4]" + "'", str47, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5]" + "'", str48, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[6, 6]" + "'", str49, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[7, 7]" + "'", str50, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[8, 8]" + "'", str51, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[9, 9]" + "'", str52, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 0, 1]" + "'", str53, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 1]" + "'", str54, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[2, 2]" + "'", str55, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[3, 3]" + "'", str56, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[4, 4]" + "'", str57, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 5]" + "'", str58, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 6]" + "'", str59, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[7, 7]" + "'", str60, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[8, 8]" + "'", str61, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[9, 9]" + "'", str62, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 0, 1]" + "'", str63, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 1]" + "'", str64, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[2, 2]" + "'", str65, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[3, 3]" + "'", str66, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[4, 4]" + "'", str67, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[5, 5]" + "'", str68, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[6, 6]" + "'", str69, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[7, 7]" + "'", str70, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[8, 8]" + "'", str71, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[9, 9]" + "'", str72, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 0, 1]" + "'", str73, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 1]" + "'", str74, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[2, 2]" + "'", str75, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[3, 3]" + "'", str76, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[4, 4]" + "'", str77, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[5, 5]" + "'", str78, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[6, 6]" + "'", str79, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[7, 7]" + "'", str80, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[8, 8]" + "'", str81, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[9, 9]" + "'", str82, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[1, 0, 1]" + "'", str83, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[1, 1]" + "'", str84, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[2, 2]" + "'", str85, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[3, 3]" + "'", str86, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[4, 4]" + "'", str87, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[5, 5]" + "'", str88, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[6, 6]" + "'", str89, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[7, 7]" + "'", str90, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[8, 8]" + "'", str91, "[8, 8]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2681");
        int[] intArray3 = new int[] { '#', (byte) 100, 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass81 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[35, 177, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[35, 101, 1]" + "'", str4, "[35, 101, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 102, 1]" + "'", str5, "[35, 102, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 103, 1]" + "'", str6, "[35, 103, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 104, 1]" + "'", str7, "[35, 104, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 105, 1]" + "'", str8, "[35, 105, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 106, 1]" + "'", str9, "[35, 106, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 107, 1]" + "'", str10, "[35, 107, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 108, 1]" + "'", str11, "[35, 108, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 109, 1]" + "'", str12, "[35, 109, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 110, 1]" + "'", str13, "[35, 110, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 111, 1]" + "'", str14, "[35, 111, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[35, 112, 1]" + "'", str15, "[35, 112, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[35, 113, 1]" + "'", str16, "[35, 113, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[35, 114, 1]" + "'", str17, "[35, 114, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[35, 115, 1]" + "'", str18, "[35, 115, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[35, 116, 1]" + "'", str19, "[35, 116, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[35, 117, 1]" + "'", str20, "[35, 117, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[35, 118, 1]" + "'", str21, "[35, 118, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[35, 119, 1]" + "'", str22, "[35, 119, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[35, 120, 1]" + "'", str23, "[35, 120, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[35, 121, 1]" + "'", str24, "[35, 121, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[35, 122, 1]" + "'", str25, "[35, 122, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35, 123, 1]" + "'", str26, "[35, 123, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 124, 1]" + "'", str27, "[35, 124, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[35, 125, 1]" + "'", str28, "[35, 125, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[35, 126, 1]" + "'", str29, "[35, 126, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[35, 127, 1]" + "'", str30, "[35, 127, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[35, 128, 1]" + "'", str31, "[35, 128, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 129, 1]" + "'", str32, "[35, 129, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 130, 1]" + "'", str33, "[35, 130, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 131, 1]" + "'", str34, "[35, 131, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 132, 1]" + "'", str35, "[35, 132, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 133, 1]" + "'", str36, "[35, 133, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 134, 1]" + "'", str37, "[35, 134, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 135, 1]" + "'", str38, "[35, 135, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 136, 1]" + "'", str39, "[35, 136, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 137, 1]" + "'", str40, "[35, 137, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 138, 1]" + "'", str41, "[35, 138, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 139, 1]" + "'", str42, "[35, 139, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 140, 1]" + "'", str43, "[35, 140, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[35, 141, 1]" + "'", str44, "[35, 141, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[35, 142, 1]" + "'", str45, "[35, 142, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[35, 143, 1]" + "'", str46, "[35, 143, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[35, 144, 1]" + "'", str47, "[35, 144, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[35, 145, 1]" + "'", str48, "[35, 145, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[35, 146, 1]" + "'", str49, "[35, 146, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[35, 147, 1]" + "'", str50, "[35, 147, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[35, 148, 1]" + "'", str51, "[35, 148, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[35, 149, 1]" + "'", str52, "[35, 149, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[35, 150, 1]" + "'", str53, "[35, 150, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[35, 151, 1]" + "'", str54, "[35, 151, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[35, 152, 1]" + "'", str55, "[35, 152, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[35, 153, 1]" + "'", str56, "[35, 153, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[35, 154, 1]" + "'", str57, "[35, 154, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[35, 155, 1]" + "'", str58, "[35, 155, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[35, 156, 1]" + "'", str59, "[35, 156, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[35, 157, 1]" + "'", str60, "[35, 157, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[35, 158, 1]" + "'", str61, "[35, 158, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[35, 159, 1]" + "'", str62, "[35, 159, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[35, 160, 1]" + "'", str63, "[35, 160, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[35, 161, 1]" + "'", str64, "[35, 161, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[35, 162, 1]" + "'", str65, "[35, 162, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[35, 163, 1]" + "'", str66, "[35, 163, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[35, 164, 1]" + "'", str67, "[35, 164, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[35, 165, 1]" + "'", str68, "[35, 165, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[35, 166, 1]" + "'", str69, "[35, 166, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[35, 167, 1]" + "'", str70, "[35, 167, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[35, 168, 1]" + "'", str71, "[35, 168, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[35, 169, 1]" + "'", str72, "[35, 169, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[35, 170, 1]" + "'", str73, "[35, 170, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[35, 171, 1]" + "'", str74, "[35, 171, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[35, 172, 1]" + "'", str75, "[35, 172, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[35, 173, 1]" + "'", str76, "[35, 173, 1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[35, 174, 1]" + "'", str77, "[35, 174, 1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[35, 175, 1]" + "'", str78, "[35, 175, 1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[35, 176, 1]" + "'", str79, "[35, 176, 1]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[35, 177, 1]" + "'", str80, "[35, 177, 1]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test2682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2682");
        int[] intArray4 = new int[] { (byte) 0, (short) 10, (short) -1, 'a' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass71 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[6, 5, 5, 103]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 11, 0, 97]" + "'", str5, "[0, 11, 0, 97]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 12, 1, 97]" + "'", str6, "[0, 12, 1, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 13, 2, 97]" + "'", str7, "[0, 13, 2, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 14, 3, 97]" + "'", str8, "[0, 14, 3, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 15, 4, 97]" + "'", str9, "[0, 15, 4, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 16, 5, 97]" + "'", str10, "[0, 16, 5, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 17, 6, 97]" + "'", str11, "[0, 17, 6, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 18, 7, 97]" + "'", str12, "[0, 18, 7, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 19, 8, 97]" + "'", str13, "[0, 19, 8, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 20, 9, 97]" + "'", str14, "[0, 20, 9, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 0, 98]" + "'", str15, "[1, 0, 0, 98]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 1, 98]" + "'", str16, "[1, 1, 1, 98]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 2, 98]" + "'", str17, "[1, 2, 2, 98]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 3, 3, 98]" + "'", str18, "[1, 3, 3, 98]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 4, 4, 98]" + "'", str19, "[1, 4, 4, 98]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 5, 5, 98]" + "'", str20, "[1, 5, 5, 98]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 6, 6, 98]" + "'", str21, "[1, 6, 6, 98]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 7, 7, 98]" + "'", str22, "[1, 7, 7, 98]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 8, 8, 98]" + "'", str23, "[1, 8, 8, 98]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 9, 9, 98]" + "'", str24, "[1, 9, 9, 98]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 0, 0, 99]" + "'", str25, "[2, 0, 0, 99]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 1, 1, 99]" + "'", str26, "[2, 1, 1, 99]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 2, 2, 99]" + "'", str27, "[2, 2, 2, 99]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 3, 3, 99]" + "'", str28, "[2, 3, 3, 99]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 4, 4, 99]" + "'", str29, "[2, 4, 4, 99]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 5, 5, 99]" + "'", str30, "[2, 5, 5, 99]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 6, 6, 99]" + "'", str31, "[2, 6, 6, 99]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 7, 7, 99]" + "'", str32, "[2, 7, 7, 99]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 8, 8, 99]" + "'", str33, "[2, 8, 8, 99]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 9, 9, 99]" + "'", str34, "[2, 9, 9, 99]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 0, 0, 100]" + "'", str35, "[3, 0, 0, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 1, 1, 100]" + "'", str36, "[3, 1, 1, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 2, 2, 100]" + "'", str37, "[3, 2, 2, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 3, 3, 100]" + "'", str38, "[3, 3, 3, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 4, 4, 100]" + "'", str39, "[3, 4, 4, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 5, 5, 100]" + "'", str40, "[3, 5, 5, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 6, 6, 100]" + "'", str41, "[3, 6, 6, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[3, 7, 7, 100]" + "'", str42, "[3, 7, 7, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 8, 8, 100]" + "'", str43, "[3, 8, 8, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 9, 9, 100]" + "'", str44, "[3, 9, 9, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 0, 0, 101]" + "'", str45, "[4, 0, 0, 101]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 1, 1, 101]" + "'", str46, "[4, 1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 2, 2, 101]" + "'", str47, "[4, 2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[4, 3, 3, 101]" + "'", str48, "[4, 3, 3, 101]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[4, 4, 4, 101]" + "'", str49, "[4, 4, 4, 101]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[4, 5, 5, 101]" + "'", str50, "[4, 5, 5, 101]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[4, 6, 6, 101]" + "'", str51, "[4, 6, 6, 101]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[4, 7, 7, 101]" + "'", str52, "[4, 7, 7, 101]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[4, 8, 8, 101]" + "'", str53, "[4, 8, 8, 101]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[4, 9, 9, 101]" + "'", str54, "[4, 9, 9, 101]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[5, 0, 0, 102]" + "'", str55, "[5, 0, 0, 102]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5, 1, 1, 102]" + "'", str56, "[5, 1, 1, 102]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5, 2, 2, 102]" + "'", str57, "[5, 2, 2, 102]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 3, 3, 102]" + "'", str58, "[5, 3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[5, 4, 4, 102]" + "'", str59, "[5, 4, 4, 102]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[5, 5, 5, 102]" + "'", str60, "[5, 5, 5, 102]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[5, 6, 6, 102]" + "'", str61, "[5, 6, 6, 102]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[5, 7, 7, 102]" + "'", str62, "[5, 7, 7, 102]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[5, 8, 8, 102]" + "'", str63, "[5, 8, 8, 102]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[5, 9, 9, 102]" + "'", str64, "[5, 9, 9, 102]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[6, 0, 0, 103]" + "'", str65, "[6, 0, 0, 103]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[6, 1, 1, 103]" + "'", str66, "[6, 1, 1, 103]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[6, 2, 2, 103]" + "'", str67, "[6, 2, 2, 103]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[6, 3, 3, 103]" + "'", str68, "[6, 3, 3, 103]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[6, 4, 4, 103]" + "'", str69, "[6, 4, 4, 103]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[6, 5, 5, 103]" + "'", str70, "[6, 5, 5, 103]");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test2683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2683");
        int[] intArray4 = new int[] { (short) 1, (byte) 10, (byte) 0, (-1) };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass59 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[6, 4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 11, 1, -1]" + "'", str5, "[1, 11, 1, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 12, 2, -1]" + "'", str6, "[1, 12, 2, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 13, 3, -1]" + "'", str7, "[1, 13, 3, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 14, 4, -1]" + "'", str8, "[1, 14, 4, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 15, 5, -1]" + "'", str9, "[1, 15, 5, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 16, 6, -1]" + "'", str10, "[1, 16, 6, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 17, 7, -1]" + "'", str11, "[1, 17, 7, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 18, 8, -1]" + "'", str12, "[1, 18, 8, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 19, 9, -1]" + "'", str13, "[1, 19, 9, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 0, 0, 0]" + "'", str14, "[2, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 1, 1, 0]" + "'", str15, "[2, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 2, 2, 0]" + "'", str16, "[2, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 3, 3, 0]" + "'", str17, "[2, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 4, 4, 0]" + "'", str18, "[2, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 5, 5, 0]" + "'", str19, "[2, 5, 5, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 6, 6, 0]" + "'", str20, "[2, 6, 6, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 7, 7, 0]" + "'", str21, "[2, 7, 7, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 8, 8, 0]" + "'", str22, "[2, 8, 8, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 9, 9, 0]" + "'", str23, "[2, 9, 9, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 0, 0, 1]" + "'", str24, "[3, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 1, 1, 1]" + "'", str25, "[3, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 2, 2, 1]" + "'", str26, "[3, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 3, 3, 1]" + "'", str27, "[3, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 4, 4, 1]" + "'", str28, "[3, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[3, 5, 5, 1]" + "'", str29, "[3, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[3, 6, 6, 1]" + "'", str30, "[3, 6, 6, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[3, 7, 7, 1]" + "'", str31, "[3, 7, 7, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[3, 8, 8, 1]" + "'", str32, "[3, 8, 8, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[3, 9, 9, 1]" + "'", str33, "[3, 9, 9, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4, 0, 0, 2]" + "'", str34, "[4, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 1, 1, 2]" + "'", str35, "[4, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 2, 2, 2]" + "'", str36, "[4, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 3, 3, 2]" + "'", str37, "[4, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[4, 4, 4, 2]" + "'", str38, "[4, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[4, 5, 5, 2]" + "'", str39, "[4, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[4, 6, 6, 2]" + "'", str40, "[4, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[4, 7, 7, 2]" + "'", str41, "[4, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[4, 8, 8, 2]" + "'", str42, "[4, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[4, 9, 9, 2]" + "'", str43, "[4, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[5, 0, 0, 3]" + "'", str44, "[5, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[5, 1, 1, 3]" + "'", str45, "[5, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 2, 2, 3]" + "'", str46, "[5, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 3, 3, 3]" + "'", str47, "[5, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 4, 4, 3]" + "'", str48, "[5, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[5, 5, 5, 3]" + "'", str49, "[5, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[5, 6, 6, 3]" + "'", str50, "[5, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[5, 7, 7, 3]" + "'", str51, "[5, 7, 7, 3]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[5, 8, 8, 3]" + "'", str52, "[5, 8, 8, 3]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[5, 9, 9, 3]" + "'", str53, "[5, 9, 9, 3]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[6, 0, 0, 4]" + "'", str54, "[6, 0, 0, 4]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[6, 1, 1, 4]" + "'", str55, "[6, 1, 1, 4]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[6, 2, 2, 4]" + "'", str56, "[6, 2, 2, 4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6, 3, 3, 4]" + "'", str57, "[6, 3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6, 4, 4, 4]" + "'", str58, "[6, 4, 4, 4]");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test2684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2684");
        int[] intArray5 = new int[] { 'a', 0, (byte) 100, (-1), (byte) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass11 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[97, 0, 105, -1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 0, 101, -1, 1]" + "'", str6, "[97, 0, 101, -1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 0, 102, -1, 1]" + "'", str7, "[97, 0, 102, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 0, 103, -1, 1]" + "'", str8, "[97, 0, 103, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 0, 104, -1, 1]" + "'", str9, "[97, 0, 104, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 0, 105, -1, 1]" + "'", str10, "[97, 0, 105, -1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test2685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2685");
        int[] intArray4 = new int[] { 'a', 10, 100, (short) 10 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str90 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass91 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, 96, 186, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 11, 101, 10]" + "'", str5, "[97, 11, 101, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 12, 102, 10]" + "'", str6, "[97, 12, 102, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 13, 103, 10]" + "'", str7, "[97, 13, 103, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 14, 104, 10]" + "'", str8, "[97, 14, 104, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 15, 105, 10]" + "'", str9, "[97, 15, 105, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 16, 106, 10]" + "'", str10, "[97, 16, 106, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 17, 107, 10]" + "'", str11, "[97, 17, 107, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 18, 108, 10]" + "'", str12, "[97, 18, 108, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 19, 109, 10]" + "'", str13, "[97, 19, 109, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 20, 110, 10]" + "'", str14, "[97, 20, 110, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[97, 21, 111, 10]" + "'", str15, "[97, 21, 111, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[97, 22, 112, 10]" + "'", str16, "[97, 22, 112, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[97, 23, 113, 10]" + "'", str17, "[97, 23, 113, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[97, 24, 114, 10]" + "'", str18, "[97, 24, 114, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[97, 25, 115, 10]" + "'", str19, "[97, 25, 115, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[97, 26, 116, 10]" + "'", str20, "[97, 26, 116, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[97, 27, 117, 10]" + "'", str21, "[97, 27, 117, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[97, 28, 118, 10]" + "'", str22, "[97, 28, 118, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[97, 29, 119, 10]" + "'", str23, "[97, 29, 119, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[97, 30, 120, 10]" + "'", str24, "[97, 30, 120, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[97, 31, 121, 10]" + "'", str25, "[97, 31, 121, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[97, 32, 122, 10]" + "'", str26, "[97, 32, 122, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[97, 33, 123, 10]" + "'", str27, "[97, 33, 123, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[97, 34, 124, 10]" + "'", str28, "[97, 34, 124, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[97, 35, 125, 10]" + "'", str29, "[97, 35, 125, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[97, 36, 126, 10]" + "'", str30, "[97, 36, 126, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[97, 37, 127, 10]" + "'", str31, "[97, 37, 127, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[97, 38, 128, 10]" + "'", str32, "[97, 38, 128, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[97, 39, 129, 10]" + "'", str33, "[97, 39, 129, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[97, 40, 130, 10]" + "'", str34, "[97, 40, 130, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[97, 41, 131, 10]" + "'", str35, "[97, 41, 131, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[97, 42, 132, 10]" + "'", str36, "[97, 42, 132, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[97, 43, 133, 10]" + "'", str37, "[97, 43, 133, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[97, 44, 134, 10]" + "'", str38, "[97, 44, 134, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[97, 45, 135, 10]" + "'", str39, "[97, 45, 135, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[97, 46, 136, 10]" + "'", str40, "[97, 46, 136, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[97, 47, 137, 10]" + "'", str41, "[97, 47, 137, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[97, 48, 138, 10]" + "'", str42, "[97, 48, 138, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[97, 49, 139, 10]" + "'", str43, "[97, 49, 139, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[97, 50, 140, 10]" + "'", str44, "[97, 50, 140, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[97, 51, 141, 10]" + "'", str45, "[97, 51, 141, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[97, 52, 142, 10]" + "'", str46, "[97, 52, 142, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[97, 53, 143, 10]" + "'", str47, "[97, 53, 143, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[97, 54, 144, 10]" + "'", str48, "[97, 54, 144, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[97, 55, 145, 10]" + "'", str49, "[97, 55, 145, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[97, 56, 146, 10]" + "'", str50, "[97, 56, 146, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[97, 57, 147, 10]" + "'", str51, "[97, 57, 147, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[97, 58, 148, 10]" + "'", str52, "[97, 58, 148, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[97, 59, 149, 10]" + "'", str53, "[97, 59, 149, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[97, 60, 150, 10]" + "'", str54, "[97, 60, 150, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[97, 61, 151, 10]" + "'", str55, "[97, 61, 151, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[97, 62, 152, 10]" + "'", str56, "[97, 62, 152, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[97, 63, 153, 10]" + "'", str57, "[97, 63, 153, 10]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[97, 64, 154, 10]" + "'", str58, "[97, 64, 154, 10]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[97, 65, 155, 10]" + "'", str59, "[97, 65, 155, 10]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[97, 66, 156, 10]" + "'", str60, "[97, 66, 156, 10]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[97, 67, 157, 10]" + "'", str61, "[97, 67, 157, 10]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[97, 68, 158, 10]" + "'", str62, "[97, 68, 158, 10]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[97, 69, 159, 10]" + "'", str63, "[97, 69, 159, 10]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[97, 70, 160, 10]" + "'", str64, "[97, 70, 160, 10]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[97, 71, 161, 10]" + "'", str65, "[97, 71, 161, 10]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[97, 72, 162, 10]" + "'", str66, "[97, 72, 162, 10]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[97, 73, 163, 10]" + "'", str67, "[97, 73, 163, 10]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[97, 74, 164, 10]" + "'", str68, "[97, 74, 164, 10]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[97, 75, 165, 10]" + "'", str69, "[97, 75, 165, 10]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[97, 76, 166, 10]" + "'", str70, "[97, 76, 166, 10]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[97, 77, 167, 10]" + "'", str71, "[97, 77, 167, 10]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[97, 78, 168, 10]" + "'", str72, "[97, 78, 168, 10]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[97, 79, 169, 10]" + "'", str73, "[97, 79, 169, 10]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[97, 80, 170, 10]" + "'", str74, "[97, 80, 170, 10]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[97, 81, 171, 10]" + "'", str75, "[97, 81, 171, 10]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[97, 82, 172, 10]" + "'", str76, "[97, 82, 172, 10]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[97, 83, 173, 10]" + "'", str77, "[97, 83, 173, 10]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[97, 84, 174, 10]" + "'", str78, "[97, 84, 174, 10]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[97, 85, 175, 10]" + "'", str79, "[97, 85, 175, 10]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[97, 86, 176, 10]" + "'", str80, "[97, 86, 176, 10]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[97, 87, 177, 10]" + "'", str81, "[97, 87, 177, 10]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[97, 88, 178, 10]" + "'", str82, "[97, 88, 178, 10]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[97, 89, 179, 10]" + "'", str83, "[97, 89, 179, 10]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[97, 90, 180, 10]" + "'", str84, "[97, 90, 180, 10]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[97, 91, 181, 10]" + "'", str85, "[97, 91, 181, 10]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[97, 92, 182, 10]" + "'", str86, "[97, 92, 182, 10]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[97, 93, 183, 10]" + "'", str87, "[97, 93, 183, 10]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[97, 94, 184, 10]" + "'", str88, "[97, 94, 184, 10]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[97, 95, 185, 10]" + "'", str89, "[97, 95, 185, 10]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[97, 96, 186, 10]" + "'", str90, "[97, 96, 186, 10]");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2686");
        int[] intArray1 = new int[] { 10 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass71 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[79]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[11]" + "'", str2, "[11]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[12]" + "'", str3, "[12]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[13]" + "'", str4, "[13]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[14]" + "'", str5, "[14]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[15]" + "'", str6, "[15]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[16]" + "'", str7, "[16]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[17]" + "'", str8, "[17]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[18]" + "'", str9, "[18]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[19]" + "'", str10, "[19]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[20]" + "'", str11, "[20]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[21]" + "'", str12, "[21]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[22]" + "'", str13, "[22]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[23]" + "'", str14, "[23]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[24]" + "'", str15, "[24]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[25]" + "'", str16, "[25]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[26]" + "'", str17, "[26]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[27]" + "'", str18, "[27]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[28]" + "'", str19, "[28]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[29]" + "'", str20, "[29]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[30]" + "'", str21, "[30]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[31]" + "'", str22, "[31]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32]" + "'", str23, "[32]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[33]" + "'", str24, "[33]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34]" + "'", str25, "[34]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35]" + "'", str26, "[35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[36]" + "'", str27, "[36]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[37]" + "'", str28, "[37]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[38]" + "'", str29, "[38]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[39]" + "'", str30, "[39]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[40]" + "'", str31, "[40]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[41]" + "'", str32, "[41]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[42]" + "'", str33, "[42]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[43]" + "'", str34, "[43]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[44]" + "'", str35, "[44]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[45]" + "'", str36, "[45]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[46]" + "'", str37, "[46]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[47]" + "'", str38, "[47]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[48]" + "'", str39, "[48]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[49]" + "'", str40, "[49]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[50]" + "'", str41, "[50]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[51]" + "'", str42, "[51]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[52]" + "'", str43, "[52]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[53]" + "'", str44, "[53]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[54]" + "'", str45, "[54]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[55]" + "'", str46, "[55]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[56]" + "'", str47, "[56]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[57]" + "'", str48, "[57]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[58]" + "'", str49, "[58]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[59]" + "'", str50, "[59]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[60]" + "'", str51, "[60]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[61]" + "'", str52, "[61]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[62]" + "'", str53, "[62]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[63]" + "'", str54, "[63]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[64]" + "'", str55, "[64]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[65]" + "'", str56, "[65]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[66]" + "'", str57, "[66]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[67]" + "'", str58, "[67]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[68]" + "'", str59, "[68]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[69]" + "'", str60, "[69]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[70]" + "'", str61, "[70]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[71]" + "'", str62, "[71]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[72]" + "'", str63, "[72]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[73]" + "'", str64, "[73]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[74]" + "'", str65, "[74]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[75]" + "'", str66, "[75]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[76]" + "'", str67, "[76]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[77]" + "'", str68, "[77]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[78]" + "'", str69, "[78]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[79]" + "'", str70, "[79]");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test2687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2687");
        int[] intArray5 = new int[] { 'a', '4', 10, (-1), 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass14 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[97, 52, 18, -1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 52, 11, -1, 1]" + "'", str6, "[97, 52, 11, -1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 52, 12, -1, 1]" + "'", str7, "[97, 52, 12, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 52, 13, -1, 1]" + "'", str8, "[97, 52, 13, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 52, 14, -1, 1]" + "'", str9, "[97, 52, 14, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 52, 15, -1, 1]" + "'", str10, "[97, 52, 15, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 52, 16, -1, 1]" + "'", str11, "[97, 52, 16, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 52, 17, -1, 1]" + "'", str12, "[97, 52, 17, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 52, 18, -1, 1]" + "'", str13, "[97, 52, 18, -1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2688");
        int[] intArray4 = new int[] { 'a', (short) 1, (byte) -1, (short) 0 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass65 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[102, 9, 9, 5]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 2, 0, 0]" + "'", str5, "[97, 2, 0, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 3, 1, 0]" + "'", str6, "[97, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 4, 2, 0]" + "'", str7, "[97, 4, 2, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 5, 3, 0]" + "'", str8, "[97, 5, 3, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 6, 4, 0]" + "'", str9, "[97, 6, 4, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 7, 5, 0]" + "'", str10, "[97, 7, 5, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 8, 6, 0]" + "'", str11, "[97, 8, 6, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 9, 7, 0]" + "'", str12, "[97, 9, 7, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 10, 8, 0]" + "'", str13, "[97, 10, 8, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 11, 9, 0]" + "'", str14, "[97, 11, 9, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[98, 0, 0, 1]" + "'", str15, "[98, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[98, 1, 1, 1]" + "'", str16, "[98, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[98, 2, 2, 1]" + "'", str17, "[98, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[98, 3, 3, 1]" + "'", str18, "[98, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[98, 4, 4, 1]" + "'", str19, "[98, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[98, 5, 5, 1]" + "'", str20, "[98, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[98, 6, 6, 1]" + "'", str21, "[98, 6, 6, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[98, 7, 7, 1]" + "'", str22, "[98, 7, 7, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[98, 8, 8, 1]" + "'", str23, "[98, 8, 8, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[98, 9, 9, 1]" + "'", str24, "[98, 9, 9, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[99, 0, 0, 2]" + "'", str25, "[99, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[99, 1, 1, 2]" + "'", str26, "[99, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[99, 2, 2, 2]" + "'", str27, "[99, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[99, 3, 3, 2]" + "'", str28, "[99, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[99, 4, 4, 2]" + "'", str29, "[99, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[99, 5, 5, 2]" + "'", str30, "[99, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[99, 6, 6, 2]" + "'", str31, "[99, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[99, 7, 7, 2]" + "'", str32, "[99, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[99, 8, 8, 2]" + "'", str33, "[99, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[99, 9, 9, 2]" + "'", str34, "[99, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 0, 0, 3]" + "'", str35, "[100, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 1, 1, 3]" + "'", str36, "[100, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 2, 2, 3]" + "'", str37, "[100, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 3, 3, 3]" + "'", str38, "[100, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 4, 4, 3]" + "'", str39, "[100, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 5, 5, 3]" + "'", str40, "[100, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 6, 6, 3]" + "'", str41, "[100, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 7, 7, 3]" + "'", str42, "[100, 7, 7, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 8, 8, 3]" + "'", str43, "[100, 8, 8, 3]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 9, 9, 3]" + "'", str44, "[100, 9, 9, 3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[101, 0, 0, 4]" + "'", str45, "[101, 0, 0, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[101, 1, 1, 4]" + "'", str46, "[101, 1, 1, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[101, 2, 2, 4]" + "'", str47, "[101, 2, 2, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[101, 3, 3, 4]" + "'", str48, "[101, 3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[101, 4, 4, 4]" + "'", str49, "[101, 4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[101, 5, 5, 4]" + "'", str50, "[101, 5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[101, 6, 6, 4]" + "'", str51, "[101, 6, 6, 4]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[101, 7, 7, 4]" + "'", str52, "[101, 7, 7, 4]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[101, 8, 8, 4]" + "'", str53, "[101, 8, 8, 4]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[101, 9, 9, 4]" + "'", str54, "[101, 9, 9, 4]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[102, 0, 0, 5]" + "'", str55, "[102, 0, 0, 5]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[102, 1, 1, 5]" + "'", str56, "[102, 1, 1, 5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[102, 2, 2, 5]" + "'", str57, "[102, 2, 2, 5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[102, 3, 3, 5]" + "'", str58, "[102, 3, 3, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[102, 4, 4, 5]" + "'", str59, "[102, 4, 4, 5]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[102, 5, 5, 5]" + "'", str60, "[102, 5, 5, 5]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[102, 6, 6, 5]" + "'", str61, "[102, 6, 6, 5]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[102, 7, 7, 5]" + "'", str62, "[102, 7, 7, 5]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[102, 8, 8, 5]" + "'", str63, "[102, 8, 8, 5]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[102, 9, 9, 5]" + "'", str64, "[102, 9, 9, 5]");
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test2689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2689");
        int[] intArray3 = new int[] { ' ', (-1), 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass85 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[40, 0, 9]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 0, 1]" + "'", str4, "[32, 0, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 1, 1]" + "'", str5, "[32, 1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 2, 1]" + "'", str6, "[32, 2, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 3, 1]" + "'", str7, "[32, 3, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 4, 1]" + "'", str8, "[32, 4, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 5, 1]" + "'", str9, "[32, 5, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 6, 1]" + "'", str10, "[32, 6, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 7, 1]" + "'", str11, "[32, 7, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 8, 1]" + "'", str12, "[32, 8, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 9, 1]" + "'", str13, "[32, 9, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[33, 0, 2]" + "'", str14, "[33, 0, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[33, 1, 2]" + "'", str15, "[33, 1, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[33, 2, 2]" + "'", str16, "[33, 2, 2]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[33, 3, 2]" + "'", str17, "[33, 3, 2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[33, 4, 2]" + "'", str18, "[33, 4, 2]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[33, 5, 2]" + "'", str19, "[33, 5, 2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[33, 6, 2]" + "'", str20, "[33, 6, 2]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[33, 7, 2]" + "'", str21, "[33, 7, 2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[33, 8, 2]" + "'", str22, "[33, 8, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[33, 9, 2]" + "'", str23, "[33, 9, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[34, 0, 3]" + "'", str24, "[34, 0, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34, 1, 3]" + "'", str25, "[34, 1, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 2, 3]" + "'", str26, "[34, 2, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[34, 3, 3]" + "'", str27, "[34, 3, 3]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[34, 4, 3]" + "'", str28, "[34, 4, 3]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[34, 5, 3]" + "'", str29, "[34, 5, 3]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[34, 6, 3]" + "'", str30, "[34, 6, 3]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[34, 7, 3]" + "'", str31, "[34, 7, 3]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[34, 8, 3]" + "'", str32, "[34, 8, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[34, 9, 3]" + "'", str33, "[34, 9, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 0, 4]" + "'", str34, "[35, 0, 4]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 1, 4]" + "'", str35, "[35, 1, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 2, 4]" + "'", str36, "[35, 2, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 3, 4]" + "'", str37, "[35, 3, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 4, 4]" + "'", str38, "[35, 4, 4]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 5, 4]" + "'", str39, "[35, 5, 4]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 6, 4]" + "'", str40, "[35, 6, 4]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 7, 4]" + "'", str41, "[35, 7, 4]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 8, 4]" + "'", str42, "[35, 8, 4]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 9, 4]" + "'", str43, "[35, 9, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[36, 0, 5]" + "'", str44, "[36, 0, 5]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[36, 1, 5]" + "'", str45, "[36, 1, 5]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[36, 2, 5]" + "'", str46, "[36, 2, 5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[36, 3, 5]" + "'", str47, "[36, 3, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[36, 4, 5]" + "'", str48, "[36, 4, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[36, 5, 5]" + "'", str49, "[36, 5, 5]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[36, 6, 5]" + "'", str50, "[36, 6, 5]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[36, 7, 5]" + "'", str51, "[36, 7, 5]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[36, 8, 5]" + "'", str52, "[36, 8, 5]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[36, 9, 5]" + "'", str53, "[36, 9, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[37, 0, 6]" + "'", str54, "[37, 0, 6]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[37, 1, 6]" + "'", str55, "[37, 1, 6]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[37, 2, 6]" + "'", str56, "[37, 2, 6]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[37, 3, 6]" + "'", str57, "[37, 3, 6]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[37, 4, 6]" + "'", str58, "[37, 4, 6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[37, 5, 6]" + "'", str59, "[37, 5, 6]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[37, 6, 6]" + "'", str60, "[37, 6, 6]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[37, 7, 6]" + "'", str61, "[37, 7, 6]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[37, 8, 6]" + "'", str62, "[37, 8, 6]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[37, 9, 6]" + "'", str63, "[37, 9, 6]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[38, 0, 7]" + "'", str64, "[38, 0, 7]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[38, 1, 7]" + "'", str65, "[38, 1, 7]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[38, 2, 7]" + "'", str66, "[38, 2, 7]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[38, 3, 7]" + "'", str67, "[38, 3, 7]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[38, 4, 7]" + "'", str68, "[38, 4, 7]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[38, 5, 7]" + "'", str69, "[38, 5, 7]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[38, 6, 7]" + "'", str70, "[38, 6, 7]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[38, 7, 7]" + "'", str71, "[38, 7, 7]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[38, 8, 7]" + "'", str72, "[38, 8, 7]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[38, 9, 7]" + "'", str73, "[38, 9, 7]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[39, 0, 8]" + "'", str74, "[39, 0, 8]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[39, 1, 8]" + "'", str75, "[39, 1, 8]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[39, 2, 8]" + "'", str76, "[39, 2, 8]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[39, 3, 8]" + "'", str77, "[39, 3, 8]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[39, 4, 8]" + "'", str78, "[39, 4, 8]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[39, 5, 8]" + "'", str79, "[39, 5, 8]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[39, 6, 8]" + "'", str80, "[39, 6, 8]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[39, 7, 8]" + "'", str81, "[39, 7, 8]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[39, 8, 8]" + "'", str82, "[39, 8, 8]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[39, 9, 8]" + "'", str83, "[39, 9, 8]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[40, 0, 9]" + "'", str84, "[40, 0, 9]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2690");
        int[] intArray5 = new int[] { (short) 1, 0, (byte) 100, '4', (byte) 0 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass26 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 120, 52, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 52, 0]" + "'", str6, "[1, 0, 101, 52, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 52, 0]" + "'", str7, "[1, 0, 102, 52, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 52, 0]" + "'", str8, "[1, 0, 103, 52, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 52, 0]" + "'", str9, "[1, 0, 104, 52, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 52, 0]" + "'", str10, "[1, 0, 105, 52, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 52, 0]" + "'", str11, "[1, 0, 106, 52, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 52, 0]" + "'", str12, "[1, 0, 107, 52, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 108, 52, 0]" + "'", str13, "[1, 0, 108, 52, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 109, 52, 0]" + "'", str14, "[1, 0, 109, 52, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 110, 52, 0]" + "'", str15, "[1, 0, 110, 52, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 111, 52, 0]" + "'", str16, "[1, 0, 111, 52, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 0, 112, 52, 0]" + "'", str17, "[1, 0, 112, 52, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 0, 113, 52, 0]" + "'", str18, "[1, 0, 113, 52, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 0, 114, 52, 0]" + "'", str19, "[1, 0, 114, 52, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 0, 115, 52, 0]" + "'", str20, "[1, 0, 115, 52, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 116, 52, 0]" + "'", str21, "[1, 0, 116, 52, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 117, 52, 0]" + "'", str22, "[1, 0, 117, 52, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 118, 52, 0]" + "'", str23, "[1, 0, 118, 52, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 119, 52, 0]" + "'", str24, "[1, 0, 119, 52, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 0, 120, 52, 0]" + "'", str25, "[1, 0, 120, 52, 0]");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test2691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2691");
        int[] intArray1 = new int[] { 10 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass69 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[77]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[11]" + "'", str2, "[11]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[12]" + "'", str3, "[12]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[13]" + "'", str4, "[13]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[14]" + "'", str5, "[14]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[15]" + "'", str6, "[15]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[16]" + "'", str7, "[16]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[17]" + "'", str8, "[17]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[18]" + "'", str9, "[18]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[19]" + "'", str10, "[19]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[20]" + "'", str11, "[20]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[21]" + "'", str12, "[21]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[22]" + "'", str13, "[22]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[23]" + "'", str14, "[23]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[24]" + "'", str15, "[24]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[25]" + "'", str16, "[25]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[26]" + "'", str17, "[26]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[27]" + "'", str18, "[27]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[28]" + "'", str19, "[28]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[29]" + "'", str20, "[29]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[30]" + "'", str21, "[30]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[31]" + "'", str22, "[31]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32]" + "'", str23, "[32]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[33]" + "'", str24, "[33]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34]" + "'", str25, "[34]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35]" + "'", str26, "[35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[36]" + "'", str27, "[36]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[37]" + "'", str28, "[37]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[38]" + "'", str29, "[38]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[39]" + "'", str30, "[39]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[40]" + "'", str31, "[40]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[41]" + "'", str32, "[41]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[42]" + "'", str33, "[42]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[43]" + "'", str34, "[43]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[44]" + "'", str35, "[44]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[45]" + "'", str36, "[45]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[46]" + "'", str37, "[46]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[47]" + "'", str38, "[47]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[48]" + "'", str39, "[48]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[49]" + "'", str40, "[49]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[50]" + "'", str41, "[50]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[51]" + "'", str42, "[51]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[52]" + "'", str43, "[52]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[53]" + "'", str44, "[53]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[54]" + "'", str45, "[54]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[55]" + "'", str46, "[55]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[56]" + "'", str47, "[56]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[57]" + "'", str48, "[57]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[58]" + "'", str49, "[58]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[59]" + "'", str50, "[59]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[60]" + "'", str51, "[60]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[61]" + "'", str52, "[61]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[62]" + "'", str53, "[62]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[63]" + "'", str54, "[63]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[64]" + "'", str55, "[64]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[65]" + "'", str56, "[65]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[66]" + "'", str57, "[66]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[67]" + "'", str58, "[67]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[68]" + "'", str59, "[68]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[69]" + "'", str60, "[69]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[70]" + "'", str61, "[70]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[71]" + "'", str62, "[71]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[72]" + "'", str63, "[72]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[73]" + "'", str64, "[73]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[74]" + "'", str65, "[74]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[75]" + "'", str66, "[75]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[76]" + "'", str67, "[76]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[77]" + "'", str68, "[77]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test2692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2692");
        int[] intArray5 = new int[] { (byte) 0, '#', ' ', 10, 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass67 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 35, 93, 10, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 35, 33, 10, 1]" + "'", str6, "[0, 35, 33, 10, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 35, 34, 10, 1]" + "'", str7, "[0, 35, 34, 10, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 35, 35, 10, 1]" + "'", str8, "[0, 35, 35, 10, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 35, 36, 10, 1]" + "'", str9, "[0, 35, 36, 10, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 35, 37, 10, 1]" + "'", str10, "[0, 35, 37, 10, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 35, 38, 10, 1]" + "'", str11, "[0, 35, 38, 10, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 35, 39, 10, 1]" + "'", str12, "[0, 35, 39, 10, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 35, 40, 10, 1]" + "'", str13, "[0, 35, 40, 10, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 35, 41, 10, 1]" + "'", str14, "[0, 35, 41, 10, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 35, 42, 10, 1]" + "'", str15, "[0, 35, 42, 10, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 35, 43, 10, 1]" + "'", str16, "[0, 35, 43, 10, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 35, 44, 10, 1]" + "'", str17, "[0, 35, 44, 10, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 35, 45, 10, 1]" + "'", str18, "[0, 35, 45, 10, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 35, 46, 10, 1]" + "'", str19, "[0, 35, 46, 10, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 35, 47, 10, 1]" + "'", str20, "[0, 35, 47, 10, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 35, 48, 10, 1]" + "'", str21, "[0, 35, 48, 10, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 35, 49, 10, 1]" + "'", str22, "[0, 35, 49, 10, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 35, 50, 10, 1]" + "'", str23, "[0, 35, 50, 10, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 35, 51, 10, 1]" + "'", str24, "[0, 35, 51, 10, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 35, 52, 10, 1]" + "'", str25, "[0, 35, 52, 10, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 35, 53, 10, 1]" + "'", str26, "[0, 35, 53, 10, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 35, 54, 10, 1]" + "'", str27, "[0, 35, 54, 10, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 35, 55, 10, 1]" + "'", str28, "[0, 35, 55, 10, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 35, 56, 10, 1]" + "'", str29, "[0, 35, 56, 10, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 35, 57, 10, 1]" + "'", str30, "[0, 35, 57, 10, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 35, 58, 10, 1]" + "'", str31, "[0, 35, 58, 10, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 35, 59, 10, 1]" + "'", str32, "[0, 35, 59, 10, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 35, 60, 10, 1]" + "'", str33, "[0, 35, 60, 10, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 35, 61, 10, 1]" + "'", str34, "[0, 35, 61, 10, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 35, 62, 10, 1]" + "'", str35, "[0, 35, 62, 10, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 35, 63, 10, 1]" + "'", str36, "[0, 35, 63, 10, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 35, 64, 10, 1]" + "'", str37, "[0, 35, 64, 10, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 35, 65, 10, 1]" + "'", str38, "[0, 35, 65, 10, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 35, 66, 10, 1]" + "'", str39, "[0, 35, 66, 10, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 35, 67, 10, 1]" + "'", str40, "[0, 35, 67, 10, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 35, 68, 10, 1]" + "'", str41, "[0, 35, 68, 10, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 35, 69, 10, 1]" + "'", str42, "[0, 35, 69, 10, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 35, 70, 10, 1]" + "'", str43, "[0, 35, 70, 10, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 35, 71, 10, 1]" + "'", str44, "[0, 35, 71, 10, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 35, 72, 10, 1]" + "'", str45, "[0, 35, 72, 10, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 35, 73, 10, 1]" + "'", str46, "[0, 35, 73, 10, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 35, 74, 10, 1]" + "'", str47, "[0, 35, 74, 10, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 35, 75, 10, 1]" + "'", str48, "[0, 35, 75, 10, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 35, 76, 10, 1]" + "'", str49, "[0, 35, 76, 10, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 35, 77, 10, 1]" + "'", str50, "[0, 35, 77, 10, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 35, 78, 10, 1]" + "'", str51, "[0, 35, 78, 10, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 35, 79, 10, 1]" + "'", str52, "[0, 35, 79, 10, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 35, 80, 10, 1]" + "'", str53, "[0, 35, 80, 10, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 35, 81, 10, 1]" + "'", str54, "[0, 35, 81, 10, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, 35, 82, 10, 1]" + "'", str55, "[0, 35, 82, 10, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, 35, 83, 10, 1]" + "'", str56, "[0, 35, 83, 10, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, 35, 84, 10, 1]" + "'", str57, "[0, 35, 84, 10, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, 35, 85, 10, 1]" + "'", str58, "[0, 35, 85, 10, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, 35, 86, 10, 1]" + "'", str59, "[0, 35, 86, 10, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, 35, 87, 10, 1]" + "'", str60, "[0, 35, 87, 10, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, 35, 88, 10, 1]" + "'", str61, "[0, 35, 88, 10, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, 35, 89, 10, 1]" + "'", str62, "[0, 35, 89, 10, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[0, 35, 90, 10, 1]" + "'", str63, "[0, 35, 90, 10, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[0, 35, 91, 10, 1]" + "'", str64, "[0, 35, 91, 10, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[0, 35, 92, 10, 1]" + "'", str65, "[0, 35, 92, 10, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[0, 35, 93, 10, 1]" + "'", str66, "[0, 35, 93, 10, 1]");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test2693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2693");
        int[] intArray5 = new int[] { (short) 1, 0, (byte) 100, '4', (byte) 0 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass25 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 119, 52, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 52, 0]" + "'", str6, "[1, 0, 101, 52, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 52, 0]" + "'", str7, "[1, 0, 102, 52, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 52, 0]" + "'", str8, "[1, 0, 103, 52, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 52, 0]" + "'", str9, "[1, 0, 104, 52, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 52, 0]" + "'", str10, "[1, 0, 105, 52, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 52, 0]" + "'", str11, "[1, 0, 106, 52, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 52, 0]" + "'", str12, "[1, 0, 107, 52, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 108, 52, 0]" + "'", str13, "[1, 0, 108, 52, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 109, 52, 0]" + "'", str14, "[1, 0, 109, 52, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 110, 52, 0]" + "'", str15, "[1, 0, 110, 52, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 111, 52, 0]" + "'", str16, "[1, 0, 111, 52, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 0, 112, 52, 0]" + "'", str17, "[1, 0, 112, 52, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 0, 113, 52, 0]" + "'", str18, "[1, 0, 113, 52, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 0, 114, 52, 0]" + "'", str19, "[1, 0, 114, 52, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 0, 115, 52, 0]" + "'", str20, "[1, 0, 115, 52, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 116, 52, 0]" + "'", str21, "[1, 0, 116, 52, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 117, 52, 0]" + "'", str22, "[1, 0, 117, 52, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 118, 52, 0]" + "'", str23, "[1, 0, 118, 52, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 119, 52, 0]" + "'", str24, "[1, 0, 119, 52, 0]");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test2694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2694");
        int[] intArray4 = new int[] { (short) 100, 'a', 100, '4' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass56 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 148, 151, 52]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 98, 101, 52]" + "'", str5, "[100, 98, 101, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 99, 102, 52]" + "'", str6, "[100, 99, 102, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 100, 103, 52]" + "'", str7, "[100, 100, 103, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 101, 104, 52]" + "'", str8, "[100, 101, 104, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 102, 105, 52]" + "'", str9, "[100, 102, 105, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 103, 106, 52]" + "'", str10, "[100, 103, 106, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 104, 107, 52]" + "'", str11, "[100, 104, 107, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 105, 108, 52]" + "'", str12, "[100, 105, 108, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 106, 109, 52]" + "'", str13, "[100, 106, 109, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 107, 110, 52]" + "'", str14, "[100, 107, 110, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 108, 111, 52]" + "'", str15, "[100, 108, 111, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 109, 112, 52]" + "'", str16, "[100, 109, 112, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 110, 113, 52]" + "'", str17, "[100, 110, 113, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 111, 114, 52]" + "'", str18, "[100, 111, 114, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 112, 115, 52]" + "'", str19, "[100, 112, 115, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 113, 116, 52]" + "'", str20, "[100, 113, 116, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 114, 117, 52]" + "'", str21, "[100, 114, 117, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 115, 118, 52]" + "'", str22, "[100, 115, 118, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 116, 119, 52]" + "'", str23, "[100, 116, 119, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 117, 120, 52]" + "'", str24, "[100, 117, 120, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 118, 121, 52]" + "'", str25, "[100, 118, 121, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 119, 122, 52]" + "'", str26, "[100, 119, 122, 52]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 120, 123, 52]" + "'", str27, "[100, 120, 123, 52]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 121, 124, 52]" + "'", str28, "[100, 121, 124, 52]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 122, 125, 52]" + "'", str29, "[100, 122, 125, 52]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 123, 126, 52]" + "'", str30, "[100, 123, 126, 52]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 124, 127, 52]" + "'", str31, "[100, 124, 127, 52]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 125, 128, 52]" + "'", str32, "[100, 125, 128, 52]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 126, 129, 52]" + "'", str33, "[100, 126, 129, 52]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 127, 130, 52]" + "'", str34, "[100, 127, 130, 52]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 128, 131, 52]" + "'", str35, "[100, 128, 131, 52]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 129, 132, 52]" + "'", str36, "[100, 129, 132, 52]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 130, 133, 52]" + "'", str37, "[100, 130, 133, 52]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 131, 134, 52]" + "'", str38, "[100, 131, 134, 52]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 132, 135, 52]" + "'", str39, "[100, 132, 135, 52]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 133, 136, 52]" + "'", str40, "[100, 133, 136, 52]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 134, 137, 52]" + "'", str41, "[100, 134, 137, 52]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 135, 138, 52]" + "'", str42, "[100, 135, 138, 52]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 136, 139, 52]" + "'", str43, "[100, 136, 139, 52]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 137, 140, 52]" + "'", str44, "[100, 137, 140, 52]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 138, 141, 52]" + "'", str45, "[100, 138, 141, 52]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 139, 142, 52]" + "'", str46, "[100, 139, 142, 52]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 140, 143, 52]" + "'", str47, "[100, 140, 143, 52]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 141, 144, 52]" + "'", str48, "[100, 141, 144, 52]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 142, 145, 52]" + "'", str49, "[100, 142, 145, 52]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 143, 146, 52]" + "'", str50, "[100, 143, 146, 52]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 144, 147, 52]" + "'", str51, "[100, 144, 147, 52]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 145, 148, 52]" + "'", str52, "[100, 145, 148, 52]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 146, 149, 52]" + "'", str53, "[100, 146, 149, 52]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 147, 150, 52]" + "'", str54, "[100, 147, 150, 52]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 148, 151, 52]" + "'", str55, "[100, 148, 151, 52]");
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test2695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2695");
        int[] intArray5 = new int[] { (byte) 0, '#', ' ', 10, 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass65 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 35, 91, 10, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 35, 33, 10, 1]" + "'", str6, "[0, 35, 33, 10, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 35, 34, 10, 1]" + "'", str7, "[0, 35, 34, 10, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 35, 35, 10, 1]" + "'", str8, "[0, 35, 35, 10, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 35, 36, 10, 1]" + "'", str9, "[0, 35, 36, 10, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 35, 37, 10, 1]" + "'", str10, "[0, 35, 37, 10, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 35, 38, 10, 1]" + "'", str11, "[0, 35, 38, 10, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 35, 39, 10, 1]" + "'", str12, "[0, 35, 39, 10, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 35, 40, 10, 1]" + "'", str13, "[0, 35, 40, 10, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 35, 41, 10, 1]" + "'", str14, "[0, 35, 41, 10, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 35, 42, 10, 1]" + "'", str15, "[0, 35, 42, 10, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 35, 43, 10, 1]" + "'", str16, "[0, 35, 43, 10, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 35, 44, 10, 1]" + "'", str17, "[0, 35, 44, 10, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 35, 45, 10, 1]" + "'", str18, "[0, 35, 45, 10, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 35, 46, 10, 1]" + "'", str19, "[0, 35, 46, 10, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 35, 47, 10, 1]" + "'", str20, "[0, 35, 47, 10, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 35, 48, 10, 1]" + "'", str21, "[0, 35, 48, 10, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 35, 49, 10, 1]" + "'", str22, "[0, 35, 49, 10, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 35, 50, 10, 1]" + "'", str23, "[0, 35, 50, 10, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 35, 51, 10, 1]" + "'", str24, "[0, 35, 51, 10, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 35, 52, 10, 1]" + "'", str25, "[0, 35, 52, 10, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 35, 53, 10, 1]" + "'", str26, "[0, 35, 53, 10, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 35, 54, 10, 1]" + "'", str27, "[0, 35, 54, 10, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 35, 55, 10, 1]" + "'", str28, "[0, 35, 55, 10, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 35, 56, 10, 1]" + "'", str29, "[0, 35, 56, 10, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 35, 57, 10, 1]" + "'", str30, "[0, 35, 57, 10, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 35, 58, 10, 1]" + "'", str31, "[0, 35, 58, 10, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 35, 59, 10, 1]" + "'", str32, "[0, 35, 59, 10, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 35, 60, 10, 1]" + "'", str33, "[0, 35, 60, 10, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 35, 61, 10, 1]" + "'", str34, "[0, 35, 61, 10, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 35, 62, 10, 1]" + "'", str35, "[0, 35, 62, 10, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 35, 63, 10, 1]" + "'", str36, "[0, 35, 63, 10, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 35, 64, 10, 1]" + "'", str37, "[0, 35, 64, 10, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 35, 65, 10, 1]" + "'", str38, "[0, 35, 65, 10, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 35, 66, 10, 1]" + "'", str39, "[0, 35, 66, 10, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 35, 67, 10, 1]" + "'", str40, "[0, 35, 67, 10, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 35, 68, 10, 1]" + "'", str41, "[0, 35, 68, 10, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 35, 69, 10, 1]" + "'", str42, "[0, 35, 69, 10, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 35, 70, 10, 1]" + "'", str43, "[0, 35, 70, 10, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 35, 71, 10, 1]" + "'", str44, "[0, 35, 71, 10, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 35, 72, 10, 1]" + "'", str45, "[0, 35, 72, 10, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 35, 73, 10, 1]" + "'", str46, "[0, 35, 73, 10, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 35, 74, 10, 1]" + "'", str47, "[0, 35, 74, 10, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 35, 75, 10, 1]" + "'", str48, "[0, 35, 75, 10, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 35, 76, 10, 1]" + "'", str49, "[0, 35, 76, 10, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 35, 77, 10, 1]" + "'", str50, "[0, 35, 77, 10, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 35, 78, 10, 1]" + "'", str51, "[0, 35, 78, 10, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 35, 79, 10, 1]" + "'", str52, "[0, 35, 79, 10, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 35, 80, 10, 1]" + "'", str53, "[0, 35, 80, 10, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 35, 81, 10, 1]" + "'", str54, "[0, 35, 81, 10, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, 35, 82, 10, 1]" + "'", str55, "[0, 35, 82, 10, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, 35, 83, 10, 1]" + "'", str56, "[0, 35, 83, 10, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, 35, 84, 10, 1]" + "'", str57, "[0, 35, 84, 10, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, 35, 85, 10, 1]" + "'", str58, "[0, 35, 85, 10, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, 35, 86, 10, 1]" + "'", str59, "[0, 35, 86, 10, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, 35, 87, 10, 1]" + "'", str60, "[0, 35, 87, 10, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, 35, 88, 10, 1]" + "'", str61, "[0, 35, 88, 10, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, 35, 89, 10, 1]" + "'", str62, "[0, 35, 89, 10, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[0, 35, 90, 10, 1]" + "'", str63, "[0, 35, 90, 10, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[0, 35, 91, 10, 1]" + "'", str64, "[0, 35, 91, 10, 1]");
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test2696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2696");
        int[] intArray4 = new int[] { (byte) -1, 1, 100, '#' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass39 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 35, 134, 35]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 2, 101, 35]" + "'", str5, "[-1, 2, 101, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 3, 102, 35]" + "'", str6, "[-1, 3, 102, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 4, 103, 35]" + "'", str7, "[-1, 4, 103, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 5, 104, 35]" + "'", str8, "[-1, 5, 104, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 6, 105, 35]" + "'", str9, "[-1, 6, 105, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 7, 106, 35]" + "'", str10, "[-1, 7, 106, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 8, 107, 35]" + "'", str11, "[-1, 8, 107, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 9, 108, 35]" + "'", str12, "[-1, 9, 108, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 10, 109, 35]" + "'", str13, "[-1, 10, 109, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 11, 110, 35]" + "'", str14, "[-1, 11, 110, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 12, 111, 35]" + "'", str15, "[-1, 12, 111, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 13, 112, 35]" + "'", str16, "[-1, 13, 112, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 14, 113, 35]" + "'", str17, "[-1, 14, 113, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 15, 114, 35]" + "'", str18, "[-1, 15, 114, 35]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 16, 115, 35]" + "'", str19, "[-1, 16, 115, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 17, 116, 35]" + "'", str20, "[-1, 17, 116, 35]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 18, 117, 35]" + "'", str21, "[-1, 18, 117, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 19, 118, 35]" + "'", str22, "[-1, 19, 118, 35]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 20, 119, 35]" + "'", str23, "[-1, 20, 119, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 21, 120, 35]" + "'", str24, "[-1, 21, 120, 35]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 22, 121, 35]" + "'", str25, "[-1, 22, 121, 35]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 23, 122, 35]" + "'", str26, "[-1, 23, 122, 35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 24, 123, 35]" + "'", str27, "[-1, 24, 123, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 25, 124, 35]" + "'", str28, "[-1, 25, 124, 35]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 26, 125, 35]" + "'", str29, "[-1, 26, 125, 35]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 27, 126, 35]" + "'", str30, "[-1, 27, 126, 35]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 28, 127, 35]" + "'", str31, "[-1, 28, 127, 35]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 29, 128, 35]" + "'", str32, "[-1, 29, 128, 35]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 30, 129, 35]" + "'", str33, "[-1, 30, 129, 35]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 31, 130, 35]" + "'", str34, "[-1, 31, 130, 35]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 32, 131, 35]" + "'", str35, "[-1, 32, 131, 35]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 33, 132, 35]" + "'", str36, "[-1, 33, 132, 35]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 34, 133, 35]" + "'", str37, "[-1, 34, 133, 35]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 35, 134, 35]" + "'", str38, "[-1, 35, 134, 35]");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test2697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2697");
        int[] intArray5 = new int[] { 'a', '4', 10, (-1), 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass15 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[97, 52, 19, -1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 52, 11, -1, 1]" + "'", str6, "[97, 52, 11, -1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 52, 12, -1, 1]" + "'", str7, "[97, 52, 12, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 52, 13, -1, 1]" + "'", str8, "[97, 52, 13, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 52, 14, -1, 1]" + "'", str9, "[97, 52, 14, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 52, 15, -1, 1]" + "'", str10, "[97, 52, 15, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 52, 16, -1, 1]" + "'", str11, "[97, 52, 16, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 52, 17, -1, 1]" + "'", str12, "[97, 52, 17, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 52, 18, -1, 1]" + "'", str13, "[97, 52, 18, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 52, 19, -1, 1]" + "'", str14, "[97, 52, 19, -1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test2698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2698");
        int[] intArray5 = new int[] { (short) 1, (short) 1, (byte) 0, '4', '#' };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass13 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 1, 7, 52, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 1, 52, 35]" + "'", str6, "[1, 1, 1, 52, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1, 2, 52, 35]" + "'", str7, "[1, 1, 2, 52, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1, 3, 52, 35]" + "'", str8, "[1, 1, 3, 52, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1, 4, 52, 35]" + "'", str9, "[1, 1, 4, 52, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1, 5, 52, 35]" + "'", str10, "[1, 1, 5, 52, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1, 6, 52, 35]" + "'", str11, "[1, 1, 6, 52, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1, 7, 52, 35]" + "'", str12, "[1, 1, 7, 52, 35]");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test2699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2699");
        int[] intArray4 = new int[] { (byte) -1, 10, (byte) 0, (short) 100 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass86 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[7, 1, 1, 108]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 11, 1, 100]" + "'", str5, "[-1, 11, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 12, 2, 100]" + "'", str6, "[-1, 12, 2, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 13, 3, 100]" + "'", str7, "[-1, 13, 3, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 14, 4, 100]" + "'", str8, "[-1, 14, 4, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 15, 5, 100]" + "'", str9, "[-1, 15, 5, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 16, 6, 100]" + "'", str10, "[-1, 16, 6, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 17, 7, 100]" + "'", str11, "[-1, 17, 7, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 18, 8, 100]" + "'", str12, "[-1, 18, 8, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 19, 9, 100]" + "'", str13, "[-1, 19, 9, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 0, 0, 101]" + "'", str14, "[0, 0, 0, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 1, 1, 101]" + "'", str15, "[0, 1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 2, 2, 101]" + "'", str16, "[0, 2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 3, 3, 101]" + "'", str17, "[0, 3, 3, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 4, 4, 101]" + "'", str18, "[0, 4, 4, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 5, 5, 101]" + "'", str19, "[0, 5, 5, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 6, 6, 101]" + "'", str20, "[0, 6, 6, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 7, 7, 101]" + "'", str21, "[0, 7, 7, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 8, 8, 101]" + "'", str22, "[0, 8, 8, 101]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 9, 9, 101]" + "'", str23, "[0, 9, 9, 101]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 0, 102]" + "'", str24, "[1, 0, 0, 102]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1, 1, 102]" + "'", str25, "[1, 1, 1, 102]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 2, 2, 102]" + "'", str26, "[1, 2, 2, 102]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 3, 3, 102]" + "'", str27, "[1, 3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 4, 4, 102]" + "'", str28, "[1, 4, 4, 102]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 5, 5, 102]" + "'", str29, "[1, 5, 5, 102]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 6, 6, 102]" + "'", str30, "[1, 6, 6, 102]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 7, 7, 102]" + "'", str31, "[1, 7, 7, 102]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 8, 8, 102]" + "'", str32, "[1, 8, 8, 102]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 9, 9, 102]" + "'", str33, "[1, 9, 9, 102]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 0, 0, 103]" + "'", str34, "[2, 0, 0, 103]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 1, 1, 103]" + "'", str35, "[2, 1, 1, 103]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[2, 2, 2, 103]" + "'", str36, "[2, 2, 2, 103]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[2, 3, 3, 103]" + "'", str37, "[2, 3, 3, 103]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[2, 4, 4, 103]" + "'", str38, "[2, 4, 4, 103]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[2, 5, 5, 103]" + "'", str39, "[2, 5, 5, 103]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[2, 6, 6, 103]" + "'", str40, "[2, 6, 6, 103]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[2, 7, 7, 103]" + "'", str41, "[2, 7, 7, 103]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[2, 8, 8, 103]" + "'", str42, "[2, 8, 8, 103]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2, 9, 9, 103]" + "'", str43, "[2, 9, 9, 103]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 0, 0, 104]" + "'", str44, "[3, 0, 0, 104]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 1, 1, 104]" + "'", str45, "[3, 1, 1, 104]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 2, 2, 104]" + "'", str46, "[3, 2, 2, 104]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[3, 3, 3, 104]" + "'", str47, "[3, 3, 3, 104]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[3, 4, 4, 104]" + "'", str48, "[3, 4, 4, 104]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[3, 5, 5, 104]" + "'", str49, "[3, 5, 5, 104]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[3, 6, 6, 104]" + "'", str50, "[3, 6, 6, 104]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[3, 7, 7, 104]" + "'", str51, "[3, 7, 7, 104]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[3, 8, 8, 104]" + "'", str52, "[3, 8, 8, 104]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[3, 9, 9, 104]" + "'", str53, "[3, 9, 9, 104]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[4, 0, 0, 105]" + "'", str54, "[4, 0, 0, 105]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[4, 1, 1, 105]" + "'", str55, "[4, 1, 1, 105]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4, 2, 2, 105]" + "'", str56, "[4, 2, 2, 105]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[4, 3, 3, 105]" + "'", str57, "[4, 3, 3, 105]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[4, 4, 4, 105]" + "'", str58, "[4, 4, 4, 105]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[4, 5, 5, 105]" + "'", str59, "[4, 5, 5, 105]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[4, 6, 6, 105]" + "'", str60, "[4, 6, 6, 105]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[4, 7, 7, 105]" + "'", str61, "[4, 7, 7, 105]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[4, 8, 8, 105]" + "'", str62, "[4, 8, 8, 105]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[4, 9, 9, 105]" + "'", str63, "[4, 9, 9, 105]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[5, 0, 0, 106]" + "'", str64, "[5, 0, 0, 106]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[5, 1, 1, 106]" + "'", str65, "[5, 1, 1, 106]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[5, 2, 2, 106]" + "'", str66, "[5, 2, 2, 106]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[5, 3, 3, 106]" + "'", str67, "[5, 3, 3, 106]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[5, 4, 4, 106]" + "'", str68, "[5, 4, 4, 106]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[5, 5, 5, 106]" + "'", str69, "[5, 5, 5, 106]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[5, 6, 6, 106]" + "'", str70, "[5, 6, 6, 106]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[5, 7, 7, 106]" + "'", str71, "[5, 7, 7, 106]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[5, 8, 8, 106]" + "'", str72, "[5, 8, 8, 106]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[5, 9, 9, 106]" + "'", str73, "[5, 9, 9, 106]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[6, 0, 0, 107]" + "'", str74, "[6, 0, 0, 107]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[6, 1, 1, 107]" + "'", str75, "[6, 1, 1, 107]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[6, 2, 2, 107]" + "'", str76, "[6, 2, 2, 107]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[6, 3, 3, 107]" + "'", str77, "[6, 3, 3, 107]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[6, 4, 4, 107]" + "'", str78, "[6, 4, 4, 107]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[6, 5, 5, 107]" + "'", str79, "[6, 5, 5, 107]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[6, 6, 6, 107]" + "'", str80, "[6, 6, 6, 107]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[6, 7, 7, 107]" + "'", str81, "[6, 7, 7, 107]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[6, 8, 8, 107]" + "'", str82, "[6, 8, 8, 107]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[6, 9, 9, 107]" + "'", str83, "[6, 9, 9, 107]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[7, 0, 0, 108]" + "'", str84, "[7, 0, 0, 108]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[7, 1, 1, 108]" + "'", str85, "[7, 1, 1, 108]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2700");
        int[] intArray2 = new int[] { (short) 1, (short) -1 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass88 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[4, 4]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 0]" + "'", str3, "[2, 0]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 1]" + "'", str4, "[3, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 2]" + "'", str5, "[4, 2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 3]" + "'", str6, "[5, 3]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 4]" + "'", str7, "[6, 4]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 5]" + "'", str8, "[7, 5]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 6]" + "'", str9, "[8, 6]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 7]" + "'", str10, "[9, 7]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 8]" + "'", str11, "[10, 8]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 9]" + "'", str12, "[11, 9]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 1]" + "'", str13, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1]" + "'", str14, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2]" + "'", str15, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[3, 3]" + "'", str16, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[4, 4]" + "'", str17, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[5, 5]" + "'", str18, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[6, 6]" + "'", str19, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[7, 7]" + "'", str20, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[8, 8]" + "'", str21, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[9, 9]" + "'", str22, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 1]" + "'", str23, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1]" + "'", str24, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 2]" + "'", str25, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3]" + "'", str26, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[4, 4]" + "'", str27, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[5, 5]" + "'", str28, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[6, 6]" + "'", str29, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[7, 7]" + "'", str30, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[8, 8]" + "'", str31, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[9, 9]" + "'", str32, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 0, 1]" + "'", str33, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1]" + "'", str34, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 2]" + "'", str35, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 3]" + "'", str36, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4]" + "'", str37, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[5, 5]" + "'", str38, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[6, 6]" + "'", str39, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[7, 7]" + "'", str40, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[8, 8]" + "'", str41, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[9, 9]" + "'", str42, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 0, 1]" + "'", str43, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1]" + "'", str44, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[2, 2]" + "'", str45, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 3]" + "'", str46, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 4]" + "'", str47, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5]" + "'", str48, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[6, 6]" + "'", str49, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[7, 7]" + "'", str50, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[8, 8]" + "'", str51, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[9, 9]" + "'", str52, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 0, 1]" + "'", str53, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 1]" + "'", str54, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[2, 2]" + "'", str55, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[3, 3]" + "'", str56, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[4, 4]" + "'", str57, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 5]" + "'", str58, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 6]" + "'", str59, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[7, 7]" + "'", str60, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[8, 8]" + "'", str61, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[9, 9]" + "'", str62, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 0, 1]" + "'", str63, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 1]" + "'", str64, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[2, 2]" + "'", str65, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[3, 3]" + "'", str66, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[4, 4]" + "'", str67, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[5, 5]" + "'", str68, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[6, 6]" + "'", str69, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[7, 7]" + "'", str70, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[8, 8]" + "'", str71, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[9, 9]" + "'", str72, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 0, 1]" + "'", str73, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 1]" + "'", str74, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[2, 2]" + "'", str75, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[3, 3]" + "'", str76, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[4, 4]" + "'", str77, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[5, 5]" + "'", str78, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[6, 6]" + "'", str79, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[7, 7]" + "'", str80, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[8, 8]" + "'", str81, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[9, 9]" + "'", str82, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[1, 0, 1]" + "'", str83, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[1, 1]" + "'", str84, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[2, 2]" + "'", str85, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[3, 3]" + "'", str86, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[4, 4]" + "'", str87, "[4, 4]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2701");
        int[] intArray3 = new int[] { ' ', '#', (short) 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass24 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[32, 55, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 36, 1]" + "'", str4, "[32, 36, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 37, 1]" + "'", str5, "[32, 37, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 38, 1]" + "'", str6, "[32, 38, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 39, 1]" + "'", str7, "[32, 39, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 40, 1]" + "'", str8, "[32, 40, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 41, 1]" + "'", str9, "[32, 41, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 42, 1]" + "'", str10, "[32, 42, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 43, 1]" + "'", str11, "[32, 43, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 44, 1]" + "'", str12, "[32, 44, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 45, 1]" + "'", str13, "[32, 45, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 46, 1]" + "'", str14, "[32, 46, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[32, 47, 1]" + "'", str15, "[32, 47, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[32, 48, 1]" + "'", str16, "[32, 48, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[32, 49, 1]" + "'", str17, "[32, 49, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[32, 50, 1]" + "'", str18, "[32, 50, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[32, 51, 1]" + "'", str19, "[32, 51, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[32, 52, 1]" + "'", str20, "[32, 52, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[32, 53, 1]" + "'", str21, "[32, 53, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[32, 54, 1]" + "'", str22, "[32, 54, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32, 55, 1]" + "'", str23, "[32, 55, 1]");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test2702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2702");
        int[] intArray1 = new int[] { (short) 1 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass38 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[7]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[2]" + "'", str2, "[2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[3]" + "'", str3, "[3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[4]" + "'", str4, "[4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[5]" + "'", str5, "[5]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[6]" + "'", str6, "[6]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[7]" + "'", str7, "[7]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[8]" + "'", str8, "[8]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[9]" + "'", str9, "[9]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1]" + "'", str10, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1]" + "'", str11, "[1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[2]" + "'", str12, "[2]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[3]" + "'", str13, "[3]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[4]" + "'", str14, "[4]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[5]" + "'", str15, "[5]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[6]" + "'", str16, "[6]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[7]" + "'", str17, "[7]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[8]" + "'", str18, "[8]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[9]" + "'", str19, "[9]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1]" + "'", str20, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1]" + "'", str21, "[1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2]" + "'", str22, "[2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3]" + "'", str23, "[3]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[4]" + "'", str24, "[4]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[5]" + "'", str25, "[5]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[6]" + "'", str26, "[6]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[7]" + "'", str27, "[7]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[8]" + "'", str28, "[8]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[9]" + "'", str29, "[9]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 1]" + "'", str30, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1]" + "'", str31, "[1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2]" + "'", str32, "[2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[3]" + "'", str33, "[3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4]" + "'", str34, "[4]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[5]" + "'", str35, "[5]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[6]" + "'", str36, "[6]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[7]" + "'", str37, "[7]");
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test2703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2703");
        int[] intArray1 = new int[] { 10 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass72 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[80]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[11]" + "'", str2, "[11]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[12]" + "'", str3, "[12]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[13]" + "'", str4, "[13]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[14]" + "'", str5, "[14]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[15]" + "'", str6, "[15]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[16]" + "'", str7, "[16]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[17]" + "'", str8, "[17]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[18]" + "'", str9, "[18]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[19]" + "'", str10, "[19]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[20]" + "'", str11, "[20]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[21]" + "'", str12, "[21]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[22]" + "'", str13, "[22]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[23]" + "'", str14, "[23]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[24]" + "'", str15, "[24]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[25]" + "'", str16, "[25]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[26]" + "'", str17, "[26]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[27]" + "'", str18, "[27]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[28]" + "'", str19, "[28]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[29]" + "'", str20, "[29]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[30]" + "'", str21, "[30]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[31]" + "'", str22, "[31]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32]" + "'", str23, "[32]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[33]" + "'", str24, "[33]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34]" + "'", str25, "[34]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35]" + "'", str26, "[35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[36]" + "'", str27, "[36]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[37]" + "'", str28, "[37]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[38]" + "'", str29, "[38]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[39]" + "'", str30, "[39]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[40]" + "'", str31, "[40]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[41]" + "'", str32, "[41]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[42]" + "'", str33, "[42]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[43]" + "'", str34, "[43]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[44]" + "'", str35, "[44]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[45]" + "'", str36, "[45]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[46]" + "'", str37, "[46]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[47]" + "'", str38, "[47]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[48]" + "'", str39, "[48]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[49]" + "'", str40, "[49]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[50]" + "'", str41, "[50]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[51]" + "'", str42, "[51]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[52]" + "'", str43, "[52]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[53]" + "'", str44, "[53]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[54]" + "'", str45, "[54]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[55]" + "'", str46, "[55]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[56]" + "'", str47, "[56]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[57]" + "'", str48, "[57]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[58]" + "'", str49, "[58]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[59]" + "'", str50, "[59]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[60]" + "'", str51, "[60]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[61]" + "'", str52, "[61]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[62]" + "'", str53, "[62]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[63]" + "'", str54, "[63]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[64]" + "'", str55, "[64]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[65]" + "'", str56, "[65]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[66]" + "'", str57, "[66]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[67]" + "'", str58, "[67]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[68]" + "'", str59, "[68]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[69]" + "'", str60, "[69]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[70]" + "'", str61, "[70]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[71]" + "'", str62, "[71]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[72]" + "'", str63, "[72]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[73]" + "'", str64, "[73]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[74]" + "'", str65, "[74]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[75]" + "'", str66, "[75]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[76]" + "'", str67, "[76]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[77]" + "'", str68, "[77]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[78]" + "'", str69, "[78]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[79]" + "'", str70, "[79]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[80]" + "'", str71, "[80]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test2704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2704");
        int[] intArray4 = new int[] { 'a', 10, 100, (short) 10 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str90 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str91 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass92 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, 97, 187, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 11, 101, 10]" + "'", str5, "[97, 11, 101, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 12, 102, 10]" + "'", str6, "[97, 12, 102, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 13, 103, 10]" + "'", str7, "[97, 13, 103, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 14, 104, 10]" + "'", str8, "[97, 14, 104, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 15, 105, 10]" + "'", str9, "[97, 15, 105, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 16, 106, 10]" + "'", str10, "[97, 16, 106, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 17, 107, 10]" + "'", str11, "[97, 17, 107, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 18, 108, 10]" + "'", str12, "[97, 18, 108, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 19, 109, 10]" + "'", str13, "[97, 19, 109, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 20, 110, 10]" + "'", str14, "[97, 20, 110, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[97, 21, 111, 10]" + "'", str15, "[97, 21, 111, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[97, 22, 112, 10]" + "'", str16, "[97, 22, 112, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[97, 23, 113, 10]" + "'", str17, "[97, 23, 113, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[97, 24, 114, 10]" + "'", str18, "[97, 24, 114, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[97, 25, 115, 10]" + "'", str19, "[97, 25, 115, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[97, 26, 116, 10]" + "'", str20, "[97, 26, 116, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[97, 27, 117, 10]" + "'", str21, "[97, 27, 117, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[97, 28, 118, 10]" + "'", str22, "[97, 28, 118, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[97, 29, 119, 10]" + "'", str23, "[97, 29, 119, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[97, 30, 120, 10]" + "'", str24, "[97, 30, 120, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[97, 31, 121, 10]" + "'", str25, "[97, 31, 121, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[97, 32, 122, 10]" + "'", str26, "[97, 32, 122, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[97, 33, 123, 10]" + "'", str27, "[97, 33, 123, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[97, 34, 124, 10]" + "'", str28, "[97, 34, 124, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[97, 35, 125, 10]" + "'", str29, "[97, 35, 125, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[97, 36, 126, 10]" + "'", str30, "[97, 36, 126, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[97, 37, 127, 10]" + "'", str31, "[97, 37, 127, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[97, 38, 128, 10]" + "'", str32, "[97, 38, 128, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[97, 39, 129, 10]" + "'", str33, "[97, 39, 129, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[97, 40, 130, 10]" + "'", str34, "[97, 40, 130, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[97, 41, 131, 10]" + "'", str35, "[97, 41, 131, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[97, 42, 132, 10]" + "'", str36, "[97, 42, 132, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[97, 43, 133, 10]" + "'", str37, "[97, 43, 133, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[97, 44, 134, 10]" + "'", str38, "[97, 44, 134, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[97, 45, 135, 10]" + "'", str39, "[97, 45, 135, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[97, 46, 136, 10]" + "'", str40, "[97, 46, 136, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[97, 47, 137, 10]" + "'", str41, "[97, 47, 137, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[97, 48, 138, 10]" + "'", str42, "[97, 48, 138, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[97, 49, 139, 10]" + "'", str43, "[97, 49, 139, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[97, 50, 140, 10]" + "'", str44, "[97, 50, 140, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[97, 51, 141, 10]" + "'", str45, "[97, 51, 141, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[97, 52, 142, 10]" + "'", str46, "[97, 52, 142, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[97, 53, 143, 10]" + "'", str47, "[97, 53, 143, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[97, 54, 144, 10]" + "'", str48, "[97, 54, 144, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[97, 55, 145, 10]" + "'", str49, "[97, 55, 145, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[97, 56, 146, 10]" + "'", str50, "[97, 56, 146, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[97, 57, 147, 10]" + "'", str51, "[97, 57, 147, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[97, 58, 148, 10]" + "'", str52, "[97, 58, 148, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[97, 59, 149, 10]" + "'", str53, "[97, 59, 149, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[97, 60, 150, 10]" + "'", str54, "[97, 60, 150, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[97, 61, 151, 10]" + "'", str55, "[97, 61, 151, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[97, 62, 152, 10]" + "'", str56, "[97, 62, 152, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[97, 63, 153, 10]" + "'", str57, "[97, 63, 153, 10]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[97, 64, 154, 10]" + "'", str58, "[97, 64, 154, 10]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[97, 65, 155, 10]" + "'", str59, "[97, 65, 155, 10]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[97, 66, 156, 10]" + "'", str60, "[97, 66, 156, 10]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[97, 67, 157, 10]" + "'", str61, "[97, 67, 157, 10]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[97, 68, 158, 10]" + "'", str62, "[97, 68, 158, 10]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[97, 69, 159, 10]" + "'", str63, "[97, 69, 159, 10]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[97, 70, 160, 10]" + "'", str64, "[97, 70, 160, 10]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[97, 71, 161, 10]" + "'", str65, "[97, 71, 161, 10]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[97, 72, 162, 10]" + "'", str66, "[97, 72, 162, 10]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[97, 73, 163, 10]" + "'", str67, "[97, 73, 163, 10]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[97, 74, 164, 10]" + "'", str68, "[97, 74, 164, 10]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[97, 75, 165, 10]" + "'", str69, "[97, 75, 165, 10]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[97, 76, 166, 10]" + "'", str70, "[97, 76, 166, 10]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[97, 77, 167, 10]" + "'", str71, "[97, 77, 167, 10]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[97, 78, 168, 10]" + "'", str72, "[97, 78, 168, 10]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[97, 79, 169, 10]" + "'", str73, "[97, 79, 169, 10]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[97, 80, 170, 10]" + "'", str74, "[97, 80, 170, 10]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[97, 81, 171, 10]" + "'", str75, "[97, 81, 171, 10]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[97, 82, 172, 10]" + "'", str76, "[97, 82, 172, 10]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[97, 83, 173, 10]" + "'", str77, "[97, 83, 173, 10]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[97, 84, 174, 10]" + "'", str78, "[97, 84, 174, 10]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[97, 85, 175, 10]" + "'", str79, "[97, 85, 175, 10]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[97, 86, 176, 10]" + "'", str80, "[97, 86, 176, 10]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[97, 87, 177, 10]" + "'", str81, "[97, 87, 177, 10]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[97, 88, 178, 10]" + "'", str82, "[97, 88, 178, 10]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[97, 89, 179, 10]" + "'", str83, "[97, 89, 179, 10]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[97, 90, 180, 10]" + "'", str84, "[97, 90, 180, 10]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[97, 91, 181, 10]" + "'", str85, "[97, 91, 181, 10]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[97, 92, 182, 10]" + "'", str86, "[97, 92, 182, 10]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[97, 93, 183, 10]" + "'", str87, "[97, 93, 183, 10]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[97, 94, 184, 10]" + "'", str88, "[97, 94, 184, 10]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[97, 95, 185, 10]" + "'", str89, "[97, 95, 185, 10]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[97, 96, 186, 10]" + "'", str90, "[97, 96, 186, 10]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[97, 97, 187, 10]" + "'", str91, "[97, 97, 187, 10]");
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2705");
        int[] intArray6 = new int[] { (short) 0, (short) 10, (-1), (short) 1, (byte) 1, 'a' };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass35 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 12, 9, 9, 3, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 10, 0, 2, 1, 97]" + "'", str7, "[0, 10, 0, 2, 1, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 10, 1, 3, 1, 97]" + "'", str8, "[0, 10, 1, 3, 1, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 10, 2, 4, 1, 97]" + "'", str9, "[0, 10, 2, 4, 1, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 10, 3, 5, 1, 97]" + "'", str10, "[0, 10, 3, 5, 1, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 10, 4, 6, 1, 97]" + "'", str11, "[0, 10, 4, 6, 1, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 10, 5, 7, 1, 97]" + "'", str12, "[0, 10, 5, 7, 1, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 10, 6, 8, 1, 97]" + "'", str13, "[0, 10, 6, 8, 1, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 10, 7, 9, 1, 97]" + "'", str14, "[0, 10, 7, 9, 1, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 11, 0, 0, 2, 97]" + "'", str15, "[0, 11, 0, 0, 2, 97]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 11, 1, 1, 2, 97]" + "'", str16, "[0, 11, 1, 1, 2, 97]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 11, 2, 2, 2, 97]" + "'", str17, "[0, 11, 2, 2, 2, 97]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 11, 3, 3, 2, 97]" + "'", str18, "[0, 11, 3, 3, 2, 97]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 11, 4, 4, 2, 97]" + "'", str19, "[0, 11, 4, 4, 2, 97]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 11, 5, 5, 2, 97]" + "'", str20, "[0, 11, 5, 5, 2, 97]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 11, 6, 6, 2, 97]" + "'", str21, "[0, 11, 6, 6, 2, 97]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 11, 7, 7, 2, 97]" + "'", str22, "[0, 11, 7, 7, 2, 97]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 11, 8, 8, 2, 97]" + "'", str23, "[0, 11, 8, 8, 2, 97]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 11, 9, 9, 2, 97]" + "'", str24, "[0, 11, 9, 9, 2, 97]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 12, 0, 0, 3, 97]" + "'", str25, "[0, 12, 0, 0, 3, 97]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 12, 1, 1, 3, 97]" + "'", str26, "[0, 12, 1, 1, 3, 97]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 12, 2, 2, 3, 97]" + "'", str27, "[0, 12, 2, 2, 3, 97]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 12, 3, 3, 3, 97]" + "'", str28, "[0, 12, 3, 3, 3, 97]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 12, 4, 4, 3, 97]" + "'", str29, "[0, 12, 4, 4, 3, 97]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 12, 5, 5, 3, 97]" + "'", str30, "[0, 12, 5, 5, 3, 97]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 12, 6, 6, 3, 97]" + "'", str31, "[0, 12, 6, 6, 3, 97]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 12, 7, 7, 3, 97]" + "'", str32, "[0, 12, 7, 7, 3, 97]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 12, 8, 8, 3, 97]" + "'", str33, "[0, 12, 8, 8, 3, 97]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 12, 9, 9, 3, 97]" + "'", str34, "[0, 12, 9, 9, 3, 97]");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test2706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2706");
        int[] intArray1 = new int[] { (byte) 10 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass66 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[74]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[11]" + "'", str2, "[11]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[12]" + "'", str3, "[12]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[13]" + "'", str4, "[13]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[14]" + "'", str5, "[14]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[15]" + "'", str6, "[15]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[16]" + "'", str7, "[16]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[17]" + "'", str8, "[17]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[18]" + "'", str9, "[18]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[19]" + "'", str10, "[19]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[20]" + "'", str11, "[20]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[21]" + "'", str12, "[21]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[22]" + "'", str13, "[22]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[23]" + "'", str14, "[23]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[24]" + "'", str15, "[24]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[25]" + "'", str16, "[25]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[26]" + "'", str17, "[26]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[27]" + "'", str18, "[27]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[28]" + "'", str19, "[28]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[29]" + "'", str20, "[29]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[30]" + "'", str21, "[30]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[31]" + "'", str22, "[31]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32]" + "'", str23, "[32]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[33]" + "'", str24, "[33]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34]" + "'", str25, "[34]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35]" + "'", str26, "[35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[36]" + "'", str27, "[36]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[37]" + "'", str28, "[37]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[38]" + "'", str29, "[38]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[39]" + "'", str30, "[39]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[40]" + "'", str31, "[40]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[41]" + "'", str32, "[41]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[42]" + "'", str33, "[42]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[43]" + "'", str34, "[43]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[44]" + "'", str35, "[44]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[45]" + "'", str36, "[45]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[46]" + "'", str37, "[46]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[47]" + "'", str38, "[47]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[48]" + "'", str39, "[48]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[49]" + "'", str40, "[49]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[50]" + "'", str41, "[50]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[51]" + "'", str42, "[51]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[52]" + "'", str43, "[52]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[53]" + "'", str44, "[53]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[54]" + "'", str45, "[54]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[55]" + "'", str46, "[55]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[56]" + "'", str47, "[56]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[57]" + "'", str48, "[57]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[58]" + "'", str49, "[58]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[59]" + "'", str50, "[59]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[60]" + "'", str51, "[60]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[61]" + "'", str52, "[61]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[62]" + "'", str53, "[62]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[63]" + "'", str54, "[63]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[64]" + "'", str55, "[64]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[65]" + "'", str56, "[65]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[66]" + "'", str57, "[66]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[67]" + "'", str58, "[67]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[68]" + "'", str59, "[68]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[69]" + "'", str60, "[69]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[70]" + "'", str61, "[70]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[71]" + "'", str62, "[71]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[72]" + "'", str63, "[72]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[73]" + "'", str64, "[73]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[74]" + "'", str65, "[74]");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test2707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2707");
        int[] intArray5 = new int[] { (short) 1, (short) 1, (byte) 0, '4', '#' };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass12 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 1, 6, 52, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 1, 52, 35]" + "'", str6, "[1, 1, 1, 52, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1, 2, 52, 35]" + "'", str7, "[1, 1, 2, 52, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1, 3, 52, 35]" + "'", str8, "[1, 1, 3, 52, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1, 4, 52, 35]" + "'", str9, "[1, 1, 4, 52, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1, 5, 52, 35]" + "'", str10, "[1, 1, 5, 52, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1, 6, 52, 35]" + "'", str11, "[1, 1, 6, 52, 35]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test2708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2708");
        int[] intArray4 = new int[] { '#', ' ', (byte) -1, (short) 1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass55 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[39, 9, 9, 5]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 33, 0, 1]" + "'", str5, "[35, 33, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 34, 1, 1]" + "'", str6, "[35, 34, 1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 35, 2, 1]" + "'", str7, "[35, 35, 2, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 36, 3, 1]" + "'", str8, "[35, 36, 3, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 37, 4, 1]" + "'", str9, "[35, 37, 4, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 38, 5, 1]" + "'", str10, "[35, 38, 5, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 39, 6, 1]" + "'", str11, "[35, 39, 6, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 40, 7, 1]" + "'", str12, "[35, 40, 7, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 41, 8, 1]" + "'", str13, "[35, 41, 8, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 42, 9, 1]" + "'", str14, "[35, 42, 9, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[36, 0, 0, 2]" + "'", str15, "[36, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[36, 1, 1, 2]" + "'", str16, "[36, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[36, 2, 2, 2]" + "'", str17, "[36, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[36, 3, 3, 2]" + "'", str18, "[36, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[36, 4, 4, 2]" + "'", str19, "[36, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[36, 5, 5, 2]" + "'", str20, "[36, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[36, 6, 6, 2]" + "'", str21, "[36, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[36, 7, 7, 2]" + "'", str22, "[36, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[36, 8, 8, 2]" + "'", str23, "[36, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[36, 9, 9, 2]" + "'", str24, "[36, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[37, 0, 0, 3]" + "'", str25, "[37, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[37, 1, 1, 3]" + "'", str26, "[37, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[37, 2, 2, 3]" + "'", str27, "[37, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[37, 3, 3, 3]" + "'", str28, "[37, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[37, 4, 4, 3]" + "'", str29, "[37, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[37, 5, 5, 3]" + "'", str30, "[37, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[37, 6, 6, 3]" + "'", str31, "[37, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[37, 7, 7, 3]" + "'", str32, "[37, 7, 7, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[37, 8, 8, 3]" + "'", str33, "[37, 8, 8, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[37, 9, 9, 3]" + "'", str34, "[37, 9, 9, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[38, 0, 0, 4]" + "'", str35, "[38, 0, 0, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[38, 1, 1, 4]" + "'", str36, "[38, 1, 1, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[38, 2, 2, 4]" + "'", str37, "[38, 2, 2, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[38, 3, 3, 4]" + "'", str38, "[38, 3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[38, 4, 4, 4]" + "'", str39, "[38, 4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[38, 5, 5, 4]" + "'", str40, "[38, 5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[38, 6, 6, 4]" + "'", str41, "[38, 6, 6, 4]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[38, 7, 7, 4]" + "'", str42, "[38, 7, 7, 4]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[38, 8, 8, 4]" + "'", str43, "[38, 8, 8, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[38, 9, 9, 4]" + "'", str44, "[38, 9, 9, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[39, 0, 0, 5]" + "'", str45, "[39, 0, 0, 5]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[39, 1, 1, 5]" + "'", str46, "[39, 1, 1, 5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[39, 2, 2, 5]" + "'", str47, "[39, 2, 2, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[39, 3, 3, 5]" + "'", str48, "[39, 3, 3, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[39, 4, 4, 5]" + "'", str49, "[39, 4, 4, 5]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[39, 5, 5, 5]" + "'", str50, "[39, 5, 5, 5]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[39, 6, 6, 5]" + "'", str51, "[39, 6, 6, 5]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[39, 7, 7, 5]" + "'", str52, "[39, 7, 7, 5]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[39, 8, 8, 5]" + "'", str53, "[39, 8, 8, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[39, 9, 9, 5]" + "'", str54, "[39, 9, 9, 5]");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test2709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2709");
        int[] intArray6 = new int[] { (short) 100, (byte) 0, 10, (byte) 0, (byte) 1, (byte) 0 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass16 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 0, 19, 9, 1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 0, 11, 1, 1, 0]" + "'", str7, "[100, 0, 11, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 0, 12, 2, 1, 0]" + "'", str8, "[100, 0, 12, 2, 1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 0, 13, 3, 1, 0]" + "'", str9, "[100, 0, 13, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 0, 14, 4, 1, 0]" + "'", str10, "[100, 0, 14, 4, 1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 0, 15, 5, 1, 0]" + "'", str11, "[100, 0, 15, 5, 1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 0, 16, 6, 1, 0]" + "'", str12, "[100, 0, 16, 6, 1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 0, 17, 7, 1, 0]" + "'", str13, "[100, 0, 17, 7, 1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 0, 18, 8, 1, 0]" + "'", str14, "[100, 0, 18, 8, 1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 0, 19, 9, 1, 0]" + "'", str15, "[100, 0, 19, 9, 1, 0]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test2710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2710");
        int[] intArray4 = new int[] { (byte) -1, 1, 100, '#' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass42 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 38, 137, 35]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 2, 101, 35]" + "'", str5, "[-1, 2, 101, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 3, 102, 35]" + "'", str6, "[-1, 3, 102, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 4, 103, 35]" + "'", str7, "[-1, 4, 103, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 5, 104, 35]" + "'", str8, "[-1, 5, 104, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 6, 105, 35]" + "'", str9, "[-1, 6, 105, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 7, 106, 35]" + "'", str10, "[-1, 7, 106, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 8, 107, 35]" + "'", str11, "[-1, 8, 107, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 9, 108, 35]" + "'", str12, "[-1, 9, 108, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 10, 109, 35]" + "'", str13, "[-1, 10, 109, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 11, 110, 35]" + "'", str14, "[-1, 11, 110, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 12, 111, 35]" + "'", str15, "[-1, 12, 111, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 13, 112, 35]" + "'", str16, "[-1, 13, 112, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 14, 113, 35]" + "'", str17, "[-1, 14, 113, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 15, 114, 35]" + "'", str18, "[-1, 15, 114, 35]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 16, 115, 35]" + "'", str19, "[-1, 16, 115, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 17, 116, 35]" + "'", str20, "[-1, 17, 116, 35]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 18, 117, 35]" + "'", str21, "[-1, 18, 117, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 19, 118, 35]" + "'", str22, "[-1, 19, 118, 35]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 20, 119, 35]" + "'", str23, "[-1, 20, 119, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 21, 120, 35]" + "'", str24, "[-1, 21, 120, 35]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 22, 121, 35]" + "'", str25, "[-1, 22, 121, 35]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 23, 122, 35]" + "'", str26, "[-1, 23, 122, 35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 24, 123, 35]" + "'", str27, "[-1, 24, 123, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 25, 124, 35]" + "'", str28, "[-1, 25, 124, 35]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 26, 125, 35]" + "'", str29, "[-1, 26, 125, 35]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 27, 126, 35]" + "'", str30, "[-1, 27, 126, 35]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 28, 127, 35]" + "'", str31, "[-1, 28, 127, 35]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 29, 128, 35]" + "'", str32, "[-1, 29, 128, 35]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 30, 129, 35]" + "'", str33, "[-1, 30, 129, 35]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 31, 130, 35]" + "'", str34, "[-1, 31, 130, 35]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 32, 131, 35]" + "'", str35, "[-1, 32, 131, 35]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 33, 132, 35]" + "'", str36, "[-1, 33, 132, 35]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 34, 133, 35]" + "'", str37, "[-1, 34, 133, 35]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 35, 134, 35]" + "'", str38, "[-1, 35, 134, 35]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 36, 135, 35]" + "'", str39, "[-1, 36, 135, 35]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 37, 136, 35]" + "'", str40, "[-1, 37, 136, 35]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 38, 137, 35]" + "'", str41, "[-1, 38, 137, 35]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test2711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2711");
        int[] intArray5 = new int[] { (short) 100, 'a', ' ', 0, (byte) -1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass71 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 97, 97, 0, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 97, 33, 0, -1]" + "'", str6, "[100, 97, 33, 0, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 97, 34, 0, -1]" + "'", str7, "[100, 97, 34, 0, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 97, 35, 0, -1]" + "'", str8, "[100, 97, 35, 0, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 97, 36, 0, -1]" + "'", str9, "[100, 97, 36, 0, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 97, 37, 0, -1]" + "'", str10, "[100, 97, 37, 0, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 97, 38, 0, -1]" + "'", str11, "[100, 97, 38, 0, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 97, 39, 0, -1]" + "'", str12, "[100, 97, 39, 0, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 97, 40, 0, -1]" + "'", str13, "[100, 97, 40, 0, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 97, 41, 0, -1]" + "'", str14, "[100, 97, 41, 0, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 97, 42, 0, -1]" + "'", str15, "[100, 97, 42, 0, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 97, 43, 0, -1]" + "'", str16, "[100, 97, 43, 0, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 97, 44, 0, -1]" + "'", str17, "[100, 97, 44, 0, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 97, 45, 0, -1]" + "'", str18, "[100, 97, 45, 0, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 97, 46, 0, -1]" + "'", str19, "[100, 97, 46, 0, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 97, 47, 0, -1]" + "'", str20, "[100, 97, 47, 0, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 97, 48, 0, -1]" + "'", str21, "[100, 97, 48, 0, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 97, 49, 0, -1]" + "'", str22, "[100, 97, 49, 0, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 97, 50, 0, -1]" + "'", str23, "[100, 97, 50, 0, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 97, 51, 0, -1]" + "'", str24, "[100, 97, 51, 0, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 97, 52, 0, -1]" + "'", str25, "[100, 97, 52, 0, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 97, 53, 0, -1]" + "'", str26, "[100, 97, 53, 0, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 97, 54, 0, -1]" + "'", str27, "[100, 97, 54, 0, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 97, 55, 0, -1]" + "'", str28, "[100, 97, 55, 0, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 97, 56, 0, -1]" + "'", str29, "[100, 97, 56, 0, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 97, 57, 0, -1]" + "'", str30, "[100, 97, 57, 0, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 97, 58, 0, -1]" + "'", str31, "[100, 97, 58, 0, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 97, 59, 0, -1]" + "'", str32, "[100, 97, 59, 0, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 97, 60, 0, -1]" + "'", str33, "[100, 97, 60, 0, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 97, 61, 0, -1]" + "'", str34, "[100, 97, 61, 0, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 97, 62, 0, -1]" + "'", str35, "[100, 97, 62, 0, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 97, 63, 0, -1]" + "'", str36, "[100, 97, 63, 0, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 97, 64, 0, -1]" + "'", str37, "[100, 97, 64, 0, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 97, 65, 0, -1]" + "'", str38, "[100, 97, 65, 0, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 97, 66, 0, -1]" + "'", str39, "[100, 97, 66, 0, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 97, 67, 0, -1]" + "'", str40, "[100, 97, 67, 0, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 97, 68, 0, -1]" + "'", str41, "[100, 97, 68, 0, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 97, 69, 0, -1]" + "'", str42, "[100, 97, 69, 0, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 97, 70, 0, -1]" + "'", str43, "[100, 97, 70, 0, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 97, 71, 0, -1]" + "'", str44, "[100, 97, 71, 0, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 97, 72, 0, -1]" + "'", str45, "[100, 97, 72, 0, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 97, 73, 0, -1]" + "'", str46, "[100, 97, 73, 0, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 97, 74, 0, -1]" + "'", str47, "[100, 97, 74, 0, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 97, 75, 0, -1]" + "'", str48, "[100, 97, 75, 0, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 97, 76, 0, -1]" + "'", str49, "[100, 97, 76, 0, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 97, 77, 0, -1]" + "'", str50, "[100, 97, 77, 0, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 97, 78, 0, -1]" + "'", str51, "[100, 97, 78, 0, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 97, 79, 0, -1]" + "'", str52, "[100, 97, 79, 0, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 97, 80, 0, -1]" + "'", str53, "[100, 97, 80, 0, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 97, 81, 0, -1]" + "'", str54, "[100, 97, 81, 0, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 97, 82, 0, -1]" + "'", str55, "[100, 97, 82, 0, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 97, 83, 0, -1]" + "'", str56, "[100, 97, 83, 0, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 97, 84, 0, -1]" + "'", str57, "[100, 97, 84, 0, -1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 97, 85, 0, -1]" + "'", str58, "[100, 97, 85, 0, -1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 97, 86, 0, -1]" + "'", str59, "[100, 97, 86, 0, -1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 97, 87, 0, -1]" + "'", str60, "[100, 97, 87, 0, -1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 97, 88, 0, -1]" + "'", str61, "[100, 97, 88, 0, -1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[100, 97, 89, 0, -1]" + "'", str62, "[100, 97, 89, 0, -1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[100, 97, 90, 0, -1]" + "'", str63, "[100, 97, 90, 0, -1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[100, 97, 91, 0, -1]" + "'", str64, "[100, 97, 91, 0, -1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[100, 97, 92, 0, -1]" + "'", str65, "[100, 97, 92, 0, -1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[100, 97, 93, 0, -1]" + "'", str66, "[100, 97, 93, 0, -1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[100, 97, 94, 0, -1]" + "'", str67, "[100, 97, 94, 0, -1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[100, 97, 95, 0, -1]" + "'", str68, "[100, 97, 95, 0, -1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[100, 97, 96, 0, -1]" + "'", str69, "[100, 97, 96, 0, -1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[100, 97, 97, 0, -1]" + "'", str70, "[100, 97, 97, 0, -1]");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test2712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2712");
        int[] intArray3 = new int[] { ' ', (-1), 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass86 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[40, 1, 9]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 0, 1]" + "'", str4, "[32, 0, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 1, 1]" + "'", str5, "[32, 1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 2, 1]" + "'", str6, "[32, 2, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 3, 1]" + "'", str7, "[32, 3, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 4, 1]" + "'", str8, "[32, 4, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 5, 1]" + "'", str9, "[32, 5, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 6, 1]" + "'", str10, "[32, 6, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 7, 1]" + "'", str11, "[32, 7, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 8, 1]" + "'", str12, "[32, 8, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 9, 1]" + "'", str13, "[32, 9, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[33, 0, 2]" + "'", str14, "[33, 0, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[33, 1, 2]" + "'", str15, "[33, 1, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[33, 2, 2]" + "'", str16, "[33, 2, 2]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[33, 3, 2]" + "'", str17, "[33, 3, 2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[33, 4, 2]" + "'", str18, "[33, 4, 2]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[33, 5, 2]" + "'", str19, "[33, 5, 2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[33, 6, 2]" + "'", str20, "[33, 6, 2]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[33, 7, 2]" + "'", str21, "[33, 7, 2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[33, 8, 2]" + "'", str22, "[33, 8, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[33, 9, 2]" + "'", str23, "[33, 9, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[34, 0, 3]" + "'", str24, "[34, 0, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34, 1, 3]" + "'", str25, "[34, 1, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 2, 3]" + "'", str26, "[34, 2, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[34, 3, 3]" + "'", str27, "[34, 3, 3]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[34, 4, 3]" + "'", str28, "[34, 4, 3]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[34, 5, 3]" + "'", str29, "[34, 5, 3]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[34, 6, 3]" + "'", str30, "[34, 6, 3]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[34, 7, 3]" + "'", str31, "[34, 7, 3]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[34, 8, 3]" + "'", str32, "[34, 8, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[34, 9, 3]" + "'", str33, "[34, 9, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 0, 4]" + "'", str34, "[35, 0, 4]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 1, 4]" + "'", str35, "[35, 1, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 2, 4]" + "'", str36, "[35, 2, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 3, 4]" + "'", str37, "[35, 3, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 4, 4]" + "'", str38, "[35, 4, 4]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 5, 4]" + "'", str39, "[35, 5, 4]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 6, 4]" + "'", str40, "[35, 6, 4]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 7, 4]" + "'", str41, "[35, 7, 4]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 8, 4]" + "'", str42, "[35, 8, 4]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 9, 4]" + "'", str43, "[35, 9, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[36, 0, 5]" + "'", str44, "[36, 0, 5]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[36, 1, 5]" + "'", str45, "[36, 1, 5]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[36, 2, 5]" + "'", str46, "[36, 2, 5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[36, 3, 5]" + "'", str47, "[36, 3, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[36, 4, 5]" + "'", str48, "[36, 4, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[36, 5, 5]" + "'", str49, "[36, 5, 5]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[36, 6, 5]" + "'", str50, "[36, 6, 5]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[36, 7, 5]" + "'", str51, "[36, 7, 5]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[36, 8, 5]" + "'", str52, "[36, 8, 5]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[36, 9, 5]" + "'", str53, "[36, 9, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[37, 0, 6]" + "'", str54, "[37, 0, 6]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[37, 1, 6]" + "'", str55, "[37, 1, 6]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[37, 2, 6]" + "'", str56, "[37, 2, 6]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[37, 3, 6]" + "'", str57, "[37, 3, 6]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[37, 4, 6]" + "'", str58, "[37, 4, 6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[37, 5, 6]" + "'", str59, "[37, 5, 6]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[37, 6, 6]" + "'", str60, "[37, 6, 6]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[37, 7, 6]" + "'", str61, "[37, 7, 6]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[37, 8, 6]" + "'", str62, "[37, 8, 6]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[37, 9, 6]" + "'", str63, "[37, 9, 6]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[38, 0, 7]" + "'", str64, "[38, 0, 7]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[38, 1, 7]" + "'", str65, "[38, 1, 7]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[38, 2, 7]" + "'", str66, "[38, 2, 7]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[38, 3, 7]" + "'", str67, "[38, 3, 7]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[38, 4, 7]" + "'", str68, "[38, 4, 7]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[38, 5, 7]" + "'", str69, "[38, 5, 7]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[38, 6, 7]" + "'", str70, "[38, 6, 7]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[38, 7, 7]" + "'", str71, "[38, 7, 7]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[38, 8, 7]" + "'", str72, "[38, 8, 7]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[38, 9, 7]" + "'", str73, "[38, 9, 7]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[39, 0, 8]" + "'", str74, "[39, 0, 8]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[39, 1, 8]" + "'", str75, "[39, 1, 8]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[39, 2, 8]" + "'", str76, "[39, 2, 8]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[39, 3, 8]" + "'", str77, "[39, 3, 8]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[39, 4, 8]" + "'", str78, "[39, 4, 8]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[39, 5, 8]" + "'", str79, "[39, 5, 8]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[39, 6, 8]" + "'", str80, "[39, 6, 8]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[39, 7, 8]" + "'", str81, "[39, 7, 8]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[39, 8, 8]" + "'", str82, "[39, 8, 8]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[39, 9, 8]" + "'", str83, "[39, 9, 8]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[40, 0, 9]" + "'", str84, "[40, 0, 9]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[40, 1, 9]" + "'", str85, "[40, 1, 9]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2713");
        int[] intArray6 = new int[] { (byte) 0, (short) 100, 0, (-1), (short) -1, (byte) 1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass62 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 105, 4, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 100, 1, 0, -1, 1]" + "'", str7, "[0, 100, 1, 0, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 100, 2, 1, -1, 1]" + "'", str8, "[0, 100, 2, 1, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 100, 3, 2, -1, 1]" + "'", str9, "[0, 100, 3, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 100, 4, 3, -1, 1]" + "'", str10, "[0, 100, 4, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 100, 5, 4, -1, 1]" + "'", str11, "[0, 100, 5, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 100, 6, 5, -1, 1]" + "'", str12, "[0, 100, 6, 5, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 100, 7, 6, -1, 1]" + "'", str13, "[0, 100, 7, 6, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 100, 8, 7, -1, 1]" + "'", str14, "[0, 100, 8, 7, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 100, 9, 8, -1, 1]" + "'", str15, "[0, 100, 9, 8, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 100, 10, 9, -1, 1]" + "'", str16, "[0, 100, 10, 9, -1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 101, 0, 0, 0, 1]" + "'", str17, "[0, 101, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 101, 1, 1, 0, 1]" + "'", str18, "[0, 101, 1, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 101, 2, 2, 0, 1]" + "'", str19, "[0, 101, 2, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 101, 3, 3, 0, 1]" + "'", str20, "[0, 101, 3, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 101, 4, 4, 0, 1]" + "'", str21, "[0, 101, 4, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 101, 5, 5, 0, 1]" + "'", str22, "[0, 101, 5, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 101, 6, 6, 0, 1]" + "'", str23, "[0, 101, 6, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 101, 7, 7, 0, 1]" + "'", str24, "[0, 101, 7, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 101, 8, 8, 0, 1]" + "'", str25, "[0, 101, 8, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 101, 9, 9, 0, 1]" + "'", str26, "[0, 101, 9, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 102, 0, 0, 1, 1]" + "'", str27, "[0, 102, 0, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 102, 1, 1, 1, 1]" + "'", str28, "[0, 102, 1, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 102, 2, 2, 1, 1]" + "'", str29, "[0, 102, 2, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 102, 3, 3, 1, 1]" + "'", str30, "[0, 102, 3, 3, 1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 102, 4, 4, 1, 1]" + "'", str31, "[0, 102, 4, 4, 1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 102, 5, 5, 1, 1]" + "'", str32, "[0, 102, 5, 5, 1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 102, 6, 6, 1, 1]" + "'", str33, "[0, 102, 6, 6, 1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 102, 7, 7, 1, 1]" + "'", str34, "[0, 102, 7, 7, 1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 102, 8, 8, 1, 1]" + "'", str35, "[0, 102, 8, 8, 1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 102, 9, 9, 1, 1]" + "'", str36, "[0, 102, 9, 9, 1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 103, 0, 0, 2, 1]" + "'", str37, "[0, 103, 0, 0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 103, 1, 1, 2, 1]" + "'", str38, "[0, 103, 1, 1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 103, 2, 2, 2, 1]" + "'", str39, "[0, 103, 2, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 103, 3, 3, 2, 1]" + "'", str40, "[0, 103, 3, 3, 2, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 103, 4, 4, 2, 1]" + "'", str41, "[0, 103, 4, 4, 2, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 103, 5, 5, 2, 1]" + "'", str42, "[0, 103, 5, 5, 2, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 103, 6, 6, 2, 1]" + "'", str43, "[0, 103, 6, 6, 2, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 103, 7, 7, 2, 1]" + "'", str44, "[0, 103, 7, 7, 2, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 103, 8, 8, 2, 1]" + "'", str45, "[0, 103, 8, 8, 2, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 103, 9, 9, 2, 1]" + "'", str46, "[0, 103, 9, 9, 2, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 104, 0, 0, 3, 1]" + "'", str47, "[0, 104, 0, 0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 104, 1, 1, 3, 1]" + "'", str48, "[0, 104, 1, 1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 104, 2, 2, 3, 1]" + "'", str49, "[0, 104, 2, 2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 104, 3, 3, 3, 1]" + "'", str50, "[0, 104, 3, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 104, 4, 4, 3, 1]" + "'", str51, "[0, 104, 4, 4, 3, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 104, 5, 5, 3, 1]" + "'", str52, "[0, 104, 5, 5, 3, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 104, 6, 6, 3, 1]" + "'", str53, "[0, 104, 6, 6, 3, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 104, 7, 7, 3, 1]" + "'", str54, "[0, 104, 7, 7, 3, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, 104, 8, 8, 3, 1]" + "'", str55, "[0, 104, 8, 8, 3, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, 104, 9, 9, 3, 1]" + "'", str56, "[0, 104, 9, 9, 3, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, 105, 0, 0, 4, 1]" + "'", str57, "[0, 105, 0, 0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, 105, 1, 1, 4, 1]" + "'", str58, "[0, 105, 1, 1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, 105, 2, 2, 4, 1]" + "'", str59, "[0, 105, 2, 2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, 105, 3, 3, 4, 1]" + "'", str60, "[0, 105, 3, 3, 4, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, 105, 4, 4, 4, 1]" + "'", str61, "[0, 105, 4, 4, 4, 1]");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test2714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2714");
        int[] intArray5 = new int[] { 'a', 0, (byte) 100, (-1), (byte) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass12 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[97, 0, 106, -1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 0, 101, -1, 1]" + "'", str6, "[97, 0, 101, -1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 0, 102, -1, 1]" + "'", str7, "[97, 0, 102, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 0, 103, -1, 1]" + "'", str8, "[97, 0, 103, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 0, 104, -1, 1]" + "'", str9, "[97, 0, 104, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 0, 105, -1, 1]" + "'", str10, "[97, 0, 105, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 0, 106, -1, 1]" + "'", str11, "[97, 0, 106, -1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test2715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2715");
        int[] intArray6 = new int[] { (byte) 0, (byte) 100, (short) 10, 10, (byte) 100, (short) 10 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass85 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 100, 88, 88, 100, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 100, 11, 11, 100, 10]" + "'", str7, "[0, 100, 11, 11, 100, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 100, 12, 12, 100, 10]" + "'", str8, "[0, 100, 12, 12, 100, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 100, 13, 13, 100, 10]" + "'", str9, "[0, 100, 13, 13, 100, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 100, 14, 14, 100, 10]" + "'", str10, "[0, 100, 14, 14, 100, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 100, 15, 15, 100, 10]" + "'", str11, "[0, 100, 15, 15, 100, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 100, 16, 16, 100, 10]" + "'", str12, "[0, 100, 16, 16, 100, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 100, 17, 17, 100, 10]" + "'", str13, "[0, 100, 17, 17, 100, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 100, 18, 18, 100, 10]" + "'", str14, "[0, 100, 18, 18, 100, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 100, 19, 19, 100, 10]" + "'", str15, "[0, 100, 19, 19, 100, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 100, 20, 20, 100, 10]" + "'", str16, "[0, 100, 20, 20, 100, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 100, 21, 21, 100, 10]" + "'", str17, "[0, 100, 21, 21, 100, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 100, 22, 22, 100, 10]" + "'", str18, "[0, 100, 22, 22, 100, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 100, 23, 23, 100, 10]" + "'", str19, "[0, 100, 23, 23, 100, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 100, 24, 24, 100, 10]" + "'", str20, "[0, 100, 24, 24, 100, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 100, 25, 25, 100, 10]" + "'", str21, "[0, 100, 25, 25, 100, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 100, 26, 26, 100, 10]" + "'", str22, "[0, 100, 26, 26, 100, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 100, 27, 27, 100, 10]" + "'", str23, "[0, 100, 27, 27, 100, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 100, 28, 28, 100, 10]" + "'", str24, "[0, 100, 28, 28, 100, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 100, 29, 29, 100, 10]" + "'", str25, "[0, 100, 29, 29, 100, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 100, 30, 30, 100, 10]" + "'", str26, "[0, 100, 30, 30, 100, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 100, 31, 31, 100, 10]" + "'", str27, "[0, 100, 31, 31, 100, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 100, 32, 32, 100, 10]" + "'", str28, "[0, 100, 32, 32, 100, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 100, 33, 33, 100, 10]" + "'", str29, "[0, 100, 33, 33, 100, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 100, 34, 34, 100, 10]" + "'", str30, "[0, 100, 34, 34, 100, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 100, 35, 35, 100, 10]" + "'", str31, "[0, 100, 35, 35, 100, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 100, 36, 36, 100, 10]" + "'", str32, "[0, 100, 36, 36, 100, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 100, 37, 37, 100, 10]" + "'", str33, "[0, 100, 37, 37, 100, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 100, 38, 38, 100, 10]" + "'", str34, "[0, 100, 38, 38, 100, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 100, 39, 39, 100, 10]" + "'", str35, "[0, 100, 39, 39, 100, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 100, 40, 40, 100, 10]" + "'", str36, "[0, 100, 40, 40, 100, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 100, 41, 41, 100, 10]" + "'", str37, "[0, 100, 41, 41, 100, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 100, 42, 42, 100, 10]" + "'", str38, "[0, 100, 42, 42, 100, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 100, 43, 43, 100, 10]" + "'", str39, "[0, 100, 43, 43, 100, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 100, 44, 44, 100, 10]" + "'", str40, "[0, 100, 44, 44, 100, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 100, 45, 45, 100, 10]" + "'", str41, "[0, 100, 45, 45, 100, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 100, 46, 46, 100, 10]" + "'", str42, "[0, 100, 46, 46, 100, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 100, 47, 47, 100, 10]" + "'", str43, "[0, 100, 47, 47, 100, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 100, 48, 48, 100, 10]" + "'", str44, "[0, 100, 48, 48, 100, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 100, 49, 49, 100, 10]" + "'", str45, "[0, 100, 49, 49, 100, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 100, 50, 50, 100, 10]" + "'", str46, "[0, 100, 50, 50, 100, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 100, 51, 51, 100, 10]" + "'", str47, "[0, 100, 51, 51, 100, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 100, 52, 52, 100, 10]" + "'", str48, "[0, 100, 52, 52, 100, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 100, 53, 53, 100, 10]" + "'", str49, "[0, 100, 53, 53, 100, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 100, 54, 54, 100, 10]" + "'", str50, "[0, 100, 54, 54, 100, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 100, 55, 55, 100, 10]" + "'", str51, "[0, 100, 55, 55, 100, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 100, 56, 56, 100, 10]" + "'", str52, "[0, 100, 56, 56, 100, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 100, 57, 57, 100, 10]" + "'", str53, "[0, 100, 57, 57, 100, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 100, 58, 58, 100, 10]" + "'", str54, "[0, 100, 58, 58, 100, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, 100, 59, 59, 100, 10]" + "'", str55, "[0, 100, 59, 59, 100, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, 100, 60, 60, 100, 10]" + "'", str56, "[0, 100, 60, 60, 100, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, 100, 61, 61, 100, 10]" + "'", str57, "[0, 100, 61, 61, 100, 10]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, 100, 62, 62, 100, 10]" + "'", str58, "[0, 100, 62, 62, 100, 10]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, 100, 63, 63, 100, 10]" + "'", str59, "[0, 100, 63, 63, 100, 10]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, 100, 64, 64, 100, 10]" + "'", str60, "[0, 100, 64, 64, 100, 10]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, 100, 65, 65, 100, 10]" + "'", str61, "[0, 100, 65, 65, 100, 10]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, 100, 66, 66, 100, 10]" + "'", str62, "[0, 100, 66, 66, 100, 10]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[0, 100, 67, 67, 100, 10]" + "'", str63, "[0, 100, 67, 67, 100, 10]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[0, 100, 68, 68, 100, 10]" + "'", str64, "[0, 100, 68, 68, 100, 10]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[0, 100, 69, 69, 100, 10]" + "'", str65, "[0, 100, 69, 69, 100, 10]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[0, 100, 70, 70, 100, 10]" + "'", str66, "[0, 100, 70, 70, 100, 10]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[0, 100, 71, 71, 100, 10]" + "'", str67, "[0, 100, 71, 71, 100, 10]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[0, 100, 72, 72, 100, 10]" + "'", str68, "[0, 100, 72, 72, 100, 10]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[0, 100, 73, 73, 100, 10]" + "'", str69, "[0, 100, 73, 73, 100, 10]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[0, 100, 74, 74, 100, 10]" + "'", str70, "[0, 100, 74, 74, 100, 10]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[0, 100, 75, 75, 100, 10]" + "'", str71, "[0, 100, 75, 75, 100, 10]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[0, 100, 76, 76, 100, 10]" + "'", str72, "[0, 100, 76, 76, 100, 10]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[0, 100, 77, 77, 100, 10]" + "'", str73, "[0, 100, 77, 77, 100, 10]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[0, 100, 78, 78, 100, 10]" + "'", str74, "[0, 100, 78, 78, 100, 10]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[0, 100, 79, 79, 100, 10]" + "'", str75, "[0, 100, 79, 79, 100, 10]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[0, 100, 80, 80, 100, 10]" + "'", str76, "[0, 100, 80, 80, 100, 10]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[0, 100, 81, 81, 100, 10]" + "'", str77, "[0, 100, 81, 81, 100, 10]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[0, 100, 82, 82, 100, 10]" + "'", str78, "[0, 100, 82, 82, 100, 10]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[0, 100, 83, 83, 100, 10]" + "'", str79, "[0, 100, 83, 83, 100, 10]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[0, 100, 84, 84, 100, 10]" + "'", str80, "[0, 100, 84, 84, 100, 10]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[0, 100, 85, 85, 100, 10]" + "'", str81, "[0, 100, 85, 85, 100, 10]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[0, 100, 86, 86, 100, 10]" + "'", str82, "[0, 100, 86, 86, 100, 10]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[0, 100, 87, 87, 100, 10]" + "'", str83, "[0, 100, 87, 87, 100, 10]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[0, 100, 88, 88, 100, 10]" + "'", str84, "[0, 100, 88, 88, 100, 10]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2716");
        int[] intArray2 = new int[] { (short) 1, 10 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass37 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[35, 44]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 11]" + "'", str3, "[2, 11]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 12]" + "'", str4, "[3, 12]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 13]" + "'", str5, "[4, 13]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 14]" + "'", str6, "[5, 14]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 15]" + "'", str7, "[6, 15]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 16]" + "'", str8, "[7, 16]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 17]" + "'", str9, "[8, 17]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 18]" + "'", str10, "[9, 18]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 19]" + "'", str11, "[10, 19]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 20]" + "'", str12, "[11, 20]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[12, 21]" + "'", str13, "[12, 21]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[13, 22]" + "'", str14, "[13, 22]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[14, 23]" + "'", str15, "[14, 23]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[15, 24]" + "'", str16, "[15, 24]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[16, 25]" + "'", str17, "[16, 25]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[17, 26]" + "'", str18, "[17, 26]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[18, 27]" + "'", str19, "[18, 27]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[19, 28]" + "'", str20, "[19, 28]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[20, 29]" + "'", str21, "[20, 29]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[21, 30]" + "'", str22, "[21, 30]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[22, 31]" + "'", str23, "[22, 31]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[23, 32]" + "'", str24, "[23, 32]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[24, 33]" + "'", str25, "[24, 33]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[25, 34]" + "'", str26, "[25, 34]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[26, 35]" + "'", str27, "[26, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[27, 36]" + "'", str28, "[27, 36]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[28, 37]" + "'", str29, "[28, 37]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[29, 38]" + "'", str30, "[29, 38]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[30, 39]" + "'", str31, "[30, 39]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[31, 40]" + "'", str32, "[31, 40]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[32, 41]" + "'", str33, "[32, 41]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[33, 42]" + "'", str34, "[33, 42]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[34, 43]" + "'", str35, "[34, 43]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 44]" + "'", str36, "[35, 44]");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test2717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2717");
        int[] intArray5 = new int[] { 1, (byte) 0, (short) 100, 0, (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass33 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 127, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 0, 1]" + "'", str6, "[1, 0, 101, 0, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 0, 1]" + "'", str7, "[1, 0, 102, 0, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 0, 1]" + "'", str8, "[1, 0, 103, 0, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 0, 1]" + "'", str9, "[1, 0, 104, 0, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 0, 1]" + "'", str10, "[1, 0, 105, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 0, 1]" + "'", str11, "[1, 0, 106, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 0, 1]" + "'", str12, "[1, 0, 107, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 108, 0, 1]" + "'", str13, "[1, 0, 108, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 109, 0, 1]" + "'", str14, "[1, 0, 109, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 110, 0, 1]" + "'", str15, "[1, 0, 110, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 111, 0, 1]" + "'", str16, "[1, 0, 111, 0, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 0, 112, 0, 1]" + "'", str17, "[1, 0, 112, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 0, 113, 0, 1]" + "'", str18, "[1, 0, 113, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 0, 114, 0, 1]" + "'", str19, "[1, 0, 114, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 0, 115, 0, 1]" + "'", str20, "[1, 0, 115, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 116, 0, 1]" + "'", str21, "[1, 0, 116, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 117, 0, 1]" + "'", str22, "[1, 0, 117, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 118, 0, 1]" + "'", str23, "[1, 0, 118, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 119, 0, 1]" + "'", str24, "[1, 0, 119, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 0, 120, 0, 1]" + "'", str25, "[1, 0, 120, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 0, 121, 0, 1]" + "'", str26, "[1, 0, 121, 0, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 0, 122, 0, 1]" + "'", str27, "[1, 0, 122, 0, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 0, 123, 0, 1]" + "'", str28, "[1, 0, 123, 0, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 0, 124, 0, 1]" + "'", str29, "[1, 0, 124, 0, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 0, 125, 0, 1]" + "'", str30, "[1, 0, 125, 0, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 126, 0, 1]" + "'", str31, "[1, 0, 126, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 127, 0, 1]" + "'", str32, "[1, 0, 127, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test2718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2718");
        int[] intArray1 = new int[] { (short) -1 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass30 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[7]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test2719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2719");
        int[] intArray1 = new int[] { (short) -1 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass32 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[9]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test2720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2720");
        int[] intArray4 = new int[] { (byte) -1, 10, (byte) 0, (short) 100 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass84 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[6, 9, 9, 107]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 11, 1, 100]" + "'", str5, "[-1, 11, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 12, 2, 100]" + "'", str6, "[-1, 12, 2, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 13, 3, 100]" + "'", str7, "[-1, 13, 3, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 14, 4, 100]" + "'", str8, "[-1, 14, 4, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 15, 5, 100]" + "'", str9, "[-1, 15, 5, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 16, 6, 100]" + "'", str10, "[-1, 16, 6, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 17, 7, 100]" + "'", str11, "[-1, 17, 7, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 18, 8, 100]" + "'", str12, "[-1, 18, 8, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 19, 9, 100]" + "'", str13, "[-1, 19, 9, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 0, 0, 101]" + "'", str14, "[0, 0, 0, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 1, 1, 101]" + "'", str15, "[0, 1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 2, 2, 101]" + "'", str16, "[0, 2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 3, 3, 101]" + "'", str17, "[0, 3, 3, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 4, 4, 101]" + "'", str18, "[0, 4, 4, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 5, 5, 101]" + "'", str19, "[0, 5, 5, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 6, 6, 101]" + "'", str20, "[0, 6, 6, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 7, 7, 101]" + "'", str21, "[0, 7, 7, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 8, 8, 101]" + "'", str22, "[0, 8, 8, 101]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 9, 9, 101]" + "'", str23, "[0, 9, 9, 101]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 0, 102]" + "'", str24, "[1, 0, 0, 102]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1, 1, 102]" + "'", str25, "[1, 1, 1, 102]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 2, 2, 102]" + "'", str26, "[1, 2, 2, 102]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 3, 3, 102]" + "'", str27, "[1, 3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 4, 4, 102]" + "'", str28, "[1, 4, 4, 102]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 5, 5, 102]" + "'", str29, "[1, 5, 5, 102]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 6, 6, 102]" + "'", str30, "[1, 6, 6, 102]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 7, 7, 102]" + "'", str31, "[1, 7, 7, 102]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 8, 8, 102]" + "'", str32, "[1, 8, 8, 102]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 9, 9, 102]" + "'", str33, "[1, 9, 9, 102]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 0, 0, 103]" + "'", str34, "[2, 0, 0, 103]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 1, 1, 103]" + "'", str35, "[2, 1, 1, 103]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[2, 2, 2, 103]" + "'", str36, "[2, 2, 2, 103]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[2, 3, 3, 103]" + "'", str37, "[2, 3, 3, 103]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[2, 4, 4, 103]" + "'", str38, "[2, 4, 4, 103]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[2, 5, 5, 103]" + "'", str39, "[2, 5, 5, 103]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[2, 6, 6, 103]" + "'", str40, "[2, 6, 6, 103]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[2, 7, 7, 103]" + "'", str41, "[2, 7, 7, 103]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[2, 8, 8, 103]" + "'", str42, "[2, 8, 8, 103]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2, 9, 9, 103]" + "'", str43, "[2, 9, 9, 103]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 0, 0, 104]" + "'", str44, "[3, 0, 0, 104]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 1, 1, 104]" + "'", str45, "[3, 1, 1, 104]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 2, 2, 104]" + "'", str46, "[3, 2, 2, 104]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[3, 3, 3, 104]" + "'", str47, "[3, 3, 3, 104]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[3, 4, 4, 104]" + "'", str48, "[3, 4, 4, 104]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[3, 5, 5, 104]" + "'", str49, "[3, 5, 5, 104]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[3, 6, 6, 104]" + "'", str50, "[3, 6, 6, 104]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[3, 7, 7, 104]" + "'", str51, "[3, 7, 7, 104]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[3, 8, 8, 104]" + "'", str52, "[3, 8, 8, 104]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[3, 9, 9, 104]" + "'", str53, "[3, 9, 9, 104]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[4, 0, 0, 105]" + "'", str54, "[4, 0, 0, 105]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[4, 1, 1, 105]" + "'", str55, "[4, 1, 1, 105]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4, 2, 2, 105]" + "'", str56, "[4, 2, 2, 105]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[4, 3, 3, 105]" + "'", str57, "[4, 3, 3, 105]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[4, 4, 4, 105]" + "'", str58, "[4, 4, 4, 105]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[4, 5, 5, 105]" + "'", str59, "[4, 5, 5, 105]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[4, 6, 6, 105]" + "'", str60, "[4, 6, 6, 105]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[4, 7, 7, 105]" + "'", str61, "[4, 7, 7, 105]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[4, 8, 8, 105]" + "'", str62, "[4, 8, 8, 105]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[4, 9, 9, 105]" + "'", str63, "[4, 9, 9, 105]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[5, 0, 0, 106]" + "'", str64, "[5, 0, 0, 106]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[5, 1, 1, 106]" + "'", str65, "[5, 1, 1, 106]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[5, 2, 2, 106]" + "'", str66, "[5, 2, 2, 106]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[5, 3, 3, 106]" + "'", str67, "[5, 3, 3, 106]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[5, 4, 4, 106]" + "'", str68, "[5, 4, 4, 106]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[5, 5, 5, 106]" + "'", str69, "[5, 5, 5, 106]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[5, 6, 6, 106]" + "'", str70, "[5, 6, 6, 106]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[5, 7, 7, 106]" + "'", str71, "[5, 7, 7, 106]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[5, 8, 8, 106]" + "'", str72, "[5, 8, 8, 106]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[5, 9, 9, 106]" + "'", str73, "[5, 9, 9, 106]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[6, 0, 0, 107]" + "'", str74, "[6, 0, 0, 107]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[6, 1, 1, 107]" + "'", str75, "[6, 1, 1, 107]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[6, 2, 2, 107]" + "'", str76, "[6, 2, 2, 107]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[6, 3, 3, 107]" + "'", str77, "[6, 3, 3, 107]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[6, 4, 4, 107]" + "'", str78, "[6, 4, 4, 107]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[6, 5, 5, 107]" + "'", str79, "[6, 5, 5, 107]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[6, 6, 6, 107]" + "'", str80, "[6, 6, 6, 107]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[6, 7, 7, 107]" + "'", str81, "[6, 7, 7, 107]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[6, 8, 8, 107]" + "'", str82, "[6, 8, 8, 107]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[6, 9, 9, 107]" + "'", str83, "[6, 9, 9, 107]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test2721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2721");
        int[] intArray6 = new int[] { (byte) 100, 'a', ' ', (byte) -1, (short) -1, (short) 1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass81 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 104, 3, 3, 6, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 97, 33, 0, -1, 1]" + "'", str7, "[100, 97, 33, 0, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 97, 34, 1, -1, 1]" + "'", str8, "[100, 97, 34, 1, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 97, 35, 2, -1, 1]" + "'", str9, "[100, 97, 35, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 97, 36, 3, -1, 1]" + "'", str10, "[100, 97, 36, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 97, 37, 4, -1, 1]" + "'", str11, "[100, 97, 37, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 97, 38, 5, -1, 1]" + "'", str12, "[100, 97, 38, 5, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 97, 39, 6, -1, 1]" + "'", str13, "[100, 97, 39, 6, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 97, 40, 7, -1, 1]" + "'", str14, "[100, 97, 40, 7, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 97, 41, 8, -1, 1]" + "'", str15, "[100, 97, 41, 8, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 97, 42, 9, -1, 1]" + "'", str16, "[100, 97, 42, 9, -1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 98, 0, 0, 0, 1]" + "'", str17, "[100, 98, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 98, 1, 1, 0, 1]" + "'", str18, "[100, 98, 1, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 98, 2, 2, 0, 1]" + "'", str19, "[100, 98, 2, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 98, 3, 3, 0, 1]" + "'", str20, "[100, 98, 3, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 98, 4, 4, 0, 1]" + "'", str21, "[100, 98, 4, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 98, 5, 5, 0, 1]" + "'", str22, "[100, 98, 5, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 98, 6, 6, 0, 1]" + "'", str23, "[100, 98, 6, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 98, 7, 7, 0, 1]" + "'", str24, "[100, 98, 7, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 98, 8, 8, 0, 1]" + "'", str25, "[100, 98, 8, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 98, 9, 9, 0, 1]" + "'", str26, "[100, 98, 9, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 99, 0, 0, 1, 1]" + "'", str27, "[100, 99, 0, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 99, 1, 1, 1, 1]" + "'", str28, "[100, 99, 1, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 99, 2, 2, 1, 1]" + "'", str29, "[100, 99, 2, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 99, 3, 3, 1, 1]" + "'", str30, "[100, 99, 3, 3, 1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 99, 4, 4, 1, 1]" + "'", str31, "[100, 99, 4, 4, 1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 99, 5, 5, 1, 1]" + "'", str32, "[100, 99, 5, 5, 1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 99, 6, 6, 1, 1]" + "'", str33, "[100, 99, 6, 6, 1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 99, 7, 7, 1, 1]" + "'", str34, "[100, 99, 7, 7, 1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 99, 8, 8, 1, 1]" + "'", str35, "[100, 99, 8, 8, 1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 99, 9, 9, 1, 1]" + "'", str36, "[100, 99, 9, 9, 1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 100, 0, 0, 2, 1]" + "'", str37, "[100, 100, 0, 0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 100, 1, 1, 2, 1]" + "'", str38, "[100, 100, 1, 1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 100, 2, 2, 2, 1]" + "'", str39, "[100, 100, 2, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 100, 3, 3, 2, 1]" + "'", str40, "[100, 100, 3, 3, 2, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 100, 4, 4, 2, 1]" + "'", str41, "[100, 100, 4, 4, 2, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 100, 5, 5, 2, 1]" + "'", str42, "[100, 100, 5, 5, 2, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 100, 6, 6, 2, 1]" + "'", str43, "[100, 100, 6, 6, 2, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 100, 7, 7, 2, 1]" + "'", str44, "[100, 100, 7, 7, 2, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 100, 8, 8, 2, 1]" + "'", str45, "[100, 100, 8, 8, 2, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 100, 9, 9, 2, 1]" + "'", str46, "[100, 100, 9, 9, 2, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 101, 0, 0, 3, 1]" + "'", str47, "[100, 101, 0, 0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 101, 1, 1, 3, 1]" + "'", str48, "[100, 101, 1, 1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 101, 2, 2, 3, 1]" + "'", str49, "[100, 101, 2, 2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 101, 3, 3, 3, 1]" + "'", str50, "[100, 101, 3, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 101, 4, 4, 3, 1]" + "'", str51, "[100, 101, 4, 4, 3, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 101, 5, 5, 3, 1]" + "'", str52, "[100, 101, 5, 5, 3, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 101, 6, 6, 3, 1]" + "'", str53, "[100, 101, 6, 6, 3, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 101, 7, 7, 3, 1]" + "'", str54, "[100, 101, 7, 7, 3, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 101, 8, 8, 3, 1]" + "'", str55, "[100, 101, 8, 8, 3, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 101, 9, 9, 3, 1]" + "'", str56, "[100, 101, 9, 9, 3, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 102, 0, 0, 4, 1]" + "'", str57, "[100, 102, 0, 0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 102, 1, 1, 4, 1]" + "'", str58, "[100, 102, 1, 1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 102, 2, 2, 4, 1]" + "'", str59, "[100, 102, 2, 2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 102, 3, 3, 4, 1]" + "'", str60, "[100, 102, 3, 3, 4, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 102, 4, 4, 4, 1]" + "'", str61, "[100, 102, 4, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[100, 102, 5, 5, 4, 1]" + "'", str62, "[100, 102, 5, 5, 4, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[100, 102, 6, 6, 4, 1]" + "'", str63, "[100, 102, 6, 6, 4, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[100, 102, 7, 7, 4, 1]" + "'", str64, "[100, 102, 7, 7, 4, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[100, 102, 8, 8, 4, 1]" + "'", str65, "[100, 102, 8, 8, 4, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[100, 102, 9, 9, 4, 1]" + "'", str66, "[100, 102, 9, 9, 4, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[100, 103, 0, 0, 5, 1]" + "'", str67, "[100, 103, 0, 0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[100, 103, 1, 1, 5, 1]" + "'", str68, "[100, 103, 1, 1, 5, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[100, 103, 2, 2, 5, 1]" + "'", str69, "[100, 103, 2, 2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[100, 103, 3, 3, 5, 1]" + "'", str70, "[100, 103, 3, 3, 5, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[100, 103, 4, 4, 5, 1]" + "'", str71, "[100, 103, 4, 4, 5, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[100, 103, 5, 5, 5, 1]" + "'", str72, "[100, 103, 5, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[100, 103, 6, 6, 5, 1]" + "'", str73, "[100, 103, 6, 6, 5, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[100, 103, 7, 7, 5, 1]" + "'", str74, "[100, 103, 7, 7, 5, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[100, 103, 8, 8, 5, 1]" + "'", str75, "[100, 103, 8, 8, 5, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[100, 103, 9, 9, 5, 1]" + "'", str76, "[100, 103, 9, 9, 5, 1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[100, 104, 0, 0, 6, 1]" + "'", str77, "[100, 104, 0, 0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[100, 104, 1, 1, 6, 1]" + "'", str78, "[100, 104, 1, 1, 6, 1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[100, 104, 2, 2, 6, 1]" + "'", str79, "[100, 104, 2, 2, 6, 1]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[100, 104, 3, 3, 6, 1]" + "'", str80, "[100, 104, 3, 3, 6, 1]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test2722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2722");
        int[] intArray6 = new int[] { 1, (byte) 0, (byte) 0, (byte) -1, (byte) 1, '4' };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass44 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 3, 6, 6, 4, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 1, 0, 1, 52]" + "'", str7, "[1, 0, 1, 0, 1, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 2, 1, 1, 52]" + "'", str8, "[1, 0, 2, 1, 1, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 3, 2, 1, 52]" + "'", str9, "[1, 0, 3, 2, 1, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 4, 3, 1, 52]" + "'", str10, "[1, 0, 4, 3, 1, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 5, 4, 1, 52]" + "'", str11, "[1, 0, 5, 4, 1, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 6, 5, 1, 52]" + "'", str12, "[1, 0, 6, 5, 1, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 7, 6, 1, 52]" + "'", str13, "[1, 0, 7, 6, 1, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 8, 7, 1, 52]" + "'", str14, "[1, 0, 8, 7, 1, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 9, 8, 1, 52]" + "'", str15, "[1, 0, 9, 8, 1, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 10, 9, 1, 52]" + "'", str16, "[1, 0, 10, 9, 1, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 1, 0, 0, 2, 52]" + "'", str17, "[1, 1, 0, 0, 2, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 1, 1, 1, 2, 52]" + "'", str18, "[1, 1, 1, 1, 2, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 1, 2, 2, 2, 52]" + "'", str19, "[1, 1, 2, 2, 2, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1, 3, 3, 2, 52]" + "'", str20, "[1, 1, 3, 3, 2, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1, 4, 4, 2, 52]" + "'", str21, "[1, 1, 4, 4, 2, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1, 5, 5, 2, 52]" + "'", str22, "[1, 1, 5, 5, 2, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 6, 6, 2, 52]" + "'", str23, "[1, 1, 6, 6, 2, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1, 7, 7, 2, 52]" + "'", str24, "[1, 1, 7, 7, 2, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1, 8, 8, 2, 52]" + "'", str25, "[1, 1, 8, 8, 2, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 1, 9, 9, 2, 52]" + "'", str26, "[1, 1, 9, 9, 2, 52]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 2, 0, 0, 3, 52]" + "'", str27, "[1, 2, 0, 0, 3, 52]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 2, 1, 1, 3, 52]" + "'", str28, "[1, 2, 1, 1, 3, 52]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 2, 2, 2, 3, 52]" + "'", str29, "[1, 2, 2, 2, 3, 52]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 2, 3, 3, 3, 52]" + "'", str30, "[1, 2, 3, 3, 3, 52]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 2, 4, 4, 3, 52]" + "'", str31, "[1, 2, 4, 4, 3, 52]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 2, 5, 5, 3, 52]" + "'", str32, "[1, 2, 5, 5, 3, 52]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 2, 6, 6, 3, 52]" + "'", str33, "[1, 2, 6, 6, 3, 52]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 2, 7, 7, 3, 52]" + "'", str34, "[1, 2, 7, 7, 3, 52]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 2, 8, 8, 3, 52]" + "'", str35, "[1, 2, 8, 8, 3, 52]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 2, 9, 9, 3, 52]" + "'", str36, "[1, 2, 9, 9, 3, 52]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 3, 0, 0, 4, 52]" + "'", str37, "[1, 3, 0, 0, 4, 52]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 3, 1, 1, 4, 52]" + "'", str38, "[1, 3, 1, 1, 4, 52]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 3, 2, 2, 4, 52]" + "'", str39, "[1, 3, 2, 2, 4, 52]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 3, 3, 3, 4, 52]" + "'", str40, "[1, 3, 3, 3, 4, 52]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 3, 4, 4, 4, 52]" + "'", str41, "[1, 3, 4, 4, 4, 52]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 3, 5, 5, 4, 52]" + "'", str42, "[1, 3, 5, 5, 4, 52]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 3, 6, 6, 4, 52]" + "'", str43, "[1, 3, 6, 6, 4, 52]");
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test2723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2723");
        int[] intArray1 = new int[] { (short) -1 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass31 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[8]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test2724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2724");
        int[] intArray1 = new int[] { 10 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass73 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[81]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[11]" + "'", str2, "[11]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[12]" + "'", str3, "[12]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[13]" + "'", str4, "[13]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[14]" + "'", str5, "[14]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[15]" + "'", str6, "[15]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[16]" + "'", str7, "[16]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[17]" + "'", str8, "[17]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[18]" + "'", str9, "[18]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[19]" + "'", str10, "[19]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[20]" + "'", str11, "[20]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[21]" + "'", str12, "[21]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[22]" + "'", str13, "[22]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[23]" + "'", str14, "[23]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[24]" + "'", str15, "[24]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[25]" + "'", str16, "[25]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[26]" + "'", str17, "[26]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[27]" + "'", str18, "[27]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[28]" + "'", str19, "[28]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[29]" + "'", str20, "[29]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[30]" + "'", str21, "[30]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[31]" + "'", str22, "[31]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32]" + "'", str23, "[32]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[33]" + "'", str24, "[33]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34]" + "'", str25, "[34]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35]" + "'", str26, "[35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[36]" + "'", str27, "[36]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[37]" + "'", str28, "[37]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[38]" + "'", str29, "[38]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[39]" + "'", str30, "[39]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[40]" + "'", str31, "[40]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[41]" + "'", str32, "[41]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[42]" + "'", str33, "[42]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[43]" + "'", str34, "[43]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[44]" + "'", str35, "[44]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[45]" + "'", str36, "[45]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[46]" + "'", str37, "[46]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[47]" + "'", str38, "[47]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[48]" + "'", str39, "[48]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[49]" + "'", str40, "[49]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[50]" + "'", str41, "[50]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[51]" + "'", str42, "[51]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[52]" + "'", str43, "[52]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[53]" + "'", str44, "[53]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[54]" + "'", str45, "[54]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[55]" + "'", str46, "[55]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[56]" + "'", str47, "[56]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[57]" + "'", str48, "[57]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[58]" + "'", str49, "[58]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[59]" + "'", str50, "[59]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[60]" + "'", str51, "[60]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[61]" + "'", str52, "[61]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[62]" + "'", str53, "[62]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[63]" + "'", str54, "[63]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[64]" + "'", str55, "[64]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[65]" + "'", str56, "[65]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[66]" + "'", str57, "[66]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[67]" + "'", str58, "[67]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[68]" + "'", str59, "[68]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[69]" + "'", str60, "[69]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[70]" + "'", str61, "[70]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[71]" + "'", str62, "[71]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[72]" + "'", str63, "[72]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[73]" + "'", str64, "[73]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[74]" + "'", str65, "[74]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[75]" + "'", str66, "[75]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[76]" + "'", str67, "[76]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[77]" + "'", str68, "[77]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[78]" + "'", str69, "[78]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[79]" + "'", str70, "[79]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[80]" + "'", str71, "[80]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[81]" + "'", str72, "[81]");
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test2725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2725");
        int[] intArray3 = new int[] { ' ', '#', (short) 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass28 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[32, 59, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 36, 1]" + "'", str4, "[32, 36, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 37, 1]" + "'", str5, "[32, 37, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 38, 1]" + "'", str6, "[32, 38, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 39, 1]" + "'", str7, "[32, 39, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 40, 1]" + "'", str8, "[32, 40, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 41, 1]" + "'", str9, "[32, 41, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 42, 1]" + "'", str10, "[32, 42, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 43, 1]" + "'", str11, "[32, 43, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 44, 1]" + "'", str12, "[32, 44, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 45, 1]" + "'", str13, "[32, 45, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 46, 1]" + "'", str14, "[32, 46, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[32, 47, 1]" + "'", str15, "[32, 47, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[32, 48, 1]" + "'", str16, "[32, 48, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[32, 49, 1]" + "'", str17, "[32, 49, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[32, 50, 1]" + "'", str18, "[32, 50, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[32, 51, 1]" + "'", str19, "[32, 51, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[32, 52, 1]" + "'", str20, "[32, 52, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[32, 53, 1]" + "'", str21, "[32, 53, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[32, 54, 1]" + "'", str22, "[32, 54, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32, 55, 1]" + "'", str23, "[32, 55, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 56, 1]" + "'", str24, "[32, 56, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[32, 57, 1]" + "'", str25, "[32, 57, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[32, 58, 1]" + "'", str26, "[32, 58, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[32, 59, 1]" + "'", str27, "[32, 59, 1]");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test2726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2726");
        int[] intArray1 = new int[] { 'a' };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass61 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[156]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[98]" + "'", str2, "[98]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[99]" + "'", str3, "[99]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100]" + "'", str4, "[100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[101]" + "'", str5, "[101]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[102]" + "'", str6, "[102]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[103]" + "'", str7, "[103]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[104]" + "'", str8, "[104]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[105]" + "'", str9, "[105]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[106]" + "'", str10, "[106]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[107]" + "'", str11, "[107]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[108]" + "'", str12, "[108]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[109]" + "'", str13, "[109]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[110]" + "'", str14, "[110]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[111]" + "'", str15, "[111]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[112]" + "'", str16, "[112]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[113]" + "'", str17, "[113]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[114]" + "'", str18, "[114]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[115]" + "'", str19, "[115]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[116]" + "'", str20, "[116]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[117]" + "'", str21, "[117]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[118]" + "'", str22, "[118]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[119]" + "'", str23, "[119]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[120]" + "'", str24, "[120]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[121]" + "'", str25, "[121]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[122]" + "'", str26, "[122]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[123]" + "'", str27, "[123]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[124]" + "'", str28, "[124]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[125]" + "'", str29, "[125]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[126]" + "'", str30, "[126]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[127]" + "'", str31, "[127]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[128]" + "'", str32, "[128]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[129]" + "'", str33, "[129]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[130]" + "'", str34, "[130]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[131]" + "'", str35, "[131]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[132]" + "'", str36, "[132]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[133]" + "'", str37, "[133]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[134]" + "'", str38, "[134]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[135]" + "'", str39, "[135]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[136]" + "'", str40, "[136]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[137]" + "'", str41, "[137]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[138]" + "'", str42, "[138]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[139]" + "'", str43, "[139]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[140]" + "'", str44, "[140]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[141]" + "'", str45, "[141]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[142]" + "'", str46, "[142]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[143]" + "'", str47, "[143]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[144]" + "'", str48, "[144]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[145]" + "'", str49, "[145]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[146]" + "'", str50, "[146]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[147]" + "'", str51, "[147]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[148]" + "'", str52, "[148]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[149]" + "'", str53, "[149]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[150]" + "'", str54, "[150]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[151]" + "'", str55, "[151]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[152]" + "'", str56, "[152]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[153]" + "'", str57, "[153]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[154]" + "'", str58, "[154]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[155]" + "'", str59, "[155]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[156]" + "'", str60, "[156]");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test2727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2727");
        int[] intArray6 = new int[] { (byte) 0, (byte) 100, (short) 10, 10, (byte) 100, (short) 10 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass86 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 100, 89, 89, 100, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 100, 11, 11, 100, 10]" + "'", str7, "[0, 100, 11, 11, 100, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 100, 12, 12, 100, 10]" + "'", str8, "[0, 100, 12, 12, 100, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 100, 13, 13, 100, 10]" + "'", str9, "[0, 100, 13, 13, 100, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 100, 14, 14, 100, 10]" + "'", str10, "[0, 100, 14, 14, 100, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 100, 15, 15, 100, 10]" + "'", str11, "[0, 100, 15, 15, 100, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 100, 16, 16, 100, 10]" + "'", str12, "[0, 100, 16, 16, 100, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 100, 17, 17, 100, 10]" + "'", str13, "[0, 100, 17, 17, 100, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 100, 18, 18, 100, 10]" + "'", str14, "[0, 100, 18, 18, 100, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 100, 19, 19, 100, 10]" + "'", str15, "[0, 100, 19, 19, 100, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 100, 20, 20, 100, 10]" + "'", str16, "[0, 100, 20, 20, 100, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 100, 21, 21, 100, 10]" + "'", str17, "[0, 100, 21, 21, 100, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 100, 22, 22, 100, 10]" + "'", str18, "[0, 100, 22, 22, 100, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 100, 23, 23, 100, 10]" + "'", str19, "[0, 100, 23, 23, 100, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 100, 24, 24, 100, 10]" + "'", str20, "[0, 100, 24, 24, 100, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 100, 25, 25, 100, 10]" + "'", str21, "[0, 100, 25, 25, 100, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 100, 26, 26, 100, 10]" + "'", str22, "[0, 100, 26, 26, 100, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 100, 27, 27, 100, 10]" + "'", str23, "[0, 100, 27, 27, 100, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 100, 28, 28, 100, 10]" + "'", str24, "[0, 100, 28, 28, 100, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 100, 29, 29, 100, 10]" + "'", str25, "[0, 100, 29, 29, 100, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 100, 30, 30, 100, 10]" + "'", str26, "[0, 100, 30, 30, 100, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 100, 31, 31, 100, 10]" + "'", str27, "[0, 100, 31, 31, 100, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 100, 32, 32, 100, 10]" + "'", str28, "[0, 100, 32, 32, 100, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 100, 33, 33, 100, 10]" + "'", str29, "[0, 100, 33, 33, 100, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 100, 34, 34, 100, 10]" + "'", str30, "[0, 100, 34, 34, 100, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 100, 35, 35, 100, 10]" + "'", str31, "[0, 100, 35, 35, 100, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 100, 36, 36, 100, 10]" + "'", str32, "[0, 100, 36, 36, 100, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 100, 37, 37, 100, 10]" + "'", str33, "[0, 100, 37, 37, 100, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 100, 38, 38, 100, 10]" + "'", str34, "[0, 100, 38, 38, 100, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 100, 39, 39, 100, 10]" + "'", str35, "[0, 100, 39, 39, 100, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 100, 40, 40, 100, 10]" + "'", str36, "[0, 100, 40, 40, 100, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 100, 41, 41, 100, 10]" + "'", str37, "[0, 100, 41, 41, 100, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 100, 42, 42, 100, 10]" + "'", str38, "[0, 100, 42, 42, 100, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 100, 43, 43, 100, 10]" + "'", str39, "[0, 100, 43, 43, 100, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 100, 44, 44, 100, 10]" + "'", str40, "[0, 100, 44, 44, 100, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 100, 45, 45, 100, 10]" + "'", str41, "[0, 100, 45, 45, 100, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 100, 46, 46, 100, 10]" + "'", str42, "[0, 100, 46, 46, 100, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 100, 47, 47, 100, 10]" + "'", str43, "[0, 100, 47, 47, 100, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 100, 48, 48, 100, 10]" + "'", str44, "[0, 100, 48, 48, 100, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 100, 49, 49, 100, 10]" + "'", str45, "[0, 100, 49, 49, 100, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 100, 50, 50, 100, 10]" + "'", str46, "[0, 100, 50, 50, 100, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 100, 51, 51, 100, 10]" + "'", str47, "[0, 100, 51, 51, 100, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 100, 52, 52, 100, 10]" + "'", str48, "[0, 100, 52, 52, 100, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 100, 53, 53, 100, 10]" + "'", str49, "[0, 100, 53, 53, 100, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 100, 54, 54, 100, 10]" + "'", str50, "[0, 100, 54, 54, 100, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 100, 55, 55, 100, 10]" + "'", str51, "[0, 100, 55, 55, 100, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 100, 56, 56, 100, 10]" + "'", str52, "[0, 100, 56, 56, 100, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 100, 57, 57, 100, 10]" + "'", str53, "[0, 100, 57, 57, 100, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 100, 58, 58, 100, 10]" + "'", str54, "[0, 100, 58, 58, 100, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, 100, 59, 59, 100, 10]" + "'", str55, "[0, 100, 59, 59, 100, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, 100, 60, 60, 100, 10]" + "'", str56, "[0, 100, 60, 60, 100, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, 100, 61, 61, 100, 10]" + "'", str57, "[0, 100, 61, 61, 100, 10]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, 100, 62, 62, 100, 10]" + "'", str58, "[0, 100, 62, 62, 100, 10]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, 100, 63, 63, 100, 10]" + "'", str59, "[0, 100, 63, 63, 100, 10]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, 100, 64, 64, 100, 10]" + "'", str60, "[0, 100, 64, 64, 100, 10]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, 100, 65, 65, 100, 10]" + "'", str61, "[0, 100, 65, 65, 100, 10]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, 100, 66, 66, 100, 10]" + "'", str62, "[0, 100, 66, 66, 100, 10]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[0, 100, 67, 67, 100, 10]" + "'", str63, "[0, 100, 67, 67, 100, 10]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[0, 100, 68, 68, 100, 10]" + "'", str64, "[0, 100, 68, 68, 100, 10]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[0, 100, 69, 69, 100, 10]" + "'", str65, "[0, 100, 69, 69, 100, 10]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[0, 100, 70, 70, 100, 10]" + "'", str66, "[0, 100, 70, 70, 100, 10]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[0, 100, 71, 71, 100, 10]" + "'", str67, "[0, 100, 71, 71, 100, 10]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[0, 100, 72, 72, 100, 10]" + "'", str68, "[0, 100, 72, 72, 100, 10]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[0, 100, 73, 73, 100, 10]" + "'", str69, "[0, 100, 73, 73, 100, 10]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[0, 100, 74, 74, 100, 10]" + "'", str70, "[0, 100, 74, 74, 100, 10]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[0, 100, 75, 75, 100, 10]" + "'", str71, "[0, 100, 75, 75, 100, 10]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[0, 100, 76, 76, 100, 10]" + "'", str72, "[0, 100, 76, 76, 100, 10]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[0, 100, 77, 77, 100, 10]" + "'", str73, "[0, 100, 77, 77, 100, 10]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[0, 100, 78, 78, 100, 10]" + "'", str74, "[0, 100, 78, 78, 100, 10]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[0, 100, 79, 79, 100, 10]" + "'", str75, "[0, 100, 79, 79, 100, 10]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[0, 100, 80, 80, 100, 10]" + "'", str76, "[0, 100, 80, 80, 100, 10]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[0, 100, 81, 81, 100, 10]" + "'", str77, "[0, 100, 81, 81, 100, 10]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[0, 100, 82, 82, 100, 10]" + "'", str78, "[0, 100, 82, 82, 100, 10]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[0, 100, 83, 83, 100, 10]" + "'", str79, "[0, 100, 83, 83, 100, 10]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[0, 100, 84, 84, 100, 10]" + "'", str80, "[0, 100, 84, 84, 100, 10]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[0, 100, 85, 85, 100, 10]" + "'", str81, "[0, 100, 85, 85, 100, 10]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[0, 100, 86, 86, 100, 10]" + "'", str82, "[0, 100, 86, 86, 100, 10]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[0, 100, 87, 87, 100, 10]" + "'", str83, "[0, 100, 87, 87, 100, 10]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[0, 100, 88, 88, 100, 10]" + "'", str84, "[0, 100, 88, 88, 100, 10]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[0, 100, 89, 89, 100, 10]" + "'", str85, "[0, 100, 89, 89, 100, 10]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2728");
        int[] intArray4 = new int[] { (byte) -1, 1, 100, '#' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass43 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 39, 138, 35]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 2, 101, 35]" + "'", str5, "[-1, 2, 101, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 3, 102, 35]" + "'", str6, "[-1, 3, 102, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 4, 103, 35]" + "'", str7, "[-1, 4, 103, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 5, 104, 35]" + "'", str8, "[-1, 5, 104, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 6, 105, 35]" + "'", str9, "[-1, 6, 105, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 7, 106, 35]" + "'", str10, "[-1, 7, 106, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 8, 107, 35]" + "'", str11, "[-1, 8, 107, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 9, 108, 35]" + "'", str12, "[-1, 9, 108, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 10, 109, 35]" + "'", str13, "[-1, 10, 109, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 11, 110, 35]" + "'", str14, "[-1, 11, 110, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 12, 111, 35]" + "'", str15, "[-1, 12, 111, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 13, 112, 35]" + "'", str16, "[-1, 13, 112, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 14, 113, 35]" + "'", str17, "[-1, 14, 113, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 15, 114, 35]" + "'", str18, "[-1, 15, 114, 35]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 16, 115, 35]" + "'", str19, "[-1, 16, 115, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 17, 116, 35]" + "'", str20, "[-1, 17, 116, 35]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 18, 117, 35]" + "'", str21, "[-1, 18, 117, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 19, 118, 35]" + "'", str22, "[-1, 19, 118, 35]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 20, 119, 35]" + "'", str23, "[-1, 20, 119, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 21, 120, 35]" + "'", str24, "[-1, 21, 120, 35]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 22, 121, 35]" + "'", str25, "[-1, 22, 121, 35]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 23, 122, 35]" + "'", str26, "[-1, 23, 122, 35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 24, 123, 35]" + "'", str27, "[-1, 24, 123, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 25, 124, 35]" + "'", str28, "[-1, 25, 124, 35]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 26, 125, 35]" + "'", str29, "[-1, 26, 125, 35]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 27, 126, 35]" + "'", str30, "[-1, 27, 126, 35]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 28, 127, 35]" + "'", str31, "[-1, 28, 127, 35]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 29, 128, 35]" + "'", str32, "[-1, 29, 128, 35]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 30, 129, 35]" + "'", str33, "[-1, 30, 129, 35]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 31, 130, 35]" + "'", str34, "[-1, 31, 130, 35]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 32, 131, 35]" + "'", str35, "[-1, 32, 131, 35]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 33, 132, 35]" + "'", str36, "[-1, 33, 132, 35]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 34, 133, 35]" + "'", str37, "[-1, 34, 133, 35]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 35, 134, 35]" + "'", str38, "[-1, 35, 134, 35]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 36, 135, 35]" + "'", str39, "[-1, 36, 135, 35]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 37, 136, 35]" + "'", str40, "[-1, 37, 136, 35]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 38, 137, 35]" + "'", str41, "[-1, 38, 137, 35]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, 39, 138, 35]" + "'", str42, "[-1, 39, 138, 35]");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test2729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2729");
        int[] intArray6 = new int[] { (byte) 0, (short) 100, 0, (-1), (short) -1, (byte) 1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass63 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 105, 5, 5, 4, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 100, 1, 0, -1, 1]" + "'", str7, "[0, 100, 1, 0, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 100, 2, 1, -1, 1]" + "'", str8, "[0, 100, 2, 1, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 100, 3, 2, -1, 1]" + "'", str9, "[0, 100, 3, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 100, 4, 3, -1, 1]" + "'", str10, "[0, 100, 4, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 100, 5, 4, -1, 1]" + "'", str11, "[0, 100, 5, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 100, 6, 5, -1, 1]" + "'", str12, "[0, 100, 6, 5, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 100, 7, 6, -1, 1]" + "'", str13, "[0, 100, 7, 6, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 100, 8, 7, -1, 1]" + "'", str14, "[0, 100, 8, 7, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 100, 9, 8, -1, 1]" + "'", str15, "[0, 100, 9, 8, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 100, 10, 9, -1, 1]" + "'", str16, "[0, 100, 10, 9, -1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 101, 0, 0, 0, 1]" + "'", str17, "[0, 101, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 101, 1, 1, 0, 1]" + "'", str18, "[0, 101, 1, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 101, 2, 2, 0, 1]" + "'", str19, "[0, 101, 2, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 101, 3, 3, 0, 1]" + "'", str20, "[0, 101, 3, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 101, 4, 4, 0, 1]" + "'", str21, "[0, 101, 4, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 101, 5, 5, 0, 1]" + "'", str22, "[0, 101, 5, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 101, 6, 6, 0, 1]" + "'", str23, "[0, 101, 6, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 101, 7, 7, 0, 1]" + "'", str24, "[0, 101, 7, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 101, 8, 8, 0, 1]" + "'", str25, "[0, 101, 8, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 101, 9, 9, 0, 1]" + "'", str26, "[0, 101, 9, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 102, 0, 0, 1, 1]" + "'", str27, "[0, 102, 0, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 102, 1, 1, 1, 1]" + "'", str28, "[0, 102, 1, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 102, 2, 2, 1, 1]" + "'", str29, "[0, 102, 2, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 102, 3, 3, 1, 1]" + "'", str30, "[0, 102, 3, 3, 1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 102, 4, 4, 1, 1]" + "'", str31, "[0, 102, 4, 4, 1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 102, 5, 5, 1, 1]" + "'", str32, "[0, 102, 5, 5, 1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 102, 6, 6, 1, 1]" + "'", str33, "[0, 102, 6, 6, 1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 102, 7, 7, 1, 1]" + "'", str34, "[0, 102, 7, 7, 1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 102, 8, 8, 1, 1]" + "'", str35, "[0, 102, 8, 8, 1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 102, 9, 9, 1, 1]" + "'", str36, "[0, 102, 9, 9, 1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 103, 0, 0, 2, 1]" + "'", str37, "[0, 103, 0, 0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 103, 1, 1, 2, 1]" + "'", str38, "[0, 103, 1, 1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 103, 2, 2, 2, 1]" + "'", str39, "[0, 103, 2, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 103, 3, 3, 2, 1]" + "'", str40, "[0, 103, 3, 3, 2, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 103, 4, 4, 2, 1]" + "'", str41, "[0, 103, 4, 4, 2, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 103, 5, 5, 2, 1]" + "'", str42, "[0, 103, 5, 5, 2, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 103, 6, 6, 2, 1]" + "'", str43, "[0, 103, 6, 6, 2, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 103, 7, 7, 2, 1]" + "'", str44, "[0, 103, 7, 7, 2, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 103, 8, 8, 2, 1]" + "'", str45, "[0, 103, 8, 8, 2, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 103, 9, 9, 2, 1]" + "'", str46, "[0, 103, 9, 9, 2, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 104, 0, 0, 3, 1]" + "'", str47, "[0, 104, 0, 0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 104, 1, 1, 3, 1]" + "'", str48, "[0, 104, 1, 1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 104, 2, 2, 3, 1]" + "'", str49, "[0, 104, 2, 2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 104, 3, 3, 3, 1]" + "'", str50, "[0, 104, 3, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 104, 4, 4, 3, 1]" + "'", str51, "[0, 104, 4, 4, 3, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 104, 5, 5, 3, 1]" + "'", str52, "[0, 104, 5, 5, 3, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 104, 6, 6, 3, 1]" + "'", str53, "[0, 104, 6, 6, 3, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 104, 7, 7, 3, 1]" + "'", str54, "[0, 104, 7, 7, 3, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, 104, 8, 8, 3, 1]" + "'", str55, "[0, 104, 8, 8, 3, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, 104, 9, 9, 3, 1]" + "'", str56, "[0, 104, 9, 9, 3, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, 105, 0, 0, 4, 1]" + "'", str57, "[0, 105, 0, 0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, 105, 1, 1, 4, 1]" + "'", str58, "[0, 105, 1, 1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, 105, 2, 2, 4, 1]" + "'", str59, "[0, 105, 2, 2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, 105, 3, 3, 4, 1]" + "'", str60, "[0, 105, 3, 3, 4, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, 105, 4, 4, 4, 1]" + "'", str61, "[0, 105, 4, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, 105, 5, 5, 4, 1]" + "'", str62, "[0, 105, 5, 5, 4, 1]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test2730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2730");
        int[] intArray4 = new int[] { (byte) -1, 10, (byte) 0, (short) 100 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass87 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[7, 2, 2, 108]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 11, 1, 100]" + "'", str5, "[-1, 11, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 12, 2, 100]" + "'", str6, "[-1, 12, 2, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 13, 3, 100]" + "'", str7, "[-1, 13, 3, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 14, 4, 100]" + "'", str8, "[-1, 14, 4, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 15, 5, 100]" + "'", str9, "[-1, 15, 5, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 16, 6, 100]" + "'", str10, "[-1, 16, 6, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 17, 7, 100]" + "'", str11, "[-1, 17, 7, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 18, 8, 100]" + "'", str12, "[-1, 18, 8, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 19, 9, 100]" + "'", str13, "[-1, 19, 9, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 0, 0, 101]" + "'", str14, "[0, 0, 0, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 1, 1, 101]" + "'", str15, "[0, 1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 2, 2, 101]" + "'", str16, "[0, 2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 3, 3, 101]" + "'", str17, "[0, 3, 3, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 4, 4, 101]" + "'", str18, "[0, 4, 4, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 5, 5, 101]" + "'", str19, "[0, 5, 5, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 6, 6, 101]" + "'", str20, "[0, 6, 6, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 7, 7, 101]" + "'", str21, "[0, 7, 7, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 8, 8, 101]" + "'", str22, "[0, 8, 8, 101]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 9, 9, 101]" + "'", str23, "[0, 9, 9, 101]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 0, 102]" + "'", str24, "[1, 0, 0, 102]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1, 1, 102]" + "'", str25, "[1, 1, 1, 102]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 2, 2, 102]" + "'", str26, "[1, 2, 2, 102]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 3, 3, 102]" + "'", str27, "[1, 3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 4, 4, 102]" + "'", str28, "[1, 4, 4, 102]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 5, 5, 102]" + "'", str29, "[1, 5, 5, 102]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 6, 6, 102]" + "'", str30, "[1, 6, 6, 102]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 7, 7, 102]" + "'", str31, "[1, 7, 7, 102]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 8, 8, 102]" + "'", str32, "[1, 8, 8, 102]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 9, 9, 102]" + "'", str33, "[1, 9, 9, 102]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 0, 0, 103]" + "'", str34, "[2, 0, 0, 103]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 1, 1, 103]" + "'", str35, "[2, 1, 1, 103]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[2, 2, 2, 103]" + "'", str36, "[2, 2, 2, 103]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[2, 3, 3, 103]" + "'", str37, "[2, 3, 3, 103]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[2, 4, 4, 103]" + "'", str38, "[2, 4, 4, 103]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[2, 5, 5, 103]" + "'", str39, "[2, 5, 5, 103]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[2, 6, 6, 103]" + "'", str40, "[2, 6, 6, 103]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[2, 7, 7, 103]" + "'", str41, "[2, 7, 7, 103]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[2, 8, 8, 103]" + "'", str42, "[2, 8, 8, 103]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2, 9, 9, 103]" + "'", str43, "[2, 9, 9, 103]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 0, 0, 104]" + "'", str44, "[3, 0, 0, 104]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 1, 1, 104]" + "'", str45, "[3, 1, 1, 104]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 2, 2, 104]" + "'", str46, "[3, 2, 2, 104]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[3, 3, 3, 104]" + "'", str47, "[3, 3, 3, 104]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[3, 4, 4, 104]" + "'", str48, "[3, 4, 4, 104]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[3, 5, 5, 104]" + "'", str49, "[3, 5, 5, 104]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[3, 6, 6, 104]" + "'", str50, "[3, 6, 6, 104]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[3, 7, 7, 104]" + "'", str51, "[3, 7, 7, 104]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[3, 8, 8, 104]" + "'", str52, "[3, 8, 8, 104]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[3, 9, 9, 104]" + "'", str53, "[3, 9, 9, 104]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[4, 0, 0, 105]" + "'", str54, "[4, 0, 0, 105]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[4, 1, 1, 105]" + "'", str55, "[4, 1, 1, 105]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4, 2, 2, 105]" + "'", str56, "[4, 2, 2, 105]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[4, 3, 3, 105]" + "'", str57, "[4, 3, 3, 105]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[4, 4, 4, 105]" + "'", str58, "[4, 4, 4, 105]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[4, 5, 5, 105]" + "'", str59, "[4, 5, 5, 105]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[4, 6, 6, 105]" + "'", str60, "[4, 6, 6, 105]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[4, 7, 7, 105]" + "'", str61, "[4, 7, 7, 105]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[4, 8, 8, 105]" + "'", str62, "[4, 8, 8, 105]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[4, 9, 9, 105]" + "'", str63, "[4, 9, 9, 105]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[5, 0, 0, 106]" + "'", str64, "[5, 0, 0, 106]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[5, 1, 1, 106]" + "'", str65, "[5, 1, 1, 106]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[5, 2, 2, 106]" + "'", str66, "[5, 2, 2, 106]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[5, 3, 3, 106]" + "'", str67, "[5, 3, 3, 106]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[5, 4, 4, 106]" + "'", str68, "[5, 4, 4, 106]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[5, 5, 5, 106]" + "'", str69, "[5, 5, 5, 106]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[5, 6, 6, 106]" + "'", str70, "[5, 6, 6, 106]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[5, 7, 7, 106]" + "'", str71, "[5, 7, 7, 106]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[5, 8, 8, 106]" + "'", str72, "[5, 8, 8, 106]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[5, 9, 9, 106]" + "'", str73, "[5, 9, 9, 106]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[6, 0, 0, 107]" + "'", str74, "[6, 0, 0, 107]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[6, 1, 1, 107]" + "'", str75, "[6, 1, 1, 107]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[6, 2, 2, 107]" + "'", str76, "[6, 2, 2, 107]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[6, 3, 3, 107]" + "'", str77, "[6, 3, 3, 107]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[6, 4, 4, 107]" + "'", str78, "[6, 4, 4, 107]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[6, 5, 5, 107]" + "'", str79, "[6, 5, 5, 107]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[6, 6, 6, 107]" + "'", str80, "[6, 6, 6, 107]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[6, 7, 7, 107]" + "'", str81, "[6, 7, 7, 107]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[6, 8, 8, 107]" + "'", str82, "[6, 8, 8, 107]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[6, 9, 9, 107]" + "'", str83, "[6, 9, 9, 107]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[7, 0, 0, 108]" + "'", str84, "[7, 0, 0, 108]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[7, 1, 1, 108]" + "'", str85, "[7, 1, 1, 108]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[7, 2, 2, 108]" + "'", str86, "[7, 2, 2, 108]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test2731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2731");
        int[] intArray3 = new int[] { '#', (byte) 100, 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass82 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[35, 178, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[35, 101, 1]" + "'", str4, "[35, 101, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 102, 1]" + "'", str5, "[35, 102, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 103, 1]" + "'", str6, "[35, 103, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 104, 1]" + "'", str7, "[35, 104, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 105, 1]" + "'", str8, "[35, 105, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 106, 1]" + "'", str9, "[35, 106, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 107, 1]" + "'", str10, "[35, 107, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 108, 1]" + "'", str11, "[35, 108, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 109, 1]" + "'", str12, "[35, 109, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 110, 1]" + "'", str13, "[35, 110, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 111, 1]" + "'", str14, "[35, 111, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[35, 112, 1]" + "'", str15, "[35, 112, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[35, 113, 1]" + "'", str16, "[35, 113, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[35, 114, 1]" + "'", str17, "[35, 114, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[35, 115, 1]" + "'", str18, "[35, 115, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[35, 116, 1]" + "'", str19, "[35, 116, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[35, 117, 1]" + "'", str20, "[35, 117, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[35, 118, 1]" + "'", str21, "[35, 118, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[35, 119, 1]" + "'", str22, "[35, 119, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[35, 120, 1]" + "'", str23, "[35, 120, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[35, 121, 1]" + "'", str24, "[35, 121, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[35, 122, 1]" + "'", str25, "[35, 122, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35, 123, 1]" + "'", str26, "[35, 123, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 124, 1]" + "'", str27, "[35, 124, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[35, 125, 1]" + "'", str28, "[35, 125, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[35, 126, 1]" + "'", str29, "[35, 126, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[35, 127, 1]" + "'", str30, "[35, 127, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[35, 128, 1]" + "'", str31, "[35, 128, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 129, 1]" + "'", str32, "[35, 129, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 130, 1]" + "'", str33, "[35, 130, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 131, 1]" + "'", str34, "[35, 131, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 132, 1]" + "'", str35, "[35, 132, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 133, 1]" + "'", str36, "[35, 133, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 134, 1]" + "'", str37, "[35, 134, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 135, 1]" + "'", str38, "[35, 135, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 136, 1]" + "'", str39, "[35, 136, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 137, 1]" + "'", str40, "[35, 137, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 138, 1]" + "'", str41, "[35, 138, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 139, 1]" + "'", str42, "[35, 139, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 140, 1]" + "'", str43, "[35, 140, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[35, 141, 1]" + "'", str44, "[35, 141, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[35, 142, 1]" + "'", str45, "[35, 142, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[35, 143, 1]" + "'", str46, "[35, 143, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[35, 144, 1]" + "'", str47, "[35, 144, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[35, 145, 1]" + "'", str48, "[35, 145, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[35, 146, 1]" + "'", str49, "[35, 146, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[35, 147, 1]" + "'", str50, "[35, 147, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[35, 148, 1]" + "'", str51, "[35, 148, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[35, 149, 1]" + "'", str52, "[35, 149, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[35, 150, 1]" + "'", str53, "[35, 150, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[35, 151, 1]" + "'", str54, "[35, 151, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[35, 152, 1]" + "'", str55, "[35, 152, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[35, 153, 1]" + "'", str56, "[35, 153, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[35, 154, 1]" + "'", str57, "[35, 154, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[35, 155, 1]" + "'", str58, "[35, 155, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[35, 156, 1]" + "'", str59, "[35, 156, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[35, 157, 1]" + "'", str60, "[35, 157, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[35, 158, 1]" + "'", str61, "[35, 158, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[35, 159, 1]" + "'", str62, "[35, 159, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[35, 160, 1]" + "'", str63, "[35, 160, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[35, 161, 1]" + "'", str64, "[35, 161, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[35, 162, 1]" + "'", str65, "[35, 162, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[35, 163, 1]" + "'", str66, "[35, 163, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[35, 164, 1]" + "'", str67, "[35, 164, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[35, 165, 1]" + "'", str68, "[35, 165, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[35, 166, 1]" + "'", str69, "[35, 166, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[35, 167, 1]" + "'", str70, "[35, 167, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[35, 168, 1]" + "'", str71, "[35, 168, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[35, 169, 1]" + "'", str72, "[35, 169, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[35, 170, 1]" + "'", str73, "[35, 170, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[35, 171, 1]" + "'", str74, "[35, 171, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[35, 172, 1]" + "'", str75, "[35, 172, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[35, 173, 1]" + "'", str76, "[35, 173, 1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[35, 174, 1]" + "'", str77, "[35, 174, 1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[35, 175, 1]" + "'", str78, "[35, 175, 1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[35, 176, 1]" + "'", str79, "[35, 176, 1]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[35, 177, 1]" + "'", str80, "[35, 177, 1]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[35, 178, 1]" + "'", str81, "[35, 178, 1]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2732");
        int[] intArray4 = new int[] { (byte) 10, 'a', (byte) -1, '#' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass85 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[17, 9, 9, 42]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 98, 0, 35]" + "'", str5, "[10, 98, 0, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 99, 1, 35]" + "'", str6, "[10, 99, 1, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 100, 2, 35]" + "'", str7, "[10, 100, 2, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 101, 3, 35]" + "'", str8, "[10, 101, 3, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 102, 4, 35]" + "'", str9, "[10, 102, 4, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 103, 5, 35]" + "'", str10, "[10, 103, 5, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 104, 6, 35]" + "'", str11, "[10, 104, 6, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 105, 7, 35]" + "'", str12, "[10, 105, 7, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 106, 8, 35]" + "'", str13, "[10, 106, 8, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 107, 9, 35]" + "'", str14, "[10, 107, 9, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[11, 0, 0, 36]" + "'", str15, "[11, 0, 0, 36]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[11, 1, 1, 36]" + "'", str16, "[11, 1, 1, 36]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[11, 2, 2, 36]" + "'", str17, "[11, 2, 2, 36]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[11, 3, 3, 36]" + "'", str18, "[11, 3, 3, 36]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[11, 4, 4, 36]" + "'", str19, "[11, 4, 4, 36]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[11, 5, 5, 36]" + "'", str20, "[11, 5, 5, 36]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[11, 6, 6, 36]" + "'", str21, "[11, 6, 6, 36]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[11, 7, 7, 36]" + "'", str22, "[11, 7, 7, 36]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[11, 8, 8, 36]" + "'", str23, "[11, 8, 8, 36]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[11, 9, 9, 36]" + "'", str24, "[11, 9, 9, 36]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[12, 0, 0, 37]" + "'", str25, "[12, 0, 0, 37]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[12, 1, 1, 37]" + "'", str26, "[12, 1, 1, 37]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[12, 2, 2, 37]" + "'", str27, "[12, 2, 2, 37]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[12, 3, 3, 37]" + "'", str28, "[12, 3, 3, 37]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[12, 4, 4, 37]" + "'", str29, "[12, 4, 4, 37]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[12, 5, 5, 37]" + "'", str30, "[12, 5, 5, 37]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[12, 6, 6, 37]" + "'", str31, "[12, 6, 6, 37]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[12, 7, 7, 37]" + "'", str32, "[12, 7, 7, 37]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[12, 8, 8, 37]" + "'", str33, "[12, 8, 8, 37]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[12, 9, 9, 37]" + "'", str34, "[12, 9, 9, 37]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[13, 0, 0, 38]" + "'", str35, "[13, 0, 0, 38]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[13, 1, 1, 38]" + "'", str36, "[13, 1, 1, 38]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[13, 2, 2, 38]" + "'", str37, "[13, 2, 2, 38]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[13, 3, 3, 38]" + "'", str38, "[13, 3, 3, 38]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[13, 4, 4, 38]" + "'", str39, "[13, 4, 4, 38]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[13, 5, 5, 38]" + "'", str40, "[13, 5, 5, 38]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[13, 6, 6, 38]" + "'", str41, "[13, 6, 6, 38]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[13, 7, 7, 38]" + "'", str42, "[13, 7, 7, 38]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[13, 8, 8, 38]" + "'", str43, "[13, 8, 8, 38]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[13, 9, 9, 38]" + "'", str44, "[13, 9, 9, 38]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[14, 0, 0, 39]" + "'", str45, "[14, 0, 0, 39]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[14, 1, 1, 39]" + "'", str46, "[14, 1, 1, 39]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[14, 2, 2, 39]" + "'", str47, "[14, 2, 2, 39]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[14, 3, 3, 39]" + "'", str48, "[14, 3, 3, 39]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[14, 4, 4, 39]" + "'", str49, "[14, 4, 4, 39]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[14, 5, 5, 39]" + "'", str50, "[14, 5, 5, 39]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[14, 6, 6, 39]" + "'", str51, "[14, 6, 6, 39]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[14, 7, 7, 39]" + "'", str52, "[14, 7, 7, 39]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[14, 8, 8, 39]" + "'", str53, "[14, 8, 8, 39]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[14, 9, 9, 39]" + "'", str54, "[14, 9, 9, 39]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[15, 0, 0, 40]" + "'", str55, "[15, 0, 0, 40]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[15, 1, 1, 40]" + "'", str56, "[15, 1, 1, 40]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[15, 2, 2, 40]" + "'", str57, "[15, 2, 2, 40]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[15, 3, 3, 40]" + "'", str58, "[15, 3, 3, 40]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[15, 4, 4, 40]" + "'", str59, "[15, 4, 4, 40]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[15, 5, 5, 40]" + "'", str60, "[15, 5, 5, 40]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[15, 6, 6, 40]" + "'", str61, "[15, 6, 6, 40]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[15, 7, 7, 40]" + "'", str62, "[15, 7, 7, 40]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[15, 8, 8, 40]" + "'", str63, "[15, 8, 8, 40]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[15, 9, 9, 40]" + "'", str64, "[15, 9, 9, 40]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[16, 0, 0, 41]" + "'", str65, "[16, 0, 0, 41]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[16, 1, 1, 41]" + "'", str66, "[16, 1, 1, 41]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[16, 2, 2, 41]" + "'", str67, "[16, 2, 2, 41]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[16, 3, 3, 41]" + "'", str68, "[16, 3, 3, 41]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[16, 4, 4, 41]" + "'", str69, "[16, 4, 4, 41]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[16, 5, 5, 41]" + "'", str70, "[16, 5, 5, 41]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[16, 6, 6, 41]" + "'", str71, "[16, 6, 6, 41]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[16, 7, 7, 41]" + "'", str72, "[16, 7, 7, 41]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[16, 8, 8, 41]" + "'", str73, "[16, 8, 8, 41]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[16, 9, 9, 41]" + "'", str74, "[16, 9, 9, 41]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[17, 0, 0, 42]" + "'", str75, "[17, 0, 0, 42]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[17, 1, 1, 42]" + "'", str76, "[17, 1, 1, 42]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[17, 2, 2, 42]" + "'", str77, "[17, 2, 2, 42]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[17, 3, 3, 42]" + "'", str78, "[17, 3, 3, 42]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[17, 4, 4, 42]" + "'", str79, "[17, 4, 4, 42]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[17, 5, 5, 42]" + "'", str80, "[17, 5, 5, 42]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[17, 6, 6, 42]" + "'", str81, "[17, 6, 6, 42]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[17, 7, 7, 42]" + "'", str82, "[17, 7, 7, 42]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[17, 8, 8, 42]" + "'", str83, "[17, 8, 8, 42]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[17, 9, 9, 42]" + "'", str84, "[17, 9, 9, 42]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2733");
        int[] intArray3 = new int[] { ' ', (-1), 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass87 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[40, 2, 9]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 0, 1]" + "'", str4, "[32, 0, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 1, 1]" + "'", str5, "[32, 1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 2, 1]" + "'", str6, "[32, 2, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 3, 1]" + "'", str7, "[32, 3, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 4, 1]" + "'", str8, "[32, 4, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 5, 1]" + "'", str9, "[32, 5, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 6, 1]" + "'", str10, "[32, 6, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 7, 1]" + "'", str11, "[32, 7, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 8, 1]" + "'", str12, "[32, 8, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 9, 1]" + "'", str13, "[32, 9, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[33, 0, 2]" + "'", str14, "[33, 0, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[33, 1, 2]" + "'", str15, "[33, 1, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[33, 2, 2]" + "'", str16, "[33, 2, 2]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[33, 3, 2]" + "'", str17, "[33, 3, 2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[33, 4, 2]" + "'", str18, "[33, 4, 2]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[33, 5, 2]" + "'", str19, "[33, 5, 2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[33, 6, 2]" + "'", str20, "[33, 6, 2]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[33, 7, 2]" + "'", str21, "[33, 7, 2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[33, 8, 2]" + "'", str22, "[33, 8, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[33, 9, 2]" + "'", str23, "[33, 9, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[34, 0, 3]" + "'", str24, "[34, 0, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34, 1, 3]" + "'", str25, "[34, 1, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 2, 3]" + "'", str26, "[34, 2, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[34, 3, 3]" + "'", str27, "[34, 3, 3]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[34, 4, 3]" + "'", str28, "[34, 4, 3]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[34, 5, 3]" + "'", str29, "[34, 5, 3]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[34, 6, 3]" + "'", str30, "[34, 6, 3]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[34, 7, 3]" + "'", str31, "[34, 7, 3]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[34, 8, 3]" + "'", str32, "[34, 8, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[34, 9, 3]" + "'", str33, "[34, 9, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 0, 4]" + "'", str34, "[35, 0, 4]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 1, 4]" + "'", str35, "[35, 1, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 2, 4]" + "'", str36, "[35, 2, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 3, 4]" + "'", str37, "[35, 3, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 4, 4]" + "'", str38, "[35, 4, 4]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 5, 4]" + "'", str39, "[35, 5, 4]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 6, 4]" + "'", str40, "[35, 6, 4]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 7, 4]" + "'", str41, "[35, 7, 4]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 8, 4]" + "'", str42, "[35, 8, 4]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 9, 4]" + "'", str43, "[35, 9, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[36, 0, 5]" + "'", str44, "[36, 0, 5]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[36, 1, 5]" + "'", str45, "[36, 1, 5]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[36, 2, 5]" + "'", str46, "[36, 2, 5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[36, 3, 5]" + "'", str47, "[36, 3, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[36, 4, 5]" + "'", str48, "[36, 4, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[36, 5, 5]" + "'", str49, "[36, 5, 5]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[36, 6, 5]" + "'", str50, "[36, 6, 5]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[36, 7, 5]" + "'", str51, "[36, 7, 5]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[36, 8, 5]" + "'", str52, "[36, 8, 5]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[36, 9, 5]" + "'", str53, "[36, 9, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[37, 0, 6]" + "'", str54, "[37, 0, 6]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[37, 1, 6]" + "'", str55, "[37, 1, 6]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[37, 2, 6]" + "'", str56, "[37, 2, 6]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[37, 3, 6]" + "'", str57, "[37, 3, 6]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[37, 4, 6]" + "'", str58, "[37, 4, 6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[37, 5, 6]" + "'", str59, "[37, 5, 6]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[37, 6, 6]" + "'", str60, "[37, 6, 6]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[37, 7, 6]" + "'", str61, "[37, 7, 6]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[37, 8, 6]" + "'", str62, "[37, 8, 6]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[37, 9, 6]" + "'", str63, "[37, 9, 6]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[38, 0, 7]" + "'", str64, "[38, 0, 7]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[38, 1, 7]" + "'", str65, "[38, 1, 7]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[38, 2, 7]" + "'", str66, "[38, 2, 7]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[38, 3, 7]" + "'", str67, "[38, 3, 7]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[38, 4, 7]" + "'", str68, "[38, 4, 7]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[38, 5, 7]" + "'", str69, "[38, 5, 7]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[38, 6, 7]" + "'", str70, "[38, 6, 7]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[38, 7, 7]" + "'", str71, "[38, 7, 7]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[38, 8, 7]" + "'", str72, "[38, 8, 7]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[38, 9, 7]" + "'", str73, "[38, 9, 7]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[39, 0, 8]" + "'", str74, "[39, 0, 8]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[39, 1, 8]" + "'", str75, "[39, 1, 8]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[39, 2, 8]" + "'", str76, "[39, 2, 8]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[39, 3, 8]" + "'", str77, "[39, 3, 8]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[39, 4, 8]" + "'", str78, "[39, 4, 8]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[39, 5, 8]" + "'", str79, "[39, 5, 8]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[39, 6, 8]" + "'", str80, "[39, 6, 8]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[39, 7, 8]" + "'", str81, "[39, 7, 8]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[39, 8, 8]" + "'", str82, "[39, 8, 8]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[39, 9, 8]" + "'", str83, "[39, 9, 8]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[40, 0, 9]" + "'", str84, "[40, 0, 9]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[40, 1, 9]" + "'", str85, "[40, 1, 9]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[40, 2, 9]" + "'", str86, "[40, 2, 9]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test2734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2734");
        int[] intArray2 = new int[] { 'a', 1 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass31 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[9, 9]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[98, 2]" + "'", str3, "[98, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[99, 3]" + "'", str4, "[99, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 4]" + "'", str5, "[100, 4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[101, 5]" + "'", str6, "[101, 5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[102, 6]" + "'", str7, "[102, 6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[103, 7]" + "'", str8, "[103, 7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[104, 8]" + "'", str9, "[104, 8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[105, 9]" + "'", str10, "[105, 9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 2]" + "'", str13, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3, 3]" + "'", str14, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4, 4]" + "'", str15, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5, 5]" + "'", str16, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6, 6]" + "'", str17, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7, 7]" + "'", str18, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8, 8]" + "'", str19, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9, 9]" + "'", str20, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 2]" + "'", str23, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 3]" + "'", str24, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4, 4]" + "'", str25, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5, 5]" + "'", str26, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6, 6]" + "'", str27, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7, 7]" + "'", str28, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8, 8]" + "'", str29, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9, 9]" + "'", str30, "[9, 9]");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test2735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2735");
        int[] intArray5 = new int[] { (short) 1, 0, (byte) 100, '4', (byte) 0 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass27 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 121, 52, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 52, 0]" + "'", str6, "[1, 0, 101, 52, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 52, 0]" + "'", str7, "[1, 0, 102, 52, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 52, 0]" + "'", str8, "[1, 0, 103, 52, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 52, 0]" + "'", str9, "[1, 0, 104, 52, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 52, 0]" + "'", str10, "[1, 0, 105, 52, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 52, 0]" + "'", str11, "[1, 0, 106, 52, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 52, 0]" + "'", str12, "[1, 0, 107, 52, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 108, 52, 0]" + "'", str13, "[1, 0, 108, 52, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 109, 52, 0]" + "'", str14, "[1, 0, 109, 52, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 110, 52, 0]" + "'", str15, "[1, 0, 110, 52, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 111, 52, 0]" + "'", str16, "[1, 0, 111, 52, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 0, 112, 52, 0]" + "'", str17, "[1, 0, 112, 52, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 0, 113, 52, 0]" + "'", str18, "[1, 0, 113, 52, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 0, 114, 52, 0]" + "'", str19, "[1, 0, 114, 52, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 0, 115, 52, 0]" + "'", str20, "[1, 0, 115, 52, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 116, 52, 0]" + "'", str21, "[1, 0, 116, 52, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 117, 52, 0]" + "'", str22, "[1, 0, 117, 52, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 118, 52, 0]" + "'", str23, "[1, 0, 118, 52, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 119, 52, 0]" + "'", str24, "[1, 0, 119, 52, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 0, 120, 52, 0]" + "'", str25, "[1, 0, 120, 52, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 0, 121, 52, 0]" + "'", str26, "[1, 0, 121, 52, 0]");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test2736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2736");
        int[] intArray2 = new int[] { '4', 'a' };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass41 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[90, 135]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[53, 98]" + "'", str3, "[53, 98]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[54, 99]" + "'", str4, "[54, 99]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[55, 100]" + "'", str5, "[55, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[56, 101]" + "'", str6, "[56, 101]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[57, 102]" + "'", str7, "[57, 102]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[58, 103]" + "'", str8, "[58, 103]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[59, 104]" + "'", str9, "[59, 104]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[60, 105]" + "'", str10, "[60, 105]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[61, 106]" + "'", str11, "[61, 106]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[62, 107]" + "'", str12, "[62, 107]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[63, 108]" + "'", str13, "[63, 108]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[64, 109]" + "'", str14, "[64, 109]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[65, 110]" + "'", str15, "[65, 110]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[66, 111]" + "'", str16, "[66, 111]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[67, 112]" + "'", str17, "[67, 112]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[68, 113]" + "'", str18, "[68, 113]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[69, 114]" + "'", str19, "[69, 114]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[70, 115]" + "'", str20, "[70, 115]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[71, 116]" + "'", str21, "[71, 116]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[72, 117]" + "'", str22, "[72, 117]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[73, 118]" + "'", str23, "[73, 118]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[74, 119]" + "'", str24, "[74, 119]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[75, 120]" + "'", str25, "[75, 120]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[76, 121]" + "'", str26, "[76, 121]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[77, 122]" + "'", str27, "[77, 122]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[78, 123]" + "'", str28, "[78, 123]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[79, 124]" + "'", str29, "[79, 124]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[80, 125]" + "'", str30, "[80, 125]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[81, 126]" + "'", str31, "[81, 126]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[82, 127]" + "'", str32, "[82, 127]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[83, 128]" + "'", str33, "[83, 128]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[84, 129]" + "'", str34, "[84, 129]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[85, 130]" + "'", str35, "[85, 130]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[86, 131]" + "'", str36, "[86, 131]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[87, 132]" + "'", str37, "[87, 132]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[88, 133]" + "'", str38, "[88, 133]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[89, 134]" + "'", str39, "[89, 134]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[90, 135]" + "'", str40, "[90, 135]");
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test2737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2737");
        int[] intArray5 = new int[] { 1, (short) 100, (byte) 100, (short) 10, (byte) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass11 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 100, 105, 10, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 100, 101, 10, 1]" + "'", str6, "[1, 100, 101, 10, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 100, 102, 10, 1]" + "'", str7, "[1, 100, 102, 10, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 100, 103, 10, 1]" + "'", str8, "[1, 100, 103, 10, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 100, 104, 10, 1]" + "'", str9, "[1, 100, 104, 10, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 100, 105, 10, 1]" + "'", str10, "[1, 100, 105, 10, 1]");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test2738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2738");
        int[] intArray6 = new int[] { (byte) 0, (short) 100, 0, (-1), (short) -1, (byte) 1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass64 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 105, 6, 6, 4, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 100, 1, 0, -1, 1]" + "'", str7, "[0, 100, 1, 0, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 100, 2, 1, -1, 1]" + "'", str8, "[0, 100, 2, 1, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 100, 3, 2, -1, 1]" + "'", str9, "[0, 100, 3, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 100, 4, 3, -1, 1]" + "'", str10, "[0, 100, 4, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 100, 5, 4, -1, 1]" + "'", str11, "[0, 100, 5, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 100, 6, 5, -1, 1]" + "'", str12, "[0, 100, 6, 5, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 100, 7, 6, -1, 1]" + "'", str13, "[0, 100, 7, 6, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 100, 8, 7, -1, 1]" + "'", str14, "[0, 100, 8, 7, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 100, 9, 8, -1, 1]" + "'", str15, "[0, 100, 9, 8, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 100, 10, 9, -1, 1]" + "'", str16, "[0, 100, 10, 9, -1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 101, 0, 0, 0, 1]" + "'", str17, "[0, 101, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 101, 1, 1, 0, 1]" + "'", str18, "[0, 101, 1, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 101, 2, 2, 0, 1]" + "'", str19, "[0, 101, 2, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 101, 3, 3, 0, 1]" + "'", str20, "[0, 101, 3, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 101, 4, 4, 0, 1]" + "'", str21, "[0, 101, 4, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 101, 5, 5, 0, 1]" + "'", str22, "[0, 101, 5, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 101, 6, 6, 0, 1]" + "'", str23, "[0, 101, 6, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 101, 7, 7, 0, 1]" + "'", str24, "[0, 101, 7, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 101, 8, 8, 0, 1]" + "'", str25, "[0, 101, 8, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 101, 9, 9, 0, 1]" + "'", str26, "[0, 101, 9, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 102, 0, 0, 1, 1]" + "'", str27, "[0, 102, 0, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 102, 1, 1, 1, 1]" + "'", str28, "[0, 102, 1, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 102, 2, 2, 1, 1]" + "'", str29, "[0, 102, 2, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 102, 3, 3, 1, 1]" + "'", str30, "[0, 102, 3, 3, 1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 102, 4, 4, 1, 1]" + "'", str31, "[0, 102, 4, 4, 1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 102, 5, 5, 1, 1]" + "'", str32, "[0, 102, 5, 5, 1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 102, 6, 6, 1, 1]" + "'", str33, "[0, 102, 6, 6, 1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 102, 7, 7, 1, 1]" + "'", str34, "[0, 102, 7, 7, 1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 102, 8, 8, 1, 1]" + "'", str35, "[0, 102, 8, 8, 1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 102, 9, 9, 1, 1]" + "'", str36, "[0, 102, 9, 9, 1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 103, 0, 0, 2, 1]" + "'", str37, "[0, 103, 0, 0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 103, 1, 1, 2, 1]" + "'", str38, "[0, 103, 1, 1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 103, 2, 2, 2, 1]" + "'", str39, "[0, 103, 2, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 103, 3, 3, 2, 1]" + "'", str40, "[0, 103, 3, 3, 2, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 103, 4, 4, 2, 1]" + "'", str41, "[0, 103, 4, 4, 2, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 103, 5, 5, 2, 1]" + "'", str42, "[0, 103, 5, 5, 2, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 103, 6, 6, 2, 1]" + "'", str43, "[0, 103, 6, 6, 2, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 103, 7, 7, 2, 1]" + "'", str44, "[0, 103, 7, 7, 2, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 103, 8, 8, 2, 1]" + "'", str45, "[0, 103, 8, 8, 2, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 103, 9, 9, 2, 1]" + "'", str46, "[0, 103, 9, 9, 2, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 104, 0, 0, 3, 1]" + "'", str47, "[0, 104, 0, 0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 104, 1, 1, 3, 1]" + "'", str48, "[0, 104, 1, 1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 104, 2, 2, 3, 1]" + "'", str49, "[0, 104, 2, 2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 104, 3, 3, 3, 1]" + "'", str50, "[0, 104, 3, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 104, 4, 4, 3, 1]" + "'", str51, "[0, 104, 4, 4, 3, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 104, 5, 5, 3, 1]" + "'", str52, "[0, 104, 5, 5, 3, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 104, 6, 6, 3, 1]" + "'", str53, "[0, 104, 6, 6, 3, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 104, 7, 7, 3, 1]" + "'", str54, "[0, 104, 7, 7, 3, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, 104, 8, 8, 3, 1]" + "'", str55, "[0, 104, 8, 8, 3, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, 104, 9, 9, 3, 1]" + "'", str56, "[0, 104, 9, 9, 3, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, 105, 0, 0, 4, 1]" + "'", str57, "[0, 105, 0, 0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, 105, 1, 1, 4, 1]" + "'", str58, "[0, 105, 1, 1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, 105, 2, 2, 4, 1]" + "'", str59, "[0, 105, 2, 2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, 105, 3, 3, 4, 1]" + "'", str60, "[0, 105, 3, 3, 4, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, 105, 4, 4, 4, 1]" + "'", str61, "[0, 105, 4, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, 105, 5, 5, 4, 1]" + "'", str62, "[0, 105, 5, 5, 4, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[0, 105, 6, 6, 4, 1]" + "'", str63, "[0, 105, 6, 6, 4, 1]");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test2739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2739");
        int[] intArray3 = new int[] { ' ', '#', (short) 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass27 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[32, 58, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 36, 1]" + "'", str4, "[32, 36, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 37, 1]" + "'", str5, "[32, 37, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 38, 1]" + "'", str6, "[32, 38, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 39, 1]" + "'", str7, "[32, 39, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 40, 1]" + "'", str8, "[32, 40, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 41, 1]" + "'", str9, "[32, 41, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 42, 1]" + "'", str10, "[32, 42, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 43, 1]" + "'", str11, "[32, 43, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 44, 1]" + "'", str12, "[32, 44, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 45, 1]" + "'", str13, "[32, 45, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 46, 1]" + "'", str14, "[32, 46, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[32, 47, 1]" + "'", str15, "[32, 47, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[32, 48, 1]" + "'", str16, "[32, 48, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[32, 49, 1]" + "'", str17, "[32, 49, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[32, 50, 1]" + "'", str18, "[32, 50, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[32, 51, 1]" + "'", str19, "[32, 51, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[32, 52, 1]" + "'", str20, "[32, 52, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[32, 53, 1]" + "'", str21, "[32, 53, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[32, 54, 1]" + "'", str22, "[32, 54, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32, 55, 1]" + "'", str23, "[32, 55, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 56, 1]" + "'", str24, "[32, 56, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[32, 57, 1]" + "'", str25, "[32, 57, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[32, 58, 1]" + "'", str26, "[32, 58, 1]");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test2740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2740");
        int[] intArray4 = new int[] { (byte) -1, 1, 100, '#' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass40 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 36, 135, 35]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 2, 101, 35]" + "'", str5, "[-1, 2, 101, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 3, 102, 35]" + "'", str6, "[-1, 3, 102, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 4, 103, 35]" + "'", str7, "[-1, 4, 103, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 5, 104, 35]" + "'", str8, "[-1, 5, 104, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 6, 105, 35]" + "'", str9, "[-1, 6, 105, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 7, 106, 35]" + "'", str10, "[-1, 7, 106, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 8, 107, 35]" + "'", str11, "[-1, 8, 107, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 9, 108, 35]" + "'", str12, "[-1, 9, 108, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 10, 109, 35]" + "'", str13, "[-1, 10, 109, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 11, 110, 35]" + "'", str14, "[-1, 11, 110, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 12, 111, 35]" + "'", str15, "[-1, 12, 111, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 13, 112, 35]" + "'", str16, "[-1, 13, 112, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 14, 113, 35]" + "'", str17, "[-1, 14, 113, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 15, 114, 35]" + "'", str18, "[-1, 15, 114, 35]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 16, 115, 35]" + "'", str19, "[-1, 16, 115, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 17, 116, 35]" + "'", str20, "[-1, 17, 116, 35]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 18, 117, 35]" + "'", str21, "[-1, 18, 117, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 19, 118, 35]" + "'", str22, "[-1, 19, 118, 35]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 20, 119, 35]" + "'", str23, "[-1, 20, 119, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 21, 120, 35]" + "'", str24, "[-1, 21, 120, 35]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 22, 121, 35]" + "'", str25, "[-1, 22, 121, 35]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 23, 122, 35]" + "'", str26, "[-1, 23, 122, 35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 24, 123, 35]" + "'", str27, "[-1, 24, 123, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 25, 124, 35]" + "'", str28, "[-1, 25, 124, 35]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 26, 125, 35]" + "'", str29, "[-1, 26, 125, 35]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 27, 126, 35]" + "'", str30, "[-1, 27, 126, 35]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 28, 127, 35]" + "'", str31, "[-1, 28, 127, 35]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 29, 128, 35]" + "'", str32, "[-1, 29, 128, 35]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 30, 129, 35]" + "'", str33, "[-1, 30, 129, 35]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 31, 130, 35]" + "'", str34, "[-1, 31, 130, 35]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 32, 131, 35]" + "'", str35, "[-1, 32, 131, 35]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 33, 132, 35]" + "'", str36, "[-1, 33, 132, 35]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 34, 133, 35]" + "'", str37, "[-1, 34, 133, 35]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 35, 134, 35]" + "'", str38, "[-1, 35, 134, 35]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 36, 135, 35]" + "'", str39, "[-1, 36, 135, 35]");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test2741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2741");
        int[] intArray1 = new int[] { 10 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass74 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[82]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[11]" + "'", str2, "[11]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[12]" + "'", str3, "[12]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[13]" + "'", str4, "[13]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[14]" + "'", str5, "[14]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[15]" + "'", str6, "[15]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[16]" + "'", str7, "[16]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[17]" + "'", str8, "[17]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[18]" + "'", str9, "[18]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[19]" + "'", str10, "[19]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[20]" + "'", str11, "[20]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[21]" + "'", str12, "[21]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[22]" + "'", str13, "[22]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[23]" + "'", str14, "[23]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[24]" + "'", str15, "[24]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[25]" + "'", str16, "[25]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[26]" + "'", str17, "[26]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[27]" + "'", str18, "[27]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[28]" + "'", str19, "[28]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[29]" + "'", str20, "[29]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[30]" + "'", str21, "[30]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[31]" + "'", str22, "[31]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32]" + "'", str23, "[32]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[33]" + "'", str24, "[33]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34]" + "'", str25, "[34]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35]" + "'", str26, "[35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[36]" + "'", str27, "[36]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[37]" + "'", str28, "[37]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[38]" + "'", str29, "[38]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[39]" + "'", str30, "[39]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[40]" + "'", str31, "[40]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[41]" + "'", str32, "[41]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[42]" + "'", str33, "[42]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[43]" + "'", str34, "[43]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[44]" + "'", str35, "[44]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[45]" + "'", str36, "[45]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[46]" + "'", str37, "[46]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[47]" + "'", str38, "[47]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[48]" + "'", str39, "[48]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[49]" + "'", str40, "[49]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[50]" + "'", str41, "[50]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[51]" + "'", str42, "[51]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[52]" + "'", str43, "[52]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[53]" + "'", str44, "[53]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[54]" + "'", str45, "[54]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[55]" + "'", str46, "[55]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[56]" + "'", str47, "[56]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[57]" + "'", str48, "[57]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[58]" + "'", str49, "[58]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[59]" + "'", str50, "[59]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[60]" + "'", str51, "[60]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[61]" + "'", str52, "[61]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[62]" + "'", str53, "[62]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[63]" + "'", str54, "[63]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[64]" + "'", str55, "[64]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[65]" + "'", str56, "[65]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[66]" + "'", str57, "[66]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[67]" + "'", str58, "[67]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[68]" + "'", str59, "[68]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[69]" + "'", str60, "[69]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[70]" + "'", str61, "[70]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[71]" + "'", str62, "[71]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[72]" + "'", str63, "[72]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[73]" + "'", str64, "[73]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[74]" + "'", str65, "[74]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[75]" + "'", str66, "[75]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[76]" + "'", str67, "[76]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[77]" + "'", str68, "[77]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[78]" + "'", str69, "[78]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[79]" + "'", str70, "[79]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[80]" + "'", str71, "[80]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[81]" + "'", str72, "[81]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[82]" + "'", str73, "[82]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test2742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2742");
        int[] intArray6 = new int[] { (byte) 100, 'a', ' ', (byte) -1, (short) -1, (short) 1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass80 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 104, 2, 2, 6, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 97, 33, 0, -1, 1]" + "'", str7, "[100, 97, 33, 0, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 97, 34, 1, -1, 1]" + "'", str8, "[100, 97, 34, 1, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 97, 35, 2, -1, 1]" + "'", str9, "[100, 97, 35, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 97, 36, 3, -1, 1]" + "'", str10, "[100, 97, 36, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 97, 37, 4, -1, 1]" + "'", str11, "[100, 97, 37, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 97, 38, 5, -1, 1]" + "'", str12, "[100, 97, 38, 5, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 97, 39, 6, -1, 1]" + "'", str13, "[100, 97, 39, 6, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 97, 40, 7, -1, 1]" + "'", str14, "[100, 97, 40, 7, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 97, 41, 8, -1, 1]" + "'", str15, "[100, 97, 41, 8, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 97, 42, 9, -1, 1]" + "'", str16, "[100, 97, 42, 9, -1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 98, 0, 0, 0, 1]" + "'", str17, "[100, 98, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 98, 1, 1, 0, 1]" + "'", str18, "[100, 98, 1, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 98, 2, 2, 0, 1]" + "'", str19, "[100, 98, 2, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 98, 3, 3, 0, 1]" + "'", str20, "[100, 98, 3, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 98, 4, 4, 0, 1]" + "'", str21, "[100, 98, 4, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 98, 5, 5, 0, 1]" + "'", str22, "[100, 98, 5, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 98, 6, 6, 0, 1]" + "'", str23, "[100, 98, 6, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 98, 7, 7, 0, 1]" + "'", str24, "[100, 98, 7, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 98, 8, 8, 0, 1]" + "'", str25, "[100, 98, 8, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 98, 9, 9, 0, 1]" + "'", str26, "[100, 98, 9, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 99, 0, 0, 1, 1]" + "'", str27, "[100, 99, 0, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 99, 1, 1, 1, 1]" + "'", str28, "[100, 99, 1, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 99, 2, 2, 1, 1]" + "'", str29, "[100, 99, 2, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 99, 3, 3, 1, 1]" + "'", str30, "[100, 99, 3, 3, 1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 99, 4, 4, 1, 1]" + "'", str31, "[100, 99, 4, 4, 1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 99, 5, 5, 1, 1]" + "'", str32, "[100, 99, 5, 5, 1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 99, 6, 6, 1, 1]" + "'", str33, "[100, 99, 6, 6, 1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 99, 7, 7, 1, 1]" + "'", str34, "[100, 99, 7, 7, 1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 99, 8, 8, 1, 1]" + "'", str35, "[100, 99, 8, 8, 1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 99, 9, 9, 1, 1]" + "'", str36, "[100, 99, 9, 9, 1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 100, 0, 0, 2, 1]" + "'", str37, "[100, 100, 0, 0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 100, 1, 1, 2, 1]" + "'", str38, "[100, 100, 1, 1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 100, 2, 2, 2, 1]" + "'", str39, "[100, 100, 2, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 100, 3, 3, 2, 1]" + "'", str40, "[100, 100, 3, 3, 2, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 100, 4, 4, 2, 1]" + "'", str41, "[100, 100, 4, 4, 2, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 100, 5, 5, 2, 1]" + "'", str42, "[100, 100, 5, 5, 2, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 100, 6, 6, 2, 1]" + "'", str43, "[100, 100, 6, 6, 2, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 100, 7, 7, 2, 1]" + "'", str44, "[100, 100, 7, 7, 2, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 100, 8, 8, 2, 1]" + "'", str45, "[100, 100, 8, 8, 2, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 100, 9, 9, 2, 1]" + "'", str46, "[100, 100, 9, 9, 2, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 101, 0, 0, 3, 1]" + "'", str47, "[100, 101, 0, 0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 101, 1, 1, 3, 1]" + "'", str48, "[100, 101, 1, 1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 101, 2, 2, 3, 1]" + "'", str49, "[100, 101, 2, 2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 101, 3, 3, 3, 1]" + "'", str50, "[100, 101, 3, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 101, 4, 4, 3, 1]" + "'", str51, "[100, 101, 4, 4, 3, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 101, 5, 5, 3, 1]" + "'", str52, "[100, 101, 5, 5, 3, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 101, 6, 6, 3, 1]" + "'", str53, "[100, 101, 6, 6, 3, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 101, 7, 7, 3, 1]" + "'", str54, "[100, 101, 7, 7, 3, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 101, 8, 8, 3, 1]" + "'", str55, "[100, 101, 8, 8, 3, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 101, 9, 9, 3, 1]" + "'", str56, "[100, 101, 9, 9, 3, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 102, 0, 0, 4, 1]" + "'", str57, "[100, 102, 0, 0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 102, 1, 1, 4, 1]" + "'", str58, "[100, 102, 1, 1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 102, 2, 2, 4, 1]" + "'", str59, "[100, 102, 2, 2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 102, 3, 3, 4, 1]" + "'", str60, "[100, 102, 3, 3, 4, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 102, 4, 4, 4, 1]" + "'", str61, "[100, 102, 4, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[100, 102, 5, 5, 4, 1]" + "'", str62, "[100, 102, 5, 5, 4, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[100, 102, 6, 6, 4, 1]" + "'", str63, "[100, 102, 6, 6, 4, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[100, 102, 7, 7, 4, 1]" + "'", str64, "[100, 102, 7, 7, 4, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[100, 102, 8, 8, 4, 1]" + "'", str65, "[100, 102, 8, 8, 4, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[100, 102, 9, 9, 4, 1]" + "'", str66, "[100, 102, 9, 9, 4, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[100, 103, 0, 0, 5, 1]" + "'", str67, "[100, 103, 0, 0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[100, 103, 1, 1, 5, 1]" + "'", str68, "[100, 103, 1, 1, 5, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[100, 103, 2, 2, 5, 1]" + "'", str69, "[100, 103, 2, 2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[100, 103, 3, 3, 5, 1]" + "'", str70, "[100, 103, 3, 3, 5, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[100, 103, 4, 4, 5, 1]" + "'", str71, "[100, 103, 4, 4, 5, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[100, 103, 5, 5, 5, 1]" + "'", str72, "[100, 103, 5, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[100, 103, 6, 6, 5, 1]" + "'", str73, "[100, 103, 6, 6, 5, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[100, 103, 7, 7, 5, 1]" + "'", str74, "[100, 103, 7, 7, 5, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[100, 103, 8, 8, 5, 1]" + "'", str75, "[100, 103, 8, 8, 5, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[100, 103, 9, 9, 5, 1]" + "'", str76, "[100, 103, 9, 9, 5, 1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[100, 104, 0, 0, 6, 1]" + "'", str77, "[100, 104, 0, 0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[100, 104, 1, 1, 6, 1]" + "'", str78, "[100, 104, 1, 1, 6, 1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[100, 104, 2, 2, 6, 1]" + "'", str79, "[100, 104, 2, 2, 6, 1]");
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test2743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2743");
        int[] intArray4 = new int[] { (byte) 0, (short) 10, (short) -1, 'a' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass72 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[6, 6, 6, 103]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 11, 0, 97]" + "'", str5, "[0, 11, 0, 97]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 12, 1, 97]" + "'", str6, "[0, 12, 1, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 13, 2, 97]" + "'", str7, "[0, 13, 2, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 14, 3, 97]" + "'", str8, "[0, 14, 3, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 15, 4, 97]" + "'", str9, "[0, 15, 4, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 16, 5, 97]" + "'", str10, "[0, 16, 5, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 17, 6, 97]" + "'", str11, "[0, 17, 6, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 18, 7, 97]" + "'", str12, "[0, 18, 7, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 19, 8, 97]" + "'", str13, "[0, 19, 8, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 20, 9, 97]" + "'", str14, "[0, 20, 9, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 0, 98]" + "'", str15, "[1, 0, 0, 98]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 1, 98]" + "'", str16, "[1, 1, 1, 98]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 2, 98]" + "'", str17, "[1, 2, 2, 98]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 3, 3, 98]" + "'", str18, "[1, 3, 3, 98]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 4, 4, 98]" + "'", str19, "[1, 4, 4, 98]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 5, 5, 98]" + "'", str20, "[1, 5, 5, 98]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 6, 6, 98]" + "'", str21, "[1, 6, 6, 98]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 7, 7, 98]" + "'", str22, "[1, 7, 7, 98]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 8, 8, 98]" + "'", str23, "[1, 8, 8, 98]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 9, 9, 98]" + "'", str24, "[1, 9, 9, 98]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 0, 0, 99]" + "'", str25, "[2, 0, 0, 99]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 1, 1, 99]" + "'", str26, "[2, 1, 1, 99]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 2, 2, 99]" + "'", str27, "[2, 2, 2, 99]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 3, 3, 99]" + "'", str28, "[2, 3, 3, 99]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 4, 4, 99]" + "'", str29, "[2, 4, 4, 99]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 5, 5, 99]" + "'", str30, "[2, 5, 5, 99]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 6, 6, 99]" + "'", str31, "[2, 6, 6, 99]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 7, 7, 99]" + "'", str32, "[2, 7, 7, 99]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 8, 8, 99]" + "'", str33, "[2, 8, 8, 99]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 9, 9, 99]" + "'", str34, "[2, 9, 9, 99]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 0, 0, 100]" + "'", str35, "[3, 0, 0, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 1, 1, 100]" + "'", str36, "[3, 1, 1, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 2, 2, 100]" + "'", str37, "[3, 2, 2, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 3, 3, 100]" + "'", str38, "[3, 3, 3, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 4, 4, 100]" + "'", str39, "[3, 4, 4, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 5, 5, 100]" + "'", str40, "[3, 5, 5, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 6, 6, 100]" + "'", str41, "[3, 6, 6, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[3, 7, 7, 100]" + "'", str42, "[3, 7, 7, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 8, 8, 100]" + "'", str43, "[3, 8, 8, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 9, 9, 100]" + "'", str44, "[3, 9, 9, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 0, 0, 101]" + "'", str45, "[4, 0, 0, 101]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 1, 1, 101]" + "'", str46, "[4, 1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 2, 2, 101]" + "'", str47, "[4, 2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[4, 3, 3, 101]" + "'", str48, "[4, 3, 3, 101]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[4, 4, 4, 101]" + "'", str49, "[4, 4, 4, 101]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[4, 5, 5, 101]" + "'", str50, "[4, 5, 5, 101]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[4, 6, 6, 101]" + "'", str51, "[4, 6, 6, 101]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[4, 7, 7, 101]" + "'", str52, "[4, 7, 7, 101]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[4, 8, 8, 101]" + "'", str53, "[4, 8, 8, 101]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[4, 9, 9, 101]" + "'", str54, "[4, 9, 9, 101]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[5, 0, 0, 102]" + "'", str55, "[5, 0, 0, 102]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5, 1, 1, 102]" + "'", str56, "[5, 1, 1, 102]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5, 2, 2, 102]" + "'", str57, "[5, 2, 2, 102]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 3, 3, 102]" + "'", str58, "[5, 3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[5, 4, 4, 102]" + "'", str59, "[5, 4, 4, 102]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[5, 5, 5, 102]" + "'", str60, "[5, 5, 5, 102]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[5, 6, 6, 102]" + "'", str61, "[5, 6, 6, 102]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[5, 7, 7, 102]" + "'", str62, "[5, 7, 7, 102]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[5, 8, 8, 102]" + "'", str63, "[5, 8, 8, 102]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[5, 9, 9, 102]" + "'", str64, "[5, 9, 9, 102]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[6, 0, 0, 103]" + "'", str65, "[6, 0, 0, 103]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[6, 1, 1, 103]" + "'", str66, "[6, 1, 1, 103]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[6, 2, 2, 103]" + "'", str67, "[6, 2, 2, 103]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[6, 3, 3, 103]" + "'", str68, "[6, 3, 3, 103]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[6, 4, 4, 103]" + "'", str69, "[6, 4, 4, 103]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[6, 5, 5, 103]" + "'", str70, "[6, 5, 5, 103]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[6, 6, 6, 103]" + "'", str71, "[6, 6, 6, 103]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test2744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2744");
        int[] intArray1 = new int[] { 'a' };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass60 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[155]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[98]" + "'", str2, "[98]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[99]" + "'", str3, "[99]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100]" + "'", str4, "[100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[101]" + "'", str5, "[101]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[102]" + "'", str6, "[102]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[103]" + "'", str7, "[103]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[104]" + "'", str8, "[104]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[105]" + "'", str9, "[105]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[106]" + "'", str10, "[106]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[107]" + "'", str11, "[107]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[108]" + "'", str12, "[108]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[109]" + "'", str13, "[109]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[110]" + "'", str14, "[110]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[111]" + "'", str15, "[111]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[112]" + "'", str16, "[112]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[113]" + "'", str17, "[113]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[114]" + "'", str18, "[114]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[115]" + "'", str19, "[115]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[116]" + "'", str20, "[116]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[117]" + "'", str21, "[117]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[118]" + "'", str22, "[118]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[119]" + "'", str23, "[119]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[120]" + "'", str24, "[120]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[121]" + "'", str25, "[121]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[122]" + "'", str26, "[122]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[123]" + "'", str27, "[123]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[124]" + "'", str28, "[124]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[125]" + "'", str29, "[125]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[126]" + "'", str30, "[126]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[127]" + "'", str31, "[127]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[128]" + "'", str32, "[128]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[129]" + "'", str33, "[129]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[130]" + "'", str34, "[130]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[131]" + "'", str35, "[131]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[132]" + "'", str36, "[132]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[133]" + "'", str37, "[133]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[134]" + "'", str38, "[134]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[135]" + "'", str39, "[135]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[136]" + "'", str40, "[136]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[137]" + "'", str41, "[137]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[138]" + "'", str42, "[138]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[139]" + "'", str43, "[139]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[140]" + "'", str44, "[140]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[141]" + "'", str45, "[141]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[142]" + "'", str46, "[142]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[143]" + "'", str47, "[143]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[144]" + "'", str48, "[144]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[145]" + "'", str49, "[145]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[146]" + "'", str50, "[146]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[147]" + "'", str51, "[147]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[148]" + "'", str52, "[148]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[149]" + "'", str53, "[149]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[150]" + "'", str54, "[150]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[151]" + "'", str55, "[151]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[152]" + "'", str56, "[152]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[153]" + "'", str57, "[153]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[154]" + "'", str58, "[154]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[155]" + "'", str59, "[155]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test2745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2745");
        int[] intArray3 = new int[] { 1, 0, (short) 0 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass32 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[3, 8, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1, 0]" + "'", str4, "[1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 2, 0]" + "'", str5, "[1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 3, 0]" + "'", str6, "[1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 4, 0]" + "'", str7, "[1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 5, 0]" + "'", str8, "[1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 6, 0]" + "'", str9, "[1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 7, 0]" + "'", str10, "[1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 8, 0]" + "'", str11, "[1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 9, 0]" + "'", str12, "[1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 0, 1]" + "'", str13, "[2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 1, 1]" + "'", str14, "[2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2, 1]" + "'", str15, "[2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 3, 1]" + "'", str16, "[2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 4, 1]" + "'", str17, "[2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 5, 1]" + "'", str18, "[2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 6, 1]" + "'", str19, "[2, 6, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 7, 1]" + "'", str20, "[2, 7, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 8, 1]" + "'", str21, "[2, 8, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 9, 1]" + "'", str22, "[2, 9, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3, 0, 2]" + "'", str23, "[3, 0, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 1, 2]" + "'", str24, "[3, 1, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 2, 2]" + "'", str25, "[3, 2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3, 2]" + "'", str26, "[3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 4, 2]" + "'", str27, "[3, 4, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 5, 2]" + "'", str28, "[3, 5, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[3, 6, 2]" + "'", str29, "[3, 6, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[3, 7, 2]" + "'", str30, "[3, 7, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[3, 8, 2]" + "'", str31, "[3, 8, 2]");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test2746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2746");
        int[] intArray2 = new int[] { (short) 1, (short) -1 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str90 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str91 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str92 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str93 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass94 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[0, 0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 0]" + "'", str3, "[2, 0]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 1]" + "'", str4, "[3, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 2]" + "'", str5, "[4, 2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 3]" + "'", str6, "[5, 3]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 4]" + "'", str7, "[6, 4]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 5]" + "'", str8, "[7, 5]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 6]" + "'", str9, "[8, 6]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 7]" + "'", str10, "[9, 7]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 8]" + "'", str11, "[10, 8]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 9]" + "'", str12, "[11, 9]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 1]" + "'", str13, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1]" + "'", str14, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2]" + "'", str15, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[3, 3]" + "'", str16, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[4, 4]" + "'", str17, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[5, 5]" + "'", str18, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[6, 6]" + "'", str19, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[7, 7]" + "'", str20, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[8, 8]" + "'", str21, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[9, 9]" + "'", str22, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 1]" + "'", str23, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1]" + "'", str24, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 2]" + "'", str25, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3]" + "'", str26, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[4, 4]" + "'", str27, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[5, 5]" + "'", str28, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[6, 6]" + "'", str29, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[7, 7]" + "'", str30, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[8, 8]" + "'", str31, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[9, 9]" + "'", str32, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 0, 1]" + "'", str33, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1]" + "'", str34, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 2]" + "'", str35, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 3]" + "'", str36, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4]" + "'", str37, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[5, 5]" + "'", str38, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[6, 6]" + "'", str39, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[7, 7]" + "'", str40, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[8, 8]" + "'", str41, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[9, 9]" + "'", str42, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 0, 1]" + "'", str43, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1]" + "'", str44, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[2, 2]" + "'", str45, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 3]" + "'", str46, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 4]" + "'", str47, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5]" + "'", str48, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[6, 6]" + "'", str49, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[7, 7]" + "'", str50, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[8, 8]" + "'", str51, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[9, 9]" + "'", str52, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 0, 1]" + "'", str53, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 1]" + "'", str54, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[2, 2]" + "'", str55, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[3, 3]" + "'", str56, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[4, 4]" + "'", str57, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 5]" + "'", str58, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 6]" + "'", str59, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[7, 7]" + "'", str60, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[8, 8]" + "'", str61, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[9, 9]" + "'", str62, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 0, 1]" + "'", str63, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 1]" + "'", str64, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[2, 2]" + "'", str65, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[3, 3]" + "'", str66, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[4, 4]" + "'", str67, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[5, 5]" + "'", str68, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[6, 6]" + "'", str69, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[7, 7]" + "'", str70, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[8, 8]" + "'", str71, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[9, 9]" + "'", str72, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 0, 1]" + "'", str73, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 1]" + "'", str74, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[2, 2]" + "'", str75, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[3, 3]" + "'", str76, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[4, 4]" + "'", str77, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[5, 5]" + "'", str78, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[6, 6]" + "'", str79, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[7, 7]" + "'", str80, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[8, 8]" + "'", str81, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[9, 9]" + "'", str82, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[1, 0, 1]" + "'", str83, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[1, 1]" + "'", str84, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[2, 2]" + "'", str85, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[3, 3]" + "'", str86, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[4, 4]" + "'", str87, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[5, 5]" + "'", str88, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[6, 6]" + "'", str89, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[7, 7]" + "'", str90, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[8, 8]" + "'", str91, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[9, 9]" + "'", str92, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[1, 0, 1]" + "'", str93, "[1, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test2747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2747");
        int[] intArray5 = new int[] { (short) 1, (short) 1, (byte) 0, '4', '#' };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass15 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 1, 9, 52, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 1, 52, 35]" + "'", str6, "[1, 1, 1, 52, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1, 2, 52, 35]" + "'", str7, "[1, 1, 2, 52, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1, 3, 52, 35]" + "'", str8, "[1, 1, 3, 52, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1, 4, 52, 35]" + "'", str9, "[1, 1, 4, 52, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1, 5, 52, 35]" + "'", str10, "[1, 1, 5, 52, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1, 6, 52, 35]" + "'", str11, "[1, 1, 6, 52, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1, 7, 52, 35]" + "'", str12, "[1, 1, 7, 52, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 8, 52, 35]" + "'", str13, "[1, 1, 8, 52, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1, 9, 52, 35]" + "'", str14, "[1, 1, 9, 52, 35]");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test2748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2748");
        int[] intArray4 = new int[] { 1, (short) 10, (short) 10, (short) -1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass70 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 75, 75, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 11, 11, -1]" + "'", str5, "[1, 11, 11, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 12, 12, -1]" + "'", str6, "[1, 12, 12, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 13, 13, -1]" + "'", str7, "[1, 13, 13, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 14, 14, -1]" + "'", str8, "[1, 14, 14, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 15, 15, -1]" + "'", str9, "[1, 15, 15, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 16, 16, -1]" + "'", str10, "[1, 16, 16, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 17, 17, -1]" + "'", str11, "[1, 17, 17, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 18, 18, -1]" + "'", str12, "[1, 18, 18, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 19, 19, -1]" + "'", str13, "[1, 19, 19, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 20, 20, -1]" + "'", str14, "[1, 20, 20, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 21, 21, -1]" + "'", str15, "[1, 21, 21, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 22, 22, -1]" + "'", str16, "[1, 22, 22, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 23, 23, -1]" + "'", str17, "[1, 23, 23, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 24, 24, -1]" + "'", str18, "[1, 24, 24, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 25, 25, -1]" + "'", str19, "[1, 25, 25, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 26, 26, -1]" + "'", str20, "[1, 26, 26, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 27, 27, -1]" + "'", str21, "[1, 27, 27, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 28, 28, -1]" + "'", str22, "[1, 28, 28, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 29, 29, -1]" + "'", str23, "[1, 29, 29, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 30, 30, -1]" + "'", str24, "[1, 30, 30, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 31, 31, -1]" + "'", str25, "[1, 31, 31, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 32, 32, -1]" + "'", str26, "[1, 32, 32, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 33, 33, -1]" + "'", str27, "[1, 33, 33, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 34, 34, -1]" + "'", str28, "[1, 34, 34, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 35, 35, -1]" + "'", str29, "[1, 35, 35, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 36, 36, -1]" + "'", str30, "[1, 36, 36, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 37, 37, -1]" + "'", str31, "[1, 37, 37, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 38, 38, -1]" + "'", str32, "[1, 38, 38, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 39, 39, -1]" + "'", str33, "[1, 39, 39, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 40, 40, -1]" + "'", str34, "[1, 40, 40, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 41, 41, -1]" + "'", str35, "[1, 41, 41, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 42, 42, -1]" + "'", str36, "[1, 42, 42, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 43, 43, -1]" + "'", str37, "[1, 43, 43, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 44, 44, -1]" + "'", str38, "[1, 44, 44, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 45, 45, -1]" + "'", str39, "[1, 45, 45, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 46, 46, -1]" + "'", str40, "[1, 46, 46, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 47, 47, -1]" + "'", str41, "[1, 47, 47, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 48, 48, -1]" + "'", str42, "[1, 48, 48, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 49, 49, -1]" + "'", str43, "[1, 49, 49, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 50, 50, -1]" + "'", str44, "[1, 50, 50, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 51, 51, -1]" + "'", str45, "[1, 51, 51, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 52, 52, -1]" + "'", str46, "[1, 52, 52, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 53, 53, -1]" + "'", str47, "[1, 53, 53, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 54, 54, -1]" + "'", str48, "[1, 54, 54, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 55, 55, -1]" + "'", str49, "[1, 55, 55, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 56, 56, -1]" + "'", str50, "[1, 56, 56, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 57, 57, -1]" + "'", str51, "[1, 57, 57, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 58, 58, -1]" + "'", str52, "[1, 58, 58, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 59, 59, -1]" + "'", str53, "[1, 59, 59, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 60, 60, -1]" + "'", str54, "[1, 60, 60, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 61, 61, -1]" + "'", str55, "[1, 61, 61, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 62, 62, -1]" + "'", str56, "[1, 62, 62, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 63, 63, -1]" + "'", str57, "[1, 63, 63, -1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 64, 64, -1]" + "'", str58, "[1, 64, 64, -1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 65, 65, -1]" + "'", str59, "[1, 65, 65, -1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 66, 66, -1]" + "'", str60, "[1, 66, 66, -1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 67, 67, -1]" + "'", str61, "[1, 67, 67, -1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 68, 68, -1]" + "'", str62, "[1, 68, 68, -1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 69, 69, -1]" + "'", str63, "[1, 69, 69, -1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 70, 70, -1]" + "'", str64, "[1, 70, 70, -1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 71, 71, -1]" + "'", str65, "[1, 71, 71, -1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 72, 72, -1]" + "'", str66, "[1, 72, 72, -1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 73, 73, -1]" + "'", str67, "[1, 73, 73, -1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 74, 74, -1]" + "'", str68, "[1, 74, 74, -1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 75, 75, -1]" + "'", str69, "[1, 75, 75, -1]");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test2749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2749");
        int[] intArray4 = new int[] { 'a', 10, 100, (short) 10 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass90 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, 95, 185, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 11, 101, 10]" + "'", str5, "[97, 11, 101, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 12, 102, 10]" + "'", str6, "[97, 12, 102, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 13, 103, 10]" + "'", str7, "[97, 13, 103, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 14, 104, 10]" + "'", str8, "[97, 14, 104, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 15, 105, 10]" + "'", str9, "[97, 15, 105, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 16, 106, 10]" + "'", str10, "[97, 16, 106, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 17, 107, 10]" + "'", str11, "[97, 17, 107, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 18, 108, 10]" + "'", str12, "[97, 18, 108, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 19, 109, 10]" + "'", str13, "[97, 19, 109, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 20, 110, 10]" + "'", str14, "[97, 20, 110, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[97, 21, 111, 10]" + "'", str15, "[97, 21, 111, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[97, 22, 112, 10]" + "'", str16, "[97, 22, 112, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[97, 23, 113, 10]" + "'", str17, "[97, 23, 113, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[97, 24, 114, 10]" + "'", str18, "[97, 24, 114, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[97, 25, 115, 10]" + "'", str19, "[97, 25, 115, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[97, 26, 116, 10]" + "'", str20, "[97, 26, 116, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[97, 27, 117, 10]" + "'", str21, "[97, 27, 117, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[97, 28, 118, 10]" + "'", str22, "[97, 28, 118, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[97, 29, 119, 10]" + "'", str23, "[97, 29, 119, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[97, 30, 120, 10]" + "'", str24, "[97, 30, 120, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[97, 31, 121, 10]" + "'", str25, "[97, 31, 121, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[97, 32, 122, 10]" + "'", str26, "[97, 32, 122, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[97, 33, 123, 10]" + "'", str27, "[97, 33, 123, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[97, 34, 124, 10]" + "'", str28, "[97, 34, 124, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[97, 35, 125, 10]" + "'", str29, "[97, 35, 125, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[97, 36, 126, 10]" + "'", str30, "[97, 36, 126, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[97, 37, 127, 10]" + "'", str31, "[97, 37, 127, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[97, 38, 128, 10]" + "'", str32, "[97, 38, 128, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[97, 39, 129, 10]" + "'", str33, "[97, 39, 129, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[97, 40, 130, 10]" + "'", str34, "[97, 40, 130, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[97, 41, 131, 10]" + "'", str35, "[97, 41, 131, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[97, 42, 132, 10]" + "'", str36, "[97, 42, 132, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[97, 43, 133, 10]" + "'", str37, "[97, 43, 133, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[97, 44, 134, 10]" + "'", str38, "[97, 44, 134, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[97, 45, 135, 10]" + "'", str39, "[97, 45, 135, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[97, 46, 136, 10]" + "'", str40, "[97, 46, 136, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[97, 47, 137, 10]" + "'", str41, "[97, 47, 137, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[97, 48, 138, 10]" + "'", str42, "[97, 48, 138, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[97, 49, 139, 10]" + "'", str43, "[97, 49, 139, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[97, 50, 140, 10]" + "'", str44, "[97, 50, 140, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[97, 51, 141, 10]" + "'", str45, "[97, 51, 141, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[97, 52, 142, 10]" + "'", str46, "[97, 52, 142, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[97, 53, 143, 10]" + "'", str47, "[97, 53, 143, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[97, 54, 144, 10]" + "'", str48, "[97, 54, 144, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[97, 55, 145, 10]" + "'", str49, "[97, 55, 145, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[97, 56, 146, 10]" + "'", str50, "[97, 56, 146, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[97, 57, 147, 10]" + "'", str51, "[97, 57, 147, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[97, 58, 148, 10]" + "'", str52, "[97, 58, 148, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[97, 59, 149, 10]" + "'", str53, "[97, 59, 149, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[97, 60, 150, 10]" + "'", str54, "[97, 60, 150, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[97, 61, 151, 10]" + "'", str55, "[97, 61, 151, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[97, 62, 152, 10]" + "'", str56, "[97, 62, 152, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[97, 63, 153, 10]" + "'", str57, "[97, 63, 153, 10]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[97, 64, 154, 10]" + "'", str58, "[97, 64, 154, 10]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[97, 65, 155, 10]" + "'", str59, "[97, 65, 155, 10]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[97, 66, 156, 10]" + "'", str60, "[97, 66, 156, 10]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[97, 67, 157, 10]" + "'", str61, "[97, 67, 157, 10]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[97, 68, 158, 10]" + "'", str62, "[97, 68, 158, 10]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[97, 69, 159, 10]" + "'", str63, "[97, 69, 159, 10]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[97, 70, 160, 10]" + "'", str64, "[97, 70, 160, 10]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[97, 71, 161, 10]" + "'", str65, "[97, 71, 161, 10]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[97, 72, 162, 10]" + "'", str66, "[97, 72, 162, 10]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[97, 73, 163, 10]" + "'", str67, "[97, 73, 163, 10]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[97, 74, 164, 10]" + "'", str68, "[97, 74, 164, 10]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[97, 75, 165, 10]" + "'", str69, "[97, 75, 165, 10]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[97, 76, 166, 10]" + "'", str70, "[97, 76, 166, 10]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[97, 77, 167, 10]" + "'", str71, "[97, 77, 167, 10]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[97, 78, 168, 10]" + "'", str72, "[97, 78, 168, 10]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[97, 79, 169, 10]" + "'", str73, "[97, 79, 169, 10]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[97, 80, 170, 10]" + "'", str74, "[97, 80, 170, 10]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[97, 81, 171, 10]" + "'", str75, "[97, 81, 171, 10]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[97, 82, 172, 10]" + "'", str76, "[97, 82, 172, 10]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[97, 83, 173, 10]" + "'", str77, "[97, 83, 173, 10]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[97, 84, 174, 10]" + "'", str78, "[97, 84, 174, 10]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[97, 85, 175, 10]" + "'", str79, "[97, 85, 175, 10]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[97, 86, 176, 10]" + "'", str80, "[97, 86, 176, 10]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[97, 87, 177, 10]" + "'", str81, "[97, 87, 177, 10]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[97, 88, 178, 10]" + "'", str82, "[97, 88, 178, 10]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[97, 89, 179, 10]" + "'", str83, "[97, 89, 179, 10]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[97, 90, 180, 10]" + "'", str84, "[97, 90, 180, 10]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[97, 91, 181, 10]" + "'", str85, "[97, 91, 181, 10]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[97, 92, 182, 10]" + "'", str86, "[97, 92, 182, 10]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[97, 93, 183, 10]" + "'", str87, "[97, 93, 183, 10]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[97, 94, 184, 10]" + "'", str88, "[97, 94, 184, 10]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[97, 95, 185, 10]" + "'", str89, "[97, 95, 185, 10]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2750");
        int[] intArray3 = new int[] { ' ', (-1), 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass88 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[40, 3, 9]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 0, 1]" + "'", str4, "[32, 0, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 1, 1]" + "'", str5, "[32, 1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 2, 1]" + "'", str6, "[32, 2, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 3, 1]" + "'", str7, "[32, 3, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 4, 1]" + "'", str8, "[32, 4, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 5, 1]" + "'", str9, "[32, 5, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 6, 1]" + "'", str10, "[32, 6, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 7, 1]" + "'", str11, "[32, 7, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 8, 1]" + "'", str12, "[32, 8, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 9, 1]" + "'", str13, "[32, 9, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[33, 0, 2]" + "'", str14, "[33, 0, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[33, 1, 2]" + "'", str15, "[33, 1, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[33, 2, 2]" + "'", str16, "[33, 2, 2]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[33, 3, 2]" + "'", str17, "[33, 3, 2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[33, 4, 2]" + "'", str18, "[33, 4, 2]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[33, 5, 2]" + "'", str19, "[33, 5, 2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[33, 6, 2]" + "'", str20, "[33, 6, 2]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[33, 7, 2]" + "'", str21, "[33, 7, 2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[33, 8, 2]" + "'", str22, "[33, 8, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[33, 9, 2]" + "'", str23, "[33, 9, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[34, 0, 3]" + "'", str24, "[34, 0, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34, 1, 3]" + "'", str25, "[34, 1, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 2, 3]" + "'", str26, "[34, 2, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[34, 3, 3]" + "'", str27, "[34, 3, 3]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[34, 4, 3]" + "'", str28, "[34, 4, 3]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[34, 5, 3]" + "'", str29, "[34, 5, 3]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[34, 6, 3]" + "'", str30, "[34, 6, 3]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[34, 7, 3]" + "'", str31, "[34, 7, 3]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[34, 8, 3]" + "'", str32, "[34, 8, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[34, 9, 3]" + "'", str33, "[34, 9, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 0, 4]" + "'", str34, "[35, 0, 4]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 1, 4]" + "'", str35, "[35, 1, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 2, 4]" + "'", str36, "[35, 2, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 3, 4]" + "'", str37, "[35, 3, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 4, 4]" + "'", str38, "[35, 4, 4]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 5, 4]" + "'", str39, "[35, 5, 4]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 6, 4]" + "'", str40, "[35, 6, 4]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 7, 4]" + "'", str41, "[35, 7, 4]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 8, 4]" + "'", str42, "[35, 8, 4]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 9, 4]" + "'", str43, "[35, 9, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[36, 0, 5]" + "'", str44, "[36, 0, 5]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[36, 1, 5]" + "'", str45, "[36, 1, 5]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[36, 2, 5]" + "'", str46, "[36, 2, 5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[36, 3, 5]" + "'", str47, "[36, 3, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[36, 4, 5]" + "'", str48, "[36, 4, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[36, 5, 5]" + "'", str49, "[36, 5, 5]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[36, 6, 5]" + "'", str50, "[36, 6, 5]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[36, 7, 5]" + "'", str51, "[36, 7, 5]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[36, 8, 5]" + "'", str52, "[36, 8, 5]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[36, 9, 5]" + "'", str53, "[36, 9, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[37, 0, 6]" + "'", str54, "[37, 0, 6]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[37, 1, 6]" + "'", str55, "[37, 1, 6]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[37, 2, 6]" + "'", str56, "[37, 2, 6]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[37, 3, 6]" + "'", str57, "[37, 3, 6]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[37, 4, 6]" + "'", str58, "[37, 4, 6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[37, 5, 6]" + "'", str59, "[37, 5, 6]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[37, 6, 6]" + "'", str60, "[37, 6, 6]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[37, 7, 6]" + "'", str61, "[37, 7, 6]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[37, 8, 6]" + "'", str62, "[37, 8, 6]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[37, 9, 6]" + "'", str63, "[37, 9, 6]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[38, 0, 7]" + "'", str64, "[38, 0, 7]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[38, 1, 7]" + "'", str65, "[38, 1, 7]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[38, 2, 7]" + "'", str66, "[38, 2, 7]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[38, 3, 7]" + "'", str67, "[38, 3, 7]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[38, 4, 7]" + "'", str68, "[38, 4, 7]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[38, 5, 7]" + "'", str69, "[38, 5, 7]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[38, 6, 7]" + "'", str70, "[38, 6, 7]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[38, 7, 7]" + "'", str71, "[38, 7, 7]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[38, 8, 7]" + "'", str72, "[38, 8, 7]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[38, 9, 7]" + "'", str73, "[38, 9, 7]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[39, 0, 8]" + "'", str74, "[39, 0, 8]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[39, 1, 8]" + "'", str75, "[39, 1, 8]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[39, 2, 8]" + "'", str76, "[39, 2, 8]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[39, 3, 8]" + "'", str77, "[39, 3, 8]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[39, 4, 8]" + "'", str78, "[39, 4, 8]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[39, 5, 8]" + "'", str79, "[39, 5, 8]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[39, 6, 8]" + "'", str80, "[39, 6, 8]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[39, 7, 8]" + "'", str81, "[39, 7, 8]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[39, 8, 8]" + "'", str82, "[39, 8, 8]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[39, 9, 8]" + "'", str83, "[39, 9, 8]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[40, 0, 9]" + "'", str84, "[40, 0, 9]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[40, 1, 9]" + "'", str85, "[40, 1, 9]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[40, 2, 9]" + "'", str86, "[40, 2, 9]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[40, 3, 9]" + "'", str87, "[40, 3, 9]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2751");
        int[] intArray5 = new int[] { 'a', 0, (byte) 100, (-1), (byte) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass9 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[97, 0, 103, -1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 0, 101, -1, 1]" + "'", str6, "[97, 0, 101, -1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 0, 102, -1, 1]" + "'", str7, "[97, 0, 102, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 0, 103, -1, 1]" + "'", str8, "[97, 0, 103, -1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test2752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2752");
        int[] intArray1 = new int[] { (byte) -1 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass72 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[9]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1]" + "'", str32, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1]" + "'", str33, "[1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2]" + "'", str34, "[2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3]" + "'", str35, "[3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4]" + "'", str36, "[4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5]" + "'", str37, "[5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6]" + "'", str38, "[6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7]" + "'", str39, "[7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8]" + "'", str40, "[8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9]" + "'", str41, "[9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1]" + "'", str42, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1]" + "'", str43, "[1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2]" + "'", str44, "[2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3]" + "'", str45, "[3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4]" + "'", str46, "[4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5]" + "'", str47, "[5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6]" + "'", str48, "[6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7]" + "'", str49, "[7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8]" + "'", str50, "[8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9]" + "'", str51, "[9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1]" + "'", str52, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1]" + "'", str53, "[1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2]" + "'", str54, "[2]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[3]" + "'", str55, "[3]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4]" + "'", str56, "[4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5]" + "'", str57, "[5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6]" + "'", str58, "[6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[7]" + "'", str59, "[7]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[8]" + "'", str60, "[8]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[9]" + "'", str61, "[9]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 1]" + "'", str62, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1]" + "'", str63, "[1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[2]" + "'", str64, "[2]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[3]" + "'", str65, "[3]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[4]" + "'", str66, "[4]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[5]" + "'", str67, "[5]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[6]" + "'", str68, "[6]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[7]" + "'", str69, "[7]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[8]" + "'", str70, "[8]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[9]" + "'", str71, "[9]");
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test2753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2753");
        int[] intArray4 = new int[] { (byte) -1, 10, (byte) 0, (short) 100 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass88 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[7, 3, 3, 108]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 11, 1, 100]" + "'", str5, "[-1, 11, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 12, 2, 100]" + "'", str6, "[-1, 12, 2, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 13, 3, 100]" + "'", str7, "[-1, 13, 3, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 14, 4, 100]" + "'", str8, "[-1, 14, 4, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 15, 5, 100]" + "'", str9, "[-1, 15, 5, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 16, 6, 100]" + "'", str10, "[-1, 16, 6, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 17, 7, 100]" + "'", str11, "[-1, 17, 7, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 18, 8, 100]" + "'", str12, "[-1, 18, 8, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 19, 9, 100]" + "'", str13, "[-1, 19, 9, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 0, 0, 101]" + "'", str14, "[0, 0, 0, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 1, 1, 101]" + "'", str15, "[0, 1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 2, 2, 101]" + "'", str16, "[0, 2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 3, 3, 101]" + "'", str17, "[0, 3, 3, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 4, 4, 101]" + "'", str18, "[0, 4, 4, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 5, 5, 101]" + "'", str19, "[0, 5, 5, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 6, 6, 101]" + "'", str20, "[0, 6, 6, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 7, 7, 101]" + "'", str21, "[0, 7, 7, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 8, 8, 101]" + "'", str22, "[0, 8, 8, 101]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 9, 9, 101]" + "'", str23, "[0, 9, 9, 101]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 0, 102]" + "'", str24, "[1, 0, 0, 102]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1, 1, 102]" + "'", str25, "[1, 1, 1, 102]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 2, 2, 102]" + "'", str26, "[1, 2, 2, 102]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 3, 3, 102]" + "'", str27, "[1, 3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 4, 4, 102]" + "'", str28, "[1, 4, 4, 102]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 5, 5, 102]" + "'", str29, "[1, 5, 5, 102]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 6, 6, 102]" + "'", str30, "[1, 6, 6, 102]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 7, 7, 102]" + "'", str31, "[1, 7, 7, 102]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 8, 8, 102]" + "'", str32, "[1, 8, 8, 102]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 9, 9, 102]" + "'", str33, "[1, 9, 9, 102]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 0, 0, 103]" + "'", str34, "[2, 0, 0, 103]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 1, 1, 103]" + "'", str35, "[2, 1, 1, 103]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[2, 2, 2, 103]" + "'", str36, "[2, 2, 2, 103]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[2, 3, 3, 103]" + "'", str37, "[2, 3, 3, 103]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[2, 4, 4, 103]" + "'", str38, "[2, 4, 4, 103]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[2, 5, 5, 103]" + "'", str39, "[2, 5, 5, 103]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[2, 6, 6, 103]" + "'", str40, "[2, 6, 6, 103]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[2, 7, 7, 103]" + "'", str41, "[2, 7, 7, 103]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[2, 8, 8, 103]" + "'", str42, "[2, 8, 8, 103]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2, 9, 9, 103]" + "'", str43, "[2, 9, 9, 103]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 0, 0, 104]" + "'", str44, "[3, 0, 0, 104]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 1, 1, 104]" + "'", str45, "[3, 1, 1, 104]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 2, 2, 104]" + "'", str46, "[3, 2, 2, 104]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[3, 3, 3, 104]" + "'", str47, "[3, 3, 3, 104]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[3, 4, 4, 104]" + "'", str48, "[3, 4, 4, 104]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[3, 5, 5, 104]" + "'", str49, "[3, 5, 5, 104]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[3, 6, 6, 104]" + "'", str50, "[3, 6, 6, 104]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[3, 7, 7, 104]" + "'", str51, "[3, 7, 7, 104]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[3, 8, 8, 104]" + "'", str52, "[3, 8, 8, 104]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[3, 9, 9, 104]" + "'", str53, "[3, 9, 9, 104]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[4, 0, 0, 105]" + "'", str54, "[4, 0, 0, 105]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[4, 1, 1, 105]" + "'", str55, "[4, 1, 1, 105]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4, 2, 2, 105]" + "'", str56, "[4, 2, 2, 105]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[4, 3, 3, 105]" + "'", str57, "[4, 3, 3, 105]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[4, 4, 4, 105]" + "'", str58, "[4, 4, 4, 105]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[4, 5, 5, 105]" + "'", str59, "[4, 5, 5, 105]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[4, 6, 6, 105]" + "'", str60, "[4, 6, 6, 105]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[4, 7, 7, 105]" + "'", str61, "[4, 7, 7, 105]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[4, 8, 8, 105]" + "'", str62, "[4, 8, 8, 105]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[4, 9, 9, 105]" + "'", str63, "[4, 9, 9, 105]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[5, 0, 0, 106]" + "'", str64, "[5, 0, 0, 106]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[5, 1, 1, 106]" + "'", str65, "[5, 1, 1, 106]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[5, 2, 2, 106]" + "'", str66, "[5, 2, 2, 106]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[5, 3, 3, 106]" + "'", str67, "[5, 3, 3, 106]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[5, 4, 4, 106]" + "'", str68, "[5, 4, 4, 106]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[5, 5, 5, 106]" + "'", str69, "[5, 5, 5, 106]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[5, 6, 6, 106]" + "'", str70, "[5, 6, 6, 106]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[5, 7, 7, 106]" + "'", str71, "[5, 7, 7, 106]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[5, 8, 8, 106]" + "'", str72, "[5, 8, 8, 106]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[5, 9, 9, 106]" + "'", str73, "[5, 9, 9, 106]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[6, 0, 0, 107]" + "'", str74, "[6, 0, 0, 107]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[6, 1, 1, 107]" + "'", str75, "[6, 1, 1, 107]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[6, 2, 2, 107]" + "'", str76, "[6, 2, 2, 107]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[6, 3, 3, 107]" + "'", str77, "[6, 3, 3, 107]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[6, 4, 4, 107]" + "'", str78, "[6, 4, 4, 107]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[6, 5, 5, 107]" + "'", str79, "[6, 5, 5, 107]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[6, 6, 6, 107]" + "'", str80, "[6, 6, 6, 107]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[6, 7, 7, 107]" + "'", str81, "[6, 7, 7, 107]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[6, 8, 8, 107]" + "'", str82, "[6, 8, 8, 107]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[6, 9, 9, 107]" + "'", str83, "[6, 9, 9, 107]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[7, 0, 0, 108]" + "'", str84, "[7, 0, 0, 108]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[7, 1, 1, 108]" + "'", str85, "[7, 1, 1, 108]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[7, 2, 2, 108]" + "'", str86, "[7, 2, 2, 108]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[7, 3, 3, 108]" + "'", str87, "[7, 3, 3, 108]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2754");
        int[] intArray2 = new int[] { (byte) 1, (-1) };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass70 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[6, 6]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 0]" + "'", str3, "[2, 0]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 1]" + "'", str4, "[3, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 2]" + "'", str5, "[4, 2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 3]" + "'", str6, "[5, 3]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 4]" + "'", str7, "[6, 4]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 5]" + "'", str8, "[7, 5]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 6]" + "'", str9, "[8, 6]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 7]" + "'", str10, "[9, 7]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 8]" + "'", str11, "[10, 8]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 9]" + "'", str12, "[11, 9]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 1]" + "'", str13, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1]" + "'", str14, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2]" + "'", str15, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[3, 3]" + "'", str16, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[4, 4]" + "'", str17, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[5, 5]" + "'", str18, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[6, 6]" + "'", str19, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[7, 7]" + "'", str20, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[8, 8]" + "'", str21, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[9, 9]" + "'", str22, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 1]" + "'", str23, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1]" + "'", str24, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 2]" + "'", str25, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3]" + "'", str26, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[4, 4]" + "'", str27, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[5, 5]" + "'", str28, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[6, 6]" + "'", str29, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[7, 7]" + "'", str30, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[8, 8]" + "'", str31, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[9, 9]" + "'", str32, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 0, 1]" + "'", str33, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1]" + "'", str34, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 2]" + "'", str35, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 3]" + "'", str36, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4]" + "'", str37, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[5, 5]" + "'", str38, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[6, 6]" + "'", str39, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[7, 7]" + "'", str40, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[8, 8]" + "'", str41, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[9, 9]" + "'", str42, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 0, 1]" + "'", str43, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1]" + "'", str44, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[2, 2]" + "'", str45, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 3]" + "'", str46, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 4]" + "'", str47, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5]" + "'", str48, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[6, 6]" + "'", str49, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[7, 7]" + "'", str50, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[8, 8]" + "'", str51, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[9, 9]" + "'", str52, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 0, 1]" + "'", str53, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 1]" + "'", str54, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[2, 2]" + "'", str55, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[3, 3]" + "'", str56, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[4, 4]" + "'", str57, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 5]" + "'", str58, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 6]" + "'", str59, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[7, 7]" + "'", str60, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[8, 8]" + "'", str61, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[9, 9]" + "'", str62, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 0, 1]" + "'", str63, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 1]" + "'", str64, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[2, 2]" + "'", str65, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[3, 3]" + "'", str66, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[4, 4]" + "'", str67, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[5, 5]" + "'", str68, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[6, 6]" + "'", str69, "[6, 6]");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test2755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2755");
        int[] intArray1 = new int[] { (short) -1 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass29 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[6]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test2756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2756");
        int[] intArray3 = new int[] { (short) 10, (short) 0, (short) 10 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass71 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[16, 7, 16]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[10, 1, 10]" + "'", str4, "[10, 1, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 2, 10]" + "'", str5, "[10, 2, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 3, 10]" + "'", str6, "[10, 3, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 4, 10]" + "'", str7, "[10, 4, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 5, 10]" + "'", str8, "[10, 5, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 6, 10]" + "'", str9, "[10, 6, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 7, 10]" + "'", str10, "[10, 7, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 8, 10]" + "'", str11, "[10, 8, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 9, 10]" + "'", str12, "[10, 9, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[11, 0, 11]" + "'", str13, "[11, 0, 11]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[11, 1, 11]" + "'", str14, "[11, 1, 11]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[11, 2, 11]" + "'", str15, "[11, 2, 11]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[11, 3, 11]" + "'", str16, "[11, 3, 11]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[11, 4, 11]" + "'", str17, "[11, 4, 11]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[11, 5, 11]" + "'", str18, "[11, 5, 11]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[11, 6, 11]" + "'", str19, "[11, 6, 11]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[11, 7, 11]" + "'", str20, "[11, 7, 11]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[11, 8, 11]" + "'", str21, "[11, 8, 11]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[11, 9, 11]" + "'", str22, "[11, 9, 11]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[12, 0, 12]" + "'", str23, "[12, 0, 12]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[12, 1, 12]" + "'", str24, "[12, 1, 12]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[12, 2, 12]" + "'", str25, "[12, 2, 12]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[12, 3, 12]" + "'", str26, "[12, 3, 12]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[12, 4, 12]" + "'", str27, "[12, 4, 12]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[12, 5, 12]" + "'", str28, "[12, 5, 12]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[12, 6, 12]" + "'", str29, "[12, 6, 12]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[12, 7, 12]" + "'", str30, "[12, 7, 12]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[12, 8, 12]" + "'", str31, "[12, 8, 12]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[12, 9, 12]" + "'", str32, "[12, 9, 12]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[13, 0, 13]" + "'", str33, "[13, 0, 13]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[13, 1, 13]" + "'", str34, "[13, 1, 13]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[13, 2, 13]" + "'", str35, "[13, 2, 13]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[13, 3, 13]" + "'", str36, "[13, 3, 13]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[13, 4, 13]" + "'", str37, "[13, 4, 13]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[13, 5, 13]" + "'", str38, "[13, 5, 13]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[13, 6, 13]" + "'", str39, "[13, 6, 13]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[13, 7, 13]" + "'", str40, "[13, 7, 13]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[13, 8, 13]" + "'", str41, "[13, 8, 13]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[13, 9, 13]" + "'", str42, "[13, 9, 13]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[14, 0, 14]" + "'", str43, "[14, 0, 14]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[14, 1, 14]" + "'", str44, "[14, 1, 14]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[14, 2, 14]" + "'", str45, "[14, 2, 14]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[14, 3, 14]" + "'", str46, "[14, 3, 14]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[14, 4, 14]" + "'", str47, "[14, 4, 14]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[14, 5, 14]" + "'", str48, "[14, 5, 14]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[14, 6, 14]" + "'", str49, "[14, 6, 14]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[14, 7, 14]" + "'", str50, "[14, 7, 14]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[14, 8, 14]" + "'", str51, "[14, 8, 14]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[14, 9, 14]" + "'", str52, "[14, 9, 14]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[15, 0, 15]" + "'", str53, "[15, 0, 15]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[15, 1, 15]" + "'", str54, "[15, 1, 15]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[15, 2, 15]" + "'", str55, "[15, 2, 15]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[15, 3, 15]" + "'", str56, "[15, 3, 15]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[15, 4, 15]" + "'", str57, "[15, 4, 15]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[15, 5, 15]" + "'", str58, "[15, 5, 15]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[15, 6, 15]" + "'", str59, "[15, 6, 15]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[15, 7, 15]" + "'", str60, "[15, 7, 15]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[15, 8, 15]" + "'", str61, "[15, 8, 15]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[15, 9, 15]" + "'", str62, "[15, 9, 15]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[16, 0, 16]" + "'", str63, "[16, 0, 16]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[16, 1, 16]" + "'", str64, "[16, 1, 16]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[16, 2, 16]" + "'", str65, "[16, 2, 16]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[16, 3, 16]" + "'", str66, "[16, 3, 16]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[16, 4, 16]" + "'", str67, "[16, 4, 16]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[16, 5, 16]" + "'", str68, "[16, 5, 16]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[16, 6, 16]" + "'", str69, "[16, 6, 16]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[16, 7, 16]" + "'", str70, "[16, 7, 16]");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test2757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2757");
        int[] intArray5 = new int[] { 'a', 0, (byte) 100, (-1), (byte) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass14 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[97, 0, 108, -1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 0, 101, -1, 1]" + "'", str6, "[97, 0, 101, -1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 0, 102, -1, 1]" + "'", str7, "[97, 0, 102, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 0, 103, -1, 1]" + "'", str8, "[97, 0, 103, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 0, 104, -1, 1]" + "'", str9, "[97, 0, 104, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 0, 105, -1, 1]" + "'", str10, "[97, 0, 105, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 0, 106, -1, 1]" + "'", str11, "[97, 0, 106, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 0, 107, -1, 1]" + "'", str12, "[97, 0, 107, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 0, 108, -1, 1]" + "'", str13, "[97, 0, 108, -1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2758");
        int[] intArray4 = new int[] { (byte) 10, 'a', (byte) -1, '#' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass87 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[18, 1, 1, 43]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 98, 0, 35]" + "'", str5, "[10, 98, 0, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 99, 1, 35]" + "'", str6, "[10, 99, 1, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 100, 2, 35]" + "'", str7, "[10, 100, 2, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 101, 3, 35]" + "'", str8, "[10, 101, 3, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 102, 4, 35]" + "'", str9, "[10, 102, 4, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 103, 5, 35]" + "'", str10, "[10, 103, 5, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 104, 6, 35]" + "'", str11, "[10, 104, 6, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 105, 7, 35]" + "'", str12, "[10, 105, 7, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 106, 8, 35]" + "'", str13, "[10, 106, 8, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 107, 9, 35]" + "'", str14, "[10, 107, 9, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[11, 0, 0, 36]" + "'", str15, "[11, 0, 0, 36]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[11, 1, 1, 36]" + "'", str16, "[11, 1, 1, 36]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[11, 2, 2, 36]" + "'", str17, "[11, 2, 2, 36]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[11, 3, 3, 36]" + "'", str18, "[11, 3, 3, 36]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[11, 4, 4, 36]" + "'", str19, "[11, 4, 4, 36]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[11, 5, 5, 36]" + "'", str20, "[11, 5, 5, 36]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[11, 6, 6, 36]" + "'", str21, "[11, 6, 6, 36]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[11, 7, 7, 36]" + "'", str22, "[11, 7, 7, 36]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[11, 8, 8, 36]" + "'", str23, "[11, 8, 8, 36]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[11, 9, 9, 36]" + "'", str24, "[11, 9, 9, 36]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[12, 0, 0, 37]" + "'", str25, "[12, 0, 0, 37]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[12, 1, 1, 37]" + "'", str26, "[12, 1, 1, 37]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[12, 2, 2, 37]" + "'", str27, "[12, 2, 2, 37]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[12, 3, 3, 37]" + "'", str28, "[12, 3, 3, 37]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[12, 4, 4, 37]" + "'", str29, "[12, 4, 4, 37]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[12, 5, 5, 37]" + "'", str30, "[12, 5, 5, 37]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[12, 6, 6, 37]" + "'", str31, "[12, 6, 6, 37]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[12, 7, 7, 37]" + "'", str32, "[12, 7, 7, 37]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[12, 8, 8, 37]" + "'", str33, "[12, 8, 8, 37]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[12, 9, 9, 37]" + "'", str34, "[12, 9, 9, 37]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[13, 0, 0, 38]" + "'", str35, "[13, 0, 0, 38]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[13, 1, 1, 38]" + "'", str36, "[13, 1, 1, 38]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[13, 2, 2, 38]" + "'", str37, "[13, 2, 2, 38]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[13, 3, 3, 38]" + "'", str38, "[13, 3, 3, 38]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[13, 4, 4, 38]" + "'", str39, "[13, 4, 4, 38]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[13, 5, 5, 38]" + "'", str40, "[13, 5, 5, 38]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[13, 6, 6, 38]" + "'", str41, "[13, 6, 6, 38]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[13, 7, 7, 38]" + "'", str42, "[13, 7, 7, 38]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[13, 8, 8, 38]" + "'", str43, "[13, 8, 8, 38]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[13, 9, 9, 38]" + "'", str44, "[13, 9, 9, 38]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[14, 0, 0, 39]" + "'", str45, "[14, 0, 0, 39]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[14, 1, 1, 39]" + "'", str46, "[14, 1, 1, 39]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[14, 2, 2, 39]" + "'", str47, "[14, 2, 2, 39]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[14, 3, 3, 39]" + "'", str48, "[14, 3, 3, 39]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[14, 4, 4, 39]" + "'", str49, "[14, 4, 4, 39]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[14, 5, 5, 39]" + "'", str50, "[14, 5, 5, 39]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[14, 6, 6, 39]" + "'", str51, "[14, 6, 6, 39]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[14, 7, 7, 39]" + "'", str52, "[14, 7, 7, 39]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[14, 8, 8, 39]" + "'", str53, "[14, 8, 8, 39]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[14, 9, 9, 39]" + "'", str54, "[14, 9, 9, 39]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[15, 0, 0, 40]" + "'", str55, "[15, 0, 0, 40]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[15, 1, 1, 40]" + "'", str56, "[15, 1, 1, 40]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[15, 2, 2, 40]" + "'", str57, "[15, 2, 2, 40]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[15, 3, 3, 40]" + "'", str58, "[15, 3, 3, 40]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[15, 4, 4, 40]" + "'", str59, "[15, 4, 4, 40]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[15, 5, 5, 40]" + "'", str60, "[15, 5, 5, 40]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[15, 6, 6, 40]" + "'", str61, "[15, 6, 6, 40]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[15, 7, 7, 40]" + "'", str62, "[15, 7, 7, 40]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[15, 8, 8, 40]" + "'", str63, "[15, 8, 8, 40]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[15, 9, 9, 40]" + "'", str64, "[15, 9, 9, 40]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[16, 0, 0, 41]" + "'", str65, "[16, 0, 0, 41]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[16, 1, 1, 41]" + "'", str66, "[16, 1, 1, 41]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[16, 2, 2, 41]" + "'", str67, "[16, 2, 2, 41]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[16, 3, 3, 41]" + "'", str68, "[16, 3, 3, 41]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[16, 4, 4, 41]" + "'", str69, "[16, 4, 4, 41]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[16, 5, 5, 41]" + "'", str70, "[16, 5, 5, 41]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[16, 6, 6, 41]" + "'", str71, "[16, 6, 6, 41]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[16, 7, 7, 41]" + "'", str72, "[16, 7, 7, 41]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[16, 8, 8, 41]" + "'", str73, "[16, 8, 8, 41]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[16, 9, 9, 41]" + "'", str74, "[16, 9, 9, 41]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[17, 0, 0, 42]" + "'", str75, "[17, 0, 0, 42]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[17, 1, 1, 42]" + "'", str76, "[17, 1, 1, 42]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[17, 2, 2, 42]" + "'", str77, "[17, 2, 2, 42]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[17, 3, 3, 42]" + "'", str78, "[17, 3, 3, 42]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[17, 4, 4, 42]" + "'", str79, "[17, 4, 4, 42]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[17, 5, 5, 42]" + "'", str80, "[17, 5, 5, 42]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[17, 6, 6, 42]" + "'", str81, "[17, 6, 6, 42]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[17, 7, 7, 42]" + "'", str82, "[17, 7, 7, 42]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[17, 8, 8, 42]" + "'", str83, "[17, 8, 8, 42]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[17, 9, 9, 42]" + "'", str84, "[17, 9, 9, 42]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[18, 0, 0, 43]" + "'", str85, "[18, 0, 0, 43]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[18, 1, 1, 43]" + "'", str86, "[18, 1, 1, 43]");
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test2759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2759");
        int[] intArray4 = new int[] { (short) 1, (byte) 10, (byte) 0, (-1) };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[6, 8, 8, 4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 11, 1, -1]" + "'", str5, "[1, 11, 1, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 12, 2, -1]" + "'", str6, "[1, 12, 2, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 13, 3, -1]" + "'", str7, "[1, 13, 3, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 14, 4, -1]" + "'", str8, "[1, 14, 4, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 15, 5, -1]" + "'", str9, "[1, 15, 5, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 16, 6, -1]" + "'", str10, "[1, 16, 6, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 17, 7, -1]" + "'", str11, "[1, 17, 7, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 18, 8, -1]" + "'", str12, "[1, 18, 8, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 19, 9, -1]" + "'", str13, "[1, 19, 9, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 0, 0, 0]" + "'", str14, "[2, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 1, 1, 0]" + "'", str15, "[2, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 2, 2, 0]" + "'", str16, "[2, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 3, 3, 0]" + "'", str17, "[2, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 4, 4, 0]" + "'", str18, "[2, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 5, 5, 0]" + "'", str19, "[2, 5, 5, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 6, 6, 0]" + "'", str20, "[2, 6, 6, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 7, 7, 0]" + "'", str21, "[2, 7, 7, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 8, 8, 0]" + "'", str22, "[2, 8, 8, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 9, 9, 0]" + "'", str23, "[2, 9, 9, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 0, 0, 1]" + "'", str24, "[3, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 1, 1, 1]" + "'", str25, "[3, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 2, 2, 1]" + "'", str26, "[3, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 3, 3, 1]" + "'", str27, "[3, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 4, 4, 1]" + "'", str28, "[3, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[3, 5, 5, 1]" + "'", str29, "[3, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[3, 6, 6, 1]" + "'", str30, "[3, 6, 6, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[3, 7, 7, 1]" + "'", str31, "[3, 7, 7, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[3, 8, 8, 1]" + "'", str32, "[3, 8, 8, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[3, 9, 9, 1]" + "'", str33, "[3, 9, 9, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4, 0, 0, 2]" + "'", str34, "[4, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 1, 1, 2]" + "'", str35, "[4, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 2, 2, 2]" + "'", str36, "[4, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 3, 3, 2]" + "'", str37, "[4, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[4, 4, 4, 2]" + "'", str38, "[4, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[4, 5, 5, 2]" + "'", str39, "[4, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[4, 6, 6, 2]" + "'", str40, "[4, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[4, 7, 7, 2]" + "'", str41, "[4, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[4, 8, 8, 2]" + "'", str42, "[4, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[4, 9, 9, 2]" + "'", str43, "[4, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[5, 0, 0, 3]" + "'", str44, "[5, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[5, 1, 1, 3]" + "'", str45, "[5, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 2, 2, 3]" + "'", str46, "[5, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 3, 3, 3]" + "'", str47, "[5, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 4, 4, 3]" + "'", str48, "[5, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[5, 5, 5, 3]" + "'", str49, "[5, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[5, 6, 6, 3]" + "'", str50, "[5, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[5, 7, 7, 3]" + "'", str51, "[5, 7, 7, 3]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[5, 8, 8, 3]" + "'", str52, "[5, 8, 8, 3]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[5, 9, 9, 3]" + "'", str53, "[5, 9, 9, 3]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[6, 0, 0, 4]" + "'", str54, "[6, 0, 0, 4]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[6, 1, 1, 4]" + "'", str55, "[6, 1, 1, 4]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[6, 2, 2, 4]" + "'", str56, "[6, 2, 2, 4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6, 3, 3, 4]" + "'", str57, "[6, 3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6, 4, 4, 4]" + "'", str58, "[6, 4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 5, 5, 4]" + "'", str59, "[6, 5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[6, 6, 6, 4]" + "'", str60, "[6, 6, 6, 4]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[6, 7, 7, 4]" + "'", str61, "[6, 7, 7, 4]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[6, 8, 8, 4]" + "'", str62, "[6, 8, 8, 4]");
    }

    @Test
    public void test2760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2760");
        int[] intArray4 = new int[] { (short) 1, (byte) 10, (byte) 0, (-1) };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass62 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[6, 7, 7, 4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 11, 1, -1]" + "'", str5, "[1, 11, 1, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 12, 2, -1]" + "'", str6, "[1, 12, 2, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 13, 3, -1]" + "'", str7, "[1, 13, 3, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 14, 4, -1]" + "'", str8, "[1, 14, 4, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 15, 5, -1]" + "'", str9, "[1, 15, 5, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 16, 6, -1]" + "'", str10, "[1, 16, 6, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 17, 7, -1]" + "'", str11, "[1, 17, 7, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 18, 8, -1]" + "'", str12, "[1, 18, 8, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 19, 9, -1]" + "'", str13, "[1, 19, 9, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 0, 0, 0]" + "'", str14, "[2, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 1, 1, 0]" + "'", str15, "[2, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 2, 2, 0]" + "'", str16, "[2, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 3, 3, 0]" + "'", str17, "[2, 3, 3, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 4, 4, 0]" + "'", str18, "[2, 4, 4, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 5, 5, 0]" + "'", str19, "[2, 5, 5, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 6, 6, 0]" + "'", str20, "[2, 6, 6, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 7, 7, 0]" + "'", str21, "[2, 7, 7, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 8, 8, 0]" + "'", str22, "[2, 8, 8, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 9, 9, 0]" + "'", str23, "[2, 9, 9, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 0, 0, 1]" + "'", str24, "[3, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 1, 1, 1]" + "'", str25, "[3, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 2, 2, 1]" + "'", str26, "[3, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 3, 3, 1]" + "'", str27, "[3, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 4, 4, 1]" + "'", str28, "[3, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[3, 5, 5, 1]" + "'", str29, "[3, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[3, 6, 6, 1]" + "'", str30, "[3, 6, 6, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[3, 7, 7, 1]" + "'", str31, "[3, 7, 7, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[3, 8, 8, 1]" + "'", str32, "[3, 8, 8, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[3, 9, 9, 1]" + "'", str33, "[3, 9, 9, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4, 0, 0, 2]" + "'", str34, "[4, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 1, 1, 2]" + "'", str35, "[4, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4, 2, 2, 2]" + "'", str36, "[4, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 3, 3, 2]" + "'", str37, "[4, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[4, 4, 4, 2]" + "'", str38, "[4, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[4, 5, 5, 2]" + "'", str39, "[4, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[4, 6, 6, 2]" + "'", str40, "[4, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[4, 7, 7, 2]" + "'", str41, "[4, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[4, 8, 8, 2]" + "'", str42, "[4, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[4, 9, 9, 2]" + "'", str43, "[4, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[5, 0, 0, 3]" + "'", str44, "[5, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[5, 1, 1, 3]" + "'", str45, "[5, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5, 2, 2, 3]" + "'", str46, "[5, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5, 3, 3, 3]" + "'", str47, "[5, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 4, 4, 3]" + "'", str48, "[5, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[5, 5, 5, 3]" + "'", str49, "[5, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[5, 6, 6, 3]" + "'", str50, "[5, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[5, 7, 7, 3]" + "'", str51, "[5, 7, 7, 3]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[5, 8, 8, 3]" + "'", str52, "[5, 8, 8, 3]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[5, 9, 9, 3]" + "'", str53, "[5, 9, 9, 3]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[6, 0, 0, 4]" + "'", str54, "[6, 0, 0, 4]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[6, 1, 1, 4]" + "'", str55, "[6, 1, 1, 4]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[6, 2, 2, 4]" + "'", str56, "[6, 2, 2, 4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6, 3, 3, 4]" + "'", str57, "[6, 3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6, 4, 4, 4]" + "'", str58, "[6, 4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 5, 5, 4]" + "'", str59, "[6, 5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[6, 6, 6, 4]" + "'", str60, "[6, 6, 6, 4]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[6, 7, 7, 4]" + "'", str61, "[6, 7, 7, 4]");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test2761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2761");
        int[] intArray6 = new int[] { 100, (byte) 10, 'a', 'a', (byte) 100, ' ' };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass15 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 10, 105, 105, 100, 32]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 10, 98, 98, 100, 32]" + "'", str7, "[100, 10, 98, 98, 100, 32]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 10, 99, 99, 100, 32]" + "'", str8, "[100, 10, 99, 99, 100, 32]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 10, 100, 100, 100, 32]" + "'", str9, "[100, 10, 100, 100, 100, 32]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 10, 101, 101, 100, 32]" + "'", str10, "[100, 10, 101, 101, 100, 32]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 10, 102, 102, 100, 32]" + "'", str11, "[100, 10, 102, 102, 100, 32]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 10, 103, 103, 100, 32]" + "'", str12, "[100, 10, 103, 103, 100, 32]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 10, 104, 104, 100, 32]" + "'", str13, "[100, 10, 104, 104, 100, 32]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 10, 105, 105, 100, 32]" + "'", str14, "[100, 10, 105, 105, 100, 32]");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test2762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2762");
        int[] intArray2 = new int[] { (short) 1, (short) -1 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str90 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str91 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str92 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass93 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[9, 9]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 0]" + "'", str3, "[2, 0]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 1]" + "'", str4, "[3, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 2]" + "'", str5, "[4, 2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 3]" + "'", str6, "[5, 3]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 4]" + "'", str7, "[6, 4]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 5]" + "'", str8, "[7, 5]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 6]" + "'", str9, "[8, 6]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 7]" + "'", str10, "[9, 7]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 8]" + "'", str11, "[10, 8]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 9]" + "'", str12, "[11, 9]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 1]" + "'", str13, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1]" + "'", str14, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2]" + "'", str15, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[3, 3]" + "'", str16, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[4, 4]" + "'", str17, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[5, 5]" + "'", str18, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[6, 6]" + "'", str19, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[7, 7]" + "'", str20, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[8, 8]" + "'", str21, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[9, 9]" + "'", str22, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 1]" + "'", str23, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1]" + "'", str24, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 2]" + "'", str25, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3]" + "'", str26, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[4, 4]" + "'", str27, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[5, 5]" + "'", str28, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[6, 6]" + "'", str29, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[7, 7]" + "'", str30, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[8, 8]" + "'", str31, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[9, 9]" + "'", str32, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 0, 1]" + "'", str33, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1]" + "'", str34, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 2]" + "'", str35, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 3]" + "'", str36, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4]" + "'", str37, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[5, 5]" + "'", str38, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[6, 6]" + "'", str39, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[7, 7]" + "'", str40, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[8, 8]" + "'", str41, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[9, 9]" + "'", str42, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 0, 1]" + "'", str43, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1]" + "'", str44, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[2, 2]" + "'", str45, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 3]" + "'", str46, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 4]" + "'", str47, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5]" + "'", str48, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[6, 6]" + "'", str49, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[7, 7]" + "'", str50, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[8, 8]" + "'", str51, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[9, 9]" + "'", str52, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 0, 1]" + "'", str53, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 1]" + "'", str54, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[2, 2]" + "'", str55, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[3, 3]" + "'", str56, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[4, 4]" + "'", str57, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 5]" + "'", str58, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 6]" + "'", str59, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[7, 7]" + "'", str60, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[8, 8]" + "'", str61, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[9, 9]" + "'", str62, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 0, 1]" + "'", str63, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 1]" + "'", str64, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[2, 2]" + "'", str65, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[3, 3]" + "'", str66, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[4, 4]" + "'", str67, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[5, 5]" + "'", str68, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[6, 6]" + "'", str69, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[7, 7]" + "'", str70, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[8, 8]" + "'", str71, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[9, 9]" + "'", str72, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 0, 1]" + "'", str73, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 1]" + "'", str74, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[2, 2]" + "'", str75, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[3, 3]" + "'", str76, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[4, 4]" + "'", str77, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[5, 5]" + "'", str78, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[6, 6]" + "'", str79, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[7, 7]" + "'", str80, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[8, 8]" + "'", str81, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[9, 9]" + "'", str82, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[1, 0, 1]" + "'", str83, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[1, 1]" + "'", str84, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[2, 2]" + "'", str85, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[3, 3]" + "'", str86, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[4, 4]" + "'", str87, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[5, 5]" + "'", str88, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[6, 6]" + "'", str89, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[7, 7]" + "'", str90, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[8, 8]" + "'", str91, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[9, 9]" + "'", str92, "[9, 9]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2763");
        int[] intArray4 = new int[] { 'a', (short) 1, (byte) -1, (short) 0 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass66 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[103, 0, 0, 6]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 2, 0, 0]" + "'", str5, "[97, 2, 0, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 3, 1, 0]" + "'", str6, "[97, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 4, 2, 0]" + "'", str7, "[97, 4, 2, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 5, 3, 0]" + "'", str8, "[97, 5, 3, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 6, 4, 0]" + "'", str9, "[97, 6, 4, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 7, 5, 0]" + "'", str10, "[97, 7, 5, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 8, 6, 0]" + "'", str11, "[97, 8, 6, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 9, 7, 0]" + "'", str12, "[97, 9, 7, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 10, 8, 0]" + "'", str13, "[97, 10, 8, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 11, 9, 0]" + "'", str14, "[97, 11, 9, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[98, 0, 0, 1]" + "'", str15, "[98, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[98, 1, 1, 1]" + "'", str16, "[98, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[98, 2, 2, 1]" + "'", str17, "[98, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[98, 3, 3, 1]" + "'", str18, "[98, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[98, 4, 4, 1]" + "'", str19, "[98, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[98, 5, 5, 1]" + "'", str20, "[98, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[98, 6, 6, 1]" + "'", str21, "[98, 6, 6, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[98, 7, 7, 1]" + "'", str22, "[98, 7, 7, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[98, 8, 8, 1]" + "'", str23, "[98, 8, 8, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[98, 9, 9, 1]" + "'", str24, "[98, 9, 9, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[99, 0, 0, 2]" + "'", str25, "[99, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[99, 1, 1, 2]" + "'", str26, "[99, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[99, 2, 2, 2]" + "'", str27, "[99, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[99, 3, 3, 2]" + "'", str28, "[99, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[99, 4, 4, 2]" + "'", str29, "[99, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[99, 5, 5, 2]" + "'", str30, "[99, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[99, 6, 6, 2]" + "'", str31, "[99, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[99, 7, 7, 2]" + "'", str32, "[99, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[99, 8, 8, 2]" + "'", str33, "[99, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[99, 9, 9, 2]" + "'", str34, "[99, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 0, 0, 3]" + "'", str35, "[100, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 1, 1, 3]" + "'", str36, "[100, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 2, 2, 3]" + "'", str37, "[100, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 3, 3, 3]" + "'", str38, "[100, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 4, 4, 3]" + "'", str39, "[100, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 5, 5, 3]" + "'", str40, "[100, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 6, 6, 3]" + "'", str41, "[100, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 7, 7, 3]" + "'", str42, "[100, 7, 7, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 8, 8, 3]" + "'", str43, "[100, 8, 8, 3]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 9, 9, 3]" + "'", str44, "[100, 9, 9, 3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[101, 0, 0, 4]" + "'", str45, "[101, 0, 0, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[101, 1, 1, 4]" + "'", str46, "[101, 1, 1, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[101, 2, 2, 4]" + "'", str47, "[101, 2, 2, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[101, 3, 3, 4]" + "'", str48, "[101, 3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[101, 4, 4, 4]" + "'", str49, "[101, 4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[101, 5, 5, 4]" + "'", str50, "[101, 5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[101, 6, 6, 4]" + "'", str51, "[101, 6, 6, 4]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[101, 7, 7, 4]" + "'", str52, "[101, 7, 7, 4]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[101, 8, 8, 4]" + "'", str53, "[101, 8, 8, 4]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[101, 9, 9, 4]" + "'", str54, "[101, 9, 9, 4]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[102, 0, 0, 5]" + "'", str55, "[102, 0, 0, 5]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[102, 1, 1, 5]" + "'", str56, "[102, 1, 1, 5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[102, 2, 2, 5]" + "'", str57, "[102, 2, 2, 5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[102, 3, 3, 5]" + "'", str58, "[102, 3, 3, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[102, 4, 4, 5]" + "'", str59, "[102, 4, 4, 5]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[102, 5, 5, 5]" + "'", str60, "[102, 5, 5, 5]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[102, 6, 6, 5]" + "'", str61, "[102, 6, 6, 5]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[102, 7, 7, 5]" + "'", str62, "[102, 7, 7, 5]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[102, 8, 8, 5]" + "'", str63, "[102, 8, 8, 5]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[102, 9, 9, 5]" + "'", str64, "[102, 9, 9, 5]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[103, 0, 0, 6]" + "'", str65, "[103, 0, 0, 6]");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test2764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2764");
        int[] intArray1 = new int[] { (short) -1 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass33 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[0]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1]" + "'", str32, "[1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test2765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2765");
        int[] intArray5 = new int[] { 'a', 0, (byte) 100, (-1), (byte) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass13 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[97, 0, 107, -1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 0, 101, -1, 1]" + "'", str6, "[97, 0, 101, -1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 0, 102, -1, 1]" + "'", str7, "[97, 0, 102, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 0, 103, -1, 1]" + "'", str8, "[97, 0, 103, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 0, 104, -1, 1]" + "'", str9, "[97, 0, 104, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 0, 105, -1, 1]" + "'", str10, "[97, 0, 105, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 0, 106, -1, 1]" + "'", str11, "[97, 0, 106, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 0, 107, -1, 1]" + "'", str12, "[97, 0, 107, -1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test2766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2766");
        int[] intArray5 = new int[] { ' ', (byte) 0, 1, ' ', (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass28 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[32, 2, 3, 34, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 0, 2, 32, 1]" + "'", str6, "[32, 0, 2, 32, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 0, 3, 32, 1]" + "'", str7, "[32, 0, 3, 32, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 0, 4, 32, 1]" + "'", str8, "[32, 0, 4, 32, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 0, 5, 32, 1]" + "'", str9, "[32, 0, 5, 32, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 0, 6, 32, 1]" + "'", str10, "[32, 0, 6, 32, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 0, 7, 32, 1]" + "'", str11, "[32, 0, 7, 32, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 0, 8, 32, 1]" + "'", str12, "[32, 0, 8, 32, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 0, 9, 32, 1]" + "'", str13, "[32, 0, 9, 32, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 1, 0, 33, 1]" + "'", str14, "[32, 1, 0, 33, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[32, 1, 1, 33, 1]" + "'", str15, "[32, 1, 1, 33, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[32, 1, 2, 33, 1]" + "'", str16, "[32, 1, 2, 33, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[32, 1, 3, 33, 1]" + "'", str17, "[32, 1, 3, 33, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[32, 1, 4, 33, 1]" + "'", str18, "[32, 1, 4, 33, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[32, 1, 5, 33, 1]" + "'", str19, "[32, 1, 5, 33, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[32, 1, 6, 33, 1]" + "'", str20, "[32, 1, 6, 33, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[32, 1, 7, 33, 1]" + "'", str21, "[32, 1, 7, 33, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[32, 1, 8, 33, 1]" + "'", str22, "[32, 1, 8, 33, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32, 1, 9, 33, 1]" + "'", str23, "[32, 1, 9, 33, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 2, 0, 34, 1]" + "'", str24, "[32, 2, 0, 34, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[32, 2, 1, 34, 1]" + "'", str25, "[32, 2, 1, 34, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[32, 2, 2, 34, 1]" + "'", str26, "[32, 2, 2, 34, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[32, 2, 3, 34, 1]" + "'", str27, "[32, 2, 3, 34, 1]");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test2767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2767");
        int[] intArray5 = new int[] { (short) 1, 0, (byte) 100, '4', (byte) 0 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass28 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 122, 52, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 52, 0]" + "'", str6, "[1, 0, 101, 52, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 52, 0]" + "'", str7, "[1, 0, 102, 52, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 52, 0]" + "'", str8, "[1, 0, 103, 52, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 52, 0]" + "'", str9, "[1, 0, 104, 52, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 52, 0]" + "'", str10, "[1, 0, 105, 52, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 52, 0]" + "'", str11, "[1, 0, 106, 52, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 52, 0]" + "'", str12, "[1, 0, 107, 52, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 108, 52, 0]" + "'", str13, "[1, 0, 108, 52, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 109, 52, 0]" + "'", str14, "[1, 0, 109, 52, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 110, 52, 0]" + "'", str15, "[1, 0, 110, 52, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 111, 52, 0]" + "'", str16, "[1, 0, 111, 52, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 0, 112, 52, 0]" + "'", str17, "[1, 0, 112, 52, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 0, 113, 52, 0]" + "'", str18, "[1, 0, 113, 52, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 0, 114, 52, 0]" + "'", str19, "[1, 0, 114, 52, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 0, 115, 52, 0]" + "'", str20, "[1, 0, 115, 52, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 116, 52, 0]" + "'", str21, "[1, 0, 116, 52, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 117, 52, 0]" + "'", str22, "[1, 0, 117, 52, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 118, 52, 0]" + "'", str23, "[1, 0, 118, 52, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 119, 52, 0]" + "'", str24, "[1, 0, 119, 52, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 0, 120, 52, 0]" + "'", str25, "[1, 0, 120, 52, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 0, 121, 52, 0]" + "'", str26, "[1, 0, 121, 52, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 0, 122, 52, 0]" + "'", str27, "[1, 0, 122, 52, 0]");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test2768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2768");
        int[] intArray3 = new int[] { ' ', (-1), 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass89 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[40, 4, 9]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 0, 1]" + "'", str4, "[32, 0, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 1, 1]" + "'", str5, "[32, 1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 2, 1]" + "'", str6, "[32, 2, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 3, 1]" + "'", str7, "[32, 3, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 4, 1]" + "'", str8, "[32, 4, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 5, 1]" + "'", str9, "[32, 5, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 6, 1]" + "'", str10, "[32, 6, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 7, 1]" + "'", str11, "[32, 7, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 8, 1]" + "'", str12, "[32, 8, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 9, 1]" + "'", str13, "[32, 9, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[33, 0, 2]" + "'", str14, "[33, 0, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[33, 1, 2]" + "'", str15, "[33, 1, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[33, 2, 2]" + "'", str16, "[33, 2, 2]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[33, 3, 2]" + "'", str17, "[33, 3, 2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[33, 4, 2]" + "'", str18, "[33, 4, 2]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[33, 5, 2]" + "'", str19, "[33, 5, 2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[33, 6, 2]" + "'", str20, "[33, 6, 2]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[33, 7, 2]" + "'", str21, "[33, 7, 2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[33, 8, 2]" + "'", str22, "[33, 8, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[33, 9, 2]" + "'", str23, "[33, 9, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[34, 0, 3]" + "'", str24, "[34, 0, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34, 1, 3]" + "'", str25, "[34, 1, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 2, 3]" + "'", str26, "[34, 2, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[34, 3, 3]" + "'", str27, "[34, 3, 3]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[34, 4, 3]" + "'", str28, "[34, 4, 3]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[34, 5, 3]" + "'", str29, "[34, 5, 3]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[34, 6, 3]" + "'", str30, "[34, 6, 3]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[34, 7, 3]" + "'", str31, "[34, 7, 3]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[34, 8, 3]" + "'", str32, "[34, 8, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[34, 9, 3]" + "'", str33, "[34, 9, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 0, 4]" + "'", str34, "[35, 0, 4]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 1, 4]" + "'", str35, "[35, 1, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 2, 4]" + "'", str36, "[35, 2, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 3, 4]" + "'", str37, "[35, 3, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 4, 4]" + "'", str38, "[35, 4, 4]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 5, 4]" + "'", str39, "[35, 5, 4]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 6, 4]" + "'", str40, "[35, 6, 4]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 7, 4]" + "'", str41, "[35, 7, 4]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 8, 4]" + "'", str42, "[35, 8, 4]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 9, 4]" + "'", str43, "[35, 9, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[36, 0, 5]" + "'", str44, "[36, 0, 5]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[36, 1, 5]" + "'", str45, "[36, 1, 5]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[36, 2, 5]" + "'", str46, "[36, 2, 5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[36, 3, 5]" + "'", str47, "[36, 3, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[36, 4, 5]" + "'", str48, "[36, 4, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[36, 5, 5]" + "'", str49, "[36, 5, 5]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[36, 6, 5]" + "'", str50, "[36, 6, 5]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[36, 7, 5]" + "'", str51, "[36, 7, 5]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[36, 8, 5]" + "'", str52, "[36, 8, 5]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[36, 9, 5]" + "'", str53, "[36, 9, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[37, 0, 6]" + "'", str54, "[37, 0, 6]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[37, 1, 6]" + "'", str55, "[37, 1, 6]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[37, 2, 6]" + "'", str56, "[37, 2, 6]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[37, 3, 6]" + "'", str57, "[37, 3, 6]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[37, 4, 6]" + "'", str58, "[37, 4, 6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[37, 5, 6]" + "'", str59, "[37, 5, 6]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[37, 6, 6]" + "'", str60, "[37, 6, 6]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[37, 7, 6]" + "'", str61, "[37, 7, 6]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[37, 8, 6]" + "'", str62, "[37, 8, 6]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[37, 9, 6]" + "'", str63, "[37, 9, 6]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[38, 0, 7]" + "'", str64, "[38, 0, 7]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[38, 1, 7]" + "'", str65, "[38, 1, 7]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[38, 2, 7]" + "'", str66, "[38, 2, 7]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[38, 3, 7]" + "'", str67, "[38, 3, 7]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[38, 4, 7]" + "'", str68, "[38, 4, 7]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[38, 5, 7]" + "'", str69, "[38, 5, 7]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[38, 6, 7]" + "'", str70, "[38, 6, 7]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[38, 7, 7]" + "'", str71, "[38, 7, 7]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[38, 8, 7]" + "'", str72, "[38, 8, 7]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[38, 9, 7]" + "'", str73, "[38, 9, 7]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[39, 0, 8]" + "'", str74, "[39, 0, 8]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[39, 1, 8]" + "'", str75, "[39, 1, 8]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[39, 2, 8]" + "'", str76, "[39, 2, 8]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[39, 3, 8]" + "'", str77, "[39, 3, 8]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[39, 4, 8]" + "'", str78, "[39, 4, 8]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[39, 5, 8]" + "'", str79, "[39, 5, 8]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[39, 6, 8]" + "'", str80, "[39, 6, 8]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[39, 7, 8]" + "'", str81, "[39, 7, 8]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[39, 8, 8]" + "'", str82, "[39, 8, 8]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[39, 9, 8]" + "'", str83, "[39, 9, 8]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[40, 0, 9]" + "'", str84, "[40, 0, 9]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[40, 1, 9]" + "'", str85, "[40, 1, 9]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[40, 2, 9]" + "'", str86, "[40, 2, 9]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[40, 3, 9]" + "'", str87, "[40, 3, 9]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[40, 4, 9]" + "'", str88, "[40, 4, 9]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2769");
        int[] intArray4 = new int[] { (byte) 10, 'a', (byte) -1, '#' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass86 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[18, 0, 0, 43]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 98, 0, 35]" + "'", str5, "[10, 98, 0, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 99, 1, 35]" + "'", str6, "[10, 99, 1, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 100, 2, 35]" + "'", str7, "[10, 100, 2, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 101, 3, 35]" + "'", str8, "[10, 101, 3, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 102, 4, 35]" + "'", str9, "[10, 102, 4, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 103, 5, 35]" + "'", str10, "[10, 103, 5, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 104, 6, 35]" + "'", str11, "[10, 104, 6, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 105, 7, 35]" + "'", str12, "[10, 105, 7, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 106, 8, 35]" + "'", str13, "[10, 106, 8, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 107, 9, 35]" + "'", str14, "[10, 107, 9, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[11, 0, 0, 36]" + "'", str15, "[11, 0, 0, 36]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[11, 1, 1, 36]" + "'", str16, "[11, 1, 1, 36]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[11, 2, 2, 36]" + "'", str17, "[11, 2, 2, 36]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[11, 3, 3, 36]" + "'", str18, "[11, 3, 3, 36]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[11, 4, 4, 36]" + "'", str19, "[11, 4, 4, 36]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[11, 5, 5, 36]" + "'", str20, "[11, 5, 5, 36]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[11, 6, 6, 36]" + "'", str21, "[11, 6, 6, 36]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[11, 7, 7, 36]" + "'", str22, "[11, 7, 7, 36]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[11, 8, 8, 36]" + "'", str23, "[11, 8, 8, 36]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[11, 9, 9, 36]" + "'", str24, "[11, 9, 9, 36]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[12, 0, 0, 37]" + "'", str25, "[12, 0, 0, 37]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[12, 1, 1, 37]" + "'", str26, "[12, 1, 1, 37]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[12, 2, 2, 37]" + "'", str27, "[12, 2, 2, 37]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[12, 3, 3, 37]" + "'", str28, "[12, 3, 3, 37]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[12, 4, 4, 37]" + "'", str29, "[12, 4, 4, 37]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[12, 5, 5, 37]" + "'", str30, "[12, 5, 5, 37]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[12, 6, 6, 37]" + "'", str31, "[12, 6, 6, 37]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[12, 7, 7, 37]" + "'", str32, "[12, 7, 7, 37]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[12, 8, 8, 37]" + "'", str33, "[12, 8, 8, 37]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[12, 9, 9, 37]" + "'", str34, "[12, 9, 9, 37]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[13, 0, 0, 38]" + "'", str35, "[13, 0, 0, 38]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[13, 1, 1, 38]" + "'", str36, "[13, 1, 1, 38]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[13, 2, 2, 38]" + "'", str37, "[13, 2, 2, 38]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[13, 3, 3, 38]" + "'", str38, "[13, 3, 3, 38]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[13, 4, 4, 38]" + "'", str39, "[13, 4, 4, 38]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[13, 5, 5, 38]" + "'", str40, "[13, 5, 5, 38]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[13, 6, 6, 38]" + "'", str41, "[13, 6, 6, 38]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[13, 7, 7, 38]" + "'", str42, "[13, 7, 7, 38]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[13, 8, 8, 38]" + "'", str43, "[13, 8, 8, 38]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[13, 9, 9, 38]" + "'", str44, "[13, 9, 9, 38]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[14, 0, 0, 39]" + "'", str45, "[14, 0, 0, 39]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[14, 1, 1, 39]" + "'", str46, "[14, 1, 1, 39]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[14, 2, 2, 39]" + "'", str47, "[14, 2, 2, 39]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[14, 3, 3, 39]" + "'", str48, "[14, 3, 3, 39]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[14, 4, 4, 39]" + "'", str49, "[14, 4, 4, 39]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[14, 5, 5, 39]" + "'", str50, "[14, 5, 5, 39]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[14, 6, 6, 39]" + "'", str51, "[14, 6, 6, 39]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[14, 7, 7, 39]" + "'", str52, "[14, 7, 7, 39]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[14, 8, 8, 39]" + "'", str53, "[14, 8, 8, 39]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[14, 9, 9, 39]" + "'", str54, "[14, 9, 9, 39]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[15, 0, 0, 40]" + "'", str55, "[15, 0, 0, 40]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[15, 1, 1, 40]" + "'", str56, "[15, 1, 1, 40]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[15, 2, 2, 40]" + "'", str57, "[15, 2, 2, 40]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[15, 3, 3, 40]" + "'", str58, "[15, 3, 3, 40]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[15, 4, 4, 40]" + "'", str59, "[15, 4, 4, 40]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[15, 5, 5, 40]" + "'", str60, "[15, 5, 5, 40]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[15, 6, 6, 40]" + "'", str61, "[15, 6, 6, 40]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[15, 7, 7, 40]" + "'", str62, "[15, 7, 7, 40]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[15, 8, 8, 40]" + "'", str63, "[15, 8, 8, 40]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[15, 9, 9, 40]" + "'", str64, "[15, 9, 9, 40]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[16, 0, 0, 41]" + "'", str65, "[16, 0, 0, 41]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[16, 1, 1, 41]" + "'", str66, "[16, 1, 1, 41]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[16, 2, 2, 41]" + "'", str67, "[16, 2, 2, 41]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[16, 3, 3, 41]" + "'", str68, "[16, 3, 3, 41]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[16, 4, 4, 41]" + "'", str69, "[16, 4, 4, 41]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[16, 5, 5, 41]" + "'", str70, "[16, 5, 5, 41]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[16, 6, 6, 41]" + "'", str71, "[16, 6, 6, 41]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[16, 7, 7, 41]" + "'", str72, "[16, 7, 7, 41]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[16, 8, 8, 41]" + "'", str73, "[16, 8, 8, 41]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[16, 9, 9, 41]" + "'", str74, "[16, 9, 9, 41]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[17, 0, 0, 42]" + "'", str75, "[17, 0, 0, 42]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[17, 1, 1, 42]" + "'", str76, "[17, 1, 1, 42]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[17, 2, 2, 42]" + "'", str77, "[17, 2, 2, 42]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[17, 3, 3, 42]" + "'", str78, "[17, 3, 3, 42]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[17, 4, 4, 42]" + "'", str79, "[17, 4, 4, 42]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[17, 5, 5, 42]" + "'", str80, "[17, 5, 5, 42]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[17, 6, 6, 42]" + "'", str81, "[17, 6, 6, 42]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[17, 7, 7, 42]" + "'", str82, "[17, 7, 7, 42]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[17, 8, 8, 42]" + "'", str83, "[17, 8, 8, 42]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[17, 9, 9, 42]" + "'", str84, "[17, 9, 9, 42]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[18, 0, 0, 43]" + "'", str85, "[18, 0, 0, 43]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2770");
        int[] intArray5 = new int[] { (byte) 0, '#', ' ', 10, 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass69 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 35, 95, 10, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 35, 33, 10, 1]" + "'", str6, "[0, 35, 33, 10, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 35, 34, 10, 1]" + "'", str7, "[0, 35, 34, 10, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 35, 35, 10, 1]" + "'", str8, "[0, 35, 35, 10, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 35, 36, 10, 1]" + "'", str9, "[0, 35, 36, 10, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 35, 37, 10, 1]" + "'", str10, "[0, 35, 37, 10, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 35, 38, 10, 1]" + "'", str11, "[0, 35, 38, 10, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 35, 39, 10, 1]" + "'", str12, "[0, 35, 39, 10, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 35, 40, 10, 1]" + "'", str13, "[0, 35, 40, 10, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 35, 41, 10, 1]" + "'", str14, "[0, 35, 41, 10, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 35, 42, 10, 1]" + "'", str15, "[0, 35, 42, 10, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 35, 43, 10, 1]" + "'", str16, "[0, 35, 43, 10, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 35, 44, 10, 1]" + "'", str17, "[0, 35, 44, 10, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 35, 45, 10, 1]" + "'", str18, "[0, 35, 45, 10, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 35, 46, 10, 1]" + "'", str19, "[0, 35, 46, 10, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 35, 47, 10, 1]" + "'", str20, "[0, 35, 47, 10, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 35, 48, 10, 1]" + "'", str21, "[0, 35, 48, 10, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 35, 49, 10, 1]" + "'", str22, "[0, 35, 49, 10, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 35, 50, 10, 1]" + "'", str23, "[0, 35, 50, 10, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 35, 51, 10, 1]" + "'", str24, "[0, 35, 51, 10, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 35, 52, 10, 1]" + "'", str25, "[0, 35, 52, 10, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 35, 53, 10, 1]" + "'", str26, "[0, 35, 53, 10, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 35, 54, 10, 1]" + "'", str27, "[0, 35, 54, 10, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 35, 55, 10, 1]" + "'", str28, "[0, 35, 55, 10, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 35, 56, 10, 1]" + "'", str29, "[0, 35, 56, 10, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 35, 57, 10, 1]" + "'", str30, "[0, 35, 57, 10, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 35, 58, 10, 1]" + "'", str31, "[0, 35, 58, 10, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 35, 59, 10, 1]" + "'", str32, "[0, 35, 59, 10, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 35, 60, 10, 1]" + "'", str33, "[0, 35, 60, 10, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 35, 61, 10, 1]" + "'", str34, "[0, 35, 61, 10, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 35, 62, 10, 1]" + "'", str35, "[0, 35, 62, 10, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 35, 63, 10, 1]" + "'", str36, "[0, 35, 63, 10, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 35, 64, 10, 1]" + "'", str37, "[0, 35, 64, 10, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 35, 65, 10, 1]" + "'", str38, "[0, 35, 65, 10, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 35, 66, 10, 1]" + "'", str39, "[0, 35, 66, 10, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 35, 67, 10, 1]" + "'", str40, "[0, 35, 67, 10, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 35, 68, 10, 1]" + "'", str41, "[0, 35, 68, 10, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 35, 69, 10, 1]" + "'", str42, "[0, 35, 69, 10, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 35, 70, 10, 1]" + "'", str43, "[0, 35, 70, 10, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 35, 71, 10, 1]" + "'", str44, "[0, 35, 71, 10, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 35, 72, 10, 1]" + "'", str45, "[0, 35, 72, 10, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 35, 73, 10, 1]" + "'", str46, "[0, 35, 73, 10, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 35, 74, 10, 1]" + "'", str47, "[0, 35, 74, 10, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 35, 75, 10, 1]" + "'", str48, "[0, 35, 75, 10, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 35, 76, 10, 1]" + "'", str49, "[0, 35, 76, 10, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 35, 77, 10, 1]" + "'", str50, "[0, 35, 77, 10, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 35, 78, 10, 1]" + "'", str51, "[0, 35, 78, 10, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 35, 79, 10, 1]" + "'", str52, "[0, 35, 79, 10, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 35, 80, 10, 1]" + "'", str53, "[0, 35, 80, 10, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 35, 81, 10, 1]" + "'", str54, "[0, 35, 81, 10, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, 35, 82, 10, 1]" + "'", str55, "[0, 35, 82, 10, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, 35, 83, 10, 1]" + "'", str56, "[0, 35, 83, 10, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, 35, 84, 10, 1]" + "'", str57, "[0, 35, 84, 10, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, 35, 85, 10, 1]" + "'", str58, "[0, 35, 85, 10, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, 35, 86, 10, 1]" + "'", str59, "[0, 35, 86, 10, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, 35, 87, 10, 1]" + "'", str60, "[0, 35, 87, 10, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, 35, 88, 10, 1]" + "'", str61, "[0, 35, 88, 10, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, 35, 89, 10, 1]" + "'", str62, "[0, 35, 89, 10, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[0, 35, 90, 10, 1]" + "'", str63, "[0, 35, 90, 10, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[0, 35, 91, 10, 1]" + "'", str64, "[0, 35, 91, 10, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[0, 35, 92, 10, 1]" + "'", str65, "[0, 35, 92, 10, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[0, 35, 93, 10, 1]" + "'", str66, "[0, 35, 93, 10, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[0, 35, 94, 10, 1]" + "'", str67, "[0, 35, 94, 10, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[0, 35, 95, 10, 1]" + "'", str68, "[0, 35, 95, 10, 1]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test2771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2771");
        int[] intArray6 = new int[] { ' ', (byte) 0, ' ', (byte) 0, (-1), (short) 1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass20 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[32, 1, 3, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 0, 33, 1, -1, 1]" + "'", str7, "[32, 0, 33, 1, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 0, 34, 2, -1, 1]" + "'", str8, "[32, 0, 34, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 0, 35, 3, -1, 1]" + "'", str9, "[32, 0, 35, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 0, 36, 4, -1, 1]" + "'", str10, "[32, 0, 36, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 0, 37, 5, -1, 1]" + "'", str11, "[32, 0, 37, 5, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 0, 38, 6, -1, 1]" + "'", str12, "[32, 0, 38, 6, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 0, 39, 7, -1, 1]" + "'", str13, "[32, 0, 39, 7, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 0, 40, 8, -1, 1]" + "'", str14, "[32, 0, 40, 8, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[32, 0, 41, 9, -1, 1]" + "'", str15, "[32, 0, 41, 9, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[32, 1, 0, 0, 0, 1]" + "'", str16, "[32, 1, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[32, 1, 1, 1, 0, 1]" + "'", str17, "[32, 1, 1, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[32, 1, 2, 2, 0, 1]" + "'", str18, "[32, 1, 2, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[32, 1, 3, 3, 0, 1]" + "'", str19, "[32, 1, 3, 3, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2772");
        int[] intArray6 = new int[] { (short) 0, (short) 10, (-1), (short) 1, (byte) 1, 'a' };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass37 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 13, 1, 1, 4, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 10, 0, 2, 1, 97]" + "'", str7, "[0, 10, 0, 2, 1, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 10, 1, 3, 1, 97]" + "'", str8, "[0, 10, 1, 3, 1, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 10, 2, 4, 1, 97]" + "'", str9, "[0, 10, 2, 4, 1, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 10, 3, 5, 1, 97]" + "'", str10, "[0, 10, 3, 5, 1, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 10, 4, 6, 1, 97]" + "'", str11, "[0, 10, 4, 6, 1, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 10, 5, 7, 1, 97]" + "'", str12, "[0, 10, 5, 7, 1, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 10, 6, 8, 1, 97]" + "'", str13, "[0, 10, 6, 8, 1, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 10, 7, 9, 1, 97]" + "'", str14, "[0, 10, 7, 9, 1, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 11, 0, 0, 2, 97]" + "'", str15, "[0, 11, 0, 0, 2, 97]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 11, 1, 1, 2, 97]" + "'", str16, "[0, 11, 1, 1, 2, 97]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 11, 2, 2, 2, 97]" + "'", str17, "[0, 11, 2, 2, 2, 97]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 11, 3, 3, 2, 97]" + "'", str18, "[0, 11, 3, 3, 2, 97]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 11, 4, 4, 2, 97]" + "'", str19, "[0, 11, 4, 4, 2, 97]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 11, 5, 5, 2, 97]" + "'", str20, "[0, 11, 5, 5, 2, 97]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 11, 6, 6, 2, 97]" + "'", str21, "[0, 11, 6, 6, 2, 97]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 11, 7, 7, 2, 97]" + "'", str22, "[0, 11, 7, 7, 2, 97]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 11, 8, 8, 2, 97]" + "'", str23, "[0, 11, 8, 8, 2, 97]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 11, 9, 9, 2, 97]" + "'", str24, "[0, 11, 9, 9, 2, 97]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 12, 0, 0, 3, 97]" + "'", str25, "[0, 12, 0, 0, 3, 97]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 12, 1, 1, 3, 97]" + "'", str26, "[0, 12, 1, 1, 3, 97]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 12, 2, 2, 3, 97]" + "'", str27, "[0, 12, 2, 2, 3, 97]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 12, 3, 3, 3, 97]" + "'", str28, "[0, 12, 3, 3, 3, 97]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 12, 4, 4, 3, 97]" + "'", str29, "[0, 12, 4, 4, 3, 97]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 12, 5, 5, 3, 97]" + "'", str30, "[0, 12, 5, 5, 3, 97]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 12, 6, 6, 3, 97]" + "'", str31, "[0, 12, 6, 6, 3, 97]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 12, 7, 7, 3, 97]" + "'", str32, "[0, 12, 7, 7, 3, 97]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 12, 8, 8, 3, 97]" + "'", str33, "[0, 12, 8, 8, 3, 97]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 12, 9, 9, 3, 97]" + "'", str34, "[0, 12, 9, 9, 3, 97]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 13, 0, 0, 4, 97]" + "'", str35, "[0, 13, 0, 0, 4, 97]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 13, 1, 1, 4, 97]" + "'", str36, "[0, 13, 1, 1, 4, 97]");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test2773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2773");
        int[] intArray6 = new int[] { (short) 0, (short) 100, (-1), (short) 1, (short) -1, (byte) 0 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass41 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 103, 5, 5, 2, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 100, 0, 2, -1, 0]" + "'", str7, "[0, 100, 0, 2, -1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 100, 1, 3, -1, 0]" + "'", str8, "[0, 100, 1, 3, -1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 100, 2, 4, -1, 0]" + "'", str9, "[0, 100, 2, 4, -1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 100, 3, 5, -1, 0]" + "'", str10, "[0, 100, 3, 5, -1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 100, 4, 6, -1, 0]" + "'", str11, "[0, 100, 4, 6, -1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 100, 5, 7, -1, 0]" + "'", str12, "[0, 100, 5, 7, -1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 100, 6, 8, -1, 0]" + "'", str13, "[0, 100, 6, 8, -1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 100, 7, 9, -1, 0]" + "'", str14, "[0, 100, 7, 9, -1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 101, 0, 0, 0, 0]" + "'", str15, "[0, 101, 0, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 101, 1, 1, 0, 0]" + "'", str16, "[0, 101, 1, 1, 0, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 101, 2, 2, 0, 0]" + "'", str17, "[0, 101, 2, 2, 0, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 101, 3, 3, 0, 0]" + "'", str18, "[0, 101, 3, 3, 0, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 101, 4, 4, 0, 0]" + "'", str19, "[0, 101, 4, 4, 0, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 101, 5, 5, 0, 0]" + "'", str20, "[0, 101, 5, 5, 0, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 101, 6, 6, 0, 0]" + "'", str21, "[0, 101, 6, 6, 0, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 101, 7, 7, 0, 0]" + "'", str22, "[0, 101, 7, 7, 0, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 101, 8, 8, 0, 0]" + "'", str23, "[0, 101, 8, 8, 0, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 101, 9, 9, 0, 0]" + "'", str24, "[0, 101, 9, 9, 0, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 102, 0, 0, 1, 0]" + "'", str25, "[0, 102, 0, 0, 1, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 102, 1, 1, 1, 0]" + "'", str26, "[0, 102, 1, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 102, 2, 2, 1, 0]" + "'", str27, "[0, 102, 2, 2, 1, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 102, 3, 3, 1, 0]" + "'", str28, "[0, 102, 3, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 102, 4, 4, 1, 0]" + "'", str29, "[0, 102, 4, 4, 1, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 102, 5, 5, 1, 0]" + "'", str30, "[0, 102, 5, 5, 1, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 102, 6, 6, 1, 0]" + "'", str31, "[0, 102, 6, 6, 1, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 102, 7, 7, 1, 0]" + "'", str32, "[0, 102, 7, 7, 1, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 102, 8, 8, 1, 0]" + "'", str33, "[0, 102, 8, 8, 1, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 102, 9, 9, 1, 0]" + "'", str34, "[0, 102, 9, 9, 1, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 103, 0, 0, 2, 0]" + "'", str35, "[0, 103, 0, 0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 103, 1, 1, 2, 0]" + "'", str36, "[0, 103, 1, 1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 103, 2, 2, 2, 0]" + "'", str37, "[0, 103, 2, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 103, 3, 3, 2, 0]" + "'", str38, "[0, 103, 3, 3, 2, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 103, 4, 4, 2, 0]" + "'", str39, "[0, 103, 4, 4, 2, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 103, 5, 5, 2, 0]" + "'", str40, "[0, 103, 5, 5, 2, 0]");
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test2774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2774");
        int[] intArray2 = new int[] { (byte) 1, (-1) };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass69 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[5, 5]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 0]" + "'", str3, "[2, 0]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 1]" + "'", str4, "[3, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 2]" + "'", str5, "[4, 2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 3]" + "'", str6, "[5, 3]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 4]" + "'", str7, "[6, 4]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 5]" + "'", str8, "[7, 5]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 6]" + "'", str9, "[8, 6]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 7]" + "'", str10, "[9, 7]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 8]" + "'", str11, "[10, 8]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 9]" + "'", str12, "[11, 9]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 1]" + "'", str13, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1]" + "'", str14, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2]" + "'", str15, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[3, 3]" + "'", str16, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[4, 4]" + "'", str17, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[5, 5]" + "'", str18, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[6, 6]" + "'", str19, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[7, 7]" + "'", str20, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[8, 8]" + "'", str21, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[9, 9]" + "'", str22, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 1]" + "'", str23, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1]" + "'", str24, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 2]" + "'", str25, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3]" + "'", str26, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[4, 4]" + "'", str27, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[5, 5]" + "'", str28, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[6, 6]" + "'", str29, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[7, 7]" + "'", str30, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[8, 8]" + "'", str31, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[9, 9]" + "'", str32, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 0, 1]" + "'", str33, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1]" + "'", str34, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 2]" + "'", str35, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 3]" + "'", str36, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4]" + "'", str37, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[5, 5]" + "'", str38, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[6, 6]" + "'", str39, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[7, 7]" + "'", str40, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[8, 8]" + "'", str41, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[9, 9]" + "'", str42, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 0, 1]" + "'", str43, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1]" + "'", str44, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[2, 2]" + "'", str45, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 3]" + "'", str46, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 4]" + "'", str47, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5]" + "'", str48, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[6, 6]" + "'", str49, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[7, 7]" + "'", str50, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[8, 8]" + "'", str51, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[9, 9]" + "'", str52, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 0, 1]" + "'", str53, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 1]" + "'", str54, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[2, 2]" + "'", str55, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[3, 3]" + "'", str56, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[4, 4]" + "'", str57, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 5]" + "'", str58, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 6]" + "'", str59, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[7, 7]" + "'", str60, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[8, 8]" + "'", str61, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[9, 9]" + "'", str62, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 0, 1]" + "'", str63, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 1]" + "'", str64, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[2, 2]" + "'", str65, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[3, 3]" + "'", str66, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[4, 4]" + "'", str67, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[5, 5]" + "'", str68, "[5, 5]");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test2775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2775");
        int[] intArray4 = new int[] { (byte) -1, 10, (byte) 0, (short) 100 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass90 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[7, 5, 5, 108]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 11, 1, 100]" + "'", str5, "[-1, 11, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 12, 2, 100]" + "'", str6, "[-1, 12, 2, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 13, 3, 100]" + "'", str7, "[-1, 13, 3, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 14, 4, 100]" + "'", str8, "[-1, 14, 4, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 15, 5, 100]" + "'", str9, "[-1, 15, 5, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 16, 6, 100]" + "'", str10, "[-1, 16, 6, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 17, 7, 100]" + "'", str11, "[-1, 17, 7, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 18, 8, 100]" + "'", str12, "[-1, 18, 8, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 19, 9, 100]" + "'", str13, "[-1, 19, 9, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 0, 0, 101]" + "'", str14, "[0, 0, 0, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 1, 1, 101]" + "'", str15, "[0, 1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 2, 2, 101]" + "'", str16, "[0, 2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 3, 3, 101]" + "'", str17, "[0, 3, 3, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 4, 4, 101]" + "'", str18, "[0, 4, 4, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 5, 5, 101]" + "'", str19, "[0, 5, 5, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 6, 6, 101]" + "'", str20, "[0, 6, 6, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 7, 7, 101]" + "'", str21, "[0, 7, 7, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 8, 8, 101]" + "'", str22, "[0, 8, 8, 101]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 9, 9, 101]" + "'", str23, "[0, 9, 9, 101]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 0, 102]" + "'", str24, "[1, 0, 0, 102]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1, 1, 102]" + "'", str25, "[1, 1, 1, 102]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 2, 2, 102]" + "'", str26, "[1, 2, 2, 102]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 3, 3, 102]" + "'", str27, "[1, 3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 4, 4, 102]" + "'", str28, "[1, 4, 4, 102]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 5, 5, 102]" + "'", str29, "[1, 5, 5, 102]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 6, 6, 102]" + "'", str30, "[1, 6, 6, 102]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 7, 7, 102]" + "'", str31, "[1, 7, 7, 102]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 8, 8, 102]" + "'", str32, "[1, 8, 8, 102]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 9, 9, 102]" + "'", str33, "[1, 9, 9, 102]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 0, 0, 103]" + "'", str34, "[2, 0, 0, 103]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 1, 1, 103]" + "'", str35, "[2, 1, 1, 103]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[2, 2, 2, 103]" + "'", str36, "[2, 2, 2, 103]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[2, 3, 3, 103]" + "'", str37, "[2, 3, 3, 103]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[2, 4, 4, 103]" + "'", str38, "[2, 4, 4, 103]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[2, 5, 5, 103]" + "'", str39, "[2, 5, 5, 103]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[2, 6, 6, 103]" + "'", str40, "[2, 6, 6, 103]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[2, 7, 7, 103]" + "'", str41, "[2, 7, 7, 103]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[2, 8, 8, 103]" + "'", str42, "[2, 8, 8, 103]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2, 9, 9, 103]" + "'", str43, "[2, 9, 9, 103]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 0, 0, 104]" + "'", str44, "[3, 0, 0, 104]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 1, 1, 104]" + "'", str45, "[3, 1, 1, 104]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 2, 2, 104]" + "'", str46, "[3, 2, 2, 104]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[3, 3, 3, 104]" + "'", str47, "[3, 3, 3, 104]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[3, 4, 4, 104]" + "'", str48, "[3, 4, 4, 104]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[3, 5, 5, 104]" + "'", str49, "[3, 5, 5, 104]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[3, 6, 6, 104]" + "'", str50, "[3, 6, 6, 104]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[3, 7, 7, 104]" + "'", str51, "[3, 7, 7, 104]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[3, 8, 8, 104]" + "'", str52, "[3, 8, 8, 104]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[3, 9, 9, 104]" + "'", str53, "[3, 9, 9, 104]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[4, 0, 0, 105]" + "'", str54, "[4, 0, 0, 105]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[4, 1, 1, 105]" + "'", str55, "[4, 1, 1, 105]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4, 2, 2, 105]" + "'", str56, "[4, 2, 2, 105]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[4, 3, 3, 105]" + "'", str57, "[4, 3, 3, 105]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[4, 4, 4, 105]" + "'", str58, "[4, 4, 4, 105]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[4, 5, 5, 105]" + "'", str59, "[4, 5, 5, 105]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[4, 6, 6, 105]" + "'", str60, "[4, 6, 6, 105]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[4, 7, 7, 105]" + "'", str61, "[4, 7, 7, 105]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[4, 8, 8, 105]" + "'", str62, "[4, 8, 8, 105]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[4, 9, 9, 105]" + "'", str63, "[4, 9, 9, 105]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[5, 0, 0, 106]" + "'", str64, "[5, 0, 0, 106]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[5, 1, 1, 106]" + "'", str65, "[5, 1, 1, 106]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[5, 2, 2, 106]" + "'", str66, "[5, 2, 2, 106]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[5, 3, 3, 106]" + "'", str67, "[5, 3, 3, 106]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[5, 4, 4, 106]" + "'", str68, "[5, 4, 4, 106]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[5, 5, 5, 106]" + "'", str69, "[5, 5, 5, 106]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[5, 6, 6, 106]" + "'", str70, "[5, 6, 6, 106]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[5, 7, 7, 106]" + "'", str71, "[5, 7, 7, 106]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[5, 8, 8, 106]" + "'", str72, "[5, 8, 8, 106]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[5, 9, 9, 106]" + "'", str73, "[5, 9, 9, 106]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[6, 0, 0, 107]" + "'", str74, "[6, 0, 0, 107]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[6, 1, 1, 107]" + "'", str75, "[6, 1, 1, 107]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[6, 2, 2, 107]" + "'", str76, "[6, 2, 2, 107]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[6, 3, 3, 107]" + "'", str77, "[6, 3, 3, 107]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[6, 4, 4, 107]" + "'", str78, "[6, 4, 4, 107]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[6, 5, 5, 107]" + "'", str79, "[6, 5, 5, 107]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[6, 6, 6, 107]" + "'", str80, "[6, 6, 6, 107]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[6, 7, 7, 107]" + "'", str81, "[6, 7, 7, 107]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[6, 8, 8, 107]" + "'", str82, "[6, 8, 8, 107]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[6, 9, 9, 107]" + "'", str83, "[6, 9, 9, 107]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[7, 0, 0, 108]" + "'", str84, "[7, 0, 0, 108]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[7, 1, 1, 108]" + "'", str85, "[7, 1, 1, 108]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[7, 2, 2, 108]" + "'", str86, "[7, 2, 2, 108]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[7, 3, 3, 108]" + "'", str87, "[7, 3, 3, 108]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[7, 4, 4, 108]" + "'", str88, "[7, 4, 4, 108]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[7, 5, 5, 108]" + "'", str89, "[7, 5, 5, 108]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2776");
        int[] intArray6 = new int[] { (short) 100, (byte) 0, 10, (byte) 0, (byte) 1, (byte) 0 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass15 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 0, 18, 8, 1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 0, 11, 1, 1, 0]" + "'", str7, "[100, 0, 11, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 0, 12, 2, 1, 0]" + "'", str8, "[100, 0, 12, 2, 1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 0, 13, 3, 1, 0]" + "'", str9, "[100, 0, 13, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 0, 14, 4, 1, 0]" + "'", str10, "[100, 0, 14, 4, 1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 0, 15, 5, 1, 0]" + "'", str11, "[100, 0, 15, 5, 1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 0, 16, 6, 1, 0]" + "'", str12, "[100, 0, 16, 6, 1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 0, 17, 7, 1, 0]" + "'", str13, "[100, 0, 17, 7, 1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 0, 18, 8, 1, 0]" + "'", str14, "[100, 0, 18, 8, 1, 0]");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test2777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2777");
        int[] intArray5 = new int[] { (short) 1, (short) 1, (byte) 0, '4', '#' };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass16 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 2, 0, 53, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 1, 52, 35]" + "'", str6, "[1, 1, 1, 52, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1, 2, 52, 35]" + "'", str7, "[1, 1, 2, 52, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1, 3, 52, 35]" + "'", str8, "[1, 1, 3, 52, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1, 4, 52, 35]" + "'", str9, "[1, 1, 4, 52, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1, 5, 52, 35]" + "'", str10, "[1, 1, 5, 52, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1, 6, 52, 35]" + "'", str11, "[1, 1, 6, 52, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1, 7, 52, 35]" + "'", str12, "[1, 1, 7, 52, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 8, 52, 35]" + "'", str13, "[1, 1, 8, 52, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1, 9, 52, 35]" + "'", str14, "[1, 1, 9, 52, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 2, 0, 53, 35]" + "'", str15, "[1, 2, 0, 53, 35]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test2778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2778");
        int[] intArray4 = new int[] { (short) 100, 'a', 100, '4' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass58 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 150, 153, 52]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 98, 101, 52]" + "'", str5, "[100, 98, 101, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 99, 102, 52]" + "'", str6, "[100, 99, 102, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 100, 103, 52]" + "'", str7, "[100, 100, 103, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 101, 104, 52]" + "'", str8, "[100, 101, 104, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 102, 105, 52]" + "'", str9, "[100, 102, 105, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 103, 106, 52]" + "'", str10, "[100, 103, 106, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 104, 107, 52]" + "'", str11, "[100, 104, 107, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 105, 108, 52]" + "'", str12, "[100, 105, 108, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 106, 109, 52]" + "'", str13, "[100, 106, 109, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 107, 110, 52]" + "'", str14, "[100, 107, 110, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 108, 111, 52]" + "'", str15, "[100, 108, 111, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 109, 112, 52]" + "'", str16, "[100, 109, 112, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 110, 113, 52]" + "'", str17, "[100, 110, 113, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 111, 114, 52]" + "'", str18, "[100, 111, 114, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 112, 115, 52]" + "'", str19, "[100, 112, 115, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 113, 116, 52]" + "'", str20, "[100, 113, 116, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 114, 117, 52]" + "'", str21, "[100, 114, 117, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 115, 118, 52]" + "'", str22, "[100, 115, 118, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 116, 119, 52]" + "'", str23, "[100, 116, 119, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 117, 120, 52]" + "'", str24, "[100, 117, 120, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 118, 121, 52]" + "'", str25, "[100, 118, 121, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 119, 122, 52]" + "'", str26, "[100, 119, 122, 52]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 120, 123, 52]" + "'", str27, "[100, 120, 123, 52]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 121, 124, 52]" + "'", str28, "[100, 121, 124, 52]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 122, 125, 52]" + "'", str29, "[100, 122, 125, 52]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 123, 126, 52]" + "'", str30, "[100, 123, 126, 52]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 124, 127, 52]" + "'", str31, "[100, 124, 127, 52]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 125, 128, 52]" + "'", str32, "[100, 125, 128, 52]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 126, 129, 52]" + "'", str33, "[100, 126, 129, 52]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 127, 130, 52]" + "'", str34, "[100, 127, 130, 52]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 128, 131, 52]" + "'", str35, "[100, 128, 131, 52]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 129, 132, 52]" + "'", str36, "[100, 129, 132, 52]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 130, 133, 52]" + "'", str37, "[100, 130, 133, 52]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 131, 134, 52]" + "'", str38, "[100, 131, 134, 52]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 132, 135, 52]" + "'", str39, "[100, 132, 135, 52]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 133, 136, 52]" + "'", str40, "[100, 133, 136, 52]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 134, 137, 52]" + "'", str41, "[100, 134, 137, 52]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 135, 138, 52]" + "'", str42, "[100, 135, 138, 52]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 136, 139, 52]" + "'", str43, "[100, 136, 139, 52]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 137, 140, 52]" + "'", str44, "[100, 137, 140, 52]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 138, 141, 52]" + "'", str45, "[100, 138, 141, 52]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 139, 142, 52]" + "'", str46, "[100, 139, 142, 52]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 140, 143, 52]" + "'", str47, "[100, 140, 143, 52]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 141, 144, 52]" + "'", str48, "[100, 141, 144, 52]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 142, 145, 52]" + "'", str49, "[100, 142, 145, 52]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 143, 146, 52]" + "'", str50, "[100, 143, 146, 52]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 144, 147, 52]" + "'", str51, "[100, 144, 147, 52]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 145, 148, 52]" + "'", str52, "[100, 145, 148, 52]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 146, 149, 52]" + "'", str53, "[100, 146, 149, 52]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 147, 150, 52]" + "'", str54, "[100, 147, 150, 52]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 148, 151, 52]" + "'", str55, "[100, 148, 151, 52]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 149, 152, 52]" + "'", str56, "[100, 149, 152, 52]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 150, 153, 52]" + "'", str57, "[100, 150, 153, 52]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test2779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2779");
        int[] intArray4 = new int[] { '4', (byte) -1, (short) 1, (byte) 10 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass28 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[54, 4, 4, 12]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[52, 0, 2, 10]" + "'", str5, "[52, 0, 2, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[52, 1, 3, 10]" + "'", str6, "[52, 1, 3, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[52, 2, 4, 10]" + "'", str7, "[52, 2, 4, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[52, 3, 5, 10]" + "'", str8, "[52, 3, 5, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[52, 4, 6, 10]" + "'", str9, "[52, 4, 6, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[52, 5, 7, 10]" + "'", str10, "[52, 5, 7, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[52, 6, 8, 10]" + "'", str11, "[52, 6, 8, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[52, 7, 9, 10]" + "'", str12, "[52, 7, 9, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[53, 0, 0, 11]" + "'", str13, "[53, 0, 0, 11]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[53, 1, 1, 11]" + "'", str14, "[53, 1, 1, 11]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[53, 2, 2, 11]" + "'", str15, "[53, 2, 2, 11]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[53, 3, 3, 11]" + "'", str16, "[53, 3, 3, 11]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[53, 4, 4, 11]" + "'", str17, "[53, 4, 4, 11]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[53, 5, 5, 11]" + "'", str18, "[53, 5, 5, 11]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[53, 6, 6, 11]" + "'", str19, "[53, 6, 6, 11]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[53, 7, 7, 11]" + "'", str20, "[53, 7, 7, 11]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[53, 8, 8, 11]" + "'", str21, "[53, 8, 8, 11]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[53, 9, 9, 11]" + "'", str22, "[53, 9, 9, 11]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[54, 0, 0, 12]" + "'", str23, "[54, 0, 0, 12]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[54, 1, 1, 12]" + "'", str24, "[54, 1, 1, 12]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[54, 2, 2, 12]" + "'", str25, "[54, 2, 2, 12]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[54, 3, 3, 12]" + "'", str26, "[54, 3, 3, 12]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[54, 4, 4, 12]" + "'", str27, "[54, 4, 4, 12]");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test2780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2780");
        int[] intArray4 = new int[] { (byte) -1, 1, 100, '#' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass44 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 40, 139, 35]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 2, 101, 35]" + "'", str5, "[-1, 2, 101, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 3, 102, 35]" + "'", str6, "[-1, 3, 102, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 4, 103, 35]" + "'", str7, "[-1, 4, 103, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 5, 104, 35]" + "'", str8, "[-1, 5, 104, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 6, 105, 35]" + "'", str9, "[-1, 6, 105, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 7, 106, 35]" + "'", str10, "[-1, 7, 106, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 8, 107, 35]" + "'", str11, "[-1, 8, 107, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 9, 108, 35]" + "'", str12, "[-1, 9, 108, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 10, 109, 35]" + "'", str13, "[-1, 10, 109, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 11, 110, 35]" + "'", str14, "[-1, 11, 110, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 12, 111, 35]" + "'", str15, "[-1, 12, 111, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 13, 112, 35]" + "'", str16, "[-1, 13, 112, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 14, 113, 35]" + "'", str17, "[-1, 14, 113, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 15, 114, 35]" + "'", str18, "[-1, 15, 114, 35]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 16, 115, 35]" + "'", str19, "[-1, 16, 115, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 17, 116, 35]" + "'", str20, "[-1, 17, 116, 35]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 18, 117, 35]" + "'", str21, "[-1, 18, 117, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 19, 118, 35]" + "'", str22, "[-1, 19, 118, 35]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 20, 119, 35]" + "'", str23, "[-1, 20, 119, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 21, 120, 35]" + "'", str24, "[-1, 21, 120, 35]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 22, 121, 35]" + "'", str25, "[-1, 22, 121, 35]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 23, 122, 35]" + "'", str26, "[-1, 23, 122, 35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 24, 123, 35]" + "'", str27, "[-1, 24, 123, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 25, 124, 35]" + "'", str28, "[-1, 25, 124, 35]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 26, 125, 35]" + "'", str29, "[-1, 26, 125, 35]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 27, 126, 35]" + "'", str30, "[-1, 27, 126, 35]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 28, 127, 35]" + "'", str31, "[-1, 28, 127, 35]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 29, 128, 35]" + "'", str32, "[-1, 29, 128, 35]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 30, 129, 35]" + "'", str33, "[-1, 30, 129, 35]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 31, 130, 35]" + "'", str34, "[-1, 31, 130, 35]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 32, 131, 35]" + "'", str35, "[-1, 32, 131, 35]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 33, 132, 35]" + "'", str36, "[-1, 33, 132, 35]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 34, 133, 35]" + "'", str37, "[-1, 34, 133, 35]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 35, 134, 35]" + "'", str38, "[-1, 35, 134, 35]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 36, 135, 35]" + "'", str39, "[-1, 36, 135, 35]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 37, 136, 35]" + "'", str40, "[-1, 37, 136, 35]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 38, 137, 35]" + "'", str41, "[-1, 38, 137, 35]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, 39, 138, 35]" + "'", str42, "[-1, 39, 138, 35]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, 40, 139, 35]" + "'", str43, "[-1, 40, 139, 35]");
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test2781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2781");
        int[] intArray6 = new int[] { 100, (byte) 10, 'a', 'a', (byte) 100, ' ' };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass18 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 10, 108, 108, 100, 32]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 10, 98, 98, 100, 32]" + "'", str7, "[100, 10, 98, 98, 100, 32]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 10, 99, 99, 100, 32]" + "'", str8, "[100, 10, 99, 99, 100, 32]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 10, 100, 100, 100, 32]" + "'", str9, "[100, 10, 100, 100, 100, 32]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 10, 101, 101, 100, 32]" + "'", str10, "[100, 10, 101, 101, 100, 32]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 10, 102, 102, 100, 32]" + "'", str11, "[100, 10, 102, 102, 100, 32]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 10, 103, 103, 100, 32]" + "'", str12, "[100, 10, 103, 103, 100, 32]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 10, 104, 104, 100, 32]" + "'", str13, "[100, 10, 104, 104, 100, 32]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 10, 105, 105, 100, 32]" + "'", str14, "[100, 10, 105, 105, 100, 32]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 10, 106, 106, 100, 32]" + "'", str15, "[100, 10, 106, 106, 100, 32]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 10, 107, 107, 100, 32]" + "'", str16, "[100, 10, 107, 107, 100, 32]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 10, 108, 108, 100, 32]" + "'", str17, "[100, 10, 108, 108, 100, 32]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test2782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2782");
        int[] intArray1 = new int[] { (short) 100 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass85 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[183]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[101]" + "'", str2, "[101]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[102]" + "'", str3, "[102]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[103]" + "'", str4, "[103]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[104]" + "'", str5, "[104]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[105]" + "'", str6, "[105]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[106]" + "'", str7, "[106]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[107]" + "'", str8, "[107]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[108]" + "'", str9, "[108]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[109]" + "'", str10, "[109]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[110]" + "'", str11, "[110]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[111]" + "'", str12, "[111]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[112]" + "'", str13, "[112]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[113]" + "'", str14, "[113]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[114]" + "'", str15, "[114]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[115]" + "'", str16, "[115]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[116]" + "'", str17, "[116]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[117]" + "'", str18, "[117]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[118]" + "'", str19, "[118]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[119]" + "'", str20, "[119]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[120]" + "'", str21, "[120]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[121]" + "'", str22, "[121]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[122]" + "'", str23, "[122]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[123]" + "'", str24, "[123]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[124]" + "'", str25, "[124]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[125]" + "'", str26, "[125]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[126]" + "'", str27, "[126]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[127]" + "'", str28, "[127]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[128]" + "'", str29, "[128]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[129]" + "'", str30, "[129]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[130]" + "'", str31, "[130]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[131]" + "'", str32, "[131]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[132]" + "'", str33, "[132]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[133]" + "'", str34, "[133]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[134]" + "'", str35, "[134]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[135]" + "'", str36, "[135]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[136]" + "'", str37, "[136]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[137]" + "'", str38, "[137]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[138]" + "'", str39, "[138]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[139]" + "'", str40, "[139]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[140]" + "'", str41, "[140]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[141]" + "'", str42, "[141]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[142]" + "'", str43, "[142]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[143]" + "'", str44, "[143]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[144]" + "'", str45, "[144]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[145]" + "'", str46, "[145]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[146]" + "'", str47, "[146]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[147]" + "'", str48, "[147]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[148]" + "'", str49, "[148]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[149]" + "'", str50, "[149]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[150]" + "'", str51, "[150]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[151]" + "'", str52, "[151]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[152]" + "'", str53, "[152]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[153]" + "'", str54, "[153]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[154]" + "'", str55, "[154]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[155]" + "'", str56, "[155]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[156]" + "'", str57, "[156]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[157]" + "'", str58, "[157]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[158]" + "'", str59, "[158]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[159]" + "'", str60, "[159]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[160]" + "'", str61, "[160]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[161]" + "'", str62, "[161]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[162]" + "'", str63, "[162]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[163]" + "'", str64, "[163]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[164]" + "'", str65, "[164]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[165]" + "'", str66, "[165]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[166]" + "'", str67, "[166]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[167]" + "'", str68, "[167]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[168]" + "'", str69, "[168]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[169]" + "'", str70, "[169]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[170]" + "'", str71, "[170]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[171]" + "'", str72, "[171]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[172]" + "'", str73, "[172]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[173]" + "'", str74, "[173]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[174]" + "'", str75, "[174]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[175]" + "'", str76, "[175]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[176]" + "'", str77, "[176]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[177]" + "'", str78, "[177]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[178]" + "'", str79, "[178]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[179]" + "'", str80, "[179]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[180]" + "'", str81, "[180]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[181]" + "'", str82, "[181]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[182]" + "'", str83, "[182]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[183]" + "'", str84, "[183]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2783");
        int[] intArray1 = new int[] { (short) 0 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass66 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[4]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1]" + "'", str11, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1]" + "'", str21, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5]" + "'", str26, "[5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6]" + "'", str27, "[6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7]" + "'", str28, "[7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8]" + "'", str29, "[8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9]" + "'", str30, "[9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 1]" + "'", str31, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1]" + "'", str32, "[1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2]" + "'", str33, "[2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3]" + "'", str34, "[3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4]" + "'", str35, "[4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5]" + "'", str36, "[5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6]" + "'", str37, "[6]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[7]" + "'", str38, "[7]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[8]" + "'", str39, "[8]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[9]" + "'", str40, "[9]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 1]" + "'", str41, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1]" + "'", str42, "[1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2]" + "'", str43, "[2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3]" + "'", str44, "[3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4]" + "'", str45, "[4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5]" + "'", str46, "[5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[6]" + "'", str47, "[6]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[7]" + "'", str48, "[7]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[8]" + "'", str49, "[8]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[9]" + "'", str50, "[9]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 1]" + "'", str51, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1]" + "'", str52, "[1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[2]" + "'", str53, "[2]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[3]" + "'", str54, "[3]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[4]" + "'", str55, "[4]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5]" + "'", str56, "[5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6]" + "'", str57, "[6]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[7]" + "'", str58, "[7]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[8]" + "'", str59, "[8]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[9]" + "'", str60, "[9]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 1]" + "'", str61, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1]" + "'", str62, "[1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[2]" + "'", str63, "[2]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[3]" + "'", str64, "[3]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[4]" + "'", str65, "[4]");
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test2784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2784");
        int[] intArray4 = new int[] { (byte) 10, 'a', (byte) -1, '#' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass88 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[18, 2, 2, 43]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 98, 0, 35]" + "'", str5, "[10, 98, 0, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 99, 1, 35]" + "'", str6, "[10, 99, 1, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 100, 2, 35]" + "'", str7, "[10, 100, 2, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 101, 3, 35]" + "'", str8, "[10, 101, 3, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 102, 4, 35]" + "'", str9, "[10, 102, 4, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 103, 5, 35]" + "'", str10, "[10, 103, 5, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 104, 6, 35]" + "'", str11, "[10, 104, 6, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 105, 7, 35]" + "'", str12, "[10, 105, 7, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 106, 8, 35]" + "'", str13, "[10, 106, 8, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 107, 9, 35]" + "'", str14, "[10, 107, 9, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[11, 0, 0, 36]" + "'", str15, "[11, 0, 0, 36]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[11, 1, 1, 36]" + "'", str16, "[11, 1, 1, 36]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[11, 2, 2, 36]" + "'", str17, "[11, 2, 2, 36]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[11, 3, 3, 36]" + "'", str18, "[11, 3, 3, 36]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[11, 4, 4, 36]" + "'", str19, "[11, 4, 4, 36]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[11, 5, 5, 36]" + "'", str20, "[11, 5, 5, 36]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[11, 6, 6, 36]" + "'", str21, "[11, 6, 6, 36]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[11, 7, 7, 36]" + "'", str22, "[11, 7, 7, 36]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[11, 8, 8, 36]" + "'", str23, "[11, 8, 8, 36]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[11, 9, 9, 36]" + "'", str24, "[11, 9, 9, 36]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[12, 0, 0, 37]" + "'", str25, "[12, 0, 0, 37]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[12, 1, 1, 37]" + "'", str26, "[12, 1, 1, 37]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[12, 2, 2, 37]" + "'", str27, "[12, 2, 2, 37]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[12, 3, 3, 37]" + "'", str28, "[12, 3, 3, 37]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[12, 4, 4, 37]" + "'", str29, "[12, 4, 4, 37]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[12, 5, 5, 37]" + "'", str30, "[12, 5, 5, 37]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[12, 6, 6, 37]" + "'", str31, "[12, 6, 6, 37]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[12, 7, 7, 37]" + "'", str32, "[12, 7, 7, 37]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[12, 8, 8, 37]" + "'", str33, "[12, 8, 8, 37]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[12, 9, 9, 37]" + "'", str34, "[12, 9, 9, 37]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[13, 0, 0, 38]" + "'", str35, "[13, 0, 0, 38]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[13, 1, 1, 38]" + "'", str36, "[13, 1, 1, 38]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[13, 2, 2, 38]" + "'", str37, "[13, 2, 2, 38]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[13, 3, 3, 38]" + "'", str38, "[13, 3, 3, 38]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[13, 4, 4, 38]" + "'", str39, "[13, 4, 4, 38]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[13, 5, 5, 38]" + "'", str40, "[13, 5, 5, 38]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[13, 6, 6, 38]" + "'", str41, "[13, 6, 6, 38]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[13, 7, 7, 38]" + "'", str42, "[13, 7, 7, 38]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[13, 8, 8, 38]" + "'", str43, "[13, 8, 8, 38]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[13, 9, 9, 38]" + "'", str44, "[13, 9, 9, 38]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[14, 0, 0, 39]" + "'", str45, "[14, 0, 0, 39]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[14, 1, 1, 39]" + "'", str46, "[14, 1, 1, 39]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[14, 2, 2, 39]" + "'", str47, "[14, 2, 2, 39]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[14, 3, 3, 39]" + "'", str48, "[14, 3, 3, 39]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[14, 4, 4, 39]" + "'", str49, "[14, 4, 4, 39]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[14, 5, 5, 39]" + "'", str50, "[14, 5, 5, 39]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[14, 6, 6, 39]" + "'", str51, "[14, 6, 6, 39]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[14, 7, 7, 39]" + "'", str52, "[14, 7, 7, 39]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[14, 8, 8, 39]" + "'", str53, "[14, 8, 8, 39]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[14, 9, 9, 39]" + "'", str54, "[14, 9, 9, 39]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[15, 0, 0, 40]" + "'", str55, "[15, 0, 0, 40]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[15, 1, 1, 40]" + "'", str56, "[15, 1, 1, 40]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[15, 2, 2, 40]" + "'", str57, "[15, 2, 2, 40]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[15, 3, 3, 40]" + "'", str58, "[15, 3, 3, 40]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[15, 4, 4, 40]" + "'", str59, "[15, 4, 4, 40]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[15, 5, 5, 40]" + "'", str60, "[15, 5, 5, 40]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[15, 6, 6, 40]" + "'", str61, "[15, 6, 6, 40]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[15, 7, 7, 40]" + "'", str62, "[15, 7, 7, 40]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[15, 8, 8, 40]" + "'", str63, "[15, 8, 8, 40]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[15, 9, 9, 40]" + "'", str64, "[15, 9, 9, 40]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[16, 0, 0, 41]" + "'", str65, "[16, 0, 0, 41]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[16, 1, 1, 41]" + "'", str66, "[16, 1, 1, 41]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[16, 2, 2, 41]" + "'", str67, "[16, 2, 2, 41]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[16, 3, 3, 41]" + "'", str68, "[16, 3, 3, 41]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[16, 4, 4, 41]" + "'", str69, "[16, 4, 4, 41]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[16, 5, 5, 41]" + "'", str70, "[16, 5, 5, 41]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[16, 6, 6, 41]" + "'", str71, "[16, 6, 6, 41]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[16, 7, 7, 41]" + "'", str72, "[16, 7, 7, 41]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[16, 8, 8, 41]" + "'", str73, "[16, 8, 8, 41]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[16, 9, 9, 41]" + "'", str74, "[16, 9, 9, 41]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[17, 0, 0, 42]" + "'", str75, "[17, 0, 0, 42]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[17, 1, 1, 42]" + "'", str76, "[17, 1, 1, 42]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[17, 2, 2, 42]" + "'", str77, "[17, 2, 2, 42]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[17, 3, 3, 42]" + "'", str78, "[17, 3, 3, 42]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[17, 4, 4, 42]" + "'", str79, "[17, 4, 4, 42]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[17, 5, 5, 42]" + "'", str80, "[17, 5, 5, 42]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[17, 6, 6, 42]" + "'", str81, "[17, 6, 6, 42]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[17, 7, 7, 42]" + "'", str82, "[17, 7, 7, 42]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[17, 8, 8, 42]" + "'", str83, "[17, 8, 8, 42]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[17, 9, 9, 42]" + "'", str84, "[17, 9, 9, 42]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[18, 0, 0, 43]" + "'", str85, "[18, 0, 0, 43]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[18, 1, 1, 43]" + "'", str86, "[18, 1, 1, 43]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[18, 2, 2, 43]" + "'", str87, "[18, 2, 2, 43]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2785");
        int[] intArray4 = new int[] { '#', ' ', (byte) -1, (short) 1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass56 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[40, 0, 0, 6]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 33, 0, 1]" + "'", str5, "[35, 33, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 34, 1, 1]" + "'", str6, "[35, 34, 1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 35, 2, 1]" + "'", str7, "[35, 35, 2, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 36, 3, 1]" + "'", str8, "[35, 36, 3, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 37, 4, 1]" + "'", str9, "[35, 37, 4, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 38, 5, 1]" + "'", str10, "[35, 38, 5, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 39, 6, 1]" + "'", str11, "[35, 39, 6, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 40, 7, 1]" + "'", str12, "[35, 40, 7, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 41, 8, 1]" + "'", str13, "[35, 41, 8, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 42, 9, 1]" + "'", str14, "[35, 42, 9, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[36, 0, 0, 2]" + "'", str15, "[36, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[36, 1, 1, 2]" + "'", str16, "[36, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[36, 2, 2, 2]" + "'", str17, "[36, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[36, 3, 3, 2]" + "'", str18, "[36, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[36, 4, 4, 2]" + "'", str19, "[36, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[36, 5, 5, 2]" + "'", str20, "[36, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[36, 6, 6, 2]" + "'", str21, "[36, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[36, 7, 7, 2]" + "'", str22, "[36, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[36, 8, 8, 2]" + "'", str23, "[36, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[36, 9, 9, 2]" + "'", str24, "[36, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[37, 0, 0, 3]" + "'", str25, "[37, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[37, 1, 1, 3]" + "'", str26, "[37, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[37, 2, 2, 3]" + "'", str27, "[37, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[37, 3, 3, 3]" + "'", str28, "[37, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[37, 4, 4, 3]" + "'", str29, "[37, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[37, 5, 5, 3]" + "'", str30, "[37, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[37, 6, 6, 3]" + "'", str31, "[37, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[37, 7, 7, 3]" + "'", str32, "[37, 7, 7, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[37, 8, 8, 3]" + "'", str33, "[37, 8, 8, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[37, 9, 9, 3]" + "'", str34, "[37, 9, 9, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[38, 0, 0, 4]" + "'", str35, "[38, 0, 0, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[38, 1, 1, 4]" + "'", str36, "[38, 1, 1, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[38, 2, 2, 4]" + "'", str37, "[38, 2, 2, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[38, 3, 3, 4]" + "'", str38, "[38, 3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[38, 4, 4, 4]" + "'", str39, "[38, 4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[38, 5, 5, 4]" + "'", str40, "[38, 5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[38, 6, 6, 4]" + "'", str41, "[38, 6, 6, 4]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[38, 7, 7, 4]" + "'", str42, "[38, 7, 7, 4]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[38, 8, 8, 4]" + "'", str43, "[38, 8, 8, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[38, 9, 9, 4]" + "'", str44, "[38, 9, 9, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[39, 0, 0, 5]" + "'", str45, "[39, 0, 0, 5]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[39, 1, 1, 5]" + "'", str46, "[39, 1, 1, 5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[39, 2, 2, 5]" + "'", str47, "[39, 2, 2, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[39, 3, 3, 5]" + "'", str48, "[39, 3, 3, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[39, 4, 4, 5]" + "'", str49, "[39, 4, 4, 5]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[39, 5, 5, 5]" + "'", str50, "[39, 5, 5, 5]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[39, 6, 6, 5]" + "'", str51, "[39, 6, 6, 5]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[39, 7, 7, 5]" + "'", str52, "[39, 7, 7, 5]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[39, 8, 8, 5]" + "'", str53, "[39, 8, 8, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[39, 9, 9, 5]" + "'", str54, "[39, 9, 9, 5]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[40, 0, 0, 6]" + "'", str55, "[40, 0, 0, 6]");
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test2786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2786");
        int[] intArray4 = new int[] { '#', ' ', (byte) -1, (short) 1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass58 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[40, 2, 2, 6]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 33, 0, 1]" + "'", str5, "[35, 33, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 34, 1, 1]" + "'", str6, "[35, 34, 1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 35, 2, 1]" + "'", str7, "[35, 35, 2, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 36, 3, 1]" + "'", str8, "[35, 36, 3, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 37, 4, 1]" + "'", str9, "[35, 37, 4, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 38, 5, 1]" + "'", str10, "[35, 38, 5, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 39, 6, 1]" + "'", str11, "[35, 39, 6, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 40, 7, 1]" + "'", str12, "[35, 40, 7, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 41, 8, 1]" + "'", str13, "[35, 41, 8, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 42, 9, 1]" + "'", str14, "[35, 42, 9, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[36, 0, 0, 2]" + "'", str15, "[36, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[36, 1, 1, 2]" + "'", str16, "[36, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[36, 2, 2, 2]" + "'", str17, "[36, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[36, 3, 3, 2]" + "'", str18, "[36, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[36, 4, 4, 2]" + "'", str19, "[36, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[36, 5, 5, 2]" + "'", str20, "[36, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[36, 6, 6, 2]" + "'", str21, "[36, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[36, 7, 7, 2]" + "'", str22, "[36, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[36, 8, 8, 2]" + "'", str23, "[36, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[36, 9, 9, 2]" + "'", str24, "[36, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[37, 0, 0, 3]" + "'", str25, "[37, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[37, 1, 1, 3]" + "'", str26, "[37, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[37, 2, 2, 3]" + "'", str27, "[37, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[37, 3, 3, 3]" + "'", str28, "[37, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[37, 4, 4, 3]" + "'", str29, "[37, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[37, 5, 5, 3]" + "'", str30, "[37, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[37, 6, 6, 3]" + "'", str31, "[37, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[37, 7, 7, 3]" + "'", str32, "[37, 7, 7, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[37, 8, 8, 3]" + "'", str33, "[37, 8, 8, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[37, 9, 9, 3]" + "'", str34, "[37, 9, 9, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[38, 0, 0, 4]" + "'", str35, "[38, 0, 0, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[38, 1, 1, 4]" + "'", str36, "[38, 1, 1, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[38, 2, 2, 4]" + "'", str37, "[38, 2, 2, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[38, 3, 3, 4]" + "'", str38, "[38, 3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[38, 4, 4, 4]" + "'", str39, "[38, 4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[38, 5, 5, 4]" + "'", str40, "[38, 5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[38, 6, 6, 4]" + "'", str41, "[38, 6, 6, 4]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[38, 7, 7, 4]" + "'", str42, "[38, 7, 7, 4]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[38, 8, 8, 4]" + "'", str43, "[38, 8, 8, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[38, 9, 9, 4]" + "'", str44, "[38, 9, 9, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[39, 0, 0, 5]" + "'", str45, "[39, 0, 0, 5]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[39, 1, 1, 5]" + "'", str46, "[39, 1, 1, 5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[39, 2, 2, 5]" + "'", str47, "[39, 2, 2, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[39, 3, 3, 5]" + "'", str48, "[39, 3, 3, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[39, 4, 4, 5]" + "'", str49, "[39, 4, 4, 5]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[39, 5, 5, 5]" + "'", str50, "[39, 5, 5, 5]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[39, 6, 6, 5]" + "'", str51, "[39, 6, 6, 5]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[39, 7, 7, 5]" + "'", str52, "[39, 7, 7, 5]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[39, 8, 8, 5]" + "'", str53, "[39, 8, 8, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[39, 9, 9, 5]" + "'", str54, "[39, 9, 9, 5]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[40, 0, 0, 6]" + "'", str55, "[40, 0, 0, 6]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[40, 1, 1, 6]" + "'", str56, "[40, 1, 1, 6]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[40, 2, 2, 6]" + "'", str57, "[40, 2, 2, 6]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test2787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2787");
        int[] intArray4 = new int[] { '#', ' ', (byte) -1, (short) 1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass57 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[40, 1, 1, 6]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 33, 0, 1]" + "'", str5, "[35, 33, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 34, 1, 1]" + "'", str6, "[35, 34, 1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 35, 2, 1]" + "'", str7, "[35, 35, 2, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 36, 3, 1]" + "'", str8, "[35, 36, 3, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 37, 4, 1]" + "'", str9, "[35, 37, 4, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 38, 5, 1]" + "'", str10, "[35, 38, 5, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 39, 6, 1]" + "'", str11, "[35, 39, 6, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 40, 7, 1]" + "'", str12, "[35, 40, 7, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 41, 8, 1]" + "'", str13, "[35, 41, 8, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 42, 9, 1]" + "'", str14, "[35, 42, 9, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[36, 0, 0, 2]" + "'", str15, "[36, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[36, 1, 1, 2]" + "'", str16, "[36, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[36, 2, 2, 2]" + "'", str17, "[36, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[36, 3, 3, 2]" + "'", str18, "[36, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[36, 4, 4, 2]" + "'", str19, "[36, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[36, 5, 5, 2]" + "'", str20, "[36, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[36, 6, 6, 2]" + "'", str21, "[36, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[36, 7, 7, 2]" + "'", str22, "[36, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[36, 8, 8, 2]" + "'", str23, "[36, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[36, 9, 9, 2]" + "'", str24, "[36, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[37, 0, 0, 3]" + "'", str25, "[37, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[37, 1, 1, 3]" + "'", str26, "[37, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[37, 2, 2, 3]" + "'", str27, "[37, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[37, 3, 3, 3]" + "'", str28, "[37, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[37, 4, 4, 3]" + "'", str29, "[37, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[37, 5, 5, 3]" + "'", str30, "[37, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[37, 6, 6, 3]" + "'", str31, "[37, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[37, 7, 7, 3]" + "'", str32, "[37, 7, 7, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[37, 8, 8, 3]" + "'", str33, "[37, 8, 8, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[37, 9, 9, 3]" + "'", str34, "[37, 9, 9, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[38, 0, 0, 4]" + "'", str35, "[38, 0, 0, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[38, 1, 1, 4]" + "'", str36, "[38, 1, 1, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[38, 2, 2, 4]" + "'", str37, "[38, 2, 2, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[38, 3, 3, 4]" + "'", str38, "[38, 3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[38, 4, 4, 4]" + "'", str39, "[38, 4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[38, 5, 5, 4]" + "'", str40, "[38, 5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[38, 6, 6, 4]" + "'", str41, "[38, 6, 6, 4]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[38, 7, 7, 4]" + "'", str42, "[38, 7, 7, 4]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[38, 8, 8, 4]" + "'", str43, "[38, 8, 8, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[38, 9, 9, 4]" + "'", str44, "[38, 9, 9, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[39, 0, 0, 5]" + "'", str45, "[39, 0, 0, 5]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[39, 1, 1, 5]" + "'", str46, "[39, 1, 1, 5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[39, 2, 2, 5]" + "'", str47, "[39, 2, 2, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[39, 3, 3, 5]" + "'", str48, "[39, 3, 3, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[39, 4, 4, 5]" + "'", str49, "[39, 4, 4, 5]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[39, 5, 5, 5]" + "'", str50, "[39, 5, 5, 5]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[39, 6, 6, 5]" + "'", str51, "[39, 6, 6, 5]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[39, 7, 7, 5]" + "'", str52, "[39, 7, 7, 5]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[39, 8, 8, 5]" + "'", str53, "[39, 8, 8, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[39, 9, 9, 5]" + "'", str54, "[39, 9, 9, 5]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[40, 0, 0, 6]" + "'", str55, "[40, 0, 0, 6]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[40, 1, 1, 6]" + "'", str56, "[40, 1, 1, 6]");
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test2788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2788");
        int[] intArray5 = new int[] { 1, (byte) 0, (short) 100, 0, (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass35 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 129, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 0, 1]" + "'", str6, "[1, 0, 101, 0, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 0, 1]" + "'", str7, "[1, 0, 102, 0, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 0, 1]" + "'", str8, "[1, 0, 103, 0, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 0, 1]" + "'", str9, "[1, 0, 104, 0, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 0, 1]" + "'", str10, "[1, 0, 105, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 0, 1]" + "'", str11, "[1, 0, 106, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 0, 1]" + "'", str12, "[1, 0, 107, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 108, 0, 1]" + "'", str13, "[1, 0, 108, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 109, 0, 1]" + "'", str14, "[1, 0, 109, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 110, 0, 1]" + "'", str15, "[1, 0, 110, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 111, 0, 1]" + "'", str16, "[1, 0, 111, 0, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 0, 112, 0, 1]" + "'", str17, "[1, 0, 112, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 0, 113, 0, 1]" + "'", str18, "[1, 0, 113, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 0, 114, 0, 1]" + "'", str19, "[1, 0, 114, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 0, 115, 0, 1]" + "'", str20, "[1, 0, 115, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 116, 0, 1]" + "'", str21, "[1, 0, 116, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 117, 0, 1]" + "'", str22, "[1, 0, 117, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 118, 0, 1]" + "'", str23, "[1, 0, 118, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 119, 0, 1]" + "'", str24, "[1, 0, 119, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 0, 120, 0, 1]" + "'", str25, "[1, 0, 120, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 0, 121, 0, 1]" + "'", str26, "[1, 0, 121, 0, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 0, 122, 0, 1]" + "'", str27, "[1, 0, 122, 0, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 0, 123, 0, 1]" + "'", str28, "[1, 0, 123, 0, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 0, 124, 0, 1]" + "'", str29, "[1, 0, 124, 0, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 0, 125, 0, 1]" + "'", str30, "[1, 0, 125, 0, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 126, 0, 1]" + "'", str31, "[1, 0, 126, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 127, 0, 1]" + "'", str32, "[1, 0, 127, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 0, 128, 0, 1]" + "'", str33, "[1, 0, 128, 0, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 0, 129, 0, 1]" + "'", str34, "[1, 0, 129, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test2789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2789");
        int[] intArray4 = new int[] { (byte) 0, (short) 10, (short) -1, 'a' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass73 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[6, 7, 7, 103]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 11, 0, 97]" + "'", str5, "[0, 11, 0, 97]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 12, 1, 97]" + "'", str6, "[0, 12, 1, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 13, 2, 97]" + "'", str7, "[0, 13, 2, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 14, 3, 97]" + "'", str8, "[0, 14, 3, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 15, 4, 97]" + "'", str9, "[0, 15, 4, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 16, 5, 97]" + "'", str10, "[0, 16, 5, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 17, 6, 97]" + "'", str11, "[0, 17, 6, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 18, 7, 97]" + "'", str12, "[0, 18, 7, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 19, 8, 97]" + "'", str13, "[0, 19, 8, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 20, 9, 97]" + "'", str14, "[0, 20, 9, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 0, 98]" + "'", str15, "[1, 0, 0, 98]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 1, 1, 98]" + "'", str16, "[1, 1, 1, 98]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 2, 98]" + "'", str17, "[1, 2, 2, 98]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 3, 3, 98]" + "'", str18, "[1, 3, 3, 98]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 4, 4, 98]" + "'", str19, "[1, 4, 4, 98]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 5, 5, 98]" + "'", str20, "[1, 5, 5, 98]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 6, 6, 98]" + "'", str21, "[1, 6, 6, 98]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 7, 7, 98]" + "'", str22, "[1, 7, 7, 98]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 8, 8, 98]" + "'", str23, "[1, 8, 8, 98]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 9, 9, 98]" + "'", str24, "[1, 9, 9, 98]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 0, 0, 99]" + "'", str25, "[2, 0, 0, 99]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[2, 1, 1, 99]" + "'", str26, "[2, 1, 1, 99]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[2, 2, 2, 99]" + "'", str27, "[2, 2, 2, 99]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[2, 3, 3, 99]" + "'", str28, "[2, 3, 3, 99]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[2, 4, 4, 99]" + "'", str29, "[2, 4, 4, 99]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[2, 5, 5, 99]" + "'", str30, "[2, 5, 5, 99]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[2, 6, 6, 99]" + "'", str31, "[2, 6, 6, 99]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2, 7, 7, 99]" + "'", str32, "[2, 7, 7, 99]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 8, 8, 99]" + "'", str33, "[2, 8, 8, 99]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 9, 9, 99]" + "'", str34, "[2, 9, 9, 99]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3, 0, 0, 100]" + "'", str35, "[3, 0, 0, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 1, 1, 100]" + "'", str36, "[3, 1, 1, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[3, 2, 2, 100]" + "'", str37, "[3, 2, 2, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[3, 3, 3, 100]" + "'", str38, "[3, 3, 3, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[3, 4, 4, 100]" + "'", str39, "[3, 4, 4, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[3, 5, 5, 100]" + "'", str40, "[3, 5, 5, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[3, 6, 6, 100]" + "'", str41, "[3, 6, 6, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[3, 7, 7, 100]" + "'", str42, "[3, 7, 7, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[3, 8, 8, 100]" + "'", str43, "[3, 8, 8, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 9, 9, 100]" + "'", str44, "[3, 9, 9, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4, 0, 0, 101]" + "'", str45, "[4, 0, 0, 101]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4, 1, 1, 101]" + "'", str46, "[4, 1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 2, 2, 101]" + "'", str47, "[4, 2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[4, 3, 3, 101]" + "'", str48, "[4, 3, 3, 101]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[4, 4, 4, 101]" + "'", str49, "[4, 4, 4, 101]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[4, 5, 5, 101]" + "'", str50, "[4, 5, 5, 101]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[4, 6, 6, 101]" + "'", str51, "[4, 6, 6, 101]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[4, 7, 7, 101]" + "'", str52, "[4, 7, 7, 101]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[4, 8, 8, 101]" + "'", str53, "[4, 8, 8, 101]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[4, 9, 9, 101]" + "'", str54, "[4, 9, 9, 101]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[5, 0, 0, 102]" + "'", str55, "[5, 0, 0, 102]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5, 1, 1, 102]" + "'", str56, "[5, 1, 1, 102]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5, 2, 2, 102]" + "'", str57, "[5, 2, 2, 102]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 3, 3, 102]" + "'", str58, "[5, 3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[5, 4, 4, 102]" + "'", str59, "[5, 4, 4, 102]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[5, 5, 5, 102]" + "'", str60, "[5, 5, 5, 102]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[5, 6, 6, 102]" + "'", str61, "[5, 6, 6, 102]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[5, 7, 7, 102]" + "'", str62, "[5, 7, 7, 102]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[5, 8, 8, 102]" + "'", str63, "[5, 8, 8, 102]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[5, 9, 9, 102]" + "'", str64, "[5, 9, 9, 102]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[6, 0, 0, 103]" + "'", str65, "[6, 0, 0, 103]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[6, 1, 1, 103]" + "'", str66, "[6, 1, 1, 103]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[6, 2, 2, 103]" + "'", str67, "[6, 2, 2, 103]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[6, 3, 3, 103]" + "'", str68, "[6, 3, 3, 103]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[6, 4, 4, 103]" + "'", str69, "[6, 4, 4, 103]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[6, 5, 5, 103]" + "'", str70, "[6, 5, 5, 103]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[6, 6, 6, 103]" + "'", str71, "[6, 6, 6, 103]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[6, 7, 7, 103]" + "'", str72, "[6, 7, 7, 103]");
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test2790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2790");
        int[] intArray5 = new int[] { ' ', (byte) 0, 1, ' ', (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass29 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[32, 2, 4, 34, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 0, 2, 32, 1]" + "'", str6, "[32, 0, 2, 32, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 0, 3, 32, 1]" + "'", str7, "[32, 0, 3, 32, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 0, 4, 32, 1]" + "'", str8, "[32, 0, 4, 32, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 0, 5, 32, 1]" + "'", str9, "[32, 0, 5, 32, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 0, 6, 32, 1]" + "'", str10, "[32, 0, 6, 32, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 0, 7, 32, 1]" + "'", str11, "[32, 0, 7, 32, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 0, 8, 32, 1]" + "'", str12, "[32, 0, 8, 32, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 0, 9, 32, 1]" + "'", str13, "[32, 0, 9, 32, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 1, 0, 33, 1]" + "'", str14, "[32, 1, 0, 33, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[32, 1, 1, 33, 1]" + "'", str15, "[32, 1, 1, 33, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[32, 1, 2, 33, 1]" + "'", str16, "[32, 1, 2, 33, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[32, 1, 3, 33, 1]" + "'", str17, "[32, 1, 3, 33, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[32, 1, 4, 33, 1]" + "'", str18, "[32, 1, 4, 33, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[32, 1, 5, 33, 1]" + "'", str19, "[32, 1, 5, 33, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[32, 1, 6, 33, 1]" + "'", str20, "[32, 1, 6, 33, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[32, 1, 7, 33, 1]" + "'", str21, "[32, 1, 7, 33, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[32, 1, 8, 33, 1]" + "'", str22, "[32, 1, 8, 33, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32, 1, 9, 33, 1]" + "'", str23, "[32, 1, 9, 33, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 2, 0, 34, 1]" + "'", str24, "[32, 2, 0, 34, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[32, 2, 1, 34, 1]" + "'", str25, "[32, 2, 1, 34, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[32, 2, 2, 34, 1]" + "'", str26, "[32, 2, 2, 34, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[32, 2, 3, 34, 1]" + "'", str27, "[32, 2, 3, 34, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[32, 2, 4, 34, 1]" + "'", str28, "[32, 2, 4, 34, 1]");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test2791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2791");
        int[] intArray2 = new int[] { (byte) 1, (-1) };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass71 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[7, 7]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 0]" + "'", str3, "[2, 0]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 1]" + "'", str4, "[3, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 2]" + "'", str5, "[4, 2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 3]" + "'", str6, "[5, 3]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 4]" + "'", str7, "[6, 4]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 5]" + "'", str8, "[7, 5]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 6]" + "'", str9, "[8, 6]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 7]" + "'", str10, "[9, 7]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 8]" + "'", str11, "[10, 8]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 9]" + "'", str12, "[11, 9]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 1]" + "'", str13, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1]" + "'", str14, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2]" + "'", str15, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[3, 3]" + "'", str16, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[4, 4]" + "'", str17, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[5, 5]" + "'", str18, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[6, 6]" + "'", str19, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[7, 7]" + "'", str20, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[8, 8]" + "'", str21, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[9, 9]" + "'", str22, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 1]" + "'", str23, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1]" + "'", str24, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 2]" + "'", str25, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3]" + "'", str26, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[4, 4]" + "'", str27, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[5, 5]" + "'", str28, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[6, 6]" + "'", str29, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[7, 7]" + "'", str30, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[8, 8]" + "'", str31, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[9, 9]" + "'", str32, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 0, 1]" + "'", str33, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1]" + "'", str34, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 2]" + "'", str35, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 3]" + "'", str36, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4]" + "'", str37, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[5, 5]" + "'", str38, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[6, 6]" + "'", str39, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[7, 7]" + "'", str40, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[8, 8]" + "'", str41, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[9, 9]" + "'", str42, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 0, 1]" + "'", str43, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1]" + "'", str44, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[2, 2]" + "'", str45, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 3]" + "'", str46, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 4]" + "'", str47, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5]" + "'", str48, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[6, 6]" + "'", str49, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[7, 7]" + "'", str50, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[8, 8]" + "'", str51, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[9, 9]" + "'", str52, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 0, 1]" + "'", str53, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 1]" + "'", str54, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[2, 2]" + "'", str55, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[3, 3]" + "'", str56, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[4, 4]" + "'", str57, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 5]" + "'", str58, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 6]" + "'", str59, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[7, 7]" + "'", str60, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[8, 8]" + "'", str61, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[9, 9]" + "'", str62, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 0, 1]" + "'", str63, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 1]" + "'", str64, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[2, 2]" + "'", str65, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[3, 3]" + "'", str66, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[4, 4]" + "'", str67, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[5, 5]" + "'", str68, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[6, 6]" + "'", str69, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[7, 7]" + "'", str70, "[7, 7]");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test2792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2792");
        int[] intArray4 = new int[] { '#', ' ', (byte) -1, (short) 1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[40, 4, 4, 6]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 33, 0, 1]" + "'", str5, "[35, 33, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 34, 1, 1]" + "'", str6, "[35, 34, 1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 35, 2, 1]" + "'", str7, "[35, 35, 2, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 36, 3, 1]" + "'", str8, "[35, 36, 3, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 37, 4, 1]" + "'", str9, "[35, 37, 4, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 38, 5, 1]" + "'", str10, "[35, 38, 5, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 39, 6, 1]" + "'", str11, "[35, 39, 6, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 40, 7, 1]" + "'", str12, "[35, 40, 7, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 41, 8, 1]" + "'", str13, "[35, 41, 8, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 42, 9, 1]" + "'", str14, "[35, 42, 9, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[36, 0, 0, 2]" + "'", str15, "[36, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[36, 1, 1, 2]" + "'", str16, "[36, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[36, 2, 2, 2]" + "'", str17, "[36, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[36, 3, 3, 2]" + "'", str18, "[36, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[36, 4, 4, 2]" + "'", str19, "[36, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[36, 5, 5, 2]" + "'", str20, "[36, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[36, 6, 6, 2]" + "'", str21, "[36, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[36, 7, 7, 2]" + "'", str22, "[36, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[36, 8, 8, 2]" + "'", str23, "[36, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[36, 9, 9, 2]" + "'", str24, "[36, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[37, 0, 0, 3]" + "'", str25, "[37, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[37, 1, 1, 3]" + "'", str26, "[37, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[37, 2, 2, 3]" + "'", str27, "[37, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[37, 3, 3, 3]" + "'", str28, "[37, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[37, 4, 4, 3]" + "'", str29, "[37, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[37, 5, 5, 3]" + "'", str30, "[37, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[37, 6, 6, 3]" + "'", str31, "[37, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[37, 7, 7, 3]" + "'", str32, "[37, 7, 7, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[37, 8, 8, 3]" + "'", str33, "[37, 8, 8, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[37, 9, 9, 3]" + "'", str34, "[37, 9, 9, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[38, 0, 0, 4]" + "'", str35, "[38, 0, 0, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[38, 1, 1, 4]" + "'", str36, "[38, 1, 1, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[38, 2, 2, 4]" + "'", str37, "[38, 2, 2, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[38, 3, 3, 4]" + "'", str38, "[38, 3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[38, 4, 4, 4]" + "'", str39, "[38, 4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[38, 5, 5, 4]" + "'", str40, "[38, 5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[38, 6, 6, 4]" + "'", str41, "[38, 6, 6, 4]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[38, 7, 7, 4]" + "'", str42, "[38, 7, 7, 4]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[38, 8, 8, 4]" + "'", str43, "[38, 8, 8, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[38, 9, 9, 4]" + "'", str44, "[38, 9, 9, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[39, 0, 0, 5]" + "'", str45, "[39, 0, 0, 5]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[39, 1, 1, 5]" + "'", str46, "[39, 1, 1, 5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[39, 2, 2, 5]" + "'", str47, "[39, 2, 2, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[39, 3, 3, 5]" + "'", str48, "[39, 3, 3, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[39, 4, 4, 5]" + "'", str49, "[39, 4, 4, 5]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[39, 5, 5, 5]" + "'", str50, "[39, 5, 5, 5]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[39, 6, 6, 5]" + "'", str51, "[39, 6, 6, 5]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[39, 7, 7, 5]" + "'", str52, "[39, 7, 7, 5]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[39, 8, 8, 5]" + "'", str53, "[39, 8, 8, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[39, 9, 9, 5]" + "'", str54, "[39, 9, 9, 5]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[40, 0, 0, 6]" + "'", str55, "[40, 0, 0, 6]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[40, 1, 1, 6]" + "'", str56, "[40, 1, 1, 6]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[40, 2, 2, 6]" + "'", str57, "[40, 2, 2, 6]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[40, 3, 3, 6]" + "'", str58, "[40, 3, 3, 6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[40, 4, 4, 6]" + "'", str59, "[40, 4, 4, 6]");
    }

    @Test
    public void test2793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2793");
        int[] intArray3 = new int[] { 1, 0, (short) 0 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass33 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[3, 9, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1, 0]" + "'", str4, "[1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 2, 0]" + "'", str5, "[1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 3, 0]" + "'", str6, "[1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 4, 0]" + "'", str7, "[1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 5, 0]" + "'", str8, "[1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 6, 0]" + "'", str9, "[1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 7, 0]" + "'", str10, "[1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 8, 0]" + "'", str11, "[1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 9, 0]" + "'", str12, "[1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 0, 1]" + "'", str13, "[2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 1, 1]" + "'", str14, "[2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2, 1]" + "'", str15, "[2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 3, 1]" + "'", str16, "[2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 4, 1]" + "'", str17, "[2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 5, 1]" + "'", str18, "[2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 6, 1]" + "'", str19, "[2, 6, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 7, 1]" + "'", str20, "[2, 7, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 8, 1]" + "'", str21, "[2, 8, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 9, 1]" + "'", str22, "[2, 9, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3, 0, 2]" + "'", str23, "[3, 0, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 1, 2]" + "'", str24, "[3, 1, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 2, 2]" + "'", str25, "[3, 2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3, 2]" + "'", str26, "[3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 4, 2]" + "'", str27, "[3, 4, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 5, 2]" + "'", str28, "[3, 5, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[3, 6, 2]" + "'", str29, "[3, 6, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[3, 7, 2]" + "'", str30, "[3, 7, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[3, 8, 2]" + "'", str31, "[3, 8, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[3, 9, 2]" + "'", str32, "[3, 9, 2]");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test2794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2794");
        int[] intArray4 = new int[] { '#', ' ', (byte) -1, (short) 1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass59 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[40, 3, 3, 6]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 33, 0, 1]" + "'", str5, "[35, 33, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 34, 1, 1]" + "'", str6, "[35, 34, 1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 35, 2, 1]" + "'", str7, "[35, 35, 2, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 36, 3, 1]" + "'", str8, "[35, 36, 3, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 37, 4, 1]" + "'", str9, "[35, 37, 4, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 38, 5, 1]" + "'", str10, "[35, 38, 5, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 39, 6, 1]" + "'", str11, "[35, 39, 6, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 40, 7, 1]" + "'", str12, "[35, 40, 7, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 41, 8, 1]" + "'", str13, "[35, 41, 8, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 42, 9, 1]" + "'", str14, "[35, 42, 9, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[36, 0, 0, 2]" + "'", str15, "[36, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[36, 1, 1, 2]" + "'", str16, "[36, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[36, 2, 2, 2]" + "'", str17, "[36, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[36, 3, 3, 2]" + "'", str18, "[36, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[36, 4, 4, 2]" + "'", str19, "[36, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[36, 5, 5, 2]" + "'", str20, "[36, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[36, 6, 6, 2]" + "'", str21, "[36, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[36, 7, 7, 2]" + "'", str22, "[36, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[36, 8, 8, 2]" + "'", str23, "[36, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[36, 9, 9, 2]" + "'", str24, "[36, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[37, 0, 0, 3]" + "'", str25, "[37, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[37, 1, 1, 3]" + "'", str26, "[37, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[37, 2, 2, 3]" + "'", str27, "[37, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[37, 3, 3, 3]" + "'", str28, "[37, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[37, 4, 4, 3]" + "'", str29, "[37, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[37, 5, 5, 3]" + "'", str30, "[37, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[37, 6, 6, 3]" + "'", str31, "[37, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[37, 7, 7, 3]" + "'", str32, "[37, 7, 7, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[37, 8, 8, 3]" + "'", str33, "[37, 8, 8, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[37, 9, 9, 3]" + "'", str34, "[37, 9, 9, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[38, 0, 0, 4]" + "'", str35, "[38, 0, 0, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[38, 1, 1, 4]" + "'", str36, "[38, 1, 1, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[38, 2, 2, 4]" + "'", str37, "[38, 2, 2, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[38, 3, 3, 4]" + "'", str38, "[38, 3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[38, 4, 4, 4]" + "'", str39, "[38, 4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[38, 5, 5, 4]" + "'", str40, "[38, 5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[38, 6, 6, 4]" + "'", str41, "[38, 6, 6, 4]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[38, 7, 7, 4]" + "'", str42, "[38, 7, 7, 4]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[38, 8, 8, 4]" + "'", str43, "[38, 8, 8, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[38, 9, 9, 4]" + "'", str44, "[38, 9, 9, 4]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[39, 0, 0, 5]" + "'", str45, "[39, 0, 0, 5]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[39, 1, 1, 5]" + "'", str46, "[39, 1, 1, 5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[39, 2, 2, 5]" + "'", str47, "[39, 2, 2, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[39, 3, 3, 5]" + "'", str48, "[39, 3, 3, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[39, 4, 4, 5]" + "'", str49, "[39, 4, 4, 5]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[39, 5, 5, 5]" + "'", str50, "[39, 5, 5, 5]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[39, 6, 6, 5]" + "'", str51, "[39, 6, 6, 5]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[39, 7, 7, 5]" + "'", str52, "[39, 7, 7, 5]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[39, 8, 8, 5]" + "'", str53, "[39, 8, 8, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[39, 9, 9, 5]" + "'", str54, "[39, 9, 9, 5]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[40, 0, 0, 6]" + "'", str55, "[40, 0, 0, 6]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[40, 1, 1, 6]" + "'", str56, "[40, 1, 1, 6]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[40, 2, 2, 6]" + "'", str57, "[40, 2, 2, 6]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[40, 3, 3, 6]" + "'", str58, "[40, 3, 3, 6]");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test2795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2795");
        int[] intArray3 = new int[] { '#', (byte) 100, 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass83 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[35, 179, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[35, 101, 1]" + "'", str4, "[35, 101, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 102, 1]" + "'", str5, "[35, 102, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 103, 1]" + "'", str6, "[35, 103, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 104, 1]" + "'", str7, "[35, 104, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 105, 1]" + "'", str8, "[35, 105, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 106, 1]" + "'", str9, "[35, 106, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 107, 1]" + "'", str10, "[35, 107, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 108, 1]" + "'", str11, "[35, 108, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 109, 1]" + "'", str12, "[35, 109, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 110, 1]" + "'", str13, "[35, 110, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 111, 1]" + "'", str14, "[35, 111, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[35, 112, 1]" + "'", str15, "[35, 112, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[35, 113, 1]" + "'", str16, "[35, 113, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[35, 114, 1]" + "'", str17, "[35, 114, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[35, 115, 1]" + "'", str18, "[35, 115, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[35, 116, 1]" + "'", str19, "[35, 116, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[35, 117, 1]" + "'", str20, "[35, 117, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[35, 118, 1]" + "'", str21, "[35, 118, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[35, 119, 1]" + "'", str22, "[35, 119, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[35, 120, 1]" + "'", str23, "[35, 120, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[35, 121, 1]" + "'", str24, "[35, 121, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[35, 122, 1]" + "'", str25, "[35, 122, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35, 123, 1]" + "'", str26, "[35, 123, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 124, 1]" + "'", str27, "[35, 124, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[35, 125, 1]" + "'", str28, "[35, 125, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[35, 126, 1]" + "'", str29, "[35, 126, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[35, 127, 1]" + "'", str30, "[35, 127, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[35, 128, 1]" + "'", str31, "[35, 128, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 129, 1]" + "'", str32, "[35, 129, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 130, 1]" + "'", str33, "[35, 130, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 131, 1]" + "'", str34, "[35, 131, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 132, 1]" + "'", str35, "[35, 132, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 133, 1]" + "'", str36, "[35, 133, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 134, 1]" + "'", str37, "[35, 134, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 135, 1]" + "'", str38, "[35, 135, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 136, 1]" + "'", str39, "[35, 136, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 137, 1]" + "'", str40, "[35, 137, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 138, 1]" + "'", str41, "[35, 138, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 139, 1]" + "'", str42, "[35, 139, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 140, 1]" + "'", str43, "[35, 140, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[35, 141, 1]" + "'", str44, "[35, 141, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[35, 142, 1]" + "'", str45, "[35, 142, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[35, 143, 1]" + "'", str46, "[35, 143, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[35, 144, 1]" + "'", str47, "[35, 144, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[35, 145, 1]" + "'", str48, "[35, 145, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[35, 146, 1]" + "'", str49, "[35, 146, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[35, 147, 1]" + "'", str50, "[35, 147, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[35, 148, 1]" + "'", str51, "[35, 148, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[35, 149, 1]" + "'", str52, "[35, 149, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[35, 150, 1]" + "'", str53, "[35, 150, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[35, 151, 1]" + "'", str54, "[35, 151, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[35, 152, 1]" + "'", str55, "[35, 152, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[35, 153, 1]" + "'", str56, "[35, 153, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[35, 154, 1]" + "'", str57, "[35, 154, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[35, 155, 1]" + "'", str58, "[35, 155, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[35, 156, 1]" + "'", str59, "[35, 156, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[35, 157, 1]" + "'", str60, "[35, 157, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[35, 158, 1]" + "'", str61, "[35, 158, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[35, 159, 1]" + "'", str62, "[35, 159, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[35, 160, 1]" + "'", str63, "[35, 160, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[35, 161, 1]" + "'", str64, "[35, 161, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[35, 162, 1]" + "'", str65, "[35, 162, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[35, 163, 1]" + "'", str66, "[35, 163, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[35, 164, 1]" + "'", str67, "[35, 164, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[35, 165, 1]" + "'", str68, "[35, 165, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[35, 166, 1]" + "'", str69, "[35, 166, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[35, 167, 1]" + "'", str70, "[35, 167, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[35, 168, 1]" + "'", str71, "[35, 168, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[35, 169, 1]" + "'", str72, "[35, 169, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[35, 170, 1]" + "'", str73, "[35, 170, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[35, 171, 1]" + "'", str74, "[35, 171, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[35, 172, 1]" + "'", str75, "[35, 172, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[35, 173, 1]" + "'", str76, "[35, 173, 1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[35, 174, 1]" + "'", str77, "[35, 174, 1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[35, 175, 1]" + "'", str78, "[35, 175, 1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[35, 176, 1]" + "'", str79, "[35, 176, 1]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[35, 177, 1]" + "'", str80, "[35, 177, 1]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[35, 178, 1]" + "'", str81, "[35, 178, 1]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[35, 179, 1]" + "'", str82, "[35, 179, 1]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2796");
        int[] intArray1 = new int[] { (-1) };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass67 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[4]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1]" + "'", str32, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1]" + "'", str33, "[1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2]" + "'", str34, "[2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3]" + "'", str35, "[3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4]" + "'", str36, "[4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5]" + "'", str37, "[5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6]" + "'", str38, "[6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7]" + "'", str39, "[7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8]" + "'", str40, "[8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9]" + "'", str41, "[9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1]" + "'", str42, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1]" + "'", str43, "[1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2]" + "'", str44, "[2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3]" + "'", str45, "[3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4]" + "'", str46, "[4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5]" + "'", str47, "[5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6]" + "'", str48, "[6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7]" + "'", str49, "[7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8]" + "'", str50, "[8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9]" + "'", str51, "[9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1]" + "'", str52, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1]" + "'", str53, "[1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2]" + "'", str54, "[2]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[3]" + "'", str55, "[3]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4]" + "'", str56, "[4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5]" + "'", str57, "[5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6]" + "'", str58, "[6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[7]" + "'", str59, "[7]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[8]" + "'", str60, "[8]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[9]" + "'", str61, "[9]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 1]" + "'", str62, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1]" + "'", str63, "[1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[2]" + "'", str64, "[2]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[3]" + "'", str65, "[3]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[4]" + "'", str66, "[4]");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test2797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2797");
        int[] intArray2 = new int[] { (short) 1, 10 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass38 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[36, 45]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 11]" + "'", str3, "[2, 11]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 12]" + "'", str4, "[3, 12]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 13]" + "'", str5, "[4, 13]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 14]" + "'", str6, "[5, 14]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 15]" + "'", str7, "[6, 15]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 16]" + "'", str8, "[7, 16]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 17]" + "'", str9, "[8, 17]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 18]" + "'", str10, "[9, 18]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 19]" + "'", str11, "[10, 19]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 20]" + "'", str12, "[11, 20]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[12, 21]" + "'", str13, "[12, 21]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[13, 22]" + "'", str14, "[13, 22]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[14, 23]" + "'", str15, "[14, 23]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[15, 24]" + "'", str16, "[15, 24]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[16, 25]" + "'", str17, "[16, 25]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[17, 26]" + "'", str18, "[17, 26]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[18, 27]" + "'", str19, "[18, 27]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[19, 28]" + "'", str20, "[19, 28]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[20, 29]" + "'", str21, "[20, 29]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[21, 30]" + "'", str22, "[21, 30]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[22, 31]" + "'", str23, "[22, 31]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[23, 32]" + "'", str24, "[23, 32]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[24, 33]" + "'", str25, "[24, 33]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[25, 34]" + "'", str26, "[25, 34]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[26, 35]" + "'", str27, "[26, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[27, 36]" + "'", str28, "[27, 36]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[28, 37]" + "'", str29, "[28, 37]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[29, 38]" + "'", str30, "[29, 38]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[30, 39]" + "'", str31, "[30, 39]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[31, 40]" + "'", str32, "[31, 40]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[32, 41]" + "'", str33, "[32, 41]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[33, 42]" + "'", str34, "[33, 42]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[34, 43]" + "'", str35, "[34, 43]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 44]" + "'", str36, "[35, 44]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[36, 45]" + "'", str37, "[36, 45]");
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test2798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2798");
        int[] intArray1 = new int[] { 10 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass76 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[84]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[11]" + "'", str2, "[11]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[12]" + "'", str3, "[12]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[13]" + "'", str4, "[13]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[14]" + "'", str5, "[14]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[15]" + "'", str6, "[15]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[16]" + "'", str7, "[16]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[17]" + "'", str8, "[17]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[18]" + "'", str9, "[18]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[19]" + "'", str10, "[19]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[20]" + "'", str11, "[20]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[21]" + "'", str12, "[21]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[22]" + "'", str13, "[22]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[23]" + "'", str14, "[23]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[24]" + "'", str15, "[24]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[25]" + "'", str16, "[25]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[26]" + "'", str17, "[26]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[27]" + "'", str18, "[27]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[28]" + "'", str19, "[28]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[29]" + "'", str20, "[29]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[30]" + "'", str21, "[30]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[31]" + "'", str22, "[31]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32]" + "'", str23, "[32]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[33]" + "'", str24, "[33]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34]" + "'", str25, "[34]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35]" + "'", str26, "[35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[36]" + "'", str27, "[36]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[37]" + "'", str28, "[37]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[38]" + "'", str29, "[38]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[39]" + "'", str30, "[39]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[40]" + "'", str31, "[40]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[41]" + "'", str32, "[41]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[42]" + "'", str33, "[42]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[43]" + "'", str34, "[43]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[44]" + "'", str35, "[44]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[45]" + "'", str36, "[45]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[46]" + "'", str37, "[46]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[47]" + "'", str38, "[47]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[48]" + "'", str39, "[48]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[49]" + "'", str40, "[49]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[50]" + "'", str41, "[50]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[51]" + "'", str42, "[51]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[52]" + "'", str43, "[52]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[53]" + "'", str44, "[53]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[54]" + "'", str45, "[54]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[55]" + "'", str46, "[55]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[56]" + "'", str47, "[56]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[57]" + "'", str48, "[57]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[58]" + "'", str49, "[58]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[59]" + "'", str50, "[59]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[60]" + "'", str51, "[60]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[61]" + "'", str52, "[61]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[62]" + "'", str53, "[62]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[63]" + "'", str54, "[63]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[64]" + "'", str55, "[64]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[65]" + "'", str56, "[65]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[66]" + "'", str57, "[66]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[67]" + "'", str58, "[67]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[68]" + "'", str59, "[68]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[69]" + "'", str60, "[69]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[70]" + "'", str61, "[70]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[71]" + "'", str62, "[71]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[72]" + "'", str63, "[72]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[73]" + "'", str64, "[73]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[74]" + "'", str65, "[74]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[75]" + "'", str66, "[75]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[76]" + "'", str67, "[76]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[77]" + "'", str68, "[77]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[78]" + "'", str69, "[78]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[79]" + "'", str70, "[79]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[80]" + "'", str71, "[80]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[81]" + "'", str72, "[81]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[82]" + "'", str73, "[82]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[83]" + "'", str74, "[83]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[84]" + "'", str75, "[84]");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test2799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2799");
        int[] intArray4 = new int[] { (byte) -1, 1, 100, '#' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass46 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 42, 141, 35]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 2, 101, 35]" + "'", str5, "[-1, 2, 101, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 3, 102, 35]" + "'", str6, "[-1, 3, 102, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 4, 103, 35]" + "'", str7, "[-1, 4, 103, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 5, 104, 35]" + "'", str8, "[-1, 5, 104, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 6, 105, 35]" + "'", str9, "[-1, 6, 105, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 7, 106, 35]" + "'", str10, "[-1, 7, 106, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 8, 107, 35]" + "'", str11, "[-1, 8, 107, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 9, 108, 35]" + "'", str12, "[-1, 9, 108, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 10, 109, 35]" + "'", str13, "[-1, 10, 109, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 11, 110, 35]" + "'", str14, "[-1, 11, 110, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 12, 111, 35]" + "'", str15, "[-1, 12, 111, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 13, 112, 35]" + "'", str16, "[-1, 13, 112, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 14, 113, 35]" + "'", str17, "[-1, 14, 113, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 15, 114, 35]" + "'", str18, "[-1, 15, 114, 35]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 16, 115, 35]" + "'", str19, "[-1, 16, 115, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 17, 116, 35]" + "'", str20, "[-1, 17, 116, 35]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 18, 117, 35]" + "'", str21, "[-1, 18, 117, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 19, 118, 35]" + "'", str22, "[-1, 19, 118, 35]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 20, 119, 35]" + "'", str23, "[-1, 20, 119, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 21, 120, 35]" + "'", str24, "[-1, 21, 120, 35]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 22, 121, 35]" + "'", str25, "[-1, 22, 121, 35]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 23, 122, 35]" + "'", str26, "[-1, 23, 122, 35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 24, 123, 35]" + "'", str27, "[-1, 24, 123, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 25, 124, 35]" + "'", str28, "[-1, 25, 124, 35]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 26, 125, 35]" + "'", str29, "[-1, 26, 125, 35]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 27, 126, 35]" + "'", str30, "[-1, 27, 126, 35]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 28, 127, 35]" + "'", str31, "[-1, 28, 127, 35]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 29, 128, 35]" + "'", str32, "[-1, 29, 128, 35]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 30, 129, 35]" + "'", str33, "[-1, 30, 129, 35]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 31, 130, 35]" + "'", str34, "[-1, 31, 130, 35]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 32, 131, 35]" + "'", str35, "[-1, 32, 131, 35]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 33, 132, 35]" + "'", str36, "[-1, 33, 132, 35]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 34, 133, 35]" + "'", str37, "[-1, 34, 133, 35]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 35, 134, 35]" + "'", str38, "[-1, 35, 134, 35]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 36, 135, 35]" + "'", str39, "[-1, 36, 135, 35]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 37, 136, 35]" + "'", str40, "[-1, 37, 136, 35]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 38, 137, 35]" + "'", str41, "[-1, 38, 137, 35]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, 39, 138, 35]" + "'", str42, "[-1, 39, 138, 35]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, 40, 139, 35]" + "'", str43, "[-1, 40, 139, 35]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[-1, 41, 140, 35]" + "'", str44, "[-1, 41, 140, 35]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[-1, 42, 141, 35]" + "'", str45, "[-1, 42, 141, 35]");
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test2800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2800");
        int[] intArray3 = new int[] { ' ', '#', (short) 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass29 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[32, 60, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 36, 1]" + "'", str4, "[32, 36, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 37, 1]" + "'", str5, "[32, 37, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 38, 1]" + "'", str6, "[32, 38, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 39, 1]" + "'", str7, "[32, 39, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 40, 1]" + "'", str8, "[32, 40, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 41, 1]" + "'", str9, "[32, 41, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 42, 1]" + "'", str10, "[32, 42, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 43, 1]" + "'", str11, "[32, 43, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 44, 1]" + "'", str12, "[32, 44, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 45, 1]" + "'", str13, "[32, 45, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 46, 1]" + "'", str14, "[32, 46, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[32, 47, 1]" + "'", str15, "[32, 47, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[32, 48, 1]" + "'", str16, "[32, 48, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[32, 49, 1]" + "'", str17, "[32, 49, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[32, 50, 1]" + "'", str18, "[32, 50, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[32, 51, 1]" + "'", str19, "[32, 51, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[32, 52, 1]" + "'", str20, "[32, 52, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[32, 53, 1]" + "'", str21, "[32, 53, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[32, 54, 1]" + "'", str22, "[32, 54, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32, 55, 1]" + "'", str23, "[32, 55, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 56, 1]" + "'", str24, "[32, 56, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[32, 57, 1]" + "'", str25, "[32, 57, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[32, 58, 1]" + "'", str26, "[32, 58, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[32, 59, 1]" + "'", str27, "[32, 59, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[32, 60, 1]" + "'", str28, "[32, 60, 1]");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test2801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2801");
        int[] intArray3 = new int[] { ' ', (-1), 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass90 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[40, 5, 9]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 0, 1]" + "'", str4, "[32, 0, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 1, 1]" + "'", str5, "[32, 1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 2, 1]" + "'", str6, "[32, 2, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 3, 1]" + "'", str7, "[32, 3, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 4, 1]" + "'", str8, "[32, 4, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 5, 1]" + "'", str9, "[32, 5, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 6, 1]" + "'", str10, "[32, 6, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 7, 1]" + "'", str11, "[32, 7, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 8, 1]" + "'", str12, "[32, 8, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 9, 1]" + "'", str13, "[32, 9, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[33, 0, 2]" + "'", str14, "[33, 0, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[33, 1, 2]" + "'", str15, "[33, 1, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[33, 2, 2]" + "'", str16, "[33, 2, 2]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[33, 3, 2]" + "'", str17, "[33, 3, 2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[33, 4, 2]" + "'", str18, "[33, 4, 2]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[33, 5, 2]" + "'", str19, "[33, 5, 2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[33, 6, 2]" + "'", str20, "[33, 6, 2]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[33, 7, 2]" + "'", str21, "[33, 7, 2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[33, 8, 2]" + "'", str22, "[33, 8, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[33, 9, 2]" + "'", str23, "[33, 9, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[34, 0, 3]" + "'", str24, "[34, 0, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34, 1, 3]" + "'", str25, "[34, 1, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 2, 3]" + "'", str26, "[34, 2, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[34, 3, 3]" + "'", str27, "[34, 3, 3]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[34, 4, 3]" + "'", str28, "[34, 4, 3]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[34, 5, 3]" + "'", str29, "[34, 5, 3]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[34, 6, 3]" + "'", str30, "[34, 6, 3]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[34, 7, 3]" + "'", str31, "[34, 7, 3]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[34, 8, 3]" + "'", str32, "[34, 8, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[34, 9, 3]" + "'", str33, "[34, 9, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 0, 4]" + "'", str34, "[35, 0, 4]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 1, 4]" + "'", str35, "[35, 1, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 2, 4]" + "'", str36, "[35, 2, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 3, 4]" + "'", str37, "[35, 3, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 4, 4]" + "'", str38, "[35, 4, 4]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 5, 4]" + "'", str39, "[35, 5, 4]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 6, 4]" + "'", str40, "[35, 6, 4]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 7, 4]" + "'", str41, "[35, 7, 4]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 8, 4]" + "'", str42, "[35, 8, 4]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 9, 4]" + "'", str43, "[35, 9, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[36, 0, 5]" + "'", str44, "[36, 0, 5]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[36, 1, 5]" + "'", str45, "[36, 1, 5]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[36, 2, 5]" + "'", str46, "[36, 2, 5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[36, 3, 5]" + "'", str47, "[36, 3, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[36, 4, 5]" + "'", str48, "[36, 4, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[36, 5, 5]" + "'", str49, "[36, 5, 5]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[36, 6, 5]" + "'", str50, "[36, 6, 5]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[36, 7, 5]" + "'", str51, "[36, 7, 5]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[36, 8, 5]" + "'", str52, "[36, 8, 5]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[36, 9, 5]" + "'", str53, "[36, 9, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[37, 0, 6]" + "'", str54, "[37, 0, 6]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[37, 1, 6]" + "'", str55, "[37, 1, 6]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[37, 2, 6]" + "'", str56, "[37, 2, 6]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[37, 3, 6]" + "'", str57, "[37, 3, 6]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[37, 4, 6]" + "'", str58, "[37, 4, 6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[37, 5, 6]" + "'", str59, "[37, 5, 6]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[37, 6, 6]" + "'", str60, "[37, 6, 6]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[37, 7, 6]" + "'", str61, "[37, 7, 6]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[37, 8, 6]" + "'", str62, "[37, 8, 6]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[37, 9, 6]" + "'", str63, "[37, 9, 6]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[38, 0, 7]" + "'", str64, "[38, 0, 7]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[38, 1, 7]" + "'", str65, "[38, 1, 7]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[38, 2, 7]" + "'", str66, "[38, 2, 7]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[38, 3, 7]" + "'", str67, "[38, 3, 7]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[38, 4, 7]" + "'", str68, "[38, 4, 7]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[38, 5, 7]" + "'", str69, "[38, 5, 7]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[38, 6, 7]" + "'", str70, "[38, 6, 7]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[38, 7, 7]" + "'", str71, "[38, 7, 7]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[38, 8, 7]" + "'", str72, "[38, 8, 7]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[38, 9, 7]" + "'", str73, "[38, 9, 7]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[39, 0, 8]" + "'", str74, "[39, 0, 8]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[39, 1, 8]" + "'", str75, "[39, 1, 8]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[39, 2, 8]" + "'", str76, "[39, 2, 8]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[39, 3, 8]" + "'", str77, "[39, 3, 8]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[39, 4, 8]" + "'", str78, "[39, 4, 8]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[39, 5, 8]" + "'", str79, "[39, 5, 8]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[39, 6, 8]" + "'", str80, "[39, 6, 8]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[39, 7, 8]" + "'", str81, "[39, 7, 8]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[39, 8, 8]" + "'", str82, "[39, 8, 8]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[39, 9, 8]" + "'", str83, "[39, 9, 8]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[40, 0, 9]" + "'", str84, "[40, 0, 9]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[40, 1, 9]" + "'", str85, "[40, 1, 9]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[40, 2, 9]" + "'", str86, "[40, 2, 9]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[40, 3, 9]" + "'", str87, "[40, 3, 9]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[40, 4, 9]" + "'", str88, "[40, 4, 9]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[40, 5, 9]" + "'", str89, "[40, 5, 9]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2802");
        int[] intArray4 = new int[] { (short) 100, 'a', 100, '4' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass57 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[100, 149, 152, 52]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 98, 101, 52]" + "'", str5, "[100, 98, 101, 52]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 99, 102, 52]" + "'", str6, "[100, 99, 102, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 100, 103, 52]" + "'", str7, "[100, 100, 103, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 101, 104, 52]" + "'", str8, "[100, 101, 104, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 102, 105, 52]" + "'", str9, "[100, 102, 105, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 103, 106, 52]" + "'", str10, "[100, 103, 106, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 104, 107, 52]" + "'", str11, "[100, 104, 107, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 105, 108, 52]" + "'", str12, "[100, 105, 108, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 106, 109, 52]" + "'", str13, "[100, 106, 109, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 107, 110, 52]" + "'", str14, "[100, 107, 110, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 108, 111, 52]" + "'", str15, "[100, 108, 111, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 109, 112, 52]" + "'", str16, "[100, 109, 112, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 110, 113, 52]" + "'", str17, "[100, 110, 113, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 111, 114, 52]" + "'", str18, "[100, 111, 114, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 112, 115, 52]" + "'", str19, "[100, 112, 115, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 113, 116, 52]" + "'", str20, "[100, 113, 116, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 114, 117, 52]" + "'", str21, "[100, 114, 117, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 115, 118, 52]" + "'", str22, "[100, 115, 118, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 116, 119, 52]" + "'", str23, "[100, 116, 119, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 117, 120, 52]" + "'", str24, "[100, 117, 120, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 118, 121, 52]" + "'", str25, "[100, 118, 121, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 119, 122, 52]" + "'", str26, "[100, 119, 122, 52]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 120, 123, 52]" + "'", str27, "[100, 120, 123, 52]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 121, 124, 52]" + "'", str28, "[100, 121, 124, 52]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 122, 125, 52]" + "'", str29, "[100, 122, 125, 52]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 123, 126, 52]" + "'", str30, "[100, 123, 126, 52]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 124, 127, 52]" + "'", str31, "[100, 124, 127, 52]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 125, 128, 52]" + "'", str32, "[100, 125, 128, 52]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 126, 129, 52]" + "'", str33, "[100, 126, 129, 52]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 127, 130, 52]" + "'", str34, "[100, 127, 130, 52]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 128, 131, 52]" + "'", str35, "[100, 128, 131, 52]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 129, 132, 52]" + "'", str36, "[100, 129, 132, 52]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 130, 133, 52]" + "'", str37, "[100, 130, 133, 52]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 131, 134, 52]" + "'", str38, "[100, 131, 134, 52]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 132, 135, 52]" + "'", str39, "[100, 132, 135, 52]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 133, 136, 52]" + "'", str40, "[100, 133, 136, 52]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 134, 137, 52]" + "'", str41, "[100, 134, 137, 52]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 135, 138, 52]" + "'", str42, "[100, 135, 138, 52]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 136, 139, 52]" + "'", str43, "[100, 136, 139, 52]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 137, 140, 52]" + "'", str44, "[100, 137, 140, 52]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 138, 141, 52]" + "'", str45, "[100, 138, 141, 52]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 139, 142, 52]" + "'", str46, "[100, 139, 142, 52]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 140, 143, 52]" + "'", str47, "[100, 140, 143, 52]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 141, 144, 52]" + "'", str48, "[100, 141, 144, 52]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 142, 145, 52]" + "'", str49, "[100, 142, 145, 52]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 143, 146, 52]" + "'", str50, "[100, 143, 146, 52]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 144, 147, 52]" + "'", str51, "[100, 144, 147, 52]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 145, 148, 52]" + "'", str52, "[100, 145, 148, 52]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 146, 149, 52]" + "'", str53, "[100, 146, 149, 52]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 147, 150, 52]" + "'", str54, "[100, 147, 150, 52]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 148, 151, 52]" + "'", str55, "[100, 148, 151, 52]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 149, 152, 52]" + "'", str56, "[100, 149, 152, 52]");
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test2803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2803");
        int[] intArray6 = new int[] { (short) 0, (short) 10, (-1), (short) 1, (byte) 1, 'a' };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass38 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 13, 2, 2, 4, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 10, 0, 2, 1, 97]" + "'", str7, "[0, 10, 0, 2, 1, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 10, 1, 3, 1, 97]" + "'", str8, "[0, 10, 1, 3, 1, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 10, 2, 4, 1, 97]" + "'", str9, "[0, 10, 2, 4, 1, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 10, 3, 5, 1, 97]" + "'", str10, "[0, 10, 3, 5, 1, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 10, 4, 6, 1, 97]" + "'", str11, "[0, 10, 4, 6, 1, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 10, 5, 7, 1, 97]" + "'", str12, "[0, 10, 5, 7, 1, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 10, 6, 8, 1, 97]" + "'", str13, "[0, 10, 6, 8, 1, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 10, 7, 9, 1, 97]" + "'", str14, "[0, 10, 7, 9, 1, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 11, 0, 0, 2, 97]" + "'", str15, "[0, 11, 0, 0, 2, 97]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 11, 1, 1, 2, 97]" + "'", str16, "[0, 11, 1, 1, 2, 97]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 11, 2, 2, 2, 97]" + "'", str17, "[0, 11, 2, 2, 2, 97]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 11, 3, 3, 2, 97]" + "'", str18, "[0, 11, 3, 3, 2, 97]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 11, 4, 4, 2, 97]" + "'", str19, "[0, 11, 4, 4, 2, 97]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 11, 5, 5, 2, 97]" + "'", str20, "[0, 11, 5, 5, 2, 97]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 11, 6, 6, 2, 97]" + "'", str21, "[0, 11, 6, 6, 2, 97]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 11, 7, 7, 2, 97]" + "'", str22, "[0, 11, 7, 7, 2, 97]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 11, 8, 8, 2, 97]" + "'", str23, "[0, 11, 8, 8, 2, 97]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 11, 9, 9, 2, 97]" + "'", str24, "[0, 11, 9, 9, 2, 97]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 12, 0, 0, 3, 97]" + "'", str25, "[0, 12, 0, 0, 3, 97]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 12, 1, 1, 3, 97]" + "'", str26, "[0, 12, 1, 1, 3, 97]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 12, 2, 2, 3, 97]" + "'", str27, "[0, 12, 2, 2, 3, 97]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 12, 3, 3, 3, 97]" + "'", str28, "[0, 12, 3, 3, 3, 97]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 12, 4, 4, 3, 97]" + "'", str29, "[0, 12, 4, 4, 3, 97]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 12, 5, 5, 3, 97]" + "'", str30, "[0, 12, 5, 5, 3, 97]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 12, 6, 6, 3, 97]" + "'", str31, "[0, 12, 6, 6, 3, 97]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 12, 7, 7, 3, 97]" + "'", str32, "[0, 12, 7, 7, 3, 97]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 12, 8, 8, 3, 97]" + "'", str33, "[0, 12, 8, 8, 3, 97]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 12, 9, 9, 3, 97]" + "'", str34, "[0, 12, 9, 9, 3, 97]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 13, 0, 0, 4, 97]" + "'", str35, "[0, 13, 0, 0, 4, 97]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 13, 1, 1, 4, 97]" + "'", str36, "[0, 13, 1, 1, 4, 97]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 13, 2, 2, 4, 97]" + "'", str37, "[0, 13, 2, 2, 4, 97]");
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test2804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2804");
        int[] intArray3 = new int[] { 1, 0, (short) 0 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass31 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[3, 7, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 1, 0]" + "'", str4, "[1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 2, 0]" + "'", str5, "[1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 3, 0]" + "'", str6, "[1, 3, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 4, 0]" + "'", str7, "[1, 4, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 5, 0]" + "'", str8, "[1, 5, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 6, 0]" + "'", str9, "[1, 6, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 7, 0]" + "'", str10, "[1, 7, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 8, 0]" + "'", str11, "[1, 8, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 9, 0]" + "'", str12, "[1, 9, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 0, 1]" + "'", str13, "[2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2, 1, 1]" + "'", str14, "[2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2, 1]" + "'", str15, "[2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[2, 3, 1]" + "'", str16, "[2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[2, 4, 1]" + "'", str17, "[2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[2, 5, 1]" + "'", str18, "[2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[2, 6, 1]" + "'", str19, "[2, 6, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[2, 7, 1]" + "'", str20, "[2, 7, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[2, 8, 1]" + "'", str21, "[2, 8, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2, 9, 1]" + "'", str22, "[2, 9, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3, 0, 2]" + "'", str23, "[3, 0, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 1, 2]" + "'", str24, "[3, 1, 2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3, 2, 2]" + "'", str25, "[3, 2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3, 2]" + "'", str26, "[3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[3, 4, 2]" + "'", str27, "[3, 4, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[3, 5, 2]" + "'", str28, "[3, 5, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[3, 6, 2]" + "'", str29, "[3, 6, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[3, 7, 2]" + "'", str30, "[3, 7, 2]");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test2805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2805");
        int[] intArray6 = new int[] { (short) 100, (byte) 0, 10, (byte) 0, (byte) 1, (byte) 0 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass17 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 1, 0, 0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 0, 11, 1, 1, 0]" + "'", str7, "[100, 0, 11, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 0, 12, 2, 1, 0]" + "'", str8, "[100, 0, 12, 2, 1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 0, 13, 3, 1, 0]" + "'", str9, "[100, 0, 13, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 0, 14, 4, 1, 0]" + "'", str10, "[100, 0, 14, 4, 1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 0, 15, 5, 1, 0]" + "'", str11, "[100, 0, 15, 5, 1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 0, 16, 6, 1, 0]" + "'", str12, "[100, 0, 16, 6, 1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 0, 17, 7, 1, 0]" + "'", str13, "[100, 0, 17, 7, 1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 0, 18, 8, 1, 0]" + "'", str14, "[100, 0, 18, 8, 1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 0, 19, 9, 1, 0]" + "'", str15, "[100, 0, 19, 9, 1, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 1, 0, 0, 2, 0]" + "'", str16, "[100, 1, 0, 0, 2, 0]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test2806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2806");
        int[] intArray4 = new int[] { 1, (short) 10, (short) 10, (short) -1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass73 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 78, 78, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 11, 11, -1]" + "'", str5, "[1, 11, 11, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 12, 12, -1]" + "'", str6, "[1, 12, 12, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 13, 13, -1]" + "'", str7, "[1, 13, 13, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 14, 14, -1]" + "'", str8, "[1, 14, 14, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 15, 15, -1]" + "'", str9, "[1, 15, 15, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 16, 16, -1]" + "'", str10, "[1, 16, 16, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 17, 17, -1]" + "'", str11, "[1, 17, 17, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 18, 18, -1]" + "'", str12, "[1, 18, 18, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 19, 19, -1]" + "'", str13, "[1, 19, 19, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 20, 20, -1]" + "'", str14, "[1, 20, 20, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 21, 21, -1]" + "'", str15, "[1, 21, 21, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 22, 22, -1]" + "'", str16, "[1, 22, 22, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 23, 23, -1]" + "'", str17, "[1, 23, 23, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 24, 24, -1]" + "'", str18, "[1, 24, 24, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 25, 25, -1]" + "'", str19, "[1, 25, 25, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 26, 26, -1]" + "'", str20, "[1, 26, 26, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 27, 27, -1]" + "'", str21, "[1, 27, 27, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 28, 28, -1]" + "'", str22, "[1, 28, 28, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 29, 29, -1]" + "'", str23, "[1, 29, 29, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 30, 30, -1]" + "'", str24, "[1, 30, 30, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 31, 31, -1]" + "'", str25, "[1, 31, 31, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 32, 32, -1]" + "'", str26, "[1, 32, 32, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 33, 33, -1]" + "'", str27, "[1, 33, 33, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 34, 34, -1]" + "'", str28, "[1, 34, 34, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 35, 35, -1]" + "'", str29, "[1, 35, 35, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 36, 36, -1]" + "'", str30, "[1, 36, 36, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 37, 37, -1]" + "'", str31, "[1, 37, 37, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 38, 38, -1]" + "'", str32, "[1, 38, 38, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 39, 39, -1]" + "'", str33, "[1, 39, 39, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 40, 40, -1]" + "'", str34, "[1, 40, 40, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 41, 41, -1]" + "'", str35, "[1, 41, 41, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 42, 42, -1]" + "'", str36, "[1, 42, 42, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 43, 43, -1]" + "'", str37, "[1, 43, 43, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 44, 44, -1]" + "'", str38, "[1, 44, 44, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 45, 45, -1]" + "'", str39, "[1, 45, 45, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 46, 46, -1]" + "'", str40, "[1, 46, 46, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 47, 47, -1]" + "'", str41, "[1, 47, 47, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 48, 48, -1]" + "'", str42, "[1, 48, 48, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 49, 49, -1]" + "'", str43, "[1, 49, 49, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 50, 50, -1]" + "'", str44, "[1, 50, 50, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 51, 51, -1]" + "'", str45, "[1, 51, 51, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 52, 52, -1]" + "'", str46, "[1, 52, 52, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 53, 53, -1]" + "'", str47, "[1, 53, 53, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 54, 54, -1]" + "'", str48, "[1, 54, 54, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 55, 55, -1]" + "'", str49, "[1, 55, 55, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 56, 56, -1]" + "'", str50, "[1, 56, 56, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 57, 57, -1]" + "'", str51, "[1, 57, 57, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 58, 58, -1]" + "'", str52, "[1, 58, 58, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 59, 59, -1]" + "'", str53, "[1, 59, 59, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 60, 60, -1]" + "'", str54, "[1, 60, 60, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 61, 61, -1]" + "'", str55, "[1, 61, 61, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 62, 62, -1]" + "'", str56, "[1, 62, 62, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 63, 63, -1]" + "'", str57, "[1, 63, 63, -1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 64, 64, -1]" + "'", str58, "[1, 64, 64, -1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 65, 65, -1]" + "'", str59, "[1, 65, 65, -1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 66, 66, -1]" + "'", str60, "[1, 66, 66, -1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 67, 67, -1]" + "'", str61, "[1, 67, 67, -1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 68, 68, -1]" + "'", str62, "[1, 68, 68, -1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 69, 69, -1]" + "'", str63, "[1, 69, 69, -1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 70, 70, -1]" + "'", str64, "[1, 70, 70, -1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 71, 71, -1]" + "'", str65, "[1, 71, 71, -1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 72, 72, -1]" + "'", str66, "[1, 72, 72, -1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 73, 73, -1]" + "'", str67, "[1, 73, 73, -1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 74, 74, -1]" + "'", str68, "[1, 74, 74, -1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 75, 75, -1]" + "'", str69, "[1, 75, 75, -1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 76, 76, -1]" + "'", str70, "[1, 76, 76, -1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 77, 77, -1]" + "'", str71, "[1, 77, 77, -1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 78, 78, -1]" + "'", str72, "[1, 78, 78, -1]");
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test2807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2807");
        int[] intArray5 = new int[] { (byte) 0, (short) -1, ' ', (short) 10, (-1) };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass8 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, -1, 34, 10, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, -1, 33, 10, -1]" + "'", str6, "[0, -1, 33, 10, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, -1, 34, 10, -1]" + "'", str7, "[0, -1, 34, 10, -1]");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test2808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2808");
        int[] intArray1 = new int[] { 'a' };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass64 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[159]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[98]" + "'", str2, "[98]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[99]" + "'", str3, "[99]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100]" + "'", str4, "[100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[101]" + "'", str5, "[101]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[102]" + "'", str6, "[102]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[103]" + "'", str7, "[103]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[104]" + "'", str8, "[104]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[105]" + "'", str9, "[105]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[106]" + "'", str10, "[106]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[107]" + "'", str11, "[107]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[108]" + "'", str12, "[108]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[109]" + "'", str13, "[109]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[110]" + "'", str14, "[110]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[111]" + "'", str15, "[111]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[112]" + "'", str16, "[112]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[113]" + "'", str17, "[113]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[114]" + "'", str18, "[114]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[115]" + "'", str19, "[115]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[116]" + "'", str20, "[116]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[117]" + "'", str21, "[117]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[118]" + "'", str22, "[118]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[119]" + "'", str23, "[119]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[120]" + "'", str24, "[120]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[121]" + "'", str25, "[121]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[122]" + "'", str26, "[122]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[123]" + "'", str27, "[123]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[124]" + "'", str28, "[124]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[125]" + "'", str29, "[125]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[126]" + "'", str30, "[126]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[127]" + "'", str31, "[127]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[128]" + "'", str32, "[128]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[129]" + "'", str33, "[129]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[130]" + "'", str34, "[130]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[131]" + "'", str35, "[131]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[132]" + "'", str36, "[132]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[133]" + "'", str37, "[133]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[134]" + "'", str38, "[134]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[135]" + "'", str39, "[135]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[136]" + "'", str40, "[136]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[137]" + "'", str41, "[137]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[138]" + "'", str42, "[138]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[139]" + "'", str43, "[139]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[140]" + "'", str44, "[140]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[141]" + "'", str45, "[141]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[142]" + "'", str46, "[142]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[143]" + "'", str47, "[143]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[144]" + "'", str48, "[144]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[145]" + "'", str49, "[145]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[146]" + "'", str50, "[146]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[147]" + "'", str51, "[147]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[148]" + "'", str52, "[148]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[149]" + "'", str53, "[149]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[150]" + "'", str54, "[150]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[151]" + "'", str55, "[151]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[152]" + "'", str56, "[152]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[153]" + "'", str57, "[153]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[154]" + "'", str58, "[154]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[155]" + "'", str59, "[155]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[156]" + "'", str60, "[156]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[157]" + "'", str61, "[157]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[158]" + "'", str62, "[158]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[159]" + "'", str63, "[159]");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test2809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2809");
        int[] intArray1 = new int[] { (byte) -1 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass73 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[0]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1]" + "'", str32, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1]" + "'", str33, "[1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2]" + "'", str34, "[2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3]" + "'", str35, "[3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4]" + "'", str36, "[4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5]" + "'", str37, "[5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6]" + "'", str38, "[6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7]" + "'", str39, "[7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8]" + "'", str40, "[8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9]" + "'", str41, "[9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1]" + "'", str42, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1]" + "'", str43, "[1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2]" + "'", str44, "[2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3]" + "'", str45, "[3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4]" + "'", str46, "[4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5]" + "'", str47, "[5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6]" + "'", str48, "[6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7]" + "'", str49, "[7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8]" + "'", str50, "[8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9]" + "'", str51, "[9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1]" + "'", str52, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1]" + "'", str53, "[1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2]" + "'", str54, "[2]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[3]" + "'", str55, "[3]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4]" + "'", str56, "[4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5]" + "'", str57, "[5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6]" + "'", str58, "[6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[7]" + "'", str59, "[7]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[8]" + "'", str60, "[8]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[9]" + "'", str61, "[9]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 1]" + "'", str62, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1]" + "'", str63, "[1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[2]" + "'", str64, "[2]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[3]" + "'", str65, "[3]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[4]" + "'", str66, "[4]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[5]" + "'", str67, "[5]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[6]" + "'", str68, "[6]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[7]" + "'", str69, "[7]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[8]" + "'", str70, "[8]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[9]" + "'", str71, "[9]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 1]" + "'", str72, "[1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test2810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2810");
        int[] intArray4 = new int[] { 'a', 10, 100, (short) 10 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str90 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str91 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str92 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass93 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, 98, 188, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 11, 101, 10]" + "'", str5, "[97, 11, 101, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 12, 102, 10]" + "'", str6, "[97, 12, 102, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 13, 103, 10]" + "'", str7, "[97, 13, 103, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 14, 104, 10]" + "'", str8, "[97, 14, 104, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 15, 105, 10]" + "'", str9, "[97, 15, 105, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 16, 106, 10]" + "'", str10, "[97, 16, 106, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 17, 107, 10]" + "'", str11, "[97, 17, 107, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 18, 108, 10]" + "'", str12, "[97, 18, 108, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 19, 109, 10]" + "'", str13, "[97, 19, 109, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 20, 110, 10]" + "'", str14, "[97, 20, 110, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[97, 21, 111, 10]" + "'", str15, "[97, 21, 111, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[97, 22, 112, 10]" + "'", str16, "[97, 22, 112, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[97, 23, 113, 10]" + "'", str17, "[97, 23, 113, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[97, 24, 114, 10]" + "'", str18, "[97, 24, 114, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[97, 25, 115, 10]" + "'", str19, "[97, 25, 115, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[97, 26, 116, 10]" + "'", str20, "[97, 26, 116, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[97, 27, 117, 10]" + "'", str21, "[97, 27, 117, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[97, 28, 118, 10]" + "'", str22, "[97, 28, 118, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[97, 29, 119, 10]" + "'", str23, "[97, 29, 119, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[97, 30, 120, 10]" + "'", str24, "[97, 30, 120, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[97, 31, 121, 10]" + "'", str25, "[97, 31, 121, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[97, 32, 122, 10]" + "'", str26, "[97, 32, 122, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[97, 33, 123, 10]" + "'", str27, "[97, 33, 123, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[97, 34, 124, 10]" + "'", str28, "[97, 34, 124, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[97, 35, 125, 10]" + "'", str29, "[97, 35, 125, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[97, 36, 126, 10]" + "'", str30, "[97, 36, 126, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[97, 37, 127, 10]" + "'", str31, "[97, 37, 127, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[97, 38, 128, 10]" + "'", str32, "[97, 38, 128, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[97, 39, 129, 10]" + "'", str33, "[97, 39, 129, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[97, 40, 130, 10]" + "'", str34, "[97, 40, 130, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[97, 41, 131, 10]" + "'", str35, "[97, 41, 131, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[97, 42, 132, 10]" + "'", str36, "[97, 42, 132, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[97, 43, 133, 10]" + "'", str37, "[97, 43, 133, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[97, 44, 134, 10]" + "'", str38, "[97, 44, 134, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[97, 45, 135, 10]" + "'", str39, "[97, 45, 135, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[97, 46, 136, 10]" + "'", str40, "[97, 46, 136, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[97, 47, 137, 10]" + "'", str41, "[97, 47, 137, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[97, 48, 138, 10]" + "'", str42, "[97, 48, 138, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[97, 49, 139, 10]" + "'", str43, "[97, 49, 139, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[97, 50, 140, 10]" + "'", str44, "[97, 50, 140, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[97, 51, 141, 10]" + "'", str45, "[97, 51, 141, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[97, 52, 142, 10]" + "'", str46, "[97, 52, 142, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[97, 53, 143, 10]" + "'", str47, "[97, 53, 143, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[97, 54, 144, 10]" + "'", str48, "[97, 54, 144, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[97, 55, 145, 10]" + "'", str49, "[97, 55, 145, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[97, 56, 146, 10]" + "'", str50, "[97, 56, 146, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[97, 57, 147, 10]" + "'", str51, "[97, 57, 147, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[97, 58, 148, 10]" + "'", str52, "[97, 58, 148, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[97, 59, 149, 10]" + "'", str53, "[97, 59, 149, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[97, 60, 150, 10]" + "'", str54, "[97, 60, 150, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[97, 61, 151, 10]" + "'", str55, "[97, 61, 151, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[97, 62, 152, 10]" + "'", str56, "[97, 62, 152, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[97, 63, 153, 10]" + "'", str57, "[97, 63, 153, 10]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[97, 64, 154, 10]" + "'", str58, "[97, 64, 154, 10]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[97, 65, 155, 10]" + "'", str59, "[97, 65, 155, 10]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[97, 66, 156, 10]" + "'", str60, "[97, 66, 156, 10]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[97, 67, 157, 10]" + "'", str61, "[97, 67, 157, 10]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[97, 68, 158, 10]" + "'", str62, "[97, 68, 158, 10]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[97, 69, 159, 10]" + "'", str63, "[97, 69, 159, 10]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[97, 70, 160, 10]" + "'", str64, "[97, 70, 160, 10]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[97, 71, 161, 10]" + "'", str65, "[97, 71, 161, 10]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[97, 72, 162, 10]" + "'", str66, "[97, 72, 162, 10]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[97, 73, 163, 10]" + "'", str67, "[97, 73, 163, 10]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[97, 74, 164, 10]" + "'", str68, "[97, 74, 164, 10]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[97, 75, 165, 10]" + "'", str69, "[97, 75, 165, 10]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[97, 76, 166, 10]" + "'", str70, "[97, 76, 166, 10]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[97, 77, 167, 10]" + "'", str71, "[97, 77, 167, 10]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[97, 78, 168, 10]" + "'", str72, "[97, 78, 168, 10]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[97, 79, 169, 10]" + "'", str73, "[97, 79, 169, 10]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[97, 80, 170, 10]" + "'", str74, "[97, 80, 170, 10]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[97, 81, 171, 10]" + "'", str75, "[97, 81, 171, 10]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[97, 82, 172, 10]" + "'", str76, "[97, 82, 172, 10]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[97, 83, 173, 10]" + "'", str77, "[97, 83, 173, 10]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[97, 84, 174, 10]" + "'", str78, "[97, 84, 174, 10]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[97, 85, 175, 10]" + "'", str79, "[97, 85, 175, 10]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[97, 86, 176, 10]" + "'", str80, "[97, 86, 176, 10]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[97, 87, 177, 10]" + "'", str81, "[97, 87, 177, 10]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[97, 88, 178, 10]" + "'", str82, "[97, 88, 178, 10]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[97, 89, 179, 10]" + "'", str83, "[97, 89, 179, 10]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[97, 90, 180, 10]" + "'", str84, "[97, 90, 180, 10]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[97, 91, 181, 10]" + "'", str85, "[97, 91, 181, 10]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[97, 92, 182, 10]" + "'", str86, "[97, 92, 182, 10]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[97, 93, 183, 10]" + "'", str87, "[97, 93, 183, 10]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[97, 94, 184, 10]" + "'", str88, "[97, 94, 184, 10]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[97, 95, 185, 10]" + "'", str89, "[97, 95, 185, 10]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[97, 96, 186, 10]" + "'", str90, "[97, 96, 186, 10]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[97, 97, 187, 10]" + "'", str91, "[97, 97, 187, 10]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[97, 98, 188, 10]" + "'", str92, "[97, 98, 188, 10]");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2811");
        int[] intArray4 = new int[] { (byte) 10, 'a', (byte) -1, '#' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass89 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[18, 3, 3, 43]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 98, 0, 35]" + "'", str5, "[10, 98, 0, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 99, 1, 35]" + "'", str6, "[10, 99, 1, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 100, 2, 35]" + "'", str7, "[10, 100, 2, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 101, 3, 35]" + "'", str8, "[10, 101, 3, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 102, 4, 35]" + "'", str9, "[10, 102, 4, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 103, 5, 35]" + "'", str10, "[10, 103, 5, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 104, 6, 35]" + "'", str11, "[10, 104, 6, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 105, 7, 35]" + "'", str12, "[10, 105, 7, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 106, 8, 35]" + "'", str13, "[10, 106, 8, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 107, 9, 35]" + "'", str14, "[10, 107, 9, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[11, 0, 0, 36]" + "'", str15, "[11, 0, 0, 36]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[11, 1, 1, 36]" + "'", str16, "[11, 1, 1, 36]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[11, 2, 2, 36]" + "'", str17, "[11, 2, 2, 36]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[11, 3, 3, 36]" + "'", str18, "[11, 3, 3, 36]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[11, 4, 4, 36]" + "'", str19, "[11, 4, 4, 36]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[11, 5, 5, 36]" + "'", str20, "[11, 5, 5, 36]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[11, 6, 6, 36]" + "'", str21, "[11, 6, 6, 36]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[11, 7, 7, 36]" + "'", str22, "[11, 7, 7, 36]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[11, 8, 8, 36]" + "'", str23, "[11, 8, 8, 36]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[11, 9, 9, 36]" + "'", str24, "[11, 9, 9, 36]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[12, 0, 0, 37]" + "'", str25, "[12, 0, 0, 37]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[12, 1, 1, 37]" + "'", str26, "[12, 1, 1, 37]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[12, 2, 2, 37]" + "'", str27, "[12, 2, 2, 37]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[12, 3, 3, 37]" + "'", str28, "[12, 3, 3, 37]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[12, 4, 4, 37]" + "'", str29, "[12, 4, 4, 37]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[12, 5, 5, 37]" + "'", str30, "[12, 5, 5, 37]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[12, 6, 6, 37]" + "'", str31, "[12, 6, 6, 37]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[12, 7, 7, 37]" + "'", str32, "[12, 7, 7, 37]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[12, 8, 8, 37]" + "'", str33, "[12, 8, 8, 37]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[12, 9, 9, 37]" + "'", str34, "[12, 9, 9, 37]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[13, 0, 0, 38]" + "'", str35, "[13, 0, 0, 38]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[13, 1, 1, 38]" + "'", str36, "[13, 1, 1, 38]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[13, 2, 2, 38]" + "'", str37, "[13, 2, 2, 38]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[13, 3, 3, 38]" + "'", str38, "[13, 3, 3, 38]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[13, 4, 4, 38]" + "'", str39, "[13, 4, 4, 38]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[13, 5, 5, 38]" + "'", str40, "[13, 5, 5, 38]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[13, 6, 6, 38]" + "'", str41, "[13, 6, 6, 38]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[13, 7, 7, 38]" + "'", str42, "[13, 7, 7, 38]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[13, 8, 8, 38]" + "'", str43, "[13, 8, 8, 38]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[13, 9, 9, 38]" + "'", str44, "[13, 9, 9, 38]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[14, 0, 0, 39]" + "'", str45, "[14, 0, 0, 39]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[14, 1, 1, 39]" + "'", str46, "[14, 1, 1, 39]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[14, 2, 2, 39]" + "'", str47, "[14, 2, 2, 39]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[14, 3, 3, 39]" + "'", str48, "[14, 3, 3, 39]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[14, 4, 4, 39]" + "'", str49, "[14, 4, 4, 39]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[14, 5, 5, 39]" + "'", str50, "[14, 5, 5, 39]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[14, 6, 6, 39]" + "'", str51, "[14, 6, 6, 39]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[14, 7, 7, 39]" + "'", str52, "[14, 7, 7, 39]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[14, 8, 8, 39]" + "'", str53, "[14, 8, 8, 39]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[14, 9, 9, 39]" + "'", str54, "[14, 9, 9, 39]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[15, 0, 0, 40]" + "'", str55, "[15, 0, 0, 40]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[15, 1, 1, 40]" + "'", str56, "[15, 1, 1, 40]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[15, 2, 2, 40]" + "'", str57, "[15, 2, 2, 40]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[15, 3, 3, 40]" + "'", str58, "[15, 3, 3, 40]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[15, 4, 4, 40]" + "'", str59, "[15, 4, 4, 40]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[15, 5, 5, 40]" + "'", str60, "[15, 5, 5, 40]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[15, 6, 6, 40]" + "'", str61, "[15, 6, 6, 40]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[15, 7, 7, 40]" + "'", str62, "[15, 7, 7, 40]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[15, 8, 8, 40]" + "'", str63, "[15, 8, 8, 40]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[15, 9, 9, 40]" + "'", str64, "[15, 9, 9, 40]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[16, 0, 0, 41]" + "'", str65, "[16, 0, 0, 41]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[16, 1, 1, 41]" + "'", str66, "[16, 1, 1, 41]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[16, 2, 2, 41]" + "'", str67, "[16, 2, 2, 41]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[16, 3, 3, 41]" + "'", str68, "[16, 3, 3, 41]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[16, 4, 4, 41]" + "'", str69, "[16, 4, 4, 41]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[16, 5, 5, 41]" + "'", str70, "[16, 5, 5, 41]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[16, 6, 6, 41]" + "'", str71, "[16, 6, 6, 41]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[16, 7, 7, 41]" + "'", str72, "[16, 7, 7, 41]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[16, 8, 8, 41]" + "'", str73, "[16, 8, 8, 41]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[16, 9, 9, 41]" + "'", str74, "[16, 9, 9, 41]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[17, 0, 0, 42]" + "'", str75, "[17, 0, 0, 42]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[17, 1, 1, 42]" + "'", str76, "[17, 1, 1, 42]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[17, 2, 2, 42]" + "'", str77, "[17, 2, 2, 42]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[17, 3, 3, 42]" + "'", str78, "[17, 3, 3, 42]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[17, 4, 4, 42]" + "'", str79, "[17, 4, 4, 42]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[17, 5, 5, 42]" + "'", str80, "[17, 5, 5, 42]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[17, 6, 6, 42]" + "'", str81, "[17, 6, 6, 42]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[17, 7, 7, 42]" + "'", str82, "[17, 7, 7, 42]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[17, 8, 8, 42]" + "'", str83, "[17, 8, 8, 42]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[17, 9, 9, 42]" + "'", str84, "[17, 9, 9, 42]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[18, 0, 0, 43]" + "'", str85, "[18, 0, 0, 43]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[18, 1, 1, 43]" + "'", str86, "[18, 1, 1, 43]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[18, 2, 2, 43]" + "'", str87, "[18, 2, 2, 43]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[18, 3, 3, 43]" + "'", str88, "[18, 3, 3, 43]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2812");
        int[] intArray4 = new int[] { '4', (byte) -1, (short) 1, (byte) 10 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass30 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[54, 6, 6, 12]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[52, 0, 2, 10]" + "'", str5, "[52, 0, 2, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[52, 1, 3, 10]" + "'", str6, "[52, 1, 3, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[52, 2, 4, 10]" + "'", str7, "[52, 2, 4, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[52, 3, 5, 10]" + "'", str8, "[52, 3, 5, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[52, 4, 6, 10]" + "'", str9, "[52, 4, 6, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[52, 5, 7, 10]" + "'", str10, "[52, 5, 7, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[52, 6, 8, 10]" + "'", str11, "[52, 6, 8, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[52, 7, 9, 10]" + "'", str12, "[52, 7, 9, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[53, 0, 0, 11]" + "'", str13, "[53, 0, 0, 11]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[53, 1, 1, 11]" + "'", str14, "[53, 1, 1, 11]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[53, 2, 2, 11]" + "'", str15, "[53, 2, 2, 11]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[53, 3, 3, 11]" + "'", str16, "[53, 3, 3, 11]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[53, 4, 4, 11]" + "'", str17, "[53, 4, 4, 11]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[53, 5, 5, 11]" + "'", str18, "[53, 5, 5, 11]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[53, 6, 6, 11]" + "'", str19, "[53, 6, 6, 11]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[53, 7, 7, 11]" + "'", str20, "[53, 7, 7, 11]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[53, 8, 8, 11]" + "'", str21, "[53, 8, 8, 11]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[53, 9, 9, 11]" + "'", str22, "[53, 9, 9, 11]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[54, 0, 0, 12]" + "'", str23, "[54, 0, 0, 12]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[54, 1, 1, 12]" + "'", str24, "[54, 1, 1, 12]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[54, 2, 2, 12]" + "'", str25, "[54, 2, 2, 12]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[54, 3, 3, 12]" + "'", str26, "[54, 3, 3, 12]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[54, 4, 4, 12]" + "'", str27, "[54, 4, 4, 12]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[54, 5, 5, 12]" + "'", str28, "[54, 5, 5, 12]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[54, 6, 6, 12]" + "'", str29, "[54, 6, 6, 12]");
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test2813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2813");
        int[] intArray6 = new int[] { (short) 0, (short) 100, (-1), (short) 1, (short) -1, (byte) 0 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass42 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 103, 6, 6, 2, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 100, 0, 2, -1, 0]" + "'", str7, "[0, 100, 0, 2, -1, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 100, 1, 3, -1, 0]" + "'", str8, "[0, 100, 1, 3, -1, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 100, 2, 4, -1, 0]" + "'", str9, "[0, 100, 2, 4, -1, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 100, 3, 5, -1, 0]" + "'", str10, "[0, 100, 3, 5, -1, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 100, 4, 6, -1, 0]" + "'", str11, "[0, 100, 4, 6, -1, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 100, 5, 7, -1, 0]" + "'", str12, "[0, 100, 5, 7, -1, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 100, 6, 8, -1, 0]" + "'", str13, "[0, 100, 6, 8, -1, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 100, 7, 9, -1, 0]" + "'", str14, "[0, 100, 7, 9, -1, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 101, 0, 0, 0, 0]" + "'", str15, "[0, 101, 0, 0, 0, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 101, 1, 1, 0, 0]" + "'", str16, "[0, 101, 1, 1, 0, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 101, 2, 2, 0, 0]" + "'", str17, "[0, 101, 2, 2, 0, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 101, 3, 3, 0, 0]" + "'", str18, "[0, 101, 3, 3, 0, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 101, 4, 4, 0, 0]" + "'", str19, "[0, 101, 4, 4, 0, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 101, 5, 5, 0, 0]" + "'", str20, "[0, 101, 5, 5, 0, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 101, 6, 6, 0, 0]" + "'", str21, "[0, 101, 6, 6, 0, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 101, 7, 7, 0, 0]" + "'", str22, "[0, 101, 7, 7, 0, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 101, 8, 8, 0, 0]" + "'", str23, "[0, 101, 8, 8, 0, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 101, 9, 9, 0, 0]" + "'", str24, "[0, 101, 9, 9, 0, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 102, 0, 0, 1, 0]" + "'", str25, "[0, 102, 0, 0, 1, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 102, 1, 1, 1, 0]" + "'", str26, "[0, 102, 1, 1, 1, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 102, 2, 2, 1, 0]" + "'", str27, "[0, 102, 2, 2, 1, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 102, 3, 3, 1, 0]" + "'", str28, "[0, 102, 3, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 102, 4, 4, 1, 0]" + "'", str29, "[0, 102, 4, 4, 1, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 102, 5, 5, 1, 0]" + "'", str30, "[0, 102, 5, 5, 1, 0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 102, 6, 6, 1, 0]" + "'", str31, "[0, 102, 6, 6, 1, 0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 102, 7, 7, 1, 0]" + "'", str32, "[0, 102, 7, 7, 1, 0]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 102, 8, 8, 1, 0]" + "'", str33, "[0, 102, 8, 8, 1, 0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 102, 9, 9, 1, 0]" + "'", str34, "[0, 102, 9, 9, 1, 0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 103, 0, 0, 2, 0]" + "'", str35, "[0, 103, 0, 0, 2, 0]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 103, 1, 1, 2, 0]" + "'", str36, "[0, 103, 1, 1, 2, 0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 103, 2, 2, 2, 0]" + "'", str37, "[0, 103, 2, 2, 2, 0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 103, 3, 3, 2, 0]" + "'", str38, "[0, 103, 3, 3, 2, 0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 103, 4, 4, 2, 0]" + "'", str39, "[0, 103, 4, 4, 2, 0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 103, 5, 5, 2, 0]" + "'", str40, "[0, 103, 5, 5, 2, 0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 103, 6, 6, 2, 0]" + "'", str41, "[0, 103, 6, 6, 2, 0]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test2814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2814");
        int[] intArray2 = new int[] { 'a', 1 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass34 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[2, 2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[98, 2]" + "'", str3, "[98, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[99, 3]" + "'", str4, "[99, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 4]" + "'", str5, "[100, 4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[101, 5]" + "'", str6, "[101, 5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[102, 6]" + "'", str7, "[102, 6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[103, 7]" + "'", str8, "[103, 7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[104, 8]" + "'", str9, "[104, 8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[105, 9]" + "'", str10, "[105, 9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 2]" + "'", str13, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3, 3]" + "'", str14, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4, 4]" + "'", str15, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5, 5]" + "'", str16, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6, 6]" + "'", str17, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7, 7]" + "'", str18, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8, 8]" + "'", str19, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9, 9]" + "'", str20, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 2]" + "'", str23, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 3]" + "'", str24, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4, 4]" + "'", str25, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5, 5]" + "'", str26, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6, 6]" + "'", str27, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7, 7]" + "'", str28, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8, 8]" + "'", str29, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9, 9]" + "'", str30, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 1]" + "'", str31, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1]" + "'", str32, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 2]" + "'", str33, "[2, 2]");
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test2815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2815");
        int[] intArray1 = new int[] { (short) 0 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass67 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[5]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[1]" + "'", str2, "[1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2]" + "'", str3, "[2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3]" + "'", str4, "[3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4]" + "'", str5, "[4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5]" + "'", str6, "[5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6]" + "'", str7, "[6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7]" + "'", str8, "[7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8]" + "'", str9, "[8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9]" + "'", str10, "[9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1]" + "'", str11, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1]" + "'", str12, "[1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2]" + "'", str13, "[2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3]" + "'", str14, "[3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4]" + "'", str15, "[4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5]" + "'", str16, "[5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6]" + "'", str17, "[6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7]" + "'", str18, "[7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8]" + "'", str19, "[8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9]" + "'", str20, "[9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1]" + "'", str21, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1]" + "'", str22, "[1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2]" + "'", str23, "[2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3]" + "'", str24, "[3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4]" + "'", str25, "[4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5]" + "'", str26, "[5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6]" + "'", str27, "[6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7]" + "'", str28, "[7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8]" + "'", str29, "[8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9]" + "'", str30, "[9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 1]" + "'", str31, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1]" + "'", str32, "[1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2]" + "'", str33, "[2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3]" + "'", str34, "[3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4]" + "'", str35, "[4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[5]" + "'", str36, "[5]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[6]" + "'", str37, "[6]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[7]" + "'", str38, "[7]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[8]" + "'", str39, "[8]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[9]" + "'", str40, "[9]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 1]" + "'", str41, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1]" + "'", str42, "[1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2]" + "'", str43, "[2]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3]" + "'", str44, "[3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[4]" + "'", str45, "[4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[5]" + "'", str46, "[5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[6]" + "'", str47, "[6]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[7]" + "'", str48, "[7]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[8]" + "'", str49, "[8]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[9]" + "'", str50, "[9]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 1]" + "'", str51, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1]" + "'", str52, "[1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[2]" + "'", str53, "[2]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[3]" + "'", str54, "[3]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[4]" + "'", str55, "[4]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[5]" + "'", str56, "[5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[6]" + "'", str57, "[6]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[7]" + "'", str58, "[7]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[8]" + "'", str59, "[8]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[9]" + "'", str60, "[9]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 1]" + "'", str61, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1]" + "'", str62, "[1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[2]" + "'", str63, "[2]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[3]" + "'", str64, "[3]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[4]" + "'", str65, "[4]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[5]" + "'", str66, "[5]");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test2816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2816");
        int[] intArray1 = new int[] { (short) 100 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass86 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[184]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[101]" + "'", str2, "[101]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[102]" + "'", str3, "[102]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[103]" + "'", str4, "[103]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[104]" + "'", str5, "[104]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[105]" + "'", str6, "[105]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[106]" + "'", str7, "[106]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[107]" + "'", str8, "[107]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[108]" + "'", str9, "[108]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[109]" + "'", str10, "[109]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[110]" + "'", str11, "[110]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[111]" + "'", str12, "[111]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[112]" + "'", str13, "[112]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[113]" + "'", str14, "[113]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[114]" + "'", str15, "[114]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[115]" + "'", str16, "[115]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[116]" + "'", str17, "[116]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[117]" + "'", str18, "[117]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[118]" + "'", str19, "[118]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[119]" + "'", str20, "[119]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[120]" + "'", str21, "[120]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[121]" + "'", str22, "[121]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[122]" + "'", str23, "[122]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[123]" + "'", str24, "[123]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[124]" + "'", str25, "[124]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[125]" + "'", str26, "[125]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[126]" + "'", str27, "[126]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[127]" + "'", str28, "[127]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[128]" + "'", str29, "[128]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[129]" + "'", str30, "[129]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[130]" + "'", str31, "[130]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[131]" + "'", str32, "[131]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[132]" + "'", str33, "[132]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[133]" + "'", str34, "[133]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[134]" + "'", str35, "[134]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[135]" + "'", str36, "[135]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[136]" + "'", str37, "[136]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[137]" + "'", str38, "[137]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[138]" + "'", str39, "[138]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[139]" + "'", str40, "[139]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[140]" + "'", str41, "[140]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[141]" + "'", str42, "[141]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[142]" + "'", str43, "[142]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[143]" + "'", str44, "[143]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[144]" + "'", str45, "[144]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[145]" + "'", str46, "[145]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[146]" + "'", str47, "[146]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[147]" + "'", str48, "[147]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[148]" + "'", str49, "[148]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[149]" + "'", str50, "[149]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[150]" + "'", str51, "[150]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[151]" + "'", str52, "[151]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[152]" + "'", str53, "[152]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[153]" + "'", str54, "[153]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[154]" + "'", str55, "[154]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[155]" + "'", str56, "[155]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[156]" + "'", str57, "[156]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[157]" + "'", str58, "[157]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[158]" + "'", str59, "[158]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[159]" + "'", str60, "[159]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[160]" + "'", str61, "[160]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[161]" + "'", str62, "[161]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[162]" + "'", str63, "[162]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[163]" + "'", str64, "[163]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[164]" + "'", str65, "[164]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[165]" + "'", str66, "[165]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[166]" + "'", str67, "[166]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[167]" + "'", str68, "[167]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[168]" + "'", str69, "[168]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[169]" + "'", str70, "[169]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[170]" + "'", str71, "[170]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[171]" + "'", str72, "[171]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[172]" + "'", str73, "[172]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[173]" + "'", str74, "[173]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[174]" + "'", str75, "[174]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[175]" + "'", str76, "[175]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[176]" + "'", str77, "[176]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[177]" + "'", str78, "[177]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[178]" + "'", str79, "[178]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[179]" + "'", str80, "[179]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[180]" + "'", str81, "[180]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[181]" + "'", str82, "[181]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[182]" + "'", str83, "[182]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[183]" + "'", str84, "[183]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[184]" + "'", str85, "[184]");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2817");
        int[] intArray5 = new int[] { (byte) 0, (short) -1, ' ', (short) 10, (-1) };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass7 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, -1, 33, 10, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, -1, 33, 10, -1]" + "'", str6, "[0, -1, 33, 10, -1]");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test2818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2818");
        int[] intArray6 = new int[] { (short) 0, '#', 0, ' ', 100, (short) 10 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass63 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 35, 56, 88, 100, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 35, 1, 33, 100, 10]" + "'", str7, "[0, 35, 1, 33, 100, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 35, 2, 34, 100, 10]" + "'", str8, "[0, 35, 2, 34, 100, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 35, 3, 35, 100, 10]" + "'", str9, "[0, 35, 3, 35, 100, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 35, 4, 36, 100, 10]" + "'", str10, "[0, 35, 4, 36, 100, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 35, 5, 37, 100, 10]" + "'", str11, "[0, 35, 5, 37, 100, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 35, 6, 38, 100, 10]" + "'", str12, "[0, 35, 6, 38, 100, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 35, 7, 39, 100, 10]" + "'", str13, "[0, 35, 7, 39, 100, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 35, 8, 40, 100, 10]" + "'", str14, "[0, 35, 8, 40, 100, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 35, 9, 41, 100, 10]" + "'", str15, "[0, 35, 9, 41, 100, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 35, 10, 42, 100, 10]" + "'", str16, "[0, 35, 10, 42, 100, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 35, 11, 43, 100, 10]" + "'", str17, "[0, 35, 11, 43, 100, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 35, 12, 44, 100, 10]" + "'", str18, "[0, 35, 12, 44, 100, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 35, 13, 45, 100, 10]" + "'", str19, "[0, 35, 13, 45, 100, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 35, 14, 46, 100, 10]" + "'", str20, "[0, 35, 14, 46, 100, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 35, 15, 47, 100, 10]" + "'", str21, "[0, 35, 15, 47, 100, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 35, 16, 48, 100, 10]" + "'", str22, "[0, 35, 16, 48, 100, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 35, 17, 49, 100, 10]" + "'", str23, "[0, 35, 17, 49, 100, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 35, 18, 50, 100, 10]" + "'", str24, "[0, 35, 18, 50, 100, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 35, 19, 51, 100, 10]" + "'", str25, "[0, 35, 19, 51, 100, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 35, 20, 52, 100, 10]" + "'", str26, "[0, 35, 20, 52, 100, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 35, 21, 53, 100, 10]" + "'", str27, "[0, 35, 21, 53, 100, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 35, 22, 54, 100, 10]" + "'", str28, "[0, 35, 22, 54, 100, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 35, 23, 55, 100, 10]" + "'", str29, "[0, 35, 23, 55, 100, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 35, 24, 56, 100, 10]" + "'", str30, "[0, 35, 24, 56, 100, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 35, 25, 57, 100, 10]" + "'", str31, "[0, 35, 25, 57, 100, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 35, 26, 58, 100, 10]" + "'", str32, "[0, 35, 26, 58, 100, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 35, 27, 59, 100, 10]" + "'", str33, "[0, 35, 27, 59, 100, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 35, 28, 60, 100, 10]" + "'", str34, "[0, 35, 28, 60, 100, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 35, 29, 61, 100, 10]" + "'", str35, "[0, 35, 29, 61, 100, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 35, 30, 62, 100, 10]" + "'", str36, "[0, 35, 30, 62, 100, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 35, 31, 63, 100, 10]" + "'", str37, "[0, 35, 31, 63, 100, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 35, 32, 64, 100, 10]" + "'", str38, "[0, 35, 32, 64, 100, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 35, 33, 65, 100, 10]" + "'", str39, "[0, 35, 33, 65, 100, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 35, 34, 66, 100, 10]" + "'", str40, "[0, 35, 34, 66, 100, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 35, 35, 67, 100, 10]" + "'", str41, "[0, 35, 35, 67, 100, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 35, 36, 68, 100, 10]" + "'", str42, "[0, 35, 36, 68, 100, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 35, 37, 69, 100, 10]" + "'", str43, "[0, 35, 37, 69, 100, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 35, 38, 70, 100, 10]" + "'", str44, "[0, 35, 38, 70, 100, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 35, 39, 71, 100, 10]" + "'", str45, "[0, 35, 39, 71, 100, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 35, 40, 72, 100, 10]" + "'", str46, "[0, 35, 40, 72, 100, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 35, 41, 73, 100, 10]" + "'", str47, "[0, 35, 41, 73, 100, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 35, 42, 74, 100, 10]" + "'", str48, "[0, 35, 42, 74, 100, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 35, 43, 75, 100, 10]" + "'", str49, "[0, 35, 43, 75, 100, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 35, 44, 76, 100, 10]" + "'", str50, "[0, 35, 44, 76, 100, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 35, 45, 77, 100, 10]" + "'", str51, "[0, 35, 45, 77, 100, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 35, 46, 78, 100, 10]" + "'", str52, "[0, 35, 46, 78, 100, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 35, 47, 79, 100, 10]" + "'", str53, "[0, 35, 47, 79, 100, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 35, 48, 80, 100, 10]" + "'", str54, "[0, 35, 48, 80, 100, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, 35, 49, 81, 100, 10]" + "'", str55, "[0, 35, 49, 81, 100, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, 35, 50, 82, 100, 10]" + "'", str56, "[0, 35, 50, 82, 100, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, 35, 51, 83, 100, 10]" + "'", str57, "[0, 35, 51, 83, 100, 10]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, 35, 52, 84, 100, 10]" + "'", str58, "[0, 35, 52, 84, 100, 10]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, 35, 53, 85, 100, 10]" + "'", str59, "[0, 35, 53, 85, 100, 10]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, 35, 54, 86, 100, 10]" + "'", str60, "[0, 35, 54, 86, 100, 10]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, 35, 55, 87, 100, 10]" + "'", str61, "[0, 35, 55, 87, 100, 10]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, 35, 56, 88, 100, 10]" + "'", str62, "[0, 35, 56, 88, 100, 10]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test2819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2819");
        int[] intArray1 = new int[] { (short) 1 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass39 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[8]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[2]" + "'", str2, "[2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[3]" + "'", str3, "[3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[4]" + "'", str4, "[4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[5]" + "'", str5, "[5]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[6]" + "'", str6, "[6]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[7]" + "'", str7, "[7]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[8]" + "'", str8, "[8]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[9]" + "'", str9, "[9]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1]" + "'", str10, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1]" + "'", str11, "[1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[2]" + "'", str12, "[2]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[3]" + "'", str13, "[3]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[4]" + "'", str14, "[4]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[5]" + "'", str15, "[5]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[6]" + "'", str16, "[6]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[7]" + "'", str17, "[7]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[8]" + "'", str18, "[8]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[9]" + "'", str19, "[9]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1]" + "'", str20, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1]" + "'", str21, "[1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2]" + "'", str22, "[2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3]" + "'", str23, "[3]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[4]" + "'", str24, "[4]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[5]" + "'", str25, "[5]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[6]" + "'", str26, "[6]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[7]" + "'", str27, "[7]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[8]" + "'", str28, "[8]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[9]" + "'", str29, "[9]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 1]" + "'", str30, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1]" + "'", str31, "[1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2]" + "'", str32, "[2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[3]" + "'", str33, "[3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4]" + "'", str34, "[4]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[5]" + "'", str35, "[5]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[6]" + "'", str36, "[6]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[7]" + "'", str37, "[7]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[8]" + "'", str38, "[8]");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test2820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2820");
        int[] intArray5 = new int[] { (short) 1, 0, (byte) 100, '4', (byte) 0 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass29 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 123, 52, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 52, 0]" + "'", str6, "[1, 0, 101, 52, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 52, 0]" + "'", str7, "[1, 0, 102, 52, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 52, 0]" + "'", str8, "[1, 0, 103, 52, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 52, 0]" + "'", str9, "[1, 0, 104, 52, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 52, 0]" + "'", str10, "[1, 0, 105, 52, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 52, 0]" + "'", str11, "[1, 0, 106, 52, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 52, 0]" + "'", str12, "[1, 0, 107, 52, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 108, 52, 0]" + "'", str13, "[1, 0, 108, 52, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 109, 52, 0]" + "'", str14, "[1, 0, 109, 52, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 110, 52, 0]" + "'", str15, "[1, 0, 110, 52, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 111, 52, 0]" + "'", str16, "[1, 0, 111, 52, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 0, 112, 52, 0]" + "'", str17, "[1, 0, 112, 52, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 0, 113, 52, 0]" + "'", str18, "[1, 0, 113, 52, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 0, 114, 52, 0]" + "'", str19, "[1, 0, 114, 52, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 0, 115, 52, 0]" + "'", str20, "[1, 0, 115, 52, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 116, 52, 0]" + "'", str21, "[1, 0, 116, 52, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 117, 52, 0]" + "'", str22, "[1, 0, 117, 52, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 118, 52, 0]" + "'", str23, "[1, 0, 118, 52, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 119, 52, 0]" + "'", str24, "[1, 0, 119, 52, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 0, 120, 52, 0]" + "'", str25, "[1, 0, 120, 52, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 0, 121, 52, 0]" + "'", str26, "[1, 0, 121, 52, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 0, 122, 52, 0]" + "'", str27, "[1, 0, 122, 52, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 0, 123, 52, 0]" + "'", str28, "[1, 0, 123, 52, 0]");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test2821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2821");
        int[] intArray5 = new int[] { (short) 100, (short) 100, (byte) 1, 100, (byte) 10 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 100, 3, 100, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 100, 2, 100, 10]" + "'", str6, "[100, 100, 2, 100, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 100, 3, 100, 10]" + "'", str7, "[100, 100, 3, 100, 10]");
    }

    @Test
    public void test2822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2822");
        int[] intArray5 = new int[] { 'a', 0, (byte) 100, (-1), (byte) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass16 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[97, 0, 110, -1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 0, 101, -1, 1]" + "'", str6, "[97, 0, 101, -1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 0, 102, -1, 1]" + "'", str7, "[97, 0, 102, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 0, 103, -1, 1]" + "'", str8, "[97, 0, 103, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 0, 104, -1, 1]" + "'", str9, "[97, 0, 104, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 0, 105, -1, 1]" + "'", str10, "[97, 0, 105, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 0, 106, -1, 1]" + "'", str11, "[97, 0, 106, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 0, 107, -1, 1]" + "'", str12, "[97, 0, 107, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 0, 108, -1, 1]" + "'", str13, "[97, 0, 108, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 0, 109, -1, 1]" + "'", str14, "[97, 0, 109, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[97, 0, 110, -1, 1]" + "'", str15, "[97, 0, 110, -1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test2823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2823");
        int[] intArray5 = new int[] { (byte) 0, (short) -1, ' ', (short) 10, (-1) };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass9 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, -1, 35, 10, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, -1, 33, 10, -1]" + "'", str6, "[0, -1, 33, 10, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, -1, 34, 10, -1]" + "'", str7, "[0, -1, 34, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, -1, 35, 10, -1]" + "'", str8, "[0, -1, 35, 10, -1]");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test2824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2824");
        int[] intArray1 = new int[] { 'a' };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[160]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[98]" + "'", str2, "[98]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[99]" + "'", str3, "[99]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100]" + "'", str4, "[100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[101]" + "'", str5, "[101]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[102]" + "'", str6, "[102]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[103]" + "'", str7, "[103]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[104]" + "'", str8, "[104]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[105]" + "'", str9, "[105]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[106]" + "'", str10, "[106]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[107]" + "'", str11, "[107]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[108]" + "'", str12, "[108]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[109]" + "'", str13, "[109]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[110]" + "'", str14, "[110]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[111]" + "'", str15, "[111]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[112]" + "'", str16, "[112]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[113]" + "'", str17, "[113]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[114]" + "'", str18, "[114]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[115]" + "'", str19, "[115]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[116]" + "'", str20, "[116]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[117]" + "'", str21, "[117]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[118]" + "'", str22, "[118]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[119]" + "'", str23, "[119]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[120]" + "'", str24, "[120]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[121]" + "'", str25, "[121]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[122]" + "'", str26, "[122]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[123]" + "'", str27, "[123]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[124]" + "'", str28, "[124]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[125]" + "'", str29, "[125]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[126]" + "'", str30, "[126]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[127]" + "'", str31, "[127]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[128]" + "'", str32, "[128]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[129]" + "'", str33, "[129]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[130]" + "'", str34, "[130]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[131]" + "'", str35, "[131]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[132]" + "'", str36, "[132]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[133]" + "'", str37, "[133]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[134]" + "'", str38, "[134]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[135]" + "'", str39, "[135]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[136]" + "'", str40, "[136]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[137]" + "'", str41, "[137]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[138]" + "'", str42, "[138]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[139]" + "'", str43, "[139]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[140]" + "'", str44, "[140]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[141]" + "'", str45, "[141]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[142]" + "'", str46, "[142]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[143]" + "'", str47, "[143]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[144]" + "'", str48, "[144]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[145]" + "'", str49, "[145]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[146]" + "'", str50, "[146]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[147]" + "'", str51, "[147]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[148]" + "'", str52, "[148]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[149]" + "'", str53, "[149]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[150]" + "'", str54, "[150]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[151]" + "'", str55, "[151]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[152]" + "'", str56, "[152]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[153]" + "'", str57, "[153]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[154]" + "'", str58, "[154]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[155]" + "'", str59, "[155]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[156]" + "'", str60, "[156]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[157]" + "'", str61, "[157]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[158]" + "'", str62, "[158]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[159]" + "'", str63, "[159]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[160]" + "'", str64, "[160]");
    }

    @Test
    public void test2825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2825");
        int[] intArray6 = new int[] { (byte) 0, (short) 100, 0, (-1), (short) -1, (byte) 1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 105, 7, 7, 4, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 100, 1, 0, -1, 1]" + "'", str7, "[0, 100, 1, 0, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 100, 2, 1, -1, 1]" + "'", str8, "[0, 100, 2, 1, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 100, 3, 2, -1, 1]" + "'", str9, "[0, 100, 3, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 100, 4, 3, -1, 1]" + "'", str10, "[0, 100, 4, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 100, 5, 4, -1, 1]" + "'", str11, "[0, 100, 5, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 100, 6, 5, -1, 1]" + "'", str12, "[0, 100, 6, 5, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 100, 7, 6, -1, 1]" + "'", str13, "[0, 100, 7, 6, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 100, 8, 7, -1, 1]" + "'", str14, "[0, 100, 8, 7, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 100, 9, 8, -1, 1]" + "'", str15, "[0, 100, 9, 8, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 100, 10, 9, -1, 1]" + "'", str16, "[0, 100, 10, 9, -1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 101, 0, 0, 0, 1]" + "'", str17, "[0, 101, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 101, 1, 1, 0, 1]" + "'", str18, "[0, 101, 1, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 101, 2, 2, 0, 1]" + "'", str19, "[0, 101, 2, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 101, 3, 3, 0, 1]" + "'", str20, "[0, 101, 3, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 101, 4, 4, 0, 1]" + "'", str21, "[0, 101, 4, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 101, 5, 5, 0, 1]" + "'", str22, "[0, 101, 5, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 101, 6, 6, 0, 1]" + "'", str23, "[0, 101, 6, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 101, 7, 7, 0, 1]" + "'", str24, "[0, 101, 7, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 101, 8, 8, 0, 1]" + "'", str25, "[0, 101, 8, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 101, 9, 9, 0, 1]" + "'", str26, "[0, 101, 9, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 102, 0, 0, 1, 1]" + "'", str27, "[0, 102, 0, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 102, 1, 1, 1, 1]" + "'", str28, "[0, 102, 1, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 102, 2, 2, 1, 1]" + "'", str29, "[0, 102, 2, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 102, 3, 3, 1, 1]" + "'", str30, "[0, 102, 3, 3, 1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 102, 4, 4, 1, 1]" + "'", str31, "[0, 102, 4, 4, 1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 102, 5, 5, 1, 1]" + "'", str32, "[0, 102, 5, 5, 1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 102, 6, 6, 1, 1]" + "'", str33, "[0, 102, 6, 6, 1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 102, 7, 7, 1, 1]" + "'", str34, "[0, 102, 7, 7, 1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 102, 8, 8, 1, 1]" + "'", str35, "[0, 102, 8, 8, 1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 102, 9, 9, 1, 1]" + "'", str36, "[0, 102, 9, 9, 1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 103, 0, 0, 2, 1]" + "'", str37, "[0, 103, 0, 0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 103, 1, 1, 2, 1]" + "'", str38, "[0, 103, 1, 1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 103, 2, 2, 2, 1]" + "'", str39, "[0, 103, 2, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 103, 3, 3, 2, 1]" + "'", str40, "[0, 103, 3, 3, 2, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 103, 4, 4, 2, 1]" + "'", str41, "[0, 103, 4, 4, 2, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 103, 5, 5, 2, 1]" + "'", str42, "[0, 103, 5, 5, 2, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 103, 6, 6, 2, 1]" + "'", str43, "[0, 103, 6, 6, 2, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 103, 7, 7, 2, 1]" + "'", str44, "[0, 103, 7, 7, 2, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 103, 8, 8, 2, 1]" + "'", str45, "[0, 103, 8, 8, 2, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 103, 9, 9, 2, 1]" + "'", str46, "[0, 103, 9, 9, 2, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 104, 0, 0, 3, 1]" + "'", str47, "[0, 104, 0, 0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 104, 1, 1, 3, 1]" + "'", str48, "[0, 104, 1, 1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 104, 2, 2, 3, 1]" + "'", str49, "[0, 104, 2, 2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 104, 3, 3, 3, 1]" + "'", str50, "[0, 104, 3, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 104, 4, 4, 3, 1]" + "'", str51, "[0, 104, 4, 4, 3, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 104, 5, 5, 3, 1]" + "'", str52, "[0, 104, 5, 5, 3, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 104, 6, 6, 3, 1]" + "'", str53, "[0, 104, 6, 6, 3, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 104, 7, 7, 3, 1]" + "'", str54, "[0, 104, 7, 7, 3, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, 104, 8, 8, 3, 1]" + "'", str55, "[0, 104, 8, 8, 3, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, 104, 9, 9, 3, 1]" + "'", str56, "[0, 104, 9, 9, 3, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, 105, 0, 0, 4, 1]" + "'", str57, "[0, 105, 0, 0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, 105, 1, 1, 4, 1]" + "'", str58, "[0, 105, 1, 1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, 105, 2, 2, 4, 1]" + "'", str59, "[0, 105, 2, 2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, 105, 3, 3, 4, 1]" + "'", str60, "[0, 105, 3, 3, 4, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, 105, 4, 4, 4, 1]" + "'", str61, "[0, 105, 4, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, 105, 5, 5, 4, 1]" + "'", str62, "[0, 105, 5, 5, 4, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[0, 105, 6, 6, 4, 1]" + "'", str63, "[0, 105, 6, 6, 4, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[0, 105, 7, 7, 4, 1]" + "'", str64, "[0, 105, 7, 7, 4, 1]");
    }

    @Test
    public void test2826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2826");
        int[] intArray4 = new int[] { (byte) -1, 10, (byte) 0, (short) 100 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str90 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[7, 6, 6, 108]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 11, 1, 100]" + "'", str5, "[-1, 11, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 12, 2, 100]" + "'", str6, "[-1, 12, 2, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 13, 3, 100]" + "'", str7, "[-1, 13, 3, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 14, 4, 100]" + "'", str8, "[-1, 14, 4, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 15, 5, 100]" + "'", str9, "[-1, 15, 5, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 16, 6, 100]" + "'", str10, "[-1, 16, 6, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 17, 7, 100]" + "'", str11, "[-1, 17, 7, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 18, 8, 100]" + "'", str12, "[-1, 18, 8, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 19, 9, 100]" + "'", str13, "[-1, 19, 9, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 0, 0, 101]" + "'", str14, "[0, 0, 0, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 1, 1, 101]" + "'", str15, "[0, 1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 2, 2, 101]" + "'", str16, "[0, 2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 3, 3, 101]" + "'", str17, "[0, 3, 3, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 4, 4, 101]" + "'", str18, "[0, 4, 4, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 5, 5, 101]" + "'", str19, "[0, 5, 5, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 6, 6, 101]" + "'", str20, "[0, 6, 6, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 7, 7, 101]" + "'", str21, "[0, 7, 7, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 8, 8, 101]" + "'", str22, "[0, 8, 8, 101]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 9, 9, 101]" + "'", str23, "[0, 9, 9, 101]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 0, 102]" + "'", str24, "[1, 0, 0, 102]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1, 1, 102]" + "'", str25, "[1, 1, 1, 102]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 2, 2, 102]" + "'", str26, "[1, 2, 2, 102]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 3, 3, 102]" + "'", str27, "[1, 3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 4, 4, 102]" + "'", str28, "[1, 4, 4, 102]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 5, 5, 102]" + "'", str29, "[1, 5, 5, 102]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 6, 6, 102]" + "'", str30, "[1, 6, 6, 102]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 7, 7, 102]" + "'", str31, "[1, 7, 7, 102]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 8, 8, 102]" + "'", str32, "[1, 8, 8, 102]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 9, 9, 102]" + "'", str33, "[1, 9, 9, 102]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 0, 0, 103]" + "'", str34, "[2, 0, 0, 103]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 1, 1, 103]" + "'", str35, "[2, 1, 1, 103]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[2, 2, 2, 103]" + "'", str36, "[2, 2, 2, 103]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[2, 3, 3, 103]" + "'", str37, "[2, 3, 3, 103]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[2, 4, 4, 103]" + "'", str38, "[2, 4, 4, 103]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[2, 5, 5, 103]" + "'", str39, "[2, 5, 5, 103]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[2, 6, 6, 103]" + "'", str40, "[2, 6, 6, 103]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[2, 7, 7, 103]" + "'", str41, "[2, 7, 7, 103]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[2, 8, 8, 103]" + "'", str42, "[2, 8, 8, 103]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2, 9, 9, 103]" + "'", str43, "[2, 9, 9, 103]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 0, 0, 104]" + "'", str44, "[3, 0, 0, 104]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 1, 1, 104]" + "'", str45, "[3, 1, 1, 104]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 2, 2, 104]" + "'", str46, "[3, 2, 2, 104]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[3, 3, 3, 104]" + "'", str47, "[3, 3, 3, 104]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[3, 4, 4, 104]" + "'", str48, "[3, 4, 4, 104]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[3, 5, 5, 104]" + "'", str49, "[3, 5, 5, 104]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[3, 6, 6, 104]" + "'", str50, "[3, 6, 6, 104]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[3, 7, 7, 104]" + "'", str51, "[3, 7, 7, 104]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[3, 8, 8, 104]" + "'", str52, "[3, 8, 8, 104]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[3, 9, 9, 104]" + "'", str53, "[3, 9, 9, 104]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[4, 0, 0, 105]" + "'", str54, "[4, 0, 0, 105]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[4, 1, 1, 105]" + "'", str55, "[4, 1, 1, 105]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4, 2, 2, 105]" + "'", str56, "[4, 2, 2, 105]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[4, 3, 3, 105]" + "'", str57, "[4, 3, 3, 105]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[4, 4, 4, 105]" + "'", str58, "[4, 4, 4, 105]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[4, 5, 5, 105]" + "'", str59, "[4, 5, 5, 105]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[4, 6, 6, 105]" + "'", str60, "[4, 6, 6, 105]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[4, 7, 7, 105]" + "'", str61, "[4, 7, 7, 105]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[4, 8, 8, 105]" + "'", str62, "[4, 8, 8, 105]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[4, 9, 9, 105]" + "'", str63, "[4, 9, 9, 105]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[5, 0, 0, 106]" + "'", str64, "[5, 0, 0, 106]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[5, 1, 1, 106]" + "'", str65, "[5, 1, 1, 106]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[5, 2, 2, 106]" + "'", str66, "[5, 2, 2, 106]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[5, 3, 3, 106]" + "'", str67, "[5, 3, 3, 106]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[5, 4, 4, 106]" + "'", str68, "[5, 4, 4, 106]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[5, 5, 5, 106]" + "'", str69, "[5, 5, 5, 106]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[5, 6, 6, 106]" + "'", str70, "[5, 6, 6, 106]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[5, 7, 7, 106]" + "'", str71, "[5, 7, 7, 106]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[5, 8, 8, 106]" + "'", str72, "[5, 8, 8, 106]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[5, 9, 9, 106]" + "'", str73, "[5, 9, 9, 106]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[6, 0, 0, 107]" + "'", str74, "[6, 0, 0, 107]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[6, 1, 1, 107]" + "'", str75, "[6, 1, 1, 107]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[6, 2, 2, 107]" + "'", str76, "[6, 2, 2, 107]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[6, 3, 3, 107]" + "'", str77, "[6, 3, 3, 107]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[6, 4, 4, 107]" + "'", str78, "[6, 4, 4, 107]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[6, 5, 5, 107]" + "'", str79, "[6, 5, 5, 107]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[6, 6, 6, 107]" + "'", str80, "[6, 6, 6, 107]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[6, 7, 7, 107]" + "'", str81, "[6, 7, 7, 107]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[6, 8, 8, 107]" + "'", str82, "[6, 8, 8, 107]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[6, 9, 9, 107]" + "'", str83, "[6, 9, 9, 107]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[7, 0, 0, 108]" + "'", str84, "[7, 0, 0, 108]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[7, 1, 1, 108]" + "'", str85, "[7, 1, 1, 108]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[7, 2, 2, 108]" + "'", str86, "[7, 2, 2, 108]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[7, 3, 3, 108]" + "'", str87, "[7, 3, 3, 108]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[7, 4, 4, 108]" + "'", str88, "[7, 4, 4, 108]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[7, 5, 5, 108]" + "'", str89, "[7, 5, 5, 108]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[7, 6, 6, 108]" + "'", str90, "[7, 6, 6, 108]");
    }

    @Test
    public void test2827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2827");
        int[] intArray5 = new int[] { 1, (byte) 0, (short) 100, 0, (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass34 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 128, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 0, 1]" + "'", str6, "[1, 0, 101, 0, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 0, 1]" + "'", str7, "[1, 0, 102, 0, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 0, 1]" + "'", str8, "[1, 0, 103, 0, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 0, 1]" + "'", str9, "[1, 0, 104, 0, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 0, 1]" + "'", str10, "[1, 0, 105, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 0, 1]" + "'", str11, "[1, 0, 106, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 0, 1]" + "'", str12, "[1, 0, 107, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 108, 0, 1]" + "'", str13, "[1, 0, 108, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 109, 0, 1]" + "'", str14, "[1, 0, 109, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 110, 0, 1]" + "'", str15, "[1, 0, 110, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 111, 0, 1]" + "'", str16, "[1, 0, 111, 0, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 0, 112, 0, 1]" + "'", str17, "[1, 0, 112, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 0, 113, 0, 1]" + "'", str18, "[1, 0, 113, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 0, 114, 0, 1]" + "'", str19, "[1, 0, 114, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 0, 115, 0, 1]" + "'", str20, "[1, 0, 115, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 116, 0, 1]" + "'", str21, "[1, 0, 116, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 117, 0, 1]" + "'", str22, "[1, 0, 117, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 118, 0, 1]" + "'", str23, "[1, 0, 118, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 119, 0, 1]" + "'", str24, "[1, 0, 119, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 0, 120, 0, 1]" + "'", str25, "[1, 0, 120, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 0, 121, 0, 1]" + "'", str26, "[1, 0, 121, 0, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 0, 122, 0, 1]" + "'", str27, "[1, 0, 122, 0, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 0, 123, 0, 1]" + "'", str28, "[1, 0, 123, 0, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 0, 124, 0, 1]" + "'", str29, "[1, 0, 124, 0, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 0, 125, 0, 1]" + "'", str30, "[1, 0, 125, 0, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 126, 0, 1]" + "'", str31, "[1, 0, 126, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 127, 0, 1]" + "'", str32, "[1, 0, 127, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 0, 128, 0, 1]" + "'", str33, "[1, 0, 128, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test2828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2828");
        int[] intArray3 = new int[] { 0, (-1), (short) 100 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass8 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 3, 100]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 0, 100]" + "'", str4, "[0, 0, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 1, 100]" + "'", str5, "[0, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 2, 100]" + "'", str6, "[0, 2, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 3, 100]" + "'", str7, "[0, 3, 100]");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test2829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2829");
        int[] intArray3 = new int[] { (byte) 1, 'a', (short) 100 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass75 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 168, 100]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 98, 100]" + "'", str4, "[1, 98, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 99, 100]" + "'", str5, "[1, 99, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 100, 100]" + "'", str6, "[1, 100, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 101, 100]" + "'", str7, "[1, 101, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 102, 100]" + "'", str8, "[1, 102, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 103, 100]" + "'", str9, "[1, 103, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 104, 100]" + "'", str10, "[1, 104, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 105, 100]" + "'", str11, "[1, 105, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 106, 100]" + "'", str12, "[1, 106, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 107, 100]" + "'", str13, "[1, 107, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 108, 100]" + "'", str14, "[1, 108, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 109, 100]" + "'", str15, "[1, 109, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 110, 100]" + "'", str16, "[1, 110, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 111, 100]" + "'", str17, "[1, 111, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 112, 100]" + "'", str18, "[1, 112, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 113, 100]" + "'", str19, "[1, 113, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 114, 100]" + "'", str20, "[1, 114, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 115, 100]" + "'", str21, "[1, 115, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 116, 100]" + "'", str22, "[1, 116, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 117, 100]" + "'", str23, "[1, 117, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 118, 100]" + "'", str24, "[1, 118, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 119, 100]" + "'", str25, "[1, 119, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 120, 100]" + "'", str26, "[1, 120, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 121, 100]" + "'", str27, "[1, 121, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 122, 100]" + "'", str28, "[1, 122, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 123, 100]" + "'", str29, "[1, 123, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 124, 100]" + "'", str30, "[1, 124, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 125, 100]" + "'", str31, "[1, 125, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 126, 100]" + "'", str32, "[1, 126, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 127, 100]" + "'", str33, "[1, 127, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 128, 100]" + "'", str34, "[1, 128, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 129, 100]" + "'", str35, "[1, 129, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 130, 100]" + "'", str36, "[1, 130, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 131, 100]" + "'", str37, "[1, 131, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 132, 100]" + "'", str38, "[1, 132, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 133, 100]" + "'", str39, "[1, 133, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 134, 100]" + "'", str40, "[1, 134, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 135, 100]" + "'", str41, "[1, 135, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 136, 100]" + "'", str42, "[1, 136, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 137, 100]" + "'", str43, "[1, 137, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 138, 100]" + "'", str44, "[1, 138, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 139, 100]" + "'", str45, "[1, 139, 100]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 140, 100]" + "'", str46, "[1, 140, 100]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 141, 100]" + "'", str47, "[1, 141, 100]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 142, 100]" + "'", str48, "[1, 142, 100]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 143, 100]" + "'", str49, "[1, 143, 100]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 144, 100]" + "'", str50, "[1, 144, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 145, 100]" + "'", str51, "[1, 145, 100]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 146, 100]" + "'", str52, "[1, 146, 100]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 147, 100]" + "'", str53, "[1, 147, 100]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 148, 100]" + "'", str54, "[1, 148, 100]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 149, 100]" + "'", str55, "[1, 149, 100]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 150, 100]" + "'", str56, "[1, 150, 100]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 151, 100]" + "'", str57, "[1, 151, 100]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 152, 100]" + "'", str58, "[1, 152, 100]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 153, 100]" + "'", str59, "[1, 153, 100]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 154, 100]" + "'", str60, "[1, 154, 100]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 155, 100]" + "'", str61, "[1, 155, 100]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 156, 100]" + "'", str62, "[1, 156, 100]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 157, 100]" + "'", str63, "[1, 157, 100]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 158, 100]" + "'", str64, "[1, 158, 100]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 159, 100]" + "'", str65, "[1, 159, 100]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 160, 100]" + "'", str66, "[1, 160, 100]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 161, 100]" + "'", str67, "[1, 161, 100]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 162, 100]" + "'", str68, "[1, 162, 100]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 163, 100]" + "'", str69, "[1, 163, 100]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 164, 100]" + "'", str70, "[1, 164, 100]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 165, 100]" + "'", str71, "[1, 165, 100]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 166, 100]" + "'", str72, "[1, 166, 100]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 167, 100]" + "'", str73, "[1, 167, 100]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 168, 100]" + "'", str74, "[1, 168, 100]");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test2830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2830");
        int[] intArray6 = new int[] { 100, (byte) 10, 'a', 'a', (byte) 100, ' ' };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass16 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 10, 106, 106, 100, 32]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 10, 98, 98, 100, 32]" + "'", str7, "[100, 10, 98, 98, 100, 32]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 10, 99, 99, 100, 32]" + "'", str8, "[100, 10, 99, 99, 100, 32]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 10, 100, 100, 100, 32]" + "'", str9, "[100, 10, 100, 100, 100, 32]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 10, 101, 101, 100, 32]" + "'", str10, "[100, 10, 101, 101, 100, 32]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 10, 102, 102, 100, 32]" + "'", str11, "[100, 10, 102, 102, 100, 32]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 10, 103, 103, 100, 32]" + "'", str12, "[100, 10, 103, 103, 100, 32]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 10, 104, 104, 100, 32]" + "'", str13, "[100, 10, 104, 104, 100, 32]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 10, 105, 105, 100, 32]" + "'", str14, "[100, 10, 105, 105, 100, 32]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 10, 106, 106, 100, 32]" + "'", str15, "[100, 10, 106, 106, 100, 32]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test2831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2831");
        int[] intArray4 = new int[] { 1, (short) 10, (short) 10, (short) -1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass74 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 79, 79, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 11, 11, -1]" + "'", str5, "[1, 11, 11, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 12, 12, -1]" + "'", str6, "[1, 12, 12, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 13, 13, -1]" + "'", str7, "[1, 13, 13, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 14, 14, -1]" + "'", str8, "[1, 14, 14, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 15, 15, -1]" + "'", str9, "[1, 15, 15, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 16, 16, -1]" + "'", str10, "[1, 16, 16, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 17, 17, -1]" + "'", str11, "[1, 17, 17, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 18, 18, -1]" + "'", str12, "[1, 18, 18, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 19, 19, -1]" + "'", str13, "[1, 19, 19, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 20, 20, -1]" + "'", str14, "[1, 20, 20, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 21, 21, -1]" + "'", str15, "[1, 21, 21, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 22, 22, -1]" + "'", str16, "[1, 22, 22, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 23, 23, -1]" + "'", str17, "[1, 23, 23, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 24, 24, -1]" + "'", str18, "[1, 24, 24, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 25, 25, -1]" + "'", str19, "[1, 25, 25, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 26, 26, -1]" + "'", str20, "[1, 26, 26, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 27, 27, -1]" + "'", str21, "[1, 27, 27, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 28, 28, -1]" + "'", str22, "[1, 28, 28, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 29, 29, -1]" + "'", str23, "[1, 29, 29, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 30, 30, -1]" + "'", str24, "[1, 30, 30, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 31, 31, -1]" + "'", str25, "[1, 31, 31, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 32, 32, -1]" + "'", str26, "[1, 32, 32, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 33, 33, -1]" + "'", str27, "[1, 33, 33, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 34, 34, -1]" + "'", str28, "[1, 34, 34, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 35, 35, -1]" + "'", str29, "[1, 35, 35, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 36, 36, -1]" + "'", str30, "[1, 36, 36, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 37, 37, -1]" + "'", str31, "[1, 37, 37, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 38, 38, -1]" + "'", str32, "[1, 38, 38, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 39, 39, -1]" + "'", str33, "[1, 39, 39, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 40, 40, -1]" + "'", str34, "[1, 40, 40, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 41, 41, -1]" + "'", str35, "[1, 41, 41, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 42, 42, -1]" + "'", str36, "[1, 42, 42, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 43, 43, -1]" + "'", str37, "[1, 43, 43, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 44, 44, -1]" + "'", str38, "[1, 44, 44, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 45, 45, -1]" + "'", str39, "[1, 45, 45, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 46, 46, -1]" + "'", str40, "[1, 46, 46, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 47, 47, -1]" + "'", str41, "[1, 47, 47, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 48, 48, -1]" + "'", str42, "[1, 48, 48, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 49, 49, -1]" + "'", str43, "[1, 49, 49, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 50, 50, -1]" + "'", str44, "[1, 50, 50, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 51, 51, -1]" + "'", str45, "[1, 51, 51, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 52, 52, -1]" + "'", str46, "[1, 52, 52, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 53, 53, -1]" + "'", str47, "[1, 53, 53, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 54, 54, -1]" + "'", str48, "[1, 54, 54, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 55, 55, -1]" + "'", str49, "[1, 55, 55, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 56, 56, -1]" + "'", str50, "[1, 56, 56, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 57, 57, -1]" + "'", str51, "[1, 57, 57, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 58, 58, -1]" + "'", str52, "[1, 58, 58, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 59, 59, -1]" + "'", str53, "[1, 59, 59, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 60, 60, -1]" + "'", str54, "[1, 60, 60, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 61, 61, -1]" + "'", str55, "[1, 61, 61, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 62, 62, -1]" + "'", str56, "[1, 62, 62, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 63, 63, -1]" + "'", str57, "[1, 63, 63, -1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 64, 64, -1]" + "'", str58, "[1, 64, 64, -1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 65, 65, -1]" + "'", str59, "[1, 65, 65, -1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 66, 66, -1]" + "'", str60, "[1, 66, 66, -1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 67, 67, -1]" + "'", str61, "[1, 67, 67, -1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 68, 68, -1]" + "'", str62, "[1, 68, 68, -1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 69, 69, -1]" + "'", str63, "[1, 69, 69, -1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 70, 70, -1]" + "'", str64, "[1, 70, 70, -1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 71, 71, -1]" + "'", str65, "[1, 71, 71, -1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 72, 72, -1]" + "'", str66, "[1, 72, 72, -1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 73, 73, -1]" + "'", str67, "[1, 73, 73, -1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 74, 74, -1]" + "'", str68, "[1, 74, 74, -1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 75, 75, -1]" + "'", str69, "[1, 75, 75, -1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 76, 76, -1]" + "'", str70, "[1, 76, 76, -1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 77, 77, -1]" + "'", str71, "[1, 77, 77, -1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 78, 78, -1]" + "'", str72, "[1, 78, 78, -1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 79, 79, -1]" + "'", str73, "[1, 79, 79, -1]");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test2832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2832");
        int[] intArray4 = new int[] { (byte) 10, 'a', (byte) -1, '#' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass90 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[18, 4, 4, 43]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 98, 0, 35]" + "'", str5, "[10, 98, 0, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 99, 1, 35]" + "'", str6, "[10, 99, 1, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 100, 2, 35]" + "'", str7, "[10, 100, 2, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 101, 3, 35]" + "'", str8, "[10, 101, 3, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 102, 4, 35]" + "'", str9, "[10, 102, 4, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 103, 5, 35]" + "'", str10, "[10, 103, 5, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 104, 6, 35]" + "'", str11, "[10, 104, 6, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 105, 7, 35]" + "'", str12, "[10, 105, 7, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 106, 8, 35]" + "'", str13, "[10, 106, 8, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 107, 9, 35]" + "'", str14, "[10, 107, 9, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[11, 0, 0, 36]" + "'", str15, "[11, 0, 0, 36]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[11, 1, 1, 36]" + "'", str16, "[11, 1, 1, 36]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[11, 2, 2, 36]" + "'", str17, "[11, 2, 2, 36]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[11, 3, 3, 36]" + "'", str18, "[11, 3, 3, 36]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[11, 4, 4, 36]" + "'", str19, "[11, 4, 4, 36]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[11, 5, 5, 36]" + "'", str20, "[11, 5, 5, 36]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[11, 6, 6, 36]" + "'", str21, "[11, 6, 6, 36]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[11, 7, 7, 36]" + "'", str22, "[11, 7, 7, 36]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[11, 8, 8, 36]" + "'", str23, "[11, 8, 8, 36]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[11, 9, 9, 36]" + "'", str24, "[11, 9, 9, 36]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[12, 0, 0, 37]" + "'", str25, "[12, 0, 0, 37]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[12, 1, 1, 37]" + "'", str26, "[12, 1, 1, 37]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[12, 2, 2, 37]" + "'", str27, "[12, 2, 2, 37]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[12, 3, 3, 37]" + "'", str28, "[12, 3, 3, 37]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[12, 4, 4, 37]" + "'", str29, "[12, 4, 4, 37]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[12, 5, 5, 37]" + "'", str30, "[12, 5, 5, 37]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[12, 6, 6, 37]" + "'", str31, "[12, 6, 6, 37]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[12, 7, 7, 37]" + "'", str32, "[12, 7, 7, 37]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[12, 8, 8, 37]" + "'", str33, "[12, 8, 8, 37]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[12, 9, 9, 37]" + "'", str34, "[12, 9, 9, 37]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[13, 0, 0, 38]" + "'", str35, "[13, 0, 0, 38]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[13, 1, 1, 38]" + "'", str36, "[13, 1, 1, 38]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[13, 2, 2, 38]" + "'", str37, "[13, 2, 2, 38]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[13, 3, 3, 38]" + "'", str38, "[13, 3, 3, 38]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[13, 4, 4, 38]" + "'", str39, "[13, 4, 4, 38]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[13, 5, 5, 38]" + "'", str40, "[13, 5, 5, 38]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[13, 6, 6, 38]" + "'", str41, "[13, 6, 6, 38]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[13, 7, 7, 38]" + "'", str42, "[13, 7, 7, 38]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[13, 8, 8, 38]" + "'", str43, "[13, 8, 8, 38]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[13, 9, 9, 38]" + "'", str44, "[13, 9, 9, 38]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[14, 0, 0, 39]" + "'", str45, "[14, 0, 0, 39]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[14, 1, 1, 39]" + "'", str46, "[14, 1, 1, 39]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[14, 2, 2, 39]" + "'", str47, "[14, 2, 2, 39]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[14, 3, 3, 39]" + "'", str48, "[14, 3, 3, 39]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[14, 4, 4, 39]" + "'", str49, "[14, 4, 4, 39]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[14, 5, 5, 39]" + "'", str50, "[14, 5, 5, 39]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[14, 6, 6, 39]" + "'", str51, "[14, 6, 6, 39]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[14, 7, 7, 39]" + "'", str52, "[14, 7, 7, 39]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[14, 8, 8, 39]" + "'", str53, "[14, 8, 8, 39]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[14, 9, 9, 39]" + "'", str54, "[14, 9, 9, 39]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[15, 0, 0, 40]" + "'", str55, "[15, 0, 0, 40]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[15, 1, 1, 40]" + "'", str56, "[15, 1, 1, 40]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[15, 2, 2, 40]" + "'", str57, "[15, 2, 2, 40]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[15, 3, 3, 40]" + "'", str58, "[15, 3, 3, 40]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[15, 4, 4, 40]" + "'", str59, "[15, 4, 4, 40]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[15, 5, 5, 40]" + "'", str60, "[15, 5, 5, 40]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[15, 6, 6, 40]" + "'", str61, "[15, 6, 6, 40]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[15, 7, 7, 40]" + "'", str62, "[15, 7, 7, 40]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[15, 8, 8, 40]" + "'", str63, "[15, 8, 8, 40]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[15, 9, 9, 40]" + "'", str64, "[15, 9, 9, 40]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[16, 0, 0, 41]" + "'", str65, "[16, 0, 0, 41]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[16, 1, 1, 41]" + "'", str66, "[16, 1, 1, 41]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[16, 2, 2, 41]" + "'", str67, "[16, 2, 2, 41]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[16, 3, 3, 41]" + "'", str68, "[16, 3, 3, 41]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[16, 4, 4, 41]" + "'", str69, "[16, 4, 4, 41]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[16, 5, 5, 41]" + "'", str70, "[16, 5, 5, 41]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[16, 6, 6, 41]" + "'", str71, "[16, 6, 6, 41]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[16, 7, 7, 41]" + "'", str72, "[16, 7, 7, 41]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[16, 8, 8, 41]" + "'", str73, "[16, 8, 8, 41]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[16, 9, 9, 41]" + "'", str74, "[16, 9, 9, 41]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[17, 0, 0, 42]" + "'", str75, "[17, 0, 0, 42]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[17, 1, 1, 42]" + "'", str76, "[17, 1, 1, 42]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[17, 2, 2, 42]" + "'", str77, "[17, 2, 2, 42]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[17, 3, 3, 42]" + "'", str78, "[17, 3, 3, 42]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[17, 4, 4, 42]" + "'", str79, "[17, 4, 4, 42]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[17, 5, 5, 42]" + "'", str80, "[17, 5, 5, 42]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[17, 6, 6, 42]" + "'", str81, "[17, 6, 6, 42]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[17, 7, 7, 42]" + "'", str82, "[17, 7, 7, 42]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[17, 8, 8, 42]" + "'", str83, "[17, 8, 8, 42]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[17, 9, 9, 42]" + "'", str84, "[17, 9, 9, 42]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[18, 0, 0, 43]" + "'", str85, "[18, 0, 0, 43]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[18, 1, 1, 43]" + "'", str86, "[18, 1, 1, 43]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[18, 2, 2, 43]" + "'", str87, "[18, 2, 2, 43]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[18, 3, 3, 43]" + "'", str88, "[18, 3, 3, 43]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[18, 4, 4, 43]" + "'", str89, "[18, 4, 4, 43]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2833");
        int[] intArray3 = new int[] { ' ', (-1), 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str90 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[40, 6, 9]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[32, 0, 1]" + "'", str4, "[32, 0, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[32, 1, 1]" + "'", str5, "[32, 1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 2, 1]" + "'", str6, "[32, 2, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 3, 1]" + "'", str7, "[32, 3, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 4, 1]" + "'", str8, "[32, 4, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 5, 1]" + "'", str9, "[32, 5, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 6, 1]" + "'", str10, "[32, 6, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 7, 1]" + "'", str11, "[32, 7, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 8, 1]" + "'", str12, "[32, 8, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 9, 1]" + "'", str13, "[32, 9, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[33, 0, 2]" + "'", str14, "[33, 0, 2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[33, 1, 2]" + "'", str15, "[33, 1, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[33, 2, 2]" + "'", str16, "[33, 2, 2]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[33, 3, 2]" + "'", str17, "[33, 3, 2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[33, 4, 2]" + "'", str18, "[33, 4, 2]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[33, 5, 2]" + "'", str19, "[33, 5, 2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[33, 6, 2]" + "'", str20, "[33, 6, 2]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[33, 7, 2]" + "'", str21, "[33, 7, 2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[33, 8, 2]" + "'", str22, "[33, 8, 2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[33, 9, 2]" + "'", str23, "[33, 9, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[34, 0, 3]" + "'", str24, "[34, 0, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34, 1, 3]" + "'", str25, "[34, 1, 3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[34, 2, 3]" + "'", str26, "[34, 2, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[34, 3, 3]" + "'", str27, "[34, 3, 3]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[34, 4, 3]" + "'", str28, "[34, 4, 3]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[34, 5, 3]" + "'", str29, "[34, 5, 3]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[34, 6, 3]" + "'", str30, "[34, 6, 3]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[34, 7, 3]" + "'", str31, "[34, 7, 3]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[34, 8, 3]" + "'", str32, "[34, 8, 3]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[34, 9, 3]" + "'", str33, "[34, 9, 3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 0, 4]" + "'", str34, "[35, 0, 4]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 1, 4]" + "'", str35, "[35, 1, 4]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 2, 4]" + "'", str36, "[35, 2, 4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 3, 4]" + "'", str37, "[35, 3, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 4, 4]" + "'", str38, "[35, 4, 4]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 5, 4]" + "'", str39, "[35, 5, 4]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 6, 4]" + "'", str40, "[35, 6, 4]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 7, 4]" + "'", str41, "[35, 7, 4]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 8, 4]" + "'", str42, "[35, 8, 4]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 9, 4]" + "'", str43, "[35, 9, 4]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[36, 0, 5]" + "'", str44, "[36, 0, 5]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[36, 1, 5]" + "'", str45, "[36, 1, 5]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[36, 2, 5]" + "'", str46, "[36, 2, 5]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[36, 3, 5]" + "'", str47, "[36, 3, 5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[36, 4, 5]" + "'", str48, "[36, 4, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[36, 5, 5]" + "'", str49, "[36, 5, 5]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[36, 6, 5]" + "'", str50, "[36, 6, 5]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[36, 7, 5]" + "'", str51, "[36, 7, 5]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[36, 8, 5]" + "'", str52, "[36, 8, 5]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[36, 9, 5]" + "'", str53, "[36, 9, 5]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[37, 0, 6]" + "'", str54, "[37, 0, 6]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[37, 1, 6]" + "'", str55, "[37, 1, 6]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[37, 2, 6]" + "'", str56, "[37, 2, 6]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[37, 3, 6]" + "'", str57, "[37, 3, 6]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[37, 4, 6]" + "'", str58, "[37, 4, 6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[37, 5, 6]" + "'", str59, "[37, 5, 6]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[37, 6, 6]" + "'", str60, "[37, 6, 6]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[37, 7, 6]" + "'", str61, "[37, 7, 6]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[37, 8, 6]" + "'", str62, "[37, 8, 6]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[37, 9, 6]" + "'", str63, "[37, 9, 6]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[38, 0, 7]" + "'", str64, "[38, 0, 7]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[38, 1, 7]" + "'", str65, "[38, 1, 7]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[38, 2, 7]" + "'", str66, "[38, 2, 7]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[38, 3, 7]" + "'", str67, "[38, 3, 7]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[38, 4, 7]" + "'", str68, "[38, 4, 7]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[38, 5, 7]" + "'", str69, "[38, 5, 7]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[38, 6, 7]" + "'", str70, "[38, 6, 7]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[38, 7, 7]" + "'", str71, "[38, 7, 7]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[38, 8, 7]" + "'", str72, "[38, 8, 7]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[38, 9, 7]" + "'", str73, "[38, 9, 7]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[39, 0, 8]" + "'", str74, "[39, 0, 8]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[39, 1, 8]" + "'", str75, "[39, 1, 8]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[39, 2, 8]" + "'", str76, "[39, 2, 8]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[39, 3, 8]" + "'", str77, "[39, 3, 8]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[39, 4, 8]" + "'", str78, "[39, 4, 8]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[39, 5, 8]" + "'", str79, "[39, 5, 8]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[39, 6, 8]" + "'", str80, "[39, 6, 8]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[39, 7, 8]" + "'", str81, "[39, 7, 8]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[39, 8, 8]" + "'", str82, "[39, 8, 8]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[39, 9, 8]" + "'", str83, "[39, 9, 8]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[40, 0, 9]" + "'", str84, "[40, 0, 9]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[40, 1, 9]" + "'", str85, "[40, 1, 9]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[40, 2, 9]" + "'", str86, "[40, 2, 9]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[40, 3, 9]" + "'", str87, "[40, 3, 9]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[40, 4, 9]" + "'", str88, "[40, 4, 9]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[40, 5, 9]" + "'", str89, "[40, 5, 9]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[40, 6, 9]" + "'", str90, "[40, 6, 9]");
    }

    @Test
    public void test2834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2834");
        int[] intArray2 = new int[] { 'a', 1 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass33 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[1, 1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[98, 2]" + "'", str3, "[98, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[99, 3]" + "'", str4, "[99, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 4]" + "'", str5, "[100, 4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[101, 5]" + "'", str6, "[101, 5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[102, 6]" + "'", str7, "[102, 6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[103, 7]" + "'", str8, "[103, 7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[104, 8]" + "'", str9, "[104, 8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[105, 9]" + "'", str10, "[105, 9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 2]" + "'", str13, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3, 3]" + "'", str14, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4, 4]" + "'", str15, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5, 5]" + "'", str16, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6, 6]" + "'", str17, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7, 7]" + "'", str18, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8, 8]" + "'", str19, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9, 9]" + "'", str20, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 2]" + "'", str23, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 3]" + "'", str24, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4, 4]" + "'", str25, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5, 5]" + "'", str26, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6, 6]" + "'", str27, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7, 7]" + "'", str28, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8, 8]" + "'", str29, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9, 9]" + "'", str30, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 1]" + "'", str31, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1]" + "'", str32, "[1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test2835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2835");
        int[] intArray1 = new int[] { (byte) -1 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1]" + "'", str32, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1]" + "'", str33, "[1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2]" + "'", str34, "[2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3]" + "'", str35, "[3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4]" + "'", str36, "[4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5]" + "'", str37, "[5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6]" + "'", str38, "[6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7]" + "'", str39, "[7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8]" + "'", str40, "[8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9]" + "'", str41, "[9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1]" + "'", str42, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1]" + "'", str43, "[1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2]" + "'", str44, "[2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3]" + "'", str45, "[3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4]" + "'", str46, "[4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5]" + "'", str47, "[5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6]" + "'", str48, "[6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7]" + "'", str49, "[7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8]" + "'", str50, "[8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9]" + "'", str51, "[9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1]" + "'", str52, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1]" + "'", str53, "[1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2]" + "'", str54, "[2]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[3]" + "'", str55, "[3]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4]" + "'", str56, "[4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5]" + "'", str57, "[5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6]" + "'", str58, "[6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[7]" + "'", str59, "[7]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[8]" + "'", str60, "[8]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[9]" + "'", str61, "[9]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 1]" + "'", str62, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1]" + "'", str63, "[1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[2]" + "'", str64, "[2]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[3]" + "'", str65, "[3]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[4]" + "'", str66, "[4]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[5]" + "'", str67, "[5]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[6]" + "'", str68, "[6]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[7]" + "'", str69, "[7]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[8]" + "'", str70, "[8]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[9]" + "'", str71, "[9]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 1]" + "'", str72, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1]" + "'", str73, "[1]");
    }

    @Test
    public void test2836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2836");
        int[] intArray1 = new int[] { 'a' };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass63 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[158]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[98]" + "'", str2, "[98]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[99]" + "'", str3, "[99]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[100]" + "'", str4, "[100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[101]" + "'", str5, "[101]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[102]" + "'", str6, "[102]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[103]" + "'", str7, "[103]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[104]" + "'", str8, "[104]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[105]" + "'", str9, "[105]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[106]" + "'", str10, "[106]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[107]" + "'", str11, "[107]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[108]" + "'", str12, "[108]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[109]" + "'", str13, "[109]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[110]" + "'", str14, "[110]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[111]" + "'", str15, "[111]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[112]" + "'", str16, "[112]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[113]" + "'", str17, "[113]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[114]" + "'", str18, "[114]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[115]" + "'", str19, "[115]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[116]" + "'", str20, "[116]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[117]" + "'", str21, "[117]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[118]" + "'", str22, "[118]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[119]" + "'", str23, "[119]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[120]" + "'", str24, "[120]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[121]" + "'", str25, "[121]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[122]" + "'", str26, "[122]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[123]" + "'", str27, "[123]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[124]" + "'", str28, "[124]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[125]" + "'", str29, "[125]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[126]" + "'", str30, "[126]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[127]" + "'", str31, "[127]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[128]" + "'", str32, "[128]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[129]" + "'", str33, "[129]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[130]" + "'", str34, "[130]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[131]" + "'", str35, "[131]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[132]" + "'", str36, "[132]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[133]" + "'", str37, "[133]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[134]" + "'", str38, "[134]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[135]" + "'", str39, "[135]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[136]" + "'", str40, "[136]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[137]" + "'", str41, "[137]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[138]" + "'", str42, "[138]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[139]" + "'", str43, "[139]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[140]" + "'", str44, "[140]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[141]" + "'", str45, "[141]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[142]" + "'", str46, "[142]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[143]" + "'", str47, "[143]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[144]" + "'", str48, "[144]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[145]" + "'", str49, "[145]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[146]" + "'", str50, "[146]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[147]" + "'", str51, "[147]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[148]" + "'", str52, "[148]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[149]" + "'", str53, "[149]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[150]" + "'", str54, "[150]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[151]" + "'", str55, "[151]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[152]" + "'", str56, "[152]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[153]" + "'", str57, "[153]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[154]" + "'", str58, "[154]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[155]" + "'", str59, "[155]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[156]" + "'", str60, "[156]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[157]" + "'", str61, "[157]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[158]" + "'", str62, "[158]");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test2837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2837");
        int[] intArray4 = new int[] { (byte) -1, 1, 100, '#' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 43, 142, 35]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 2, 101, 35]" + "'", str5, "[-1, 2, 101, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 3, 102, 35]" + "'", str6, "[-1, 3, 102, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 4, 103, 35]" + "'", str7, "[-1, 4, 103, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 5, 104, 35]" + "'", str8, "[-1, 5, 104, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 6, 105, 35]" + "'", str9, "[-1, 6, 105, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 7, 106, 35]" + "'", str10, "[-1, 7, 106, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 8, 107, 35]" + "'", str11, "[-1, 8, 107, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 9, 108, 35]" + "'", str12, "[-1, 9, 108, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 10, 109, 35]" + "'", str13, "[-1, 10, 109, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 11, 110, 35]" + "'", str14, "[-1, 11, 110, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 12, 111, 35]" + "'", str15, "[-1, 12, 111, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 13, 112, 35]" + "'", str16, "[-1, 13, 112, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 14, 113, 35]" + "'", str17, "[-1, 14, 113, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 15, 114, 35]" + "'", str18, "[-1, 15, 114, 35]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 16, 115, 35]" + "'", str19, "[-1, 16, 115, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 17, 116, 35]" + "'", str20, "[-1, 17, 116, 35]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 18, 117, 35]" + "'", str21, "[-1, 18, 117, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 19, 118, 35]" + "'", str22, "[-1, 19, 118, 35]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 20, 119, 35]" + "'", str23, "[-1, 20, 119, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 21, 120, 35]" + "'", str24, "[-1, 21, 120, 35]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 22, 121, 35]" + "'", str25, "[-1, 22, 121, 35]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 23, 122, 35]" + "'", str26, "[-1, 23, 122, 35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 24, 123, 35]" + "'", str27, "[-1, 24, 123, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 25, 124, 35]" + "'", str28, "[-1, 25, 124, 35]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 26, 125, 35]" + "'", str29, "[-1, 26, 125, 35]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 27, 126, 35]" + "'", str30, "[-1, 27, 126, 35]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 28, 127, 35]" + "'", str31, "[-1, 28, 127, 35]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 29, 128, 35]" + "'", str32, "[-1, 29, 128, 35]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 30, 129, 35]" + "'", str33, "[-1, 30, 129, 35]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 31, 130, 35]" + "'", str34, "[-1, 31, 130, 35]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 32, 131, 35]" + "'", str35, "[-1, 32, 131, 35]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 33, 132, 35]" + "'", str36, "[-1, 33, 132, 35]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 34, 133, 35]" + "'", str37, "[-1, 34, 133, 35]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 35, 134, 35]" + "'", str38, "[-1, 35, 134, 35]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 36, 135, 35]" + "'", str39, "[-1, 36, 135, 35]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 37, 136, 35]" + "'", str40, "[-1, 37, 136, 35]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 38, 137, 35]" + "'", str41, "[-1, 38, 137, 35]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, 39, 138, 35]" + "'", str42, "[-1, 39, 138, 35]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, 40, 139, 35]" + "'", str43, "[-1, 40, 139, 35]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[-1, 41, 140, 35]" + "'", str44, "[-1, 41, 140, 35]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[-1, 42, 141, 35]" + "'", str45, "[-1, 42, 141, 35]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[-1, 43, 142, 35]" + "'", str46, "[-1, 43, 142, 35]");
    }

    @Test
    public void test2838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2838");
        int[] intArray5 = new int[] { (short) 1, (short) 1, (byte) 0, '4', '#' };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass18 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 2, 2, 53, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 1, 1, 52, 35]" + "'", str6, "[1, 1, 1, 52, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 1, 2, 52, 35]" + "'", str7, "[1, 1, 2, 52, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 1, 3, 52, 35]" + "'", str8, "[1, 1, 3, 52, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 1, 4, 52, 35]" + "'", str9, "[1, 1, 4, 52, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1, 5, 52, 35]" + "'", str10, "[1, 1, 5, 52, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 1, 6, 52, 35]" + "'", str11, "[1, 1, 6, 52, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1, 7, 52, 35]" + "'", str12, "[1, 1, 7, 52, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 1, 8, 52, 35]" + "'", str13, "[1, 1, 8, 52, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1, 9, 52, 35]" + "'", str14, "[1, 1, 9, 52, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 2, 0, 53, 35]" + "'", str15, "[1, 2, 0, 53, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 2, 1, 53, 35]" + "'", str16, "[1, 2, 1, 53, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 2, 2, 53, 35]" + "'", str17, "[1, 2, 2, 53, 35]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test2839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2839");
        int[] intArray5 = new int[] { (short) -1, (byte) 100, (byte) 10, (short) 100, ' ' };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 100, 11, 100, 32]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 100, 11, 100, 32]" + "'", str6, "[-1, 100, 11, 100, 32]");
    }

    @Test
    public void test2840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2840");
        int[] intArray3 = new int[] { 0, (-1), (short) 100 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass9 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 4, 100]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 0, 100]" + "'", str4, "[0, 0, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 1, 100]" + "'", str5, "[0, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 2, 100]" + "'", str6, "[0, 2, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 3, 100]" + "'", str7, "[0, 3, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 4, 100]" + "'", str8, "[0, 4, 100]");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test2841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2841");
        int[] intArray5 = new int[] { (byte) 0, (short) -1, ' ', (short) 10, (-1) };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, -1, 36, 10, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, -1, 33, 10, -1]" + "'", str6, "[0, -1, 33, 10, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, -1, 34, 10, -1]" + "'", str7, "[0, -1, 34, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, -1, 35, 10, -1]" + "'", str8, "[0, -1, 35, 10, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, -1, 36, 10, -1]" + "'", str9, "[0, -1, 36, 10, -1]");
    }

    @Test
    public void test2842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2842");
        int[] intArray6 = new int[] { (short) 0, (short) 10, (-1), (short) 1, (byte) 1, 'a' };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 13, 3, 3, 4, 97]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 10, 0, 2, 1, 97]" + "'", str7, "[0, 10, 0, 2, 1, 97]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 10, 1, 3, 1, 97]" + "'", str8, "[0, 10, 1, 3, 1, 97]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 10, 2, 4, 1, 97]" + "'", str9, "[0, 10, 2, 4, 1, 97]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 10, 3, 5, 1, 97]" + "'", str10, "[0, 10, 3, 5, 1, 97]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 10, 4, 6, 1, 97]" + "'", str11, "[0, 10, 4, 6, 1, 97]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 10, 5, 7, 1, 97]" + "'", str12, "[0, 10, 5, 7, 1, 97]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 10, 6, 8, 1, 97]" + "'", str13, "[0, 10, 6, 8, 1, 97]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 10, 7, 9, 1, 97]" + "'", str14, "[0, 10, 7, 9, 1, 97]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 11, 0, 0, 2, 97]" + "'", str15, "[0, 11, 0, 0, 2, 97]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 11, 1, 1, 2, 97]" + "'", str16, "[0, 11, 1, 1, 2, 97]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 11, 2, 2, 2, 97]" + "'", str17, "[0, 11, 2, 2, 2, 97]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 11, 3, 3, 2, 97]" + "'", str18, "[0, 11, 3, 3, 2, 97]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 11, 4, 4, 2, 97]" + "'", str19, "[0, 11, 4, 4, 2, 97]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 11, 5, 5, 2, 97]" + "'", str20, "[0, 11, 5, 5, 2, 97]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 11, 6, 6, 2, 97]" + "'", str21, "[0, 11, 6, 6, 2, 97]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 11, 7, 7, 2, 97]" + "'", str22, "[0, 11, 7, 7, 2, 97]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 11, 8, 8, 2, 97]" + "'", str23, "[0, 11, 8, 8, 2, 97]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 11, 9, 9, 2, 97]" + "'", str24, "[0, 11, 9, 9, 2, 97]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 12, 0, 0, 3, 97]" + "'", str25, "[0, 12, 0, 0, 3, 97]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 12, 1, 1, 3, 97]" + "'", str26, "[0, 12, 1, 1, 3, 97]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 12, 2, 2, 3, 97]" + "'", str27, "[0, 12, 2, 2, 3, 97]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 12, 3, 3, 3, 97]" + "'", str28, "[0, 12, 3, 3, 3, 97]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 12, 4, 4, 3, 97]" + "'", str29, "[0, 12, 4, 4, 3, 97]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 12, 5, 5, 3, 97]" + "'", str30, "[0, 12, 5, 5, 3, 97]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 12, 6, 6, 3, 97]" + "'", str31, "[0, 12, 6, 6, 3, 97]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 12, 7, 7, 3, 97]" + "'", str32, "[0, 12, 7, 7, 3, 97]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 12, 8, 8, 3, 97]" + "'", str33, "[0, 12, 8, 8, 3, 97]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 12, 9, 9, 3, 97]" + "'", str34, "[0, 12, 9, 9, 3, 97]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 13, 0, 0, 4, 97]" + "'", str35, "[0, 13, 0, 0, 4, 97]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 13, 1, 1, 4, 97]" + "'", str36, "[0, 13, 1, 1, 4, 97]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 13, 2, 2, 4, 97]" + "'", str37, "[0, 13, 2, 2, 4, 97]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 13, 3, 3, 4, 97]" + "'", str38, "[0, 13, 3, 3, 4, 97]");
    }

    @Test
    public void test2843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2843");
        int[] intArray4 = new int[] { '4', (byte) -1, (short) 1, (byte) 10 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass29 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[54, 5, 5, 12]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[52, 0, 2, 10]" + "'", str5, "[52, 0, 2, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[52, 1, 3, 10]" + "'", str6, "[52, 1, 3, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[52, 2, 4, 10]" + "'", str7, "[52, 2, 4, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[52, 3, 5, 10]" + "'", str8, "[52, 3, 5, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[52, 4, 6, 10]" + "'", str9, "[52, 4, 6, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[52, 5, 7, 10]" + "'", str10, "[52, 5, 7, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[52, 6, 8, 10]" + "'", str11, "[52, 6, 8, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[52, 7, 9, 10]" + "'", str12, "[52, 7, 9, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[53, 0, 0, 11]" + "'", str13, "[53, 0, 0, 11]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[53, 1, 1, 11]" + "'", str14, "[53, 1, 1, 11]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[53, 2, 2, 11]" + "'", str15, "[53, 2, 2, 11]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[53, 3, 3, 11]" + "'", str16, "[53, 3, 3, 11]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[53, 4, 4, 11]" + "'", str17, "[53, 4, 4, 11]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[53, 5, 5, 11]" + "'", str18, "[53, 5, 5, 11]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[53, 6, 6, 11]" + "'", str19, "[53, 6, 6, 11]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[53, 7, 7, 11]" + "'", str20, "[53, 7, 7, 11]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[53, 8, 8, 11]" + "'", str21, "[53, 8, 8, 11]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[53, 9, 9, 11]" + "'", str22, "[53, 9, 9, 11]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[54, 0, 0, 12]" + "'", str23, "[54, 0, 0, 12]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[54, 1, 1, 12]" + "'", str24, "[54, 1, 1, 12]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[54, 2, 2, 12]" + "'", str25, "[54, 2, 2, 12]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[54, 3, 3, 12]" + "'", str26, "[54, 3, 3, 12]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[54, 4, 4, 12]" + "'", str27, "[54, 4, 4, 12]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[54, 5, 5, 12]" + "'", str28, "[54, 5, 5, 12]");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test2844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2844");
        int[] intArray2 = new int[] { (byte) 1, (-1) };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass68 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[4, 4]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 0]" + "'", str3, "[2, 0]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 1]" + "'", str4, "[3, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 2]" + "'", str5, "[4, 2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 3]" + "'", str6, "[5, 3]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 4]" + "'", str7, "[6, 4]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 5]" + "'", str8, "[7, 5]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 6]" + "'", str9, "[8, 6]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 7]" + "'", str10, "[9, 7]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 8]" + "'", str11, "[10, 8]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 9]" + "'", str12, "[11, 9]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 1]" + "'", str13, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1]" + "'", str14, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2]" + "'", str15, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[3, 3]" + "'", str16, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[4, 4]" + "'", str17, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[5, 5]" + "'", str18, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[6, 6]" + "'", str19, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[7, 7]" + "'", str20, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[8, 8]" + "'", str21, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[9, 9]" + "'", str22, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 1]" + "'", str23, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1]" + "'", str24, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 2]" + "'", str25, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3]" + "'", str26, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[4, 4]" + "'", str27, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[5, 5]" + "'", str28, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[6, 6]" + "'", str29, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[7, 7]" + "'", str30, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[8, 8]" + "'", str31, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[9, 9]" + "'", str32, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 0, 1]" + "'", str33, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1]" + "'", str34, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 2]" + "'", str35, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 3]" + "'", str36, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4]" + "'", str37, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[5, 5]" + "'", str38, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[6, 6]" + "'", str39, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[7, 7]" + "'", str40, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[8, 8]" + "'", str41, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[9, 9]" + "'", str42, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 0, 1]" + "'", str43, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1]" + "'", str44, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[2, 2]" + "'", str45, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 3]" + "'", str46, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 4]" + "'", str47, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5]" + "'", str48, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[6, 6]" + "'", str49, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[7, 7]" + "'", str50, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[8, 8]" + "'", str51, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[9, 9]" + "'", str52, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 0, 1]" + "'", str53, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 1]" + "'", str54, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[2, 2]" + "'", str55, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[3, 3]" + "'", str56, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[4, 4]" + "'", str57, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 5]" + "'", str58, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 6]" + "'", str59, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[7, 7]" + "'", str60, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[8, 8]" + "'", str61, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[9, 9]" + "'", str62, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 0, 1]" + "'", str63, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 1]" + "'", str64, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[2, 2]" + "'", str65, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[3, 3]" + "'", str66, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[4, 4]" + "'", str67, "[4, 4]");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test2845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2845");
        int[] intArray6 = new int[] { 1, (byte) 0, (byte) 0, (byte) -1, (byte) 1, '4' };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass46 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[1, 3, 8, 8, 4, 52]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 1, 0, 1, 52]" + "'", str7, "[1, 0, 1, 0, 1, 52]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 2, 1, 1, 52]" + "'", str8, "[1, 0, 2, 1, 1, 52]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 3, 2, 1, 52]" + "'", str9, "[1, 0, 3, 2, 1, 52]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 4, 3, 1, 52]" + "'", str10, "[1, 0, 4, 3, 1, 52]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 5, 4, 1, 52]" + "'", str11, "[1, 0, 5, 4, 1, 52]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 6, 5, 1, 52]" + "'", str12, "[1, 0, 6, 5, 1, 52]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 7, 6, 1, 52]" + "'", str13, "[1, 0, 7, 6, 1, 52]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 8, 7, 1, 52]" + "'", str14, "[1, 0, 8, 7, 1, 52]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 9, 8, 1, 52]" + "'", str15, "[1, 0, 9, 8, 1, 52]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 10, 9, 1, 52]" + "'", str16, "[1, 0, 10, 9, 1, 52]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 1, 0, 0, 2, 52]" + "'", str17, "[1, 1, 0, 0, 2, 52]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 1, 1, 1, 2, 52]" + "'", str18, "[1, 1, 1, 1, 2, 52]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 1, 2, 2, 2, 52]" + "'", str19, "[1, 1, 2, 2, 2, 52]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1, 3, 3, 2, 52]" + "'", str20, "[1, 1, 3, 3, 2, 52]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 1, 4, 4, 2, 52]" + "'", str21, "[1, 1, 4, 4, 2, 52]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1, 5, 5, 2, 52]" + "'", str22, "[1, 1, 5, 5, 2, 52]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 1, 6, 6, 2, 52]" + "'", str23, "[1, 1, 6, 6, 2, 52]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1, 7, 7, 2, 52]" + "'", str24, "[1, 1, 7, 7, 2, 52]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1, 8, 8, 2, 52]" + "'", str25, "[1, 1, 8, 8, 2, 52]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 1, 9, 9, 2, 52]" + "'", str26, "[1, 1, 9, 9, 2, 52]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 2, 0, 0, 3, 52]" + "'", str27, "[1, 2, 0, 0, 3, 52]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 2, 1, 1, 3, 52]" + "'", str28, "[1, 2, 1, 1, 3, 52]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 2, 2, 2, 3, 52]" + "'", str29, "[1, 2, 2, 2, 3, 52]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 2, 3, 3, 3, 52]" + "'", str30, "[1, 2, 3, 3, 3, 52]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 2, 4, 4, 3, 52]" + "'", str31, "[1, 2, 4, 4, 3, 52]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 2, 5, 5, 3, 52]" + "'", str32, "[1, 2, 5, 5, 3, 52]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 2, 6, 6, 3, 52]" + "'", str33, "[1, 2, 6, 6, 3, 52]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 2, 7, 7, 3, 52]" + "'", str34, "[1, 2, 7, 7, 3, 52]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 2, 8, 8, 3, 52]" + "'", str35, "[1, 2, 8, 8, 3, 52]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 2, 9, 9, 3, 52]" + "'", str36, "[1, 2, 9, 9, 3, 52]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 3, 0, 0, 4, 52]" + "'", str37, "[1, 3, 0, 0, 4, 52]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 3, 1, 1, 4, 52]" + "'", str38, "[1, 3, 1, 1, 4, 52]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 3, 2, 2, 4, 52]" + "'", str39, "[1, 3, 2, 2, 4, 52]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 3, 3, 3, 4, 52]" + "'", str40, "[1, 3, 3, 3, 4, 52]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 3, 4, 4, 4, 52]" + "'", str41, "[1, 3, 4, 4, 4, 52]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 3, 5, 5, 4, 52]" + "'", str42, "[1, 3, 5, 5, 4, 52]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 3, 6, 6, 4, 52]" + "'", str43, "[1, 3, 6, 6, 4, 52]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 3, 7, 7, 4, 52]" + "'", str44, "[1, 3, 7, 7, 4, 52]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 3, 8, 8, 4, 52]" + "'", str45, "[1, 3, 8, 8, 4, 52]");
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test2846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2846");
        int[] intArray2 = new int[] { 'a', 1 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[4, 4]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[98, 2]" + "'", str3, "[98, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[99, 3]" + "'", str4, "[99, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 4]" + "'", str5, "[100, 4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[101, 5]" + "'", str6, "[101, 5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[102, 6]" + "'", str7, "[102, 6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[103, 7]" + "'", str8, "[103, 7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[104, 8]" + "'", str9, "[104, 8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[105, 9]" + "'", str10, "[105, 9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 2]" + "'", str13, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3, 3]" + "'", str14, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4, 4]" + "'", str15, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5, 5]" + "'", str16, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6, 6]" + "'", str17, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7, 7]" + "'", str18, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8, 8]" + "'", str19, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9, 9]" + "'", str20, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 2]" + "'", str23, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 3]" + "'", str24, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4, 4]" + "'", str25, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5, 5]" + "'", str26, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6, 6]" + "'", str27, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7, 7]" + "'", str28, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8, 8]" + "'", str29, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9, 9]" + "'", str30, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 1]" + "'", str31, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1]" + "'", str32, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[2, 2]" + "'", str33, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[3, 3]" + "'", str34, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[4, 4]" + "'", str35, "[4, 4]");
    }

    @Test
    public void test2847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2847");
        int[] intArray6 = new int[] { (byte) 100, 'a', ' ', (byte) -1, (short) -1, (short) 1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass82 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 104, 4, 4, 6, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 97, 33, 0, -1, 1]" + "'", str7, "[100, 97, 33, 0, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 97, 34, 1, -1, 1]" + "'", str8, "[100, 97, 34, 1, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 97, 35, 2, -1, 1]" + "'", str9, "[100, 97, 35, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 97, 36, 3, -1, 1]" + "'", str10, "[100, 97, 36, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 97, 37, 4, -1, 1]" + "'", str11, "[100, 97, 37, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 97, 38, 5, -1, 1]" + "'", str12, "[100, 97, 38, 5, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 97, 39, 6, -1, 1]" + "'", str13, "[100, 97, 39, 6, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 97, 40, 7, -1, 1]" + "'", str14, "[100, 97, 40, 7, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 97, 41, 8, -1, 1]" + "'", str15, "[100, 97, 41, 8, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 97, 42, 9, -1, 1]" + "'", str16, "[100, 97, 42, 9, -1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 98, 0, 0, 0, 1]" + "'", str17, "[100, 98, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 98, 1, 1, 0, 1]" + "'", str18, "[100, 98, 1, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 98, 2, 2, 0, 1]" + "'", str19, "[100, 98, 2, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 98, 3, 3, 0, 1]" + "'", str20, "[100, 98, 3, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 98, 4, 4, 0, 1]" + "'", str21, "[100, 98, 4, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 98, 5, 5, 0, 1]" + "'", str22, "[100, 98, 5, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 98, 6, 6, 0, 1]" + "'", str23, "[100, 98, 6, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 98, 7, 7, 0, 1]" + "'", str24, "[100, 98, 7, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 98, 8, 8, 0, 1]" + "'", str25, "[100, 98, 8, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 98, 9, 9, 0, 1]" + "'", str26, "[100, 98, 9, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 99, 0, 0, 1, 1]" + "'", str27, "[100, 99, 0, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 99, 1, 1, 1, 1]" + "'", str28, "[100, 99, 1, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 99, 2, 2, 1, 1]" + "'", str29, "[100, 99, 2, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 99, 3, 3, 1, 1]" + "'", str30, "[100, 99, 3, 3, 1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 99, 4, 4, 1, 1]" + "'", str31, "[100, 99, 4, 4, 1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 99, 5, 5, 1, 1]" + "'", str32, "[100, 99, 5, 5, 1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 99, 6, 6, 1, 1]" + "'", str33, "[100, 99, 6, 6, 1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 99, 7, 7, 1, 1]" + "'", str34, "[100, 99, 7, 7, 1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 99, 8, 8, 1, 1]" + "'", str35, "[100, 99, 8, 8, 1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 99, 9, 9, 1, 1]" + "'", str36, "[100, 99, 9, 9, 1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 100, 0, 0, 2, 1]" + "'", str37, "[100, 100, 0, 0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 100, 1, 1, 2, 1]" + "'", str38, "[100, 100, 1, 1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 100, 2, 2, 2, 1]" + "'", str39, "[100, 100, 2, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 100, 3, 3, 2, 1]" + "'", str40, "[100, 100, 3, 3, 2, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 100, 4, 4, 2, 1]" + "'", str41, "[100, 100, 4, 4, 2, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 100, 5, 5, 2, 1]" + "'", str42, "[100, 100, 5, 5, 2, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 100, 6, 6, 2, 1]" + "'", str43, "[100, 100, 6, 6, 2, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 100, 7, 7, 2, 1]" + "'", str44, "[100, 100, 7, 7, 2, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 100, 8, 8, 2, 1]" + "'", str45, "[100, 100, 8, 8, 2, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 100, 9, 9, 2, 1]" + "'", str46, "[100, 100, 9, 9, 2, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 101, 0, 0, 3, 1]" + "'", str47, "[100, 101, 0, 0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 101, 1, 1, 3, 1]" + "'", str48, "[100, 101, 1, 1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 101, 2, 2, 3, 1]" + "'", str49, "[100, 101, 2, 2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 101, 3, 3, 3, 1]" + "'", str50, "[100, 101, 3, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 101, 4, 4, 3, 1]" + "'", str51, "[100, 101, 4, 4, 3, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 101, 5, 5, 3, 1]" + "'", str52, "[100, 101, 5, 5, 3, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 101, 6, 6, 3, 1]" + "'", str53, "[100, 101, 6, 6, 3, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 101, 7, 7, 3, 1]" + "'", str54, "[100, 101, 7, 7, 3, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 101, 8, 8, 3, 1]" + "'", str55, "[100, 101, 8, 8, 3, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 101, 9, 9, 3, 1]" + "'", str56, "[100, 101, 9, 9, 3, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 102, 0, 0, 4, 1]" + "'", str57, "[100, 102, 0, 0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 102, 1, 1, 4, 1]" + "'", str58, "[100, 102, 1, 1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 102, 2, 2, 4, 1]" + "'", str59, "[100, 102, 2, 2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 102, 3, 3, 4, 1]" + "'", str60, "[100, 102, 3, 3, 4, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 102, 4, 4, 4, 1]" + "'", str61, "[100, 102, 4, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[100, 102, 5, 5, 4, 1]" + "'", str62, "[100, 102, 5, 5, 4, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[100, 102, 6, 6, 4, 1]" + "'", str63, "[100, 102, 6, 6, 4, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[100, 102, 7, 7, 4, 1]" + "'", str64, "[100, 102, 7, 7, 4, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[100, 102, 8, 8, 4, 1]" + "'", str65, "[100, 102, 8, 8, 4, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[100, 102, 9, 9, 4, 1]" + "'", str66, "[100, 102, 9, 9, 4, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[100, 103, 0, 0, 5, 1]" + "'", str67, "[100, 103, 0, 0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[100, 103, 1, 1, 5, 1]" + "'", str68, "[100, 103, 1, 1, 5, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[100, 103, 2, 2, 5, 1]" + "'", str69, "[100, 103, 2, 2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[100, 103, 3, 3, 5, 1]" + "'", str70, "[100, 103, 3, 3, 5, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[100, 103, 4, 4, 5, 1]" + "'", str71, "[100, 103, 4, 4, 5, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[100, 103, 5, 5, 5, 1]" + "'", str72, "[100, 103, 5, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[100, 103, 6, 6, 5, 1]" + "'", str73, "[100, 103, 6, 6, 5, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[100, 103, 7, 7, 5, 1]" + "'", str74, "[100, 103, 7, 7, 5, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[100, 103, 8, 8, 5, 1]" + "'", str75, "[100, 103, 8, 8, 5, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[100, 103, 9, 9, 5, 1]" + "'", str76, "[100, 103, 9, 9, 5, 1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[100, 104, 0, 0, 6, 1]" + "'", str77, "[100, 104, 0, 0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[100, 104, 1, 1, 6, 1]" + "'", str78, "[100, 104, 1, 1, 6, 1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[100, 104, 2, 2, 6, 1]" + "'", str79, "[100, 104, 2, 2, 6, 1]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[100, 104, 3, 3, 6, 1]" + "'", str80, "[100, 104, 3, 3, 6, 1]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[100, 104, 4, 4, 6, 1]" + "'", str81, "[100, 104, 4, 4, 6, 1]");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2848");
        int[] intArray4 = new int[] { 1, (short) 10, (short) 10, (short) -1 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 81, 81, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 11, 11, -1]" + "'", str5, "[1, 11, 11, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 12, 12, -1]" + "'", str6, "[1, 12, 12, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 13, 13, -1]" + "'", str7, "[1, 13, 13, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 14, 14, -1]" + "'", str8, "[1, 14, 14, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 15, 15, -1]" + "'", str9, "[1, 15, 15, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 16, 16, -1]" + "'", str10, "[1, 16, 16, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 17, 17, -1]" + "'", str11, "[1, 17, 17, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 18, 18, -1]" + "'", str12, "[1, 18, 18, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 19, 19, -1]" + "'", str13, "[1, 19, 19, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 20, 20, -1]" + "'", str14, "[1, 20, 20, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 21, 21, -1]" + "'", str15, "[1, 21, 21, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 22, 22, -1]" + "'", str16, "[1, 22, 22, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 23, 23, -1]" + "'", str17, "[1, 23, 23, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 24, 24, -1]" + "'", str18, "[1, 24, 24, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 25, 25, -1]" + "'", str19, "[1, 25, 25, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 26, 26, -1]" + "'", str20, "[1, 26, 26, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 27, 27, -1]" + "'", str21, "[1, 27, 27, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 28, 28, -1]" + "'", str22, "[1, 28, 28, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 29, 29, -1]" + "'", str23, "[1, 29, 29, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 30, 30, -1]" + "'", str24, "[1, 30, 30, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 31, 31, -1]" + "'", str25, "[1, 31, 31, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 32, 32, -1]" + "'", str26, "[1, 32, 32, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 33, 33, -1]" + "'", str27, "[1, 33, 33, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 34, 34, -1]" + "'", str28, "[1, 34, 34, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 35, 35, -1]" + "'", str29, "[1, 35, 35, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 36, 36, -1]" + "'", str30, "[1, 36, 36, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 37, 37, -1]" + "'", str31, "[1, 37, 37, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 38, 38, -1]" + "'", str32, "[1, 38, 38, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 39, 39, -1]" + "'", str33, "[1, 39, 39, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 40, 40, -1]" + "'", str34, "[1, 40, 40, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 41, 41, -1]" + "'", str35, "[1, 41, 41, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 42, 42, -1]" + "'", str36, "[1, 42, 42, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 43, 43, -1]" + "'", str37, "[1, 43, 43, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 44, 44, -1]" + "'", str38, "[1, 44, 44, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 45, 45, -1]" + "'", str39, "[1, 45, 45, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 46, 46, -1]" + "'", str40, "[1, 46, 46, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 47, 47, -1]" + "'", str41, "[1, 47, 47, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 48, 48, -1]" + "'", str42, "[1, 48, 48, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 49, 49, -1]" + "'", str43, "[1, 49, 49, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 50, 50, -1]" + "'", str44, "[1, 50, 50, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 51, 51, -1]" + "'", str45, "[1, 51, 51, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 52, 52, -1]" + "'", str46, "[1, 52, 52, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 53, 53, -1]" + "'", str47, "[1, 53, 53, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 54, 54, -1]" + "'", str48, "[1, 54, 54, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 55, 55, -1]" + "'", str49, "[1, 55, 55, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 56, 56, -1]" + "'", str50, "[1, 56, 56, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 57, 57, -1]" + "'", str51, "[1, 57, 57, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 58, 58, -1]" + "'", str52, "[1, 58, 58, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 59, 59, -1]" + "'", str53, "[1, 59, 59, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 60, 60, -1]" + "'", str54, "[1, 60, 60, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 61, 61, -1]" + "'", str55, "[1, 61, 61, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 62, 62, -1]" + "'", str56, "[1, 62, 62, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 63, 63, -1]" + "'", str57, "[1, 63, 63, -1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 64, 64, -1]" + "'", str58, "[1, 64, 64, -1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 65, 65, -1]" + "'", str59, "[1, 65, 65, -1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 66, 66, -1]" + "'", str60, "[1, 66, 66, -1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 67, 67, -1]" + "'", str61, "[1, 67, 67, -1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 68, 68, -1]" + "'", str62, "[1, 68, 68, -1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 69, 69, -1]" + "'", str63, "[1, 69, 69, -1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 70, 70, -1]" + "'", str64, "[1, 70, 70, -1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 71, 71, -1]" + "'", str65, "[1, 71, 71, -1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 72, 72, -1]" + "'", str66, "[1, 72, 72, -1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 73, 73, -1]" + "'", str67, "[1, 73, 73, -1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 74, 74, -1]" + "'", str68, "[1, 74, 74, -1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 75, 75, -1]" + "'", str69, "[1, 75, 75, -1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 76, 76, -1]" + "'", str70, "[1, 76, 76, -1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 77, 77, -1]" + "'", str71, "[1, 77, 77, -1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 78, 78, -1]" + "'", str72, "[1, 78, 78, -1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 79, 79, -1]" + "'", str73, "[1, 79, 79, -1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 80, 80, -1]" + "'", str74, "[1, 80, 80, -1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[1, 81, 81, -1]" + "'", str75, "[1, 81, 81, -1]");
    }

    @Test
    public void test2849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2849");
        int[] intArray5 = new int[] { ' ', (byte) 0, 1, ' ', (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[32, 2, 5, 34, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[32, 0, 2, 32, 1]" + "'", str6, "[32, 0, 2, 32, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 0, 3, 32, 1]" + "'", str7, "[32, 0, 3, 32, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 0, 4, 32, 1]" + "'", str8, "[32, 0, 4, 32, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 0, 5, 32, 1]" + "'", str9, "[32, 0, 5, 32, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 0, 6, 32, 1]" + "'", str10, "[32, 0, 6, 32, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 0, 7, 32, 1]" + "'", str11, "[32, 0, 7, 32, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 0, 8, 32, 1]" + "'", str12, "[32, 0, 8, 32, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 0, 9, 32, 1]" + "'", str13, "[32, 0, 9, 32, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 1, 0, 33, 1]" + "'", str14, "[32, 1, 0, 33, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[32, 1, 1, 33, 1]" + "'", str15, "[32, 1, 1, 33, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[32, 1, 2, 33, 1]" + "'", str16, "[32, 1, 2, 33, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[32, 1, 3, 33, 1]" + "'", str17, "[32, 1, 3, 33, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[32, 1, 4, 33, 1]" + "'", str18, "[32, 1, 4, 33, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[32, 1, 5, 33, 1]" + "'", str19, "[32, 1, 5, 33, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[32, 1, 6, 33, 1]" + "'", str20, "[32, 1, 6, 33, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[32, 1, 7, 33, 1]" + "'", str21, "[32, 1, 7, 33, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[32, 1, 8, 33, 1]" + "'", str22, "[32, 1, 8, 33, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32, 1, 9, 33, 1]" + "'", str23, "[32, 1, 9, 33, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[32, 2, 0, 34, 1]" + "'", str24, "[32, 2, 0, 34, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[32, 2, 1, 34, 1]" + "'", str25, "[32, 2, 1, 34, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[32, 2, 2, 34, 1]" + "'", str26, "[32, 2, 2, 34, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[32, 2, 3, 34, 1]" + "'", str27, "[32, 2, 3, 34, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[32, 2, 4, 34, 1]" + "'", str28, "[32, 2, 4, 34, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[32, 2, 5, 34, 1]" + "'", str29, "[32, 2, 5, 34, 1]");
    }

    @Test
    public void test2850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2850");
        int[] intArray5 = new int[] { 'a', 0, (byte) 100, (-1), (byte) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass18 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[97, 0, 112, -1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 0, 101, -1, 1]" + "'", str6, "[97, 0, 101, -1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 0, 102, -1, 1]" + "'", str7, "[97, 0, 102, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 0, 103, -1, 1]" + "'", str8, "[97, 0, 103, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 0, 104, -1, 1]" + "'", str9, "[97, 0, 104, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 0, 105, -1, 1]" + "'", str10, "[97, 0, 105, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 0, 106, -1, 1]" + "'", str11, "[97, 0, 106, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 0, 107, -1, 1]" + "'", str12, "[97, 0, 107, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 0, 108, -1, 1]" + "'", str13, "[97, 0, 108, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 0, 109, -1, 1]" + "'", str14, "[97, 0, 109, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[97, 0, 110, -1, 1]" + "'", str15, "[97, 0, 110, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[97, 0, 111, -1, 1]" + "'", str16, "[97, 0, 111, -1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[97, 0, 112, -1, 1]" + "'", str17, "[97, 0, 112, -1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test2851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2851");
        int[] intArray6 = new int[] { (short) 0, '#', 0, ' ', 100, (short) 10 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass62 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 35, 55, 87, 100, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 35, 1, 33, 100, 10]" + "'", str7, "[0, 35, 1, 33, 100, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 35, 2, 34, 100, 10]" + "'", str8, "[0, 35, 2, 34, 100, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 35, 3, 35, 100, 10]" + "'", str9, "[0, 35, 3, 35, 100, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 35, 4, 36, 100, 10]" + "'", str10, "[0, 35, 4, 36, 100, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 35, 5, 37, 100, 10]" + "'", str11, "[0, 35, 5, 37, 100, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 35, 6, 38, 100, 10]" + "'", str12, "[0, 35, 6, 38, 100, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 35, 7, 39, 100, 10]" + "'", str13, "[0, 35, 7, 39, 100, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 35, 8, 40, 100, 10]" + "'", str14, "[0, 35, 8, 40, 100, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 35, 9, 41, 100, 10]" + "'", str15, "[0, 35, 9, 41, 100, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 35, 10, 42, 100, 10]" + "'", str16, "[0, 35, 10, 42, 100, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 35, 11, 43, 100, 10]" + "'", str17, "[0, 35, 11, 43, 100, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 35, 12, 44, 100, 10]" + "'", str18, "[0, 35, 12, 44, 100, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 35, 13, 45, 100, 10]" + "'", str19, "[0, 35, 13, 45, 100, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 35, 14, 46, 100, 10]" + "'", str20, "[0, 35, 14, 46, 100, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 35, 15, 47, 100, 10]" + "'", str21, "[0, 35, 15, 47, 100, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 35, 16, 48, 100, 10]" + "'", str22, "[0, 35, 16, 48, 100, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 35, 17, 49, 100, 10]" + "'", str23, "[0, 35, 17, 49, 100, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 35, 18, 50, 100, 10]" + "'", str24, "[0, 35, 18, 50, 100, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 35, 19, 51, 100, 10]" + "'", str25, "[0, 35, 19, 51, 100, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 35, 20, 52, 100, 10]" + "'", str26, "[0, 35, 20, 52, 100, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 35, 21, 53, 100, 10]" + "'", str27, "[0, 35, 21, 53, 100, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 35, 22, 54, 100, 10]" + "'", str28, "[0, 35, 22, 54, 100, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 35, 23, 55, 100, 10]" + "'", str29, "[0, 35, 23, 55, 100, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 35, 24, 56, 100, 10]" + "'", str30, "[0, 35, 24, 56, 100, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 35, 25, 57, 100, 10]" + "'", str31, "[0, 35, 25, 57, 100, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 35, 26, 58, 100, 10]" + "'", str32, "[0, 35, 26, 58, 100, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 35, 27, 59, 100, 10]" + "'", str33, "[0, 35, 27, 59, 100, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 35, 28, 60, 100, 10]" + "'", str34, "[0, 35, 28, 60, 100, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 35, 29, 61, 100, 10]" + "'", str35, "[0, 35, 29, 61, 100, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 35, 30, 62, 100, 10]" + "'", str36, "[0, 35, 30, 62, 100, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 35, 31, 63, 100, 10]" + "'", str37, "[0, 35, 31, 63, 100, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 35, 32, 64, 100, 10]" + "'", str38, "[0, 35, 32, 64, 100, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 35, 33, 65, 100, 10]" + "'", str39, "[0, 35, 33, 65, 100, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 35, 34, 66, 100, 10]" + "'", str40, "[0, 35, 34, 66, 100, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 35, 35, 67, 100, 10]" + "'", str41, "[0, 35, 35, 67, 100, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 35, 36, 68, 100, 10]" + "'", str42, "[0, 35, 36, 68, 100, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 35, 37, 69, 100, 10]" + "'", str43, "[0, 35, 37, 69, 100, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 35, 38, 70, 100, 10]" + "'", str44, "[0, 35, 38, 70, 100, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 35, 39, 71, 100, 10]" + "'", str45, "[0, 35, 39, 71, 100, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 35, 40, 72, 100, 10]" + "'", str46, "[0, 35, 40, 72, 100, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 35, 41, 73, 100, 10]" + "'", str47, "[0, 35, 41, 73, 100, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 35, 42, 74, 100, 10]" + "'", str48, "[0, 35, 42, 74, 100, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 35, 43, 75, 100, 10]" + "'", str49, "[0, 35, 43, 75, 100, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 35, 44, 76, 100, 10]" + "'", str50, "[0, 35, 44, 76, 100, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 35, 45, 77, 100, 10]" + "'", str51, "[0, 35, 45, 77, 100, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 35, 46, 78, 100, 10]" + "'", str52, "[0, 35, 46, 78, 100, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 35, 47, 79, 100, 10]" + "'", str53, "[0, 35, 47, 79, 100, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 35, 48, 80, 100, 10]" + "'", str54, "[0, 35, 48, 80, 100, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, 35, 49, 81, 100, 10]" + "'", str55, "[0, 35, 49, 81, 100, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, 35, 50, 82, 100, 10]" + "'", str56, "[0, 35, 50, 82, 100, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, 35, 51, 83, 100, 10]" + "'", str57, "[0, 35, 51, 83, 100, 10]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, 35, 52, 84, 100, 10]" + "'", str58, "[0, 35, 52, 84, 100, 10]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, 35, 53, 85, 100, 10]" + "'", str59, "[0, 35, 53, 85, 100, 10]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, 35, 54, 86, 100, 10]" + "'", str60, "[0, 35, 54, 86, 100, 10]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, 35, 55, 87, 100, 10]" + "'", str61, "[0, 35, 55, 87, 100, 10]");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test2852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2852");
        int[] intArray6 = new int[] { (byte) 100, 'a', ' ', (byte) -1, (short) -1, (short) 1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass83 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 104, 5, 5, 6, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 97, 33, 0, -1, 1]" + "'", str7, "[100, 97, 33, 0, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 97, 34, 1, -1, 1]" + "'", str8, "[100, 97, 34, 1, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 97, 35, 2, -1, 1]" + "'", str9, "[100, 97, 35, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 97, 36, 3, -1, 1]" + "'", str10, "[100, 97, 36, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 97, 37, 4, -1, 1]" + "'", str11, "[100, 97, 37, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 97, 38, 5, -1, 1]" + "'", str12, "[100, 97, 38, 5, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 97, 39, 6, -1, 1]" + "'", str13, "[100, 97, 39, 6, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 97, 40, 7, -1, 1]" + "'", str14, "[100, 97, 40, 7, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 97, 41, 8, -1, 1]" + "'", str15, "[100, 97, 41, 8, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 97, 42, 9, -1, 1]" + "'", str16, "[100, 97, 42, 9, -1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 98, 0, 0, 0, 1]" + "'", str17, "[100, 98, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 98, 1, 1, 0, 1]" + "'", str18, "[100, 98, 1, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 98, 2, 2, 0, 1]" + "'", str19, "[100, 98, 2, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 98, 3, 3, 0, 1]" + "'", str20, "[100, 98, 3, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 98, 4, 4, 0, 1]" + "'", str21, "[100, 98, 4, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 98, 5, 5, 0, 1]" + "'", str22, "[100, 98, 5, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 98, 6, 6, 0, 1]" + "'", str23, "[100, 98, 6, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 98, 7, 7, 0, 1]" + "'", str24, "[100, 98, 7, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 98, 8, 8, 0, 1]" + "'", str25, "[100, 98, 8, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 98, 9, 9, 0, 1]" + "'", str26, "[100, 98, 9, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 99, 0, 0, 1, 1]" + "'", str27, "[100, 99, 0, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 99, 1, 1, 1, 1]" + "'", str28, "[100, 99, 1, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 99, 2, 2, 1, 1]" + "'", str29, "[100, 99, 2, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 99, 3, 3, 1, 1]" + "'", str30, "[100, 99, 3, 3, 1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 99, 4, 4, 1, 1]" + "'", str31, "[100, 99, 4, 4, 1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 99, 5, 5, 1, 1]" + "'", str32, "[100, 99, 5, 5, 1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 99, 6, 6, 1, 1]" + "'", str33, "[100, 99, 6, 6, 1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 99, 7, 7, 1, 1]" + "'", str34, "[100, 99, 7, 7, 1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 99, 8, 8, 1, 1]" + "'", str35, "[100, 99, 8, 8, 1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 99, 9, 9, 1, 1]" + "'", str36, "[100, 99, 9, 9, 1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 100, 0, 0, 2, 1]" + "'", str37, "[100, 100, 0, 0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 100, 1, 1, 2, 1]" + "'", str38, "[100, 100, 1, 1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 100, 2, 2, 2, 1]" + "'", str39, "[100, 100, 2, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 100, 3, 3, 2, 1]" + "'", str40, "[100, 100, 3, 3, 2, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 100, 4, 4, 2, 1]" + "'", str41, "[100, 100, 4, 4, 2, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 100, 5, 5, 2, 1]" + "'", str42, "[100, 100, 5, 5, 2, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 100, 6, 6, 2, 1]" + "'", str43, "[100, 100, 6, 6, 2, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 100, 7, 7, 2, 1]" + "'", str44, "[100, 100, 7, 7, 2, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 100, 8, 8, 2, 1]" + "'", str45, "[100, 100, 8, 8, 2, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 100, 9, 9, 2, 1]" + "'", str46, "[100, 100, 9, 9, 2, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 101, 0, 0, 3, 1]" + "'", str47, "[100, 101, 0, 0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 101, 1, 1, 3, 1]" + "'", str48, "[100, 101, 1, 1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 101, 2, 2, 3, 1]" + "'", str49, "[100, 101, 2, 2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 101, 3, 3, 3, 1]" + "'", str50, "[100, 101, 3, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 101, 4, 4, 3, 1]" + "'", str51, "[100, 101, 4, 4, 3, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 101, 5, 5, 3, 1]" + "'", str52, "[100, 101, 5, 5, 3, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 101, 6, 6, 3, 1]" + "'", str53, "[100, 101, 6, 6, 3, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 101, 7, 7, 3, 1]" + "'", str54, "[100, 101, 7, 7, 3, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 101, 8, 8, 3, 1]" + "'", str55, "[100, 101, 8, 8, 3, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 101, 9, 9, 3, 1]" + "'", str56, "[100, 101, 9, 9, 3, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 102, 0, 0, 4, 1]" + "'", str57, "[100, 102, 0, 0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 102, 1, 1, 4, 1]" + "'", str58, "[100, 102, 1, 1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 102, 2, 2, 4, 1]" + "'", str59, "[100, 102, 2, 2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 102, 3, 3, 4, 1]" + "'", str60, "[100, 102, 3, 3, 4, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 102, 4, 4, 4, 1]" + "'", str61, "[100, 102, 4, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[100, 102, 5, 5, 4, 1]" + "'", str62, "[100, 102, 5, 5, 4, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[100, 102, 6, 6, 4, 1]" + "'", str63, "[100, 102, 6, 6, 4, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[100, 102, 7, 7, 4, 1]" + "'", str64, "[100, 102, 7, 7, 4, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[100, 102, 8, 8, 4, 1]" + "'", str65, "[100, 102, 8, 8, 4, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[100, 102, 9, 9, 4, 1]" + "'", str66, "[100, 102, 9, 9, 4, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[100, 103, 0, 0, 5, 1]" + "'", str67, "[100, 103, 0, 0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[100, 103, 1, 1, 5, 1]" + "'", str68, "[100, 103, 1, 1, 5, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[100, 103, 2, 2, 5, 1]" + "'", str69, "[100, 103, 2, 2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[100, 103, 3, 3, 5, 1]" + "'", str70, "[100, 103, 3, 3, 5, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[100, 103, 4, 4, 5, 1]" + "'", str71, "[100, 103, 4, 4, 5, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[100, 103, 5, 5, 5, 1]" + "'", str72, "[100, 103, 5, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[100, 103, 6, 6, 5, 1]" + "'", str73, "[100, 103, 6, 6, 5, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[100, 103, 7, 7, 5, 1]" + "'", str74, "[100, 103, 7, 7, 5, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[100, 103, 8, 8, 5, 1]" + "'", str75, "[100, 103, 8, 8, 5, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[100, 103, 9, 9, 5, 1]" + "'", str76, "[100, 103, 9, 9, 5, 1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[100, 104, 0, 0, 6, 1]" + "'", str77, "[100, 104, 0, 0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[100, 104, 1, 1, 6, 1]" + "'", str78, "[100, 104, 1, 1, 6, 1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[100, 104, 2, 2, 6, 1]" + "'", str79, "[100, 104, 2, 2, 6, 1]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[100, 104, 3, 3, 6, 1]" + "'", str80, "[100, 104, 3, 3, 6, 1]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[100, 104, 4, 4, 6, 1]" + "'", str81, "[100, 104, 4, 4, 6, 1]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[100, 104, 5, 5, 6, 1]" + "'", str82, "[100, 104, 5, 5, 6, 1]");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2853");
        int[] intArray2 = new int[] { (short) 1, 10 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[38, 47]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 11]" + "'", str3, "[2, 11]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 12]" + "'", str4, "[3, 12]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 13]" + "'", str5, "[4, 13]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 14]" + "'", str6, "[5, 14]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 15]" + "'", str7, "[6, 15]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 16]" + "'", str8, "[7, 16]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 17]" + "'", str9, "[8, 17]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 18]" + "'", str10, "[9, 18]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 19]" + "'", str11, "[10, 19]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 20]" + "'", str12, "[11, 20]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[12, 21]" + "'", str13, "[12, 21]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[13, 22]" + "'", str14, "[13, 22]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[14, 23]" + "'", str15, "[14, 23]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[15, 24]" + "'", str16, "[15, 24]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[16, 25]" + "'", str17, "[16, 25]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[17, 26]" + "'", str18, "[17, 26]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[18, 27]" + "'", str19, "[18, 27]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[19, 28]" + "'", str20, "[19, 28]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[20, 29]" + "'", str21, "[20, 29]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[21, 30]" + "'", str22, "[21, 30]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[22, 31]" + "'", str23, "[22, 31]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[23, 32]" + "'", str24, "[23, 32]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[24, 33]" + "'", str25, "[24, 33]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[25, 34]" + "'", str26, "[25, 34]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[26, 35]" + "'", str27, "[26, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[27, 36]" + "'", str28, "[27, 36]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[28, 37]" + "'", str29, "[28, 37]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[29, 38]" + "'", str30, "[29, 38]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[30, 39]" + "'", str31, "[30, 39]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[31, 40]" + "'", str32, "[31, 40]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[32, 41]" + "'", str33, "[32, 41]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[33, 42]" + "'", str34, "[33, 42]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[34, 43]" + "'", str35, "[34, 43]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 44]" + "'", str36, "[35, 44]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[36, 45]" + "'", str37, "[36, 45]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[37, 46]" + "'", str38, "[37, 46]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[38, 47]" + "'", str39, "[38, 47]");
    }

    @Test
    public void test2854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2854");
        int[] intArray1 = new int[] { 10 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass77 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[85]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[11]" + "'", str2, "[11]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[12]" + "'", str3, "[12]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[13]" + "'", str4, "[13]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[14]" + "'", str5, "[14]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[15]" + "'", str6, "[15]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[16]" + "'", str7, "[16]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[17]" + "'", str8, "[17]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[18]" + "'", str9, "[18]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[19]" + "'", str10, "[19]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[20]" + "'", str11, "[20]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[21]" + "'", str12, "[21]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[22]" + "'", str13, "[22]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[23]" + "'", str14, "[23]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[24]" + "'", str15, "[24]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[25]" + "'", str16, "[25]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[26]" + "'", str17, "[26]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[27]" + "'", str18, "[27]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[28]" + "'", str19, "[28]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[29]" + "'", str20, "[29]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[30]" + "'", str21, "[30]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[31]" + "'", str22, "[31]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[32]" + "'", str23, "[32]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[33]" + "'", str24, "[33]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[34]" + "'", str25, "[34]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35]" + "'", str26, "[35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[36]" + "'", str27, "[36]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[37]" + "'", str28, "[37]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[38]" + "'", str29, "[38]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[39]" + "'", str30, "[39]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[40]" + "'", str31, "[40]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[41]" + "'", str32, "[41]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[42]" + "'", str33, "[42]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[43]" + "'", str34, "[43]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[44]" + "'", str35, "[44]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[45]" + "'", str36, "[45]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[46]" + "'", str37, "[46]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[47]" + "'", str38, "[47]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[48]" + "'", str39, "[48]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[49]" + "'", str40, "[49]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[50]" + "'", str41, "[50]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[51]" + "'", str42, "[51]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[52]" + "'", str43, "[52]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[53]" + "'", str44, "[53]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[54]" + "'", str45, "[54]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[55]" + "'", str46, "[55]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[56]" + "'", str47, "[56]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[57]" + "'", str48, "[57]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[58]" + "'", str49, "[58]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[59]" + "'", str50, "[59]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[60]" + "'", str51, "[60]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[61]" + "'", str52, "[61]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[62]" + "'", str53, "[62]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[63]" + "'", str54, "[63]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[64]" + "'", str55, "[64]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[65]" + "'", str56, "[65]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[66]" + "'", str57, "[66]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[67]" + "'", str58, "[67]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[68]" + "'", str59, "[68]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[69]" + "'", str60, "[69]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[70]" + "'", str61, "[70]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[71]" + "'", str62, "[71]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[72]" + "'", str63, "[72]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[73]" + "'", str64, "[73]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[74]" + "'", str65, "[74]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[75]" + "'", str66, "[75]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[76]" + "'", str67, "[76]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[77]" + "'", str68, "[77]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[78]" + "'", str69, "[78]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[79]" + "'", str70, "[79]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[80]" + "'", str71, "[80]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[81]" + "'", str72, "[81]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[82]" + "'", str73, "[82]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[83]" + "'", str74, "[83]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[84]" + "'", str75, "[84]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[85]" + "'", str76, "[85]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test2855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2855");
        int[] intArray4 = new int[] { (byte) -1, 10, (byte) 0, (short) 100 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass89 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[7, 4, 4, 108]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 11, 1, 100]" + "'", str5, "[-1, 11, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 12, 2, 100]" + "'", str6, "[-1, 12, 2, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 13, 3, 100]" + "'", str7, "[-1, 13, 3, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 14, 4, 100]" + "'", str8, "[-1, 14, 4, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 15, 5, 100]" + "'", str9, "[-1, 15, 5, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 16, 6, 100]" + "'", str10, "[-1, 16, 6, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 17, 7, 100]" + "'", str11, "[-1, 17, 7, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 18, 8, 100]" + "'", str12, "[-1, 18, 8, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 19, 9, 100]" + "'", str13, "[-1, 19, 9, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 0, 0, 101]" + "'", str14, "[0, 0, 0, 101]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 1, 1, 101]" + "'", str15, "[0, 1, 1, 101]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 2, 2, 101]" + "'", str16, "[0, 2, 2, 101]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 3, 3, 101]" + "'", str17, "[0, 3, 3, 101]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 4, 4, 101]" + "'", str18, "[0, 4, 4, 101]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 5, 5, 101]" + "'", str19, "[0, 5, 5, 101]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 6, 6, 101]" + "'", str20, "[0, 6, 6, 101]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 7, 7, 101]" + "'", str21, "[0, 7, 7, 101]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 8, 8, 101]" + "'", str22, "[0, 8, 8, 101]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 9, 9, 101]" + "'", str23, "[0, 9, 9, 101]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 0, 102]" + "'", str24, "[1, 0, 0, 102]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 1, 1, 102]" + "'", str25, "[1, 1, 1, 102]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 2, 2, 102]" + "'", str26, "[1, 2, 2, 102]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 3, 3, 102]" + "'", str27, "[1, 3, 3, 102]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 4, 4, 102]" + "'", str28, "[1, 4, 4, 102]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 5, 5, 102]" + "'", str29, "[1, 5, 5, 102]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 6, 6, 102]" + "'", str30, "[1, 6, 6, 102]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 7, 7, 102]" + "'", str31, "[1, 7, 7, 102]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 8, 8, 102]" + "'", str32, "[1, 8, 8, 102]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 9, 9, 102]" + "'", str33, "[1, 9, 9, 102]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2, 0, 0, 103]" + "'", str34, "[2, 0, 0, 103]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 1, 1, 103]" + "'", str35, "[2, 1, 1, 103]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[2, 2, 2, 103]" + "'", str36, "[2, 2, 2, 103]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[2, 3, 3, 103]" + "'", str37, "[2, 3, 3, 103]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[2, 4, 4, 103]" + "'", str38, "[2, 4, 4, 103]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[2, 5, 5, 103]" + "'", str39, "[2, 5, 5, 103]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[2, 6, 6, 103]" + "'", str40, "[2, 6, 6, 103]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[2, 7, 7, 103]" + "'", str41, "[2, 7, 7, 103]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[2, 8, 8, 103]" + "'", str42, "[2, 8, 8, 103]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[2, 9, 9, 103]" + "'", str43, "[2, 9, 9, 103]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[3, 0, 0, 104]" + "'", str44, "[3, 0, 0, 104]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3, 1, 1, 104]" + "'", str45, "[3, 1, 1, 104]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 2, 2, 104]" + "'", str46, "[3, 2, 2, 104]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[3, 3, 3, 104]" + "'", str47, "[3, 3, 3, 104]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[3, 4, 4, 104]" + "'", str48, "[3, 4, 4, 104]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[3, 5, 5, 104]" + "'", str49, "[3, 5, 5, 104]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[3, 6, 6, 104]" + "'", str50, "[3, 6, 6, 104]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[3, 7, 7, 104]" + "'", str51, "[3, 7, 7, 104]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[3, 8, 8, 104]" + "'", str52, "[3, 8, 8, 104]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[3, 9, 9, 104]" + "'", str53, "[3, 9, 9, 104]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[4, 0, 0, 105]" + "'", str54, "[4, 0, 0, 105]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[4, 1, 1, 105]" + "'", str55, "[4, 1, 1, 105]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4, 2, 2, 105]" + "'", str56, "[4, 2, 2, 105]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[4, 3, 3, 105]" + "'", str57, "[4, 3, 3, 105]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[4, 4, 4, 105]" + "'", str58, "[4, 4, 4, 105]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[4, 5, 5, 105]" + "'", str59, "[4, 5, 5, 105]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[4, 6, 6, 105]" + "'", str60, "[4, 6, 6, 105]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[4, 7, 7, 105]" + "'", str61, "[4, 7, 7, 105]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[4, 8, 8, 105]" + "'", str62, "[4, 8, 8, 105]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[4, 9, 9, 105]" + "'", str63, "[4, 9, 9, 105]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[5, 0, 0, 106]" + "'", str64, "[5, 0, 0, 106]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[5, 1, 1, 106]" + "'", str65, "[5, 1, 1, 106]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[5, 2, 2, 106]" + "'", str66, "[5, 2, 2, 106]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[5, 3, 3, 106]" + "'", str67, "[5, 3, 3, 106]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[5, 4, 4, 106]" + "'", str68, "[5, 4, 4, 106]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[5, 5, 5, 106]" + "'", str69, "[5, 5, 5, 106]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[5, 6, 6, 106]" + "'", str70, "[5, 6, 6, 106]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[5, 7, 7, 106]" + "'", str71, "[5, 7, 7, 106]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[5, 8, 8, 106]" + "'", str72, "[5, 8, 8, 106]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[5, 9, 9, 106]" + "'", str73, "[5, 9, 9, 106]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[6, 0, 0, 107]" + "'", str74, "[6, 0, 0, 107]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[6, 1, 1, 107]" + "'", str75, "[6, 1, 1, 107]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[6, 2, 2, 107]" + "'", str76, "[6, 2, 2, 107]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[6, 3, 3, 107]" + "'", str77, "[6, 3, 3, 107]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[6, 4, 4, 107]" + "'", str78, "[6, 4, 4, 107]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[6, 5, 5, 107]" + "'", str79, "[6, 5, 5, 107]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[6, 6, 6, 107]" + "'", str80, "[6, 6, 6, 107]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[6, 7, 7, 107]" + "'", str81, "[6, 7, 7, 107]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[6, 8, 8, 107]" + "'", str82, "[6, 8, 8, 107]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[6, 9, 9, 107]" + "'", str83, "[6, 9, 9, 107]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[7, 0, 0, 108]" + "'", str84, "[7, 0, 0, 108]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[7, 1, 1, 108]" + "'", str85, "[7, 1, 1, 108]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[7, 2, 2, 108]" + "'", str86, "[7, 2, 2, 108]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[7, 3, 3, 108]" + "'", str87, "[7, 3, 3, 108]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[7, 4, 4, 108]" + "'", str88, "[7, 4, 4, 108]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2856");
        int[] intArray5 = new int[] { 'a', '4', 10, (-1), 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[97, 52, 20, -1, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 52, 11, -1, 1]" + "'", str6, "[97, 52, 11, -1, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 52, 12, -1, 1]" + "'", str7, "[97, 52, 12, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 52, 13, -1, 1]" + "'", str8, "[97, 52, 13, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 52, 14, -1, 1]" + "'", str9, "[97, 52, 14, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 52, 15, -1, 1]" + "'", str10, "[97, 52, 15, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 52, 16, -1, 1]" + "'", str11, "[97, 52, 16, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 52, 17, -1, 1]" + "'", str12, "[97, 52, 17, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 52, 18, -1, 1]" + "'", str13, "[97, 52, 18, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 52, 19, -1, 1]" + "'", str14, "[97, 52, 19, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[97, 52, 20, -1, 1]" + "'", str15, "[97, 52, 20, -1, 1]");
    }

    @Test
    public void test2857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2857");
        int[] intArray5 = new int[] { (byte) 0, '#', ' ', 10, 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass70 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 35, 96, 10, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 35, 33, 10, 1]" + "'", str6, "[0, 35, 33, 10, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 35, 34, 10, 1]" + "'", str7, "[0, 35, 34, 10, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 35, 35, 10, 1]" + "'", str8, "[0, 35, 35, 10, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 35, 36, 10, 1]" + "'", str9, "[0, 35, 36, 10, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 35, 37, 10, 1]" + "'", str10, "[0, 35, 37, 10, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 35, 38, 10, 1]" + "'", str11, "[0, 35, 38, 10, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 35, 39, 10, 1]" + "'", str12, "[0, 35, 39, 10, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 35, 40, 10, 1]" + "'", str13, "[0, 35, 40, 10, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 35, 41, 10, 1]" + "'", str14, "[0, 35, 41, 10, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 35, 42, 10, 1]" + "'", str15, "[0, 35, 42, 10, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 35, 43, 10, 1]" + "'", str16, "[0, 35, 43, 10, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 35, 44, 10, 1]" + "'", str17, "[0, 35, 44, 10, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 35, 45, 10, 1]" + "'", str18, "[0, 35, 45, 10, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 35, 46, 10, 1]" + "'", str19, "[0, 35, 46, 10, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 35, 47, 10, 1]" + "'", str20, "[0, 35, 47, 10, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 35, 48, 10, 1]" + "'", str21, "[0, 35, 48, 10, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 35, 49, 10, 1]" + "'", str22, "[0, 35, 49, 10, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 35, 50, 10, 1]" + "'", str23, "[0, 35, 50, 10, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 35, 51, 10, 1]" + "'", str24, "[0, 35, 51, 10, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 35, 52, 10, 1]" + "'", str25, "[0, 35, 52, 10, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 35, 53, 10, 1]" + "'", str26, "[0, 35, 53, 10, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 35, 54, 10, 1]" + "'", str27, "[0, 35, 54, 10, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 35, 55, 10, 1]" + "'", str28, "[0, 35, 55, 10, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 35, 56, 10, 1]" + "'", str29, "[0, 35, 56, 10, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 35, 57, 10, 1]" + "'", str30, "[0, 35, 57, 10, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 35, 58, 10, 1]" + "'", str31, "[0, 35, 58, 10, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 35, 59, 10, 1]" + "'", str32, "[0, 35, 59, 10, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 35, 60, 10, 1]" + "'", str33, "[0, 35, 60, 10, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 35, 61, 10, 1]" + "'", str34, "[0, 35, 61, 10, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 35, 62, 10, 1]" + "'", str35, "[0, 35, 62, 10, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 35, 63, 10, 1]" + "'", str36, "[0, 35, 63, 10, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 35, 64, 10, 1]" + "'", str37, "[0, 35, 64, 10, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 35, 65, 10, 1]" + "'", str38, "[0, 35, 65, 10, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 35, 66, 10, 1]" + "'", str39, "[0, 35, 66, 10, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 35, 67, 10, 1]" + "'", str40, "[0, 35, 67, 10, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 35, 68, 10, 1]" + "'", str41, "[0, 35, 68, 10, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 35, 69, 10, 1]" + "'", str42, "[0, 35, 69, 10, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 35, 70, 10, 1]" + "'", str43, "[0, 35, 70, 10, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 35, 71, 10, 1]" + "'", str44, "[0, 35, 71, 10, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 35, 72, 10, 1]" + "'", str45, "[0, 35, 72, 10, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 35, 73, 10, 1]" + "'", str46, "[0, 35, 73, 10, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 35, 74, 10, 1]" + "'", str47, "[0, 35, 74, 10, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 35, 75, 10, 1]" + "'", str48, "[0, 35, 75, 10, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 35, 76, 10, 1]" + "'", str49, "[0, 35, 76, 10, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 35, 77, 10, 1]" + "'", str50, "[0, 35, 77, 10, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 35, 78, 10, 1]" + "'", str51, "[0, 35, 78, 10, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 35, 79, 10, 1]" + "'", str52, "[0, 35, 79, 10, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 35, 80, 10, 1]" + "'", str53, "[0, 35, 80, 10, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 35, 81, 10, 1]" + "'", str54, "[0, 35, 81, 10, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, 35, 82, 10, 1]" + "'", str55, "[0, 35, 82, 10, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, 35, 83, 10, 1]" + "'", str56, "[0, 35, 83, 10, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, 35, 84, 10, 1]" + "'", str57, "[0, 35, 84, 10, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, 35, 85, 10, 1]" + "'", str58, "[0, 35, 85, 10, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, 35, 86, 10, 1]" + "'", str59, "[0, 35, 86, 10, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, 35, 87, 10, 1]" + "'", str60, "[0, 35, 87, 10, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, 35, 88, 10, 1]" + "'", str61, "[0, 35, 88, 10, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, 35, 89, 10, 1]" + "'", str62, "[0, 35, 89, 10, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[0, 35, 90, 10, 1]" + "'", str63, "[0, 35, 90, 10, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[0, 35, 91, 10, 1]" + "'", str64, "[0, 35, 91, 10, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[0, 35, 92, 10, 1]" + "'", str65, "[0, 35, 92, 10, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[0, 35, 93, 10, 1]" + "'", str66, "[0, 35, 93, 10, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[0, 35, 94, 10, 1]" + "'", str67, "[0, 35, 94, 10, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[0, 35, 95, 10, 1]" + "'", str68, "[0, 35, 95, 10, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[0, 35, 96, 10, 1]" + "'", str69, "[0, 35, 96, 10, 1]");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test2858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2858");
        int[] intArray6 = new int[] { 100, (byte) 10, 'a', 'a', (byte) 100, ' ' };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass19 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 10, 109, 109, 100, 32]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 10, 98, 98, 100, 32]" + "'", str7, "[100, 10, 98, 98, 100, 32]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 10, 99, 99, 100, 32]" + "'", str8, "[100, 10, 99, 99, 100, 32]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 10, 100, 100, 100, 32]" + "'", str9, "[100, 10, 100, 100, 100, 32]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 10, 101, 101, 100, 32]" + "'", str10, "[100, 10, 101, 101, 100, 32]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 10, 102, 102, 100, 32]" + "'", str11, "[100, 10, 102, 102, 100, 32]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 10, 103, 103, 100, 32]" + "'", str12, "[100, 10, 103, 103, 100, 32]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 10, 104, 104, 100, 32]" + "'", str13, "[100, 10, 104, 104, 100, 32]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 10, 105, 105, 100, 32]" + "'", str14, "[100, 10, 105, 105, 100, 32]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 10, 106, 106, 100, 32]" + "'", str15, "[100, 10, 106, 106, 100, 32]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 10, 107, 107, 100, 32]" + "'", str16, "[100, 10, 107, 107, 100, 32]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 10, 108, 108, 100, 32]" + "'", str17, "[100, 10, 108, 108, 100, 32]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 10, 109, 109, 100, 32]" + "'", str18, "[100, 10, 109, 109, 100, 32]");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test2859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2859");
        int[] intArray2 = new int[] { '4', 'a' };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass46 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[95, 140]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[53, 98]" + "'", str3, "[53, 98]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[54, 99]" + "'", str4, "[54, 99]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[55, 100]" + "'", str5, "[55, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[56, 101]" + "'", str6, "[56, 101]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[57, 102]" + "'", str7, "[57, 102]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[58, 103]" + "'", str8, "[58, 103]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[59, 104]" + "'", str9, "[59, 104]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[60, 105]" + "'", str10, "[60, 105]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[61, 106]" + "'", str11, "[61, 106]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[62, 107]" + "'", str12, "[62, 107]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[63, 108]" + "'", str13, "[63, 108]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[64, 109]" + "'", str14, "[64, 109]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[65, 110]" + "'", str15, "[65, 110]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[66, 111]" + "'", str16, "[66, 111]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[67, 112]" + "'", str17, "[67, 112]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[68, 113]" + "'", str18, "[68, 113]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[69, 114]" + "'", str19, "[69, 114]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[70, 115]" + "'", str20, "[70, 115]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[71, 116]" + "'", str21, "[71, 116]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[72, 117]" + "'", str22, "[72, 117]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[73, 118]" + "'", str23, "[73, 118]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[74, 119]" + "'", str24, "[74, 119]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[75, 120]" + "'", str25, "[75, 120]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[76, 121]" + "'", str26, "[76, 121]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[77, 122]" + "'", str27, "[77, 122]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[78, 123]" + "'", str28, "[78, 123]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[79, 124]" + "'", str29, "[79, 124]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[80, 125]" + "'", str30, "[80, 125]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[81, 126]" + "'", str31, "[81, 126]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[82, 127]" + "'", str32, "[82, 127]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[83, 128]" + "'", str33, "[83, 128]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[84, 129]" + "'", str34, "[84, 129]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[85, 130]" + "'", str35, "[85, 130]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[86, 131]" + "'", str36, "[86, 131]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[87, 132]" + "'", str37, "[87, 132]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[88, 133]" + "'", str38, "[88, 133]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[89, 134]" + "'", str39, "[89, 134]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[90, 135]" + "'", str40, "[90, 135]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[91, 136]" + "'", str41, "[91, 136]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[92, 137]" + "'", str42, "[92, 137]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[93, 138]" + "'", str43, "[93, 138]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[94, 139]" + "'", str44, "[94, 139]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[95, 140]" + "'", str45, "[95, 140]");
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test2860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2860");
        int[] intArray5 = new int[] { (byte) 0, '#', ' ', 10, 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 35, 97, 10, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 35, 33, 10, 1]" + "'", str6, "[0, 35, 33, 10, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 35, 34, 10, 1]" + "'", str7, "[0, 35, 34, 10, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 35, 35, 10, 1]" + "'", str8, "[0, 35, 35, 10, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 35, 36, 10, 1]" + "'", str9, "[0, 35, 36, 10, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 35, 37, 10, 1]" + "'", str10, "[0, 35, 37, 10, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 35, 38, 10, 1]" + "'", str11, "[0, 35, 38, 10, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 35, 39, 10, 1]" + "'", str12, "[0, 35, 39, 10, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 35, 40, 10, 1]" + "'", str13, "[0, 35, 40, 10, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 35, 41, 10, 1]" + "'", str14, "[0, 35, 41, 10, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 35, 42, 10, 1]" + "'", str15, "[0, 35, 42, 10, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 35, 43, 10, 1]" + "'", str16, "[0, 35, 43, 10, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 35, 44, 10, 1]" + "'", str17, "[0, 35, 44, 10, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 35, 45, 10, 1]" + "'", str18, "[0, 35, 45, 10, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 35, 46, 10, 1]" + "'", str19, "[0, 35, 46, 10, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 35, 47, 10, 1]" + "'", str20, "[0, 35, 47, 10, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 35, 48, 10, 1]" + "'", str21, "[0, 35, 48, 10, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 35, 49, 10, 1]" + "'", str22, "[0, 35, 49, 10, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 35, 50, 10, 1]" + "'", str23, "[0, 35, 50, 10, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 35, 51, 10, 1]" + "'", str24, "[0, 35, 51, 10, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 35, 52, 10, 1]" + "'", str25, "[0, 35, 52, 10, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 35, 53, 10, 1]" + "'", str26, "[0, 35, 53, 10, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 35, 54, 10, 1]" + "'", str27, "[0, 35, 54, 10, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 35, 55, 10, 1]" + "'", str28, "[0, 35, 55, 10, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 35, 56, 10, 1]" + "'", str29, "[0, 35, 56, 10, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 35, 57, 10, 1]" + "'", str30, "[0, 35, 57, 10, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 35, 58, 10, 1]" + "'", str31, "[0, 35, 58, 10, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 35, 59, 10, 1]" + "'", str32, "[0, 35, 59, 10, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 35, 60, 10, 1]" + "'", str33, "[0, 35, 60, 10, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 35, 61, 10, 1]" + "'", str34, "[0, 35, 61, 10, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 35, 62, 10, 1]" + "'", str35, "[0, 35, 62, 10, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 35, 63, 10, 1]" + "'", str36, "[0, 35, 63, 10, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 35, 64, 10, 1]" + "'", str37, "[0, 35, 64, 10, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 35, 65, 10, 1]" + "'", str38, "[0, 35, 65, 10, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 35, 66, 10, 1]" + "'", str39, "[0, 35, 66, 10, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 35, 67, 10, 1]" + "'", str40, "[0, 35, 67, 10, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 35, 68, 10, 1]" + "'", str41, "[0, 35, 68, 10, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 35, 69, 10, 1]" + "'", str42, "[0, 35, 69, 10, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 35, 70, 10, 1]" + "'", str43, "[0, 35, 70, 10, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 35, 71, 10, 1]" + "'", str44, "[0, 35, 71, 10, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 35, 72, 10, 1]" + "'", str45, "[0, 35, 72, 10, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 35, 73, 10, 1]" + "'", str46, "[0, 35, 73, 10, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 35, 74, 10, 1]" + "'", str47, "[0, 35, 74, 10, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 35, 75, 10, 1]" + "'", str48, "[0, 35, 75, 10, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 35, 76, 10, 1]" + "'", str49, "[0, 35, 76, 10, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 35, 77, 10, 1]" + "'", str50, "[0, 35, 77, 10, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 35, 78, 10, 1]" + "'", str51, "[0, 35, 78, 10, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 35, 79, 10, 1]" + "'", str52, "[0, 35, 79, 10, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 35, 80, 10, 1]" + "'", str53, "[0, 35, 80, 10, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 35, 81, 10, 1]" + "'", str54, "[0, 35, 81, 10, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, 35, 82, 10, 1]" + "'", str55, "[0, 35, 82, 10, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, 35, 83, 10, 1]" + "'", str56, "[0, 35, 83, 10, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, 35, 84, 10, 1]" + "'", str57, "[0, 35, 84, 10, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, 35, 85, 10, 1]" + "'", str58, "[0, 35, 85, 10, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, 35, 86, 10, 1]" + "'", str59, "[0, 35, 86, 10, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, 35, 87, 10, 1]" + "'", str60, "[0, 35, 87, 10, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, 35, 88, 10, 1]" + "'", str61, "[0, 35, 88, 10, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, 35, 89, 10, 1]" + "'", str62, "[0, 35, 89, 10, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[0, 35, 90, 10, 1]" + "'", str63, "[0, 35, 90, 10, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[0, 35, 91, 10, 1]" + "'", str64, "[0, 35, 91, 10, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[0, 35, 92, 10, 1]" + "'", str65, "[0, 35, 92, 10, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[0, 35, 93, 10, 1]" + "'", str66, "[0, 35, 93, 10, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[0, 35, 94, 10, 1]" + "'", str67, "[0, 35, 94, 10, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[0, 35, 95, 10, 1]" + "'", str68, "[0, 35, 95, 10, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[0, 35, 96, 10, 1]" + "'", str69, "[0, 35, 96, 10, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[0, 35, 97, 10, 1]" + "'", str70, "[0, 35, 97, 10, 1]");
    }

    @Test
    public void test2861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2861");
        int[] intArray2 = new int[] { '4', 'a' };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass44 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[93, 138]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[53, 98]" + "'", str3, "[53, 98]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[54, 99]" + "'", str4, "[54, 99]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[55, 100]" + "'", str5, "[55, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[56, 101]" + "'", str6, "[56, 101]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[57, 102]" + "'", str7, "[57, 102]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[58, 103]" + "'", str8, "[58, 103]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[59, 104]" + "'", str9, "[59, 104]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[60, 105]" + "'", str10, "[60, 105]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[61, 106]" + "'", str11, "[61, 106]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[62, 107]" + "'", str12, "[62, 107]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[63, 108]" + "'", str13, "[63, 108]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[64, 109]" + "'", str14, "[64, 109]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[65, 110]" + "'", str15, "[65, 110]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[66, 111]" + "'", str16, "[66, 111]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[67, 112]" + "'", str17, "[67, 112]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[68, 113]" + "'", str18, "[68, 113]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[69, 114]" + "'", str19, "[69, 114]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[70, 115]" + "'", str20, "[70, 115]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[71, 116]" + "'", str21, "[71, 116]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[72, 117]" + "'", str22, "[72, 117]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[73, 118]" + "'", str23, "[73, 118]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[74, 119]" + "'", str24, "[74, 119]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[75, 120]" + "'", str25, "[75, 120]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[76, 121]" + "'", str26, "[76, 121]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[77, 122]" + "'", str27, "[77, 122]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[78, 123]" + "'", str28, "[78, 123]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[79, 124]" + "'", str29, "[79, 124]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[80, 125]" + "'", str30, "[80, 125]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[81, 126]" + "'", str31, "[81, 126]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[82, 127]" + "'", str32, "[82, 127]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[83, 128]" + "'", str33, "[83, 128]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[84, 129]" + "'", str34, "[84, 129]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[85, 130]" + "'", str35, "[85, 130]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[86, 131]" + "'", str36, "[86, 131]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[87, 132]" + "'", str37, "[87, 132]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[88, 133]" + "'", str38, "[88, 133]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[89, 134]" + "'", str39, "[89, 134]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[90, 135]" + "'", str40, "[90, 135]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[91, 136]" + "'", str41, "[91, 136]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[92, 137]" + "'", str42, "[92, 137]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[93, 138]" + "'", str43, "[93, 138]");
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test2862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2862");
        int[] intArray1 = new int[] { (-1) };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass68 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[5]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1]" + "'", str32, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1]" + "'", str33, "[1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[2]" + "'", str34, "[2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[3]" + "'", str35, "[3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[4]" + "'", str36, "[4]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[5]" + "'", str37, "[5]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[6]" + "'", str38, "[6]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[7]" + "'", str39, "[7]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[8]" + "'", str40, "[8]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[9]" + "'", str41, "[9]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 1]" + "'", str42, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1]" + "'", str43, "[1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[2]" + "'", str44, "[2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[3]" + "'", str45, "[3]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[4]" + "'", str46, "[4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[5]" + "'", str47, "[5]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[6]" + "'", str48, "[6]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[7]" + "'", str49, "[7]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[8]" + "'", str50, "[8]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[9]" + "'", str51, "[9]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 1]" + "'", str52, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1]" + "'", str53, "[1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[2]" + "'", str54, "[2]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[3]" + "'", str55, "[3]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[4]" + "'", str56, "[4]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[5]" + "'", str57, "[5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[6]" + "'", str58, "[6]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[7]" + "'", str59, "[7]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[8]" + "'", str60, "[8]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[9]" + "'", str61, "[9]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 1]" + "'", str62, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1]" + "'", str63, "[1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[2]" + "'", str64, "[2]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[3]" + "'", str65, "[3]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[4]" + "'", str66, "[4]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[5]" + "'", str67, "[5]");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test2863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2863");
        int[] intArray5 = new int[] { (short) 1, 0, (byte) 100, '4', (byte) 0 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass31 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 125, 52, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 52, 0]" + "'", str6, "[1, 0, 101, 52, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 52, 0]" + "'", str7, "[1, 0, 102, 52, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 52, 0]" + "'", str8, "[1, 0, 103, 52, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 52, 0]" + "'", str9, "[1, 0, 104, 52, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 52, 0]" + "'", str10, "[1, 0, 105, 52, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 52, 0]" + "'", str11, "[1, 0, 106, 52, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 52, 0]" + "'", str12, "[1, 0, 107, 52, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 108, 52, 0]" + "'", str13, "[1, 0, 108, 52, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 109, 52, 0]" + "'", str14, "[1, 0, 109, 52, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 110, 52, 0]" + "'", str15, "[1, 0, 110, 52, 0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 111, 52, 0]" + "'", str16, "[1, 0, 111, 52, 0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 0, 112, 52, 0]" + "'", str17, "[1, 0, 112, 52, 0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 0, 113, 52, 0]" + "'", str18, "[1, 0, 113, 52, 0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 0, 114, 52, 0]" + "'", str19, "[1, 0, 114, 52, 0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 0, 115, 52, 0]" + "'", str20, "[1, 0, 115, 52, 0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 116, 52, 0]" + "'", str21, "[1, 0, 116, 52, 0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 117, 52, 0]" + "'", str22, "[1, 0, 117, 52, 0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 118, 52, 0]" + "'", str23, "[1, 0, 118, 52, 0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 119, 52, 0]" + "'", str24, "[1, 0, 119, 52, 0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 0, 120, 52, 0]" + "'", str25, "[1, 0, 120, 52, 0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 0, 121, 52, 0]" + "'", str26, "[1, 0, 121, 52, 0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 0, 122, 52, 0]" + "'", str27, "[1, 0, 122, 52, 0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 0, 123, 52, 0]" + "'", str28, "[1, 0, 123, 52, 0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 0, 124, 52, 0]" + "'", str29, "[1, 0, 124, 52, 0]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 0, 125, 52, 0]" + "'", str30, "[1, 0, 125, 52, 0]");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test2864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2864");
        int[] intArray1 = new int[] { (short) -1 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[0]" + "'", str2, "[0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[1]" + "'", str3, "[1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[2]" + "'", str4, "[2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[3]" + "'", str5, "[3]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[4]" + "'", str6, "[4]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[5]" + "'", str7, "[5]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[6]" + "'", str8, "[6]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[7]" + "'", str9, "[7]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[8]" + "'", str10, "[8]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[9]" + "'", str11, "[9]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1]" + "'", str13, "[1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[2]" + "'", str14, "[2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[3]" + "'", str15, "[3]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[4]" + "'", str16, "[4]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[5]" + "'", str17, "[5]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[6]" + "'", str18, "[6]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[7]" + "'", str19, "[7]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[8]" + "'", str20, "[8]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[9]" + "'", str21, "[9]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1]" + "'", str23, "[1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[2]" + "'", str24, "[2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[3]" + "'", str25, "[3]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[4]" + "'", str26, "[4]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[5]" + "'", str27, "[5]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[6]" + "'", str28, "[6]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[7]" + "'", str29, "[7]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[8]" + "'", str30, "[8]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[9]" + "'", str31, "[9]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 1]" + "'", str32, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1]" + "'", str33, "[1]");
    }

    @Test
    public void test2865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2865");
        int[] intArray3 = new int[] { (short) 10, (short) 0, (short) 10 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[16, 8, 16]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[10, 1, 10]" + "'", str4, "[10, 1, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 2, 10]" + "'", str5, "[10, 2, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 3, 10]" + "'", str6, "[10, 3, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 4, 10]" + "'", str7, "[10, 4, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 5, 10]" + "'", str8, "[10, 5, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 6, 10]" + "'", str9, "[10, 6, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 7, 10]" + "'", str10, "[10, 7, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 8, 10]" + "'", str11, "[10, 8, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 9, 10]" + "'", str12, "[10, 9, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[11, 0, 11]" + "'", str13, "[11, 0, 11]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[11, 1, 11]" + "'", str14, "[11, 1, 11]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[11, 2, 11]" + "'", str15, "[11, 2, 11]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[11, 3, 11]" + "'", str16, "[11, 3, 11]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[11, 4, 11]" + "'", str17, "[11, 4, 11]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[11, 5, 11]" + "'", str18, "[11, 5, 11]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[11, 6, 11]" + "'", str19, "[11, 6, 11]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[11, 7, 11]" + "'", str20, "[11, 7, 11]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[11, 8, 11]" + "'", str21, "[11, 8, 11]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[11, 9, 11]" + "'", str22, "[11, 9, 11]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[12, 0, 12]" + "'", str23, "[12, 0, 12]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[12, 1, 12]" + "'", str24, "[12, 1, 12]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[12, 2, 12]" + "'", str25, "[12, 2, 12]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[12, 3, 12]" + "'", str26, "[12, 3, 12]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[12, 4, 12]" + "'", str27, "[12, 4, 12]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[12, 5, 12]" + "'", str28, "[12, 5, 12]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[12, 6, 12]" + "'", str29, "[12, 6, 12]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[12, 7, 12]" + "'", str30, "[12, 7, 12]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[12, 8, 12]" + "'", str31, "[12, 8, 12]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[12, 9, 12]" + "'", str32, "[12, 9, 12]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[13, 0, 13]" + "'", str33, "[13, 0, 13]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[13, 1, 13]" + "'", str34, "[13, 1, 13]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[13, 2, 13]" + "'", str35, "[13, 2, 13]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[13, 3, 13]" + "'", str36, "[13, 3, 13]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[13, 4, 13]" + "'", str37, "[13, 4, 13]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[13, 5, 13]" + "'", str38, "[13, 5, 13]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[13, 6, 13]" + "'", str39, "[13, 6, 13]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[13, 7, 13]" + "'", str40, "[13, 7, 13]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[13, 8, 13]" + "'", str41, "[13, 8, 13]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[13, 9, 13]" + "'", str42, "[13, 9, 13]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[14, 0, 14]" + "'", str43, "[14, 0, 14]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[14, 1, 14]" + "'", str44, "[14, 1, 14]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[14, 2, 14]" + "'", str45, "[14, 2, 14]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[14, 3, 14]" + "'", str46, "[14, 3, 14]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[14, 4, 14]" + "'", str47, "[14, 4, 14]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[14, 5, 14]" + "'", str48, "[14, 5, 14]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[14, 6, 14]" + "'", str49, "[14, 6, 14]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[14, 7, 14]" + "'", str50, "[14, 7, 14]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[14, 8, 14]" + "'", str51, "[14, 8, 14]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[14, 9, 14]" + "'", str52, "[14, 9, 14]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[15, 0, 15]" + "'", str53, "[15, 0, 15]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[15, 1, 15]" + "'", str54, "[15, 1, 15]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[15, 2, 15]" + "'", str55, "[15, 2, 15]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[15, 3, 15]" + "'", str56, "[15, 3, 15]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[15, 4, 15]" + "'", str57, "[15, 4, 15]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[15, 5, 15]" + "'", str58, "[15, 5, 15]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[15, 6, 15]" + "'", str59, "[15, 6, 15]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[15, 7, 15]" + "'", str60, "[15, 7, 15]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[15, 8, 15]" + "'", str61, "[15, 8, 15]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[15, 9, 15]" + "'", str62, "[15, 9, 15]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[16, 0, 16]" + "'", str63, "[16, 0, 16]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[16, 1, 16]" + "'", str64, "[16, 1, 16]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[16, 2, 16]" + "'", str65, "[16, 2, 16]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[16, 3, 16]" + "'", str66, "[16, 3, 16]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[16, 4, 16]" + "'", str67, "[16, 4, 16]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[16, 5, 16]" + "'", str68, "[16, 5, 16]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[16, 6, 16]" + "'", str69, "[16, 6, 16]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[16, 7, 16]" + "'", str70, "[16, 7, 16]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[16, 8, 16]" + "'", str71, "[16, 8, 16]");
    }

    @Test
    public void test2866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2866");
        int[] intArray6 = new int[] { (byte) 100, 'a', ' ', (byte) -1, (short) -1, (short) 1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 104, 8, 8, 6, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 97, 33, 0, -1, 1]" + "'", str7, "[100, 97, 33, 0, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 97, 34, 1, -1, 1]" + "'", str8, "[100, 97, 34, 1, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 97, 35, 2, -1, 1]" + "'", str9, "[100, 97, 35, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 97, 36, 3, -1, 1]" + "'", str10, "[100, 97, 36, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 97, 37, 4, -1, 1]" + "'", str11, "[100, 97, 37, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 97, 38, 5, -1, 1]" + "'", str12, "[100, 97, 38, 5, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 97, 39, 6, -1, 1]" + "'", str13, "[100, 97, 39, 6, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 97, 40, 7, -1, 1]" + "'", str14, "[100, 97, 40, 7, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 97, 41, 8, -1, 1]" + "'", str15, "[100, 97, 41, 8, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 97, 42, 9, -1, 1]" + "'", str16, "[100, 97, 42, 9, -1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 98, 0, 0, 0, 1]" + "'", str17, "[100, 98, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 98, 1, 1, 0, 1]" + "'", str18, "[100, 98, 1, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 98, 2, 2, 0, 1]" + "'", str19, "[100, 98, 2, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 98, 3, 3, 0, 1]" + "'", str20, "[100, 98, 3, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 98, 4, 4, 0, 1]" + "'", str21, "[100, 98, 4, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 98, 5, 5, 0, 1]" + "'", str22, "[100, 98, 5, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 98, 6, 6, 0, 1]" + "'", str23, "[100, 98, 6, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 98, 7, 7, 0, 1]" + "'", str24, "[100, 98, 7, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 98, 8, 8, 0, 1]" + "'", str25, "[100, 98, 8, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 98, 9, 9, 0, 1]" + "'", str26, "[100, 98, 9, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 99, 0, 0, 1, 1]" + "'", str27, "[100, 99, 0, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 99, 1, 1, 1, 1]" + "'", str28, "[100, 99, 1, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 99, 2, 2, 1, 1]" + "'", str29, "[100, 99, 2, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 99, 3, 3, 1, 1]" + "'", str30, "[100, 99, 3, 3, 1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 99, 4, 4, 1, 1]" + "'", str31, "[100, 99, 4, 4, 1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 99, 5, 5, 1, 1]" + "'", str32, "[100, 99, 5, 5, 1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 99, 6, 6, 1, 1]" + "'", str33, "[100, 99, 6, 6, 1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 99, 7, 7, 1, 1]" + "'", str34, "[100, 99, 7, 7, 1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 99, 8, 8, 1, 1]" + "'", str35, "[100, 99, 8, 8, 1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 99, 9, 9, 1, 1]" + "'", str36, "[100, 99, 9, 9, 1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 100, 0, 0, 2, 1]" + "'", str37, "[100, 100, 0, 0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 100, 1, 1, 2, 1]" + "'", str38, "[100, 100, 1, 1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 100, 2, 2, 2, 1]" + "'", str39, "[100, 100, 2, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 100, 3, 3, 2, 1]" + "'", str40, "[100, 100, 3, 3, 2, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 100, 4, 4, 2, 1]" + "'", str41, "[100, 100, 4, 4, 2, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 100, 5, 5, 2, 1]" + "'", str42, "[100, 100, 5, 5, 2, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 100, 6, 6, 2, 1]" + "'", str43, "[100, 100, 6, 6, 2, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 100, 7, 7, 2, 1]" + "'", str44, "[100, 100, 7, 7, 2, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 100, 8, 8, 2, 1]" + "'", str45, "[100, 100, 8, 8, 2, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 100, 9, 9, 2, 1]" + "'", str46, "[100, 100, 9, 9, 2, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 101, 0, 0, 3, 1]" + "'", str47, "[100, 101, 0, 0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 101, 1, 1, 3, 1]" + "'", str48, "[100, 101, 1, 1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 101, 2, 2, 3, 1]" + "'", str49, "[100, 101, 2, 2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 101, 3, 3, 3, 1]" + "'", str50, "[100, 101, 3, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 101, 4, 4, 3, 1]" + "'", str51, "[100, 101, 4, 4, 3, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 101, 5, 5, 3, 1]" + "'", str52, "[100, 101, 5, 5, 3, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 101, 6, 6, 3, 1]" + "'", str53, "[100, 101, 6, 6, 3, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 101, 7, 7, 3, 1]" + "'", str54, "[100, 101, 7, 7, 3, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 101, 8, 8, 3, 1]" + "'", str55, "[100, 101, 8, 8, 3, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 101, 9, 9, 3, 1]" + "'", str56, "[100, 101, 9, 9, 3, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 102, 0, 0, 4, 1]" + "'", str57, "[100, 102, 0, 0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 102, 1, 1, 4, 1]" + "'", str58, "[100, 102, 1, 1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 102, 2, 2, 4, 1]" + "'", str59, "[100, 102, 2, 2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 102, 3, 3, 4, 1]" + "'", str60, "[100, 102, 3, 3, 4, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 102, 4, 4, 4, 1]" + "'", str61, "[100, 102, 4, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[100, 102, 5, 5, 4, 1]" + "'", str62, "[100, 102, 5, 5, 4, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[100, 102, 6, 6, 4, 1]" + "'", str63, "[100, 102, 6, 6, 4, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[100, 102, 7, 7, 4, 1]" + "'", str64, "[100, 102, 7, 7, 4, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[100, 102, 8, 8, 4, 1]" + "'", str65, "[100, 102, 8, 8, 4, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[100, 102, 9, 9, 4, 1]" + "'", str66, "[100, 102, 9, 9, 4, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[100, 103, 0, 0, 5, 1]" + "'", str67, "[100, 103, 0, 0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[100, 103, 1, 1, 5, 1]" + "'", str68, "[100, 103, 1, 1, 5, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[100, 103, 2, 2, 5, 1]" + "'", str69, "[100, 103, 2, 2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[100, 103, 3, 3, 5, 1]" + "'", str70, "[100, 103, 3, 3, 5, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[100, 103, 4, 4, 5, 1]" + "'", str71, "[100, 103, 4, 4, 5, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[100, 103, 5, 5, 5, 1]" + "'", str72, "[100, 103, 5, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[100, 103, 6, 6, 5, 1]" + "'", str73, "[100, 103, 6, 6, 5, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[100, 103, 7, 7, 5, 1]" + "'", str74, "[100, 103, 7, 7, 5, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[100, 103, 8, 8, 5, 1]" + "'", str75, "[100, 103, 8, 8, 5, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[100, 103, 9, 9, 5, 1]" + "'", str76, "[100, 103, 9, 9, 5, 1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[100, 104, 0, 0, 6, 1]" + "'", str77, "[100, 104, 0, 0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[100, 104, 1, 1, 6, 1]" + "'", str78, "[100, 104, 1, 1, 6, 1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[100, 104, 2, 2, 6, 1]" + "'", str79, "[100, 104, 2, 2, 6, 1]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[100, 104, 3, 3, 6, 1]" + "'", str80, "[100, 104, 3, 3, 6, 1]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[100, 104, 4, 4, 6, 1]" + "'", str81, "[100, 104, 4, 4, 6, 1]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[100, 104, 5, 5, 6, 1]" + "'", str82, "[100, 104, 5, 5, 6, 1]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[100, 104, 6, 6, 6, 1]" + "'", str83, "[100, 104, 6, 6, 6, 1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[100, 104, 7, 7, 6, 1]" + "'", str84, "[100, 104, 7, 7, 6, 1]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[100, 104, 8, 8, 6, 1]" + "'", str85, "[100, 104, 8, 8, 6, 1]");
    }

    @Test
    public void test2867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2867");
        int[] intArray6 = new int[] { (byte) 100, 'a', ' ', (byte) -1, (short) -1, (short) 1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass85 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 104, 7, 7, 6, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 97, 33, 0, -1, 1]" + "'", str7, "[100, 97, 33, 0, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 97, 34, 1, -1, 1]" + "'", str8, "[100, 97, 34, 1, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 97, 35, 2, -1, 1]" + "'", str9, "[100, 97, 35, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 97, 36, 3, -1, 1]" + "'", str10, "[100, 97, 36, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 97, 37, 4, -1, 1]" + "'", str11, "[100, 97, 37, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 97, 38, 5, -1, 1]" + "'", str12, "[100, 97, 38, 5, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 97, 39, 6, -1, 1]" + "'", str13, "[100, 97, 39, 6, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 97, 40, 7, -1, 1]" + "'", str14, "[100, 97, 40, 7, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 97, 41, 8, -1, 1]" + "'", str15, "[100, 97, 41, 8, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 97, 42, 9, -1, 1]" + "'", str16, "[100, 97, 42, 9, -1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 98, 0, 0, 0, 1]" + "'", str17, "[100, 98, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 98, 1, 1, 0, 1]" + "'", str18, "[100, 98, 1, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 98, 2, 2, 0, 1]" + "'", str19, "[100, 98, 2, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 98, 3, 3, 0, 1]" + "'", str20, "[100, 98, 3, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 98, 4, 4, 0, 1]" + "'", str21, "[100, 98, 4, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 98, 5, 5, 0, 1]" + "'", str22, "[100, 98, 5, 5, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 98, 6, 6, 0, 1]" + "'", str23, "[100, 98, 6, 6, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 98, 7, 7, 0, 1]" + "'", str24, "[100, 98, 7, 7, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 98, 8, 8, 0, 1]" + "'", str25, "[100, 98, 8, 8, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 98, 9, 9, 0, 1]" + "'", str26, "[100, 98, 9, 9, 0, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 99, 0, 0, 1, 1]" + "'", str27, "[100, 99, 0, 0, 1, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 99, 1, 1, 1, 1]" + "'", str28, "[100, 99, 1, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 99, 2, 2, 1, 1]" + "'", str29, "[100, 99, 2, 2, 1, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 99, 3, 3, 1, 1]" + "'", str30, "[100, 99, 3, 3, 1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 99, 4, 4, 1, 1]" + "'", str31, "[100, 99, 4, 4, 1, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 99, 5, 5, 1, 1]" + "'", str32, "[100, 99, 5, 5, 1, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 99, 6, 6, 1, 1]" + "'", str33, "[100, 99, 6, 6, 1, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 99, 7, 7, 1, 1]" + "'", str34, "[100, 99, 7, 7, 1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 99, 8, 8, 1, 1]" + "'", str35, "[100, 99, 8, 8, 1, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 99, 9, 9, 1, 1]" + "'", str36, "[100, 99, 9, 9, 1, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 100, 0, 0, 2, 1]" + "'", str37, "[100, 100, 0, 0, 2, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 100, 1, 1, 2, 1]" + "'", str38, "[100, 100, 1, 1, 2, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 100, 2, 2, 2, 1]" + "'", str39, "[100, 100, 2, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 100, 3, 3, 2, 1]" + "'", str40, "[100, 100, 3, 3, 2, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 100, 4, 4, 2, 1]" + "'", str41, "[100, 100, 4, 4, 2, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 100, 5, 5, 2, 1]" + "'", str42, "[100, 100, 5, 5, 2, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 100, 6, 6, 2, 1]" + "'", str43, "[100, 100, 6, 6, 2, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 100, 7, 7, 2, 1]" + "'", str44, "[100, 100, 7, 7, 2, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 100, 8, 8, 2, 1]" + "'", str45, "[100, 100, 8, 8, 2, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 100, 9, 9, 2, 1]" + "'", str46, "[100, 100, 9, 9, 2, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 101, 0, 0, 3, 1]" + "'", str47, "[100, 101, 0, 0, 3, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 101, 1, 1, 3, 1]" + "'", str48, "[100, 101, 1, 1, 3, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 101, 2, 2, 3, 1]" + "'", str49, "[100, 101, 2, 2, 3, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 101, 3, 3, 3, 1]" + "'", str50, "[100, 101, 3, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 101, 4, 4, 3, 1]" + "'", str51, "[100, 101, 4, 4, 3, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 101, 5, 5, 3, 1]" + "'", str52, "[100, 101, 5, 5, 3, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 101, 6, 6, 3, 1]" + "'", str53, "[100, 101, 6, 6, 3, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 101, 7, 7, 3, 1]" + "'", str54, "[100, 101, 7, 7, 3, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 101, 8, 8, 3, 1]" + "'", str55, "[100, 101, 8, 8, 3, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 101, 9, 9, 3, 1]" + "'", str56, "[100, 101, 9, 9, 3, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 102, 0, 0, 4, 1]" + "'", str57, "[100, 102, 0, 0, 4, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 102, 1, 1, 4, 1]" + "'", str58, "[100, 102, 1, 1, 4, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 102, 2, 2, 4, 1]" + "'", str59, "[100, 102, 2, 2, 4, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 102, 3, 3, 4, 1]" + "'", str60, "[100, 102, 3, 3, 4, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 102, 4, 4, 4, 1]" + "'", str61, "[100, 102, 4, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[100, 102, 5, 5, 4, 1]" + "'", str62, "[100, 102, 5, 5, 4, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[100, 102, 6, 6, 4, 1]" + "'", str63, "[100, 102, 6, 6, 4, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[100, 102, 7, 7, 4, 1]" + "'", str64, "[100, 102, 7, 7, 4, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[100, 102, 8, 8, 4, 1]" + "'", str65, "[100, 102, 8, 8, 4, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[100, 102, 9, 9, 4, 1]" + "'", str66, "[100, 102, 9, 9, 4, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[100, 103, 0, 0, 5, 1]" + "'", str67, "[100, 103, 0, 0, 5, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[100, 103, 1, 1, 5, 1]" + "'", str68, "[100, 103, 1, 1, 5, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[100, 103, 2, 2, 5, 1]" + "'", str69, "[100, 103, 2, 2, 5, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[100, 103, 3, 3, 5, 1]" + "'", str70, "[100, 103, 3, 3, 5, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[100, 103, 4, 4, 5, 1]" + "'", str71, "[100, 103, 4, 4, 5, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[100, 103, 5, 5, 5, 1]" + "'", str72, "[100, 103, 5, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[100, 103, 6, 6, 5, 1]" + "'", str73, "[100, 103, 6, 6, 5, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[100, 103, 7, 7, 5, 1]" + "'", str74, "[100, 103, 7, 7, 5, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[100, 103, 8, 8, 5, 1]" + "'", str75, "[100, 103, 8, 8, 5, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[100, 103, 9, 9, 5, 1]" + "'", str76, "[100, 103, 9, 9, 5, 1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[100, 104, 0, 0, 6, 1]" + "'", str77, "[100, 104, 0, 0, 6, 1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[100, 104, 1, 1, 6, 1]" + "'", str78, "[100, 104, 1, 1, 6, 1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[100, 104, 2, 2, 6, 1]" + "'", str79, "[100, 104, 2, 2, 6, 1]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[100, 104, 3, 3, 6, 1]" + "'", str80, "[100, 104, 3, 3, 6, 1]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[100, 104, 4, 4, 6, 1]" + "'", str81, "[100, 104, 4, 4, 6, 1]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[100, 104, 5, 5, 6, 1]" + "'", str82, "[100, 104, 5, 5, 6, 1]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[100, 104, 6, 6, 6, 1]" + "'", str83, "[100, 104, 6, 6, 6, 1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[100, 104, 7, 7, 6, 1]" + "'", str84, "[100, 104, 7, 7, 6, 1]");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2868");
        int[] intArray4 = new int[] { '4', (byte) -1, (short) 1, (byte) 10 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass31 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[54, 7, 7, 12]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[52, 0, 2, 10]" + "'", str5, "[52, 0, 2, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[52, 1, 3, 10]" + "'", str6, "[52, 1, 3, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[52, 2, 4, 10]" + "'", str7, "[52, 2, 4, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[52, 3, 5, 10]" + "'", str8, "[52, 3, 5, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[52, 4, 6, 10]" + "'", str9, "[52, 4, 6, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[52, 5, 7, 10]" + "'", str10, "[52, 5, 7, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[52, 6, 8, 10]" + "'", str11, "[52, 6, 8, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[52, 7, 9, 10]" + "'", str12, "[52, 7, 9, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[53, 0, 0, 11]" + "'", str13, "[53, 0, 0, 11]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[53, 1, 1, 11]" + "'", str14, "[53, 1, 1, 11]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[53, 2, 2, 11]" + "'", str15, "[53, 2, 2, 11]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[53, 3, 3, 11]" + "'", str16, "[53, 3, 3, 11]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[53, 4, 4, 11]" + "'", str17, "[53, 4, 4, 11]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[53, 5, 5, 11]" + "'", str18, "[53, 5, 5, 11]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[53, 6, 6, 11]" + "'", str19, "[53, 6, 6, 11]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[53, 7, 7, 11]" + "'", str20, "[53, 7, 7, 11]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[53, 8, 8, 11]" + "'", str21, "[53, 8, 8, 11]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[53, 9, 9, 11]" + "'", str22, "[53, 9, 9, 11]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[54, 0, 0, 12]" + "'", str23, "[54, 0, 0, 12]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[54, 1, 1, 12]" + "'", str24, "[54, 1, 1, 12]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[54, 2, 2, 12]" + "'", str25, "[54, 2, 2, 12]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[54, 3, 3, 12]" + "'", str26, "[54, 3, 3, 12]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[54, 4, 4, 12]" + "'", str27, "[54, 4, 4, 12]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[54, 5, 5, 12]" + "'", str28, "[54, 5, 5, 12]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[54, 6, 6, 12]" + "'", str29, "[54, 6, 6, 12]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[54, 7, 7, 12]" + "'", str30, "[54, 7, 7, 12]");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test2869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2869");
        int[] intArray1 = new int[] { (short) 1 };
        java.lang.String str2 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray1);
        java.lang.Class<?> wildcardClass40 = intArray1.getClass();
        org.junit.Assert.assertNotNull(intArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[9]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[2]" + "'", str2, "[2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[3]" + "'", str3, "[3]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[4]" + "'", str4, "[4]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[5]" + "'", str5, "[5]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[6]" + "'", str6, "[6]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[7]" + "'", str7, "[7]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[8]" + "'", str8, "[8]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[9]" + "'", str9, "[9]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 1]" + "'", str10, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1]" + "'", str11, "[1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[2]" + "'", str12, "[2]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[3]" + "'", str13, "[3]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[4]" + "'", str14, "[4]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[5]" + "'", str15, "[5]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[6]" + "'", str16, "[6]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[7]" + "'", str17, "[7]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[8]" + "'", str18, "[8]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[9]" + "'", str19, "[9]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 1]" + "'", str20, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1]" + "'", str21, "[1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[2]" + "'", str22, "[2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[3]" + "'", str23, "[3]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[4]" + "'", str24, "[4]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[5]" + "'", str25, "[5]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[6]" + "'", str26, "[6]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[7]" + "'", str27, "[7]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[8]" + "'", str28, "[8]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[9]" + "'", str29, "[9]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 1]" + "'", str30, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1]" + "'", str31, "[1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[2]" + "'", str32, "[2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[3]" + "'", str33, "[3]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[4]" + "'", str34, "[4]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[5]" + "'", str35, "[5]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[6]" + "'", str36, "[6]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[7]" + "'", str37, "[7]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[8]" + "'", str38, "[8]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[9]" + "'", str39, "[9]");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test2870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2870");
        int[] intArray4 = new int[] { (byte) 10, 'a', (byte) -1, '#' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str90 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[18, 5, 5, 43]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[10, 98, 0, 35]" + "'", str5, "[10, 98, 0, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[10, 99, 1, 35]" + "'", str6, "[10, 99, 1, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[10, 100, 2, 35]" + "'", str7, "[10, 100, 2, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[10, 101, 3, 35]" + "'", str8, "[10, 101, 3, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[10, 102, 4, 35]" + "'", str9, "[10, 102, 4, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[10, 103, 5, 35]" + "'", str10, "[10, 103, 5, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 104, 6, 35]" + "'", str11, "[10, 104, 6, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[10, 105, 7, 35]" + "'", str12, "[10, 105, 7, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[10, 106, 8, 35]" + "'", str13, "[10, 106, 8, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[10, 107, 9, 35]" + "'", str14, "[10, 107, 9, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[11, 0, 0, 36]" + "'", str15, "[11, 0, 0, 36]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[11, 1, 1, 36]" + "'", str16, "[11, 1, 1, 36]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[11, 2, 2, 36]" + "'", str17, "[11, 2, 2, 36]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[11, 3, 3, 36]" + "'", str18, "[11, 3, 3, 36]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[11, 4, 4, 36]" + "'", str19, "[11, 4, 4, 36]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[11, 5, 5, 36]" + "'", str20, "[11, 5, 5, 36]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[11, 6, 6, 36]" + "'", str21, "[11, 6, 6, 36]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[11, 7, 7, 36]" + "'", str22, "[11, 7, 7, 36]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[11, 8, 8, 36]" + "'", str23, "[11, 8, 8, 36]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[11, 9, 9, 36]" + "'", str24, "[11, 9, 9, 36]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[12, 0, 0, 37]" + "'", str25, "[12, 0, 0, 37]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[12, 1, 1, 37]" + "'", str26, "[12, 1, 1, 37]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[12, 2, 2, 37]" + "'", str27, "[12, 2, 2, 37]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[12, 3, 3, 37]" + "'", str28, "[12, 3, 3, 37]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[12, 4, 4, 37]" + "'", str29, "[12, 4, 4, 37]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[12, 5, 5, 37]" + "'", str30, "[12, 5, 5, 37]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[12, 6, 6, 37]" + "'", str31, "[12, 6, 6, 37]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[12, 7, 7, 37]" + "'", str32, "[12, 7, 7, 37]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[12, 8, 8, 37]" + "'", str33, "[12, 8, 8, 37]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[12, 9, 9, 37]" + "'", str34, "[12, 9, 9, 37]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[13, 0, 0, 38]" + "'", str35, "[13, 0, 0, 38]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[13, 1, 1, 38]" + "'", str36, "[13, 1, 1, 38]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[13, 2, 2, 38]" + "'", str37, "[13, 2, 2, 38]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[13, 3, 3, 38]" + "'", str38, "[13, 3, 3, 38]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[13, 4, 4, 38]" + "'", str39, "[13, 4, 4, 38]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[13, 5, 5, 38]" + "'", str40, "[13, 5, 5, 38]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[13, 6, 6, 38]" + "'", str41, "[13, 6, 6, 38]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[13, 7, 7, 38]" + "'", str42, "[13, 7, 7, 38]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[13, 8, 8, 38]" + "'", str43, "[13, 8, 8, 38]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[13, 9, 9, 38]" + "'", str44, "[13, 9, 9, 38]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[14, 0, 0, 39]" + "'", str45, "[14, 0, 0, 39]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[14, 1, 1, 39]" + "'", str46, "[14, 1, 1, 39]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[14, 2, 2, 39]" + "'", str47, "[14, 2, 2, 39]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[14, 3, 3, 39]" + "'", str48, "[14, 3, 3, 39]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[14, 4, 4, 39]" + "'", str49, "[14, 4, 4, 39]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[14, 5, 5, 39]" + "'", str50, "[14, 5, 5, 39]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[14, 6, 6, 39]" + "'", str51, "[14, 6, 6, 39]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[14, 7, 7, 39]" + "'", str52, "[14, 7, 7, 39]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[14, 8, 8, 39]" + "'", str53, "[14, 8, 8, 39]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[14, 9, 9, 39]" + "'", str54, "[14, 9, 9, 39]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[15, 0, 0, 40]" + "'", str55, "[15, 0, 0, 40]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[15, 1, 1, 40]" + "'", str56, "[15, 1, 1, 40]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[15, 2, 2, 40]" + "'", str57, "[15, 2, 2, 40]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[15, 3, 3, 40]" + "'", str58, "[15, 3, 3, 40]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[15, 4, 4, 40]" + "'", str59, "[15, 4, 4, 40]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[15, 5, 5, 40]" + "'", str60, "[15, 5, 5, 40]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[15, 6, 6, 40]" + "'", str61, "[15, 6, 6, 40]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[15, 7, 7, 40]" + "'", str62, "[15, 7, 7, 40]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[15, 8, 8, 40]" + "'", str63, "[15, 8, 8, 40]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[15, 9, 9, 40]" + "'", str64, "[15, 9, 9, 40]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[16, 0, 0, 41]" + "'", str65, "[16, 0, 0, 41]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[16, 1, 1, 41]" + "'", str66, "[16, 1, 1, 41]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[16, 2, 2, 41]" + "'", str67, "[16, 2, 2, 41]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[16, 3, 3, 41]" + "'", str68, "[16, 3, 3, 41]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[16, 4, 4, 41]" + "'", str69, "[16, 4, 4, 41]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[16, 5, 5, 41]" + "'", str70, "[16, 5, 5, 41]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[16, 6, 6, 41]" + "'", str71, "[16, 6, 6, 41]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[16, 7, 7, 41]" + "'", str72, "[16, 7, 7, 41]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[16, 8, 8, 41]" + "'", str73, "[16, 8, 8, 41]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[16, 9, 9, 41]" + "'", str74, "[16, 9, 9, 41]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[17, 0, 0, 42]" + "'", str75, "[17, 0, 0, 42]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[17, 1, 1, 42]" + "'", str76, "[17, 1, 1, 42]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[17, 2, 2, 42]" + "'", str77, "[17, 2, 2, 42]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[17, 3, 3, 42]" + "'", str78, "[17, 3, 3, 42]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[17, 4, 4, 42]" + "'", str79, "[17, 4, 4, 42]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[17, 5, 5, 42]" + "'", str80, "[17, 5, 5, 42]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[17, 6, 6, 42]" + "'", str81, "[17, 6, 6, 42]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[17, 7, 7, 42]" + "'", str82, "[17, 7, 7, 42]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[17, 8, 8, 42]" + "'", str83, "[17, 8, 8, 42]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[17, 9, 9, 42]" + "'", str84, "[17, 9, 9, 42]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[18, 0, 0, 43]" + "'", str85, "[18, 0, 0, 43]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[18, 1, 1, 43]" + "'", str86, "[18, 1, 1, 43]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[18, 2, 2, 43]" + "'", str87, "[18, 2, 2, 43]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[18, 3, 3, 43]" + "'", str88, "[18, 3, 3, 43]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[18, 4, 4, 43]" + "'", str89, "[18, 4, 4, 43]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[18, 5, 5, 43]" + "'", str90, "[18, 5, 5, 43]");
    }

    @Test
    public void test2871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2871");
        int[] intArray6 = new int[] { ' ', (byte) 0, ' ', (byte) 0, (-1), (short) 1 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass21 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[32, 1, 4, 4, 0, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[32, 0, 33, 1, -1, 1]" + "'", str7, "[32, 0, 33, 1, -1, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[32, 0, 34, 2, -1, 1]" + "'", str8, "[32, 0, 34, 2, -1, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[32, 0, 35, 3, -1, 1]" + "'", str9, "[32, 0, 35, 3, -1, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[32, 0, 36, 4, -1, 1]" + "'", str10, "[32, 0, 36, 4, -1, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[32, 0, 37, 5, -1, 1]" + "'", str11, "[32, 0, 37, 5, -1, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[32, 0, 38, 6, -1, 1]" + "'", str12, "[32, 0, 38, 6, -1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[32, 0, 39, 7, -1, 1]" + "'", str13, "[32, 0, 39, 7, -1, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[32, 0, 40, 8, -1, 1]" + "'", str14, "[32, 0, 40, 8, -1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[32, 0, 41, 9, -1, 1]" + "'", str15, "[32, 0, 41, 9, -1, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[32, 1, 0, 0, 0, 1]" + "'", str16, "[32, 1, 0, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[32, 1, 1, 1, 0, 1]" + "'", str17, "[32, 1, 1, 1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[32, 1, 2, 2, 0, 1]" + "'", str18, "[32, 1, 2, 2, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[32, 1, 3, 3, 0, 1]" + "'", str19, "[32, 1, 3, 3, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[32, 1, 4, 4, 0, 1]" + "'", str20, "[32, 1, 4, 4, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test2872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2872");
        int[] intArray2 = new int[] { (short) 1, (short) -1 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str90 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str91 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str92 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str93 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str94 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str95 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[2, 2]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 0]" + "'", str3, "[2, 0]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 1]" + "'", str4, "[3, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 2]" + "'", str5, "[4, 2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 3]" + "'", str6, "[5, 3]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 4]" + "'", str7, "[6, 4]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 5]" + "'", str8, "[7, 5]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 6]" + "'", str9, "[8, 6]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 7]" + "'", str10, "[9, 7]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 8]" + "'", str11, "[10, 8]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 9]" + "'", str12, "[11, 9]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 1]" + "'", str13, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 1]" + "'", str14, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[2, 2]" + "'", str15, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[3, 3]" + "'", str16, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[4, 4]" + "'", str17, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[5, 5]" + "'", str18, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[6, 6]" + "'", str19, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[7, 7]" + "'", str20, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[8, 8]" + "'", str21, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[9, 9]" + "'", str22, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 1]" + "'", str23, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 1]" + "'", str24, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[2, 2]" + "'", str25, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[3, 3]" + "'", str26, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[4, 4]" + "'", str27, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[5, 5]" + "'", str28, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[6, 6]" + "'", str29, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[7, 7]" + "'", str30, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[8, 8]" + "'", str31, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[9, 9]" + "'", str32, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 0, 1]" + "'", str33, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 1]" + "'", str34, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[2, 2]" + "'", str35, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[3, 3]" + "'", str36, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[4, 4]" + "'", str37, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[5, 5]" + "'", str38, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[6, 6]" + "'", str39, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[7, 7]" + "'", str40, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[8, 8]" + "'", str41, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[9, 9]" + "'", str42, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 0, 1]" + "'", str43, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 1]" + "'", str44, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[2, 2]" + "'", str45, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[3, 3]" + "'", str46, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[4, 4]" + "'", str47, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[5, 5]" + "'", str48, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[6, 6]" + "'", str49, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[7, 7]" + "'", str50, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[8, 8]" + "'", str51, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[9, 9]" + "'", str52, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 0, 1]" + "'", str53, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 1]" + "'", str54, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[2, 2]" + "'", str55, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[3, 3]" + "'", str56, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[4, 4]" + "'", str57, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[5, 5]" + "'", str58, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[6, 6]" + "'", str59, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[7, 7]" + "'", str60, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[8, 8]" + "'", str61, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[9, 9]" + "'", str62, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 0, 1]" + "'", str63, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 1]" + "'", str64, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[2, 2]" + "'", str65, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[3, 3]" + "'", str66, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[4, 4]" + "'", str67, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[5, 5]" + "'", str68, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[6, 6]" + "'", str69, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[7, 7]" + "'", str70, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[8, 8]" + "'", str71, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[9, 9]" + "'", str72, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 0, 1]" + "'", str73, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 1]" + "'", str74, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[2, 2]" + "'", str75, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[3, 3]" + "'", str76, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[4, 4]" + "'", str77, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[5, 5]" + "'", str78, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[6, 6]" + "'", str79, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[7, 7]" + "'", str80, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[8, 8]" + "'", str81, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[9, 9]" + "'", str82, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[1, 0, 1]" + "'", str83, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[1, 1]" + "'", str84, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[2, 2]" + "'", str85, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[3, 3]" + "'", str86, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[4, 4]" + "'", str87, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[5, 5]" + "'", str88, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[6, 6]" + "'", str89, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[7, 7]" + "'", str90, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[8, 8]" + "'", str91, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[9, 9]" + "'", str92, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[1, 0, 1]" + "'", str93, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "[1, 1]" + "'", str94, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "[2, 2]" + "'", str95, "[2, 2]");
    }

    @Test
    public void test2873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2873");
        int[] intArray2 = new int[] { 1, 'a' };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[46, 142]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 98]" + "'", str3, "[2, 98]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 99]" + "'", str4, "[3, 99]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 100]" + "'", str5, "[4, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 101]" + "'", str6, "[5, 101]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 102]" + "'", str7, "[6, 102]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 103]" + "'", str8, "[7, 103]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 104]" + "'", str9, "[8, 104]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 105]" + "'", str10, "[9, 105]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 106]" + "'", str11, "[10, 106]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 107]" + "'", str12, "[11, 107]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[12, 108]" + "'", str13, "[12, 108]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[13, 109]" + "'", str14, "[13, 109]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[14, 110]" + "'", str15, "[14, 110]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[15, 111]" + "'", str16, "[15, 111]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[16, 112]" + "'", str17, "[16, 112]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[17, 113]" + "'", str18, "[17, 113]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[18, 114]" + "'", str19, "[18, 114]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[19, 115]" + "'", str20, "[19, 115]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[20, 116]" + "'", str21, "[20, 116]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[21, 117]" + "'", str22, "[21, 117]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[22, 118]" + "'", str23, "[22, 118]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[23, 119]" + "'", str24, "[23, 119]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[24, 120]" + "'", str25, "[24, 120]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[25, 121]" + "'", str26, "[25, 121]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[26, 122]" + "'", str27, "[26, 122]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[27, 123]" + "'", str28, "[27, 123]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[28, 124]" + "'", str29, "[28, 124]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[29, 125]" + "'", str30, "[29, 125]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[30, 126]" + "'", str31, "[30, 126]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[31, 127]" + "'", str32, "[31, 127]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[32, 128]" + "'", str33, "[32, 128]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[33, 129]" + "'", str34, "[33, 129]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[34, 130]" + "'", str35, "[34, 130]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 131]" + "'", str36, "[35, 131]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[36, 132]" + "'", str37, "[36, 132]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[37, 133]" + "'", str38, "[37, 133]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[38, 134]" + "'", str39, "[38, 134]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[39, 135]" + "'", str40, "[39, 135]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[40, 136]" + "'", str41, "[40, 136]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[41, 137]" + "'", str42, "[41, 137]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[42, 138]" + "'", str43, "[42, 138]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[43, 139]" + "'", str44, "[43, 139]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[44, 140]" + "'", str45, "[44, 140]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[45, 141]" + "'", str46, "[45, 141]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[46, 142]" + "'", str47, "[46, 142]");
    }

    @Test
    public void test2874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2874");
        int[] intArray5 = new int[] { 1, (byte) 0, (short) 100, 0, (short) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 0, 130, 0, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 0, 101, 0, 1]" + "'", str6, "[1, 0, 101, 0, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 0, 102, 0, 1]" + "'", str7, "[1, 0, 102, 0, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 0, 103, 0, 1]" + "'", str8, "[1, 0, 103, 0, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 0, 104, 0, 1]" + "'", str9, "[1, 0, 104, 0, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 0, 105, 0, 1]" + "'", str10, "[1, 0, 105, 0, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 106, 0, 1]" + "'", str11, "[1, 0, 106, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 0, 107, 0, 1]" + "'", str12, "[1, 0, 107, 0, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 0, 108, 0, 1]" + "'", str13, "[1, 0, 108, 0, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 0, 109, 0, 1]" + "'", str14, "[1, 0, 109, 0, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 0, 110, 0, 1]" + "'", str15, "[1, 0, 110, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 0, 111, 0, 1]" + "'", str16, "[1, 0, 111, 0, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 0, 112, 0, 1]" + "'", str17, "[1, 0, 112, 0, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 0, 113, 0, 1]" + "'", str18, "[1, 0, 113, 0, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 0, 114, 0, 1]" + "'", str19, "[1, 0, 114, 0, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 0, 115, 0, 1]" + "'", str20, "[1, 0, 115, 0, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 116, 0, 1]" + "'", str21, "[1, 0, 116, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 0, 117, 0, 1]" + "'", str22, "[1, 0, 117, 0, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 0, 118, 0, 1]" + "'", str23, "[1, 0, 118, 0, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 0, 119, 0, 1]" + "'", str24, "[1, 0, 119, 0, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 0, 120, 0, 1]" + "'", str25, "[1, 0, 120, 0, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 0, 121, 0, 1]" + "'", str26, "[1, 0, 121, 0, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 0, 122, 0, 1]" + "'", str27, "[1, 0, 122, 0, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 0, 123, 0, 1]" + "'", str28, "[1, 0, 123, 0, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 0, 124, 0, 1]" + "'", str29, "[1, 0, 124, 0, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 0, 125, 0, 1]" + "'", str30, "[1, 0, 125, 0, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 126, 0, 1]" + "'", str31, "[1, 0, 126, 0, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 0, 127, 0, 1]" + "'", str32, "[1, 0, 127, 0, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 0, 128, 0, 1]" + "'", str33, "[1, 0, 128, 0, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 0, 129, 0, 1]" + "'", str34, "[1, 0, 129, 0, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 0, 130, 0, 1]" + "'", str35, "[1, 0, 130, 0, 1]");
    }

    @Test
    public void test2875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2875");
        int[] intArray4 = new int[] { 'a', (short) 1, (byte) -1, (short) 0 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[103, 2, 2, 6]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 2, 0, 0]" + "'", str5, "[97, 2, 0, 0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 3, 1, 0]" + "'", str6, "[97, 3, 1, 0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 4, 2, 0]" + "'", str7, "[97, 4, 2, 0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 5, 3, 0]" + "'", str8, "[97, 5, 3, 0]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 6, 4, 0]" + "'", str9, "[97, 6, 4, 0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 7, 5, 0]" + "'", str10, "[97, 7, 5, 0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 8, 6, 0]" + "'", str11, "[97, 8, 6, 0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 9, 7, 0]" + "'", str12, "[97, 9, 7, 0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 10, 8, 0]" + "'", str13, "[97, 10, 8, 0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 11, 9, 0]" + "'", str14, "[97, 11, 9, 0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[98, 0, 0, 1]" + "'", str15, "[98, 0, 0, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[98, 1, 1, 1]" + "'", str16, "[98, 1, 1, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[98, 2, 2, 1]" + "'", str17, "[98, 2, 2, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[98, 3, 3, 1]" + "'", str18, "[98, 3, 3, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[98, 4, 4, 1]" + "'", str19, "[98, 4, 4, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[98, 5, 5, 1]" + "'", str20, "[98, 5, 5, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[98, 6, 6, 1]" + "'", str21, "[98, 6, 6, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[98, 7, 7, 1]" + "'", str22, "[98, 7, 7, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[98, 8, 8, 1]" + "'", str23, "[98, 8, 8, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[98, 9, 9, 1]" + "'", str24, "[98, 9, 9, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[99, 0, 0, 2]" + "'", str25, "[99, 0, 0, 2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[99, 1, 1, 2]" + "'", str26, "[99, 1, 1, 2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[99, 2, 2, 2]" + "'", str27, "[99, 2, 2, 2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[99, 3, 3, 2]" + "'", str28, "[99, 3, 3, 2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[99, 4, 4, 2]" + "'", str29, "[99, 4, 4, 2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[99, 5, 5, 2]" + "'", str30, "[99, 5, 5, 2]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[99, 6, 6, 2]" + "'", str31, "[99, 6, 6, 2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[99, 7, 7, 2]" + "'", str32, "[99, 7, 7, 2]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[99, 8, 8, 2]" + "'", str33, "[99, 8, 8, 2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[99, 9, 9, 2]" + "'", str34, "[99, 9, 9, 2]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 0, 0, 3]" + "'", str35, "[100, 0, 0, 3]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 1, 1, 3]" + "'", str36, "[100, 1, 1, 3]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 2, 2, 3]" + "'", str37, "[100, 2, 2, 3]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 3, 3, 3]" + "'", str38, "[100, 3, 3, 3]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 4, 4, 3]" + "'", str39, "[100, 4, 4, 3]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 5, 5, 3]" + "'", str40, "[100, 5, 5, 3]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 6, 6, 3]" + "'", str41, "[100, 6, 6, 3]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 7, 7, 3]" + "'", str42, "[100, 7, 7, 3]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 8, 8, 3]" + "'", str43, "[100, 8, 8, 3]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 9, 9, 3]" + "'", str44, "[100, 9, 9, 3]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[101, 0, 0, 4]" + "'", str45, "[101, 0, 0, 4]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[101, 1, 1, 4]" + "'", str46, "[101, 1, 1, 4]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[101, 2, 2, 4]" + "'", str47, "[101, 2, 2, 4]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[101, 3, 3, 4]" + "'", str48, "[101, 3, 3, 4]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[101, 4, 4, 4]" + "'", str49, "[101, 4, 4, 4]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[101, 5, 5, 4]" + "'", str50, "[101, 5, 5, 4]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[101, 6, 6, 4]" + "'", str51, "[101, 6, 6, 4]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[101, 7, 7, 4]" + "'", str52, "[101, 7, 7, 4]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[101, 8, 8, 4]" + "'", str53, "[101, 8, 8, 4]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[101, 9, 9, 4]" + "'", str54, "[101, 9, 9, 4]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[102, 0, 0, 5]" + "'", str55, "[102, 0, 0, 5]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[102, 1, 1, 5]" + "'", str56, "[102, 1, 1, 5]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[102, 2, 2, 5]" + "'", str57, "[102, 2, 2, 5]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[102, 3, 3, 5]" + "'", str58, "[102, 3, 3, 5]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[102, 4, 4, 5]" + "'", str59, "[102, 4, 4, 5]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[102, 5, 5, 5]" + "'", str60, "[102, 5, 5, 5]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[102, 6, 6, 5]" + "'", str61, "[102, 6, 6, 5]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[102, 7, 7, 5]" + "'", str62, "[102, 7, 7, 5]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[102, 8, 8, 5]" + "'", str63, "[102, 8, 8, 5]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[102, 9, 9, 5]" + "'", str64, "[102, 9, 9, 5]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[103, 0, 0, 6]" + "'", str65, "[103, 0, 0, 6]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[103, 1, 1, 6]" + "'", str66, "[103, 1, 1, 6]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[103, 2, 2, 6]" + "'", str67, "[103, 2, 2, 6]");
    }

    @Test
    public void test2876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2876");
        int[] intArray3 = new int[] { 0, (-1), (short) 100 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.Class<?> wildcardClass10 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 5, 100]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[0, 0, 100]" + "'", str4, "[0, 0, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[0, 1, 100]" + "'", str5, "[0, 1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[0, 2, 100]" + "'", str6, "[0, 2, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 3, 100]" + "'", str7, "[0, 3, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 4, 100]" + "'", str8, "[0, 4, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 5, 100]" + "'", str9, "[0, 5, 100]");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test2877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2877");
        int[] intArray2 = new int[] { 'a', 1 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass32 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[0, 0]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[98, 2]" + "'", str3, "[98, 2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[99, 3]" + "'", str4, "[99, 3]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[100, 4]" + "'", str5, "[100, 4]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[101, 5]" + "'", str6, "[101, 5]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[102, 6]" + "'", str7, "[102, 6]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[103, 7]" + "'", str8, "[103, 7]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[104, 8]" + "'", str9, "[104, 8]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[105, 9]" + "'", str10, "[105, 9]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 0, 1]" + "'", str11, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 1]" + "'", str12, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[2, 2]" + "'", str13, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[3, 3]" + "'", str14, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[4, 4]" + "'", str15, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[5, 5]" + "'", str16, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[6, 6]" + "'", str17, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[7, 7]" + "'", str18, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[8, 8]" + "'", str19, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[9, 9]" + "'", str20, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 0, 1]" + "'", str21, "[1, 0, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 1]" + "'", str22, "[1, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[2, 2]" + "'", str23, "[2, 2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[3, 3]" + "'", str24, "[3, 3]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[4, 4]" + "'", str25, "[4, 4]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[5, 5]" + "'", str26, "[5, 5]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[6, 6]" + "'", str27, "[6, 6]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[7, 7]" + "'", str28, "[7, 7]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[8, 8]" + "'", str29, "[8, 8]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[9, 9]" + "'", str30, "[9, 9]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 0, 1]" + "'", str31, "[1, 0, 1]");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test2878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2878");
        int[] intArray5 = new int[] { 1, (short) 100, (byte) 100, (short) 10, (byte) 1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.Class<?> wildcardClass12 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 100, 106, 10, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 100, 101, 10, 1]" + "'", str6, "[1, 100, 101, 10, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 100, 102, 10, 1]" + "'", str7, "[1, 100, 102, 10, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 100, 103, 10, 1]" + "'", str8, "[1, 100, 103, 10, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 100, 104, 10, 1]" + "'", str9, "[1, 100, 104, 10, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 100, 105, 10, 1]" + "'", str10, "[1, 100, 105, 10, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 100, 106, 10, 1]" + "'", str11, "[1, 100, 106, 10, 1]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test2879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2879");
        int[] intArray2 = new int[] { (short) 1, 10 };
        java.lang.String str3 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray2);
        java.lang.Class<?> wildcardClass39 = intArray2.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[37, 46]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[2, 11]" + "'", str3, "[2, 11]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[3, 12]" + "'", str4, "[3, 12]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[4, 13]" + "'", str5, "[4, 13]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[5, 14]" + "'", str6, "[5, 14]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[6, 15]" + "'", str7, "[6, 15]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[7, 16]" + "'", str8, "[7, 16]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[8, 17]" + "'", str9, "[8, 17]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[9, 18]" + "'", str10, "[9, 18]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[10, 19]" + "'", str11, "[10, 19]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[11, 20]" + "'", str12, "[11, 20]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[12, 21]" + "'", str13, "[12, 21]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[13, 22]" + "'", str14, "[13, 22]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[14, 23]" + "'", str15, "[14, 23]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[15, 24]" + "'", str16, "[15, 24]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[16, 25]" + "'", str17, "[16, 25]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[17, 26]" + "'", str18, "[17, 26]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[18, 27]" + "'", str19, "[18, 27]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[19, 28]" + "'", str20, "[19, 28]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[20, 29]" + "'", str21, "[20, 29]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[21, 30]" + "'", str22, "[21, 30]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[22, 31]" + "'", str23, "[22, 31]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[23, 32]" + "'", str24, "[23, 32]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[24, 33]" + "'", str25, "[24, 33]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[25, 34]" + "'", str26, "[25, 34]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[26, 35]" + "'", str27, "[26, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[27, 36]" + "'", str28, "[27, 36]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[28, 37]" + "'", str29, "[28, 37]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[29, 38]" + "'", str30, "[29, 38]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[30, 39]" + "'", str31, "[30, 39]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[31, 40]" + "'", str32, "[31, 40]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[32, 41]" + "'", str33, "[32, 41]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[33, 42]" + "'", str34, "[33, 42]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[34, 43]" + "'", str35, "[34, 43]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 44]" + "'", str36, "[35, 44]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[36, 45]" + "'", str37, "[36, 45]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[37, 46]" + "'", str38, "[37, 46]");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test2880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2880");
        int[] intArray3 = new int[] { (byte) 1, 'a', (short) 100 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 169, 100]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[1, 98, 100]" + "'", str4, "[1, 98, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[1, 99, 100]" + "'", str5, "[1, 99, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[1, 100, 100]" + "'", str6, "[1, 100, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[1, 101, 100]" + "'", str7, "[1, 101, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[1, 102, 100]" + "'", str8, "[1, 102, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[1, 103, 100]" + "'", str9, "[1, 103, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[1, 104, 100]" + "'", str10, "[1, 104, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[1, 105, 100]" + "'", str11, "[1, 105, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[1, 106, 100]" + "'", str12, "[1, 106, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[1, 107, 100]" + "'", str13, "[1, 107, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[1, 108, 100]" + "'", str14, "[1, 108, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[1, 109, 100]" + "'", str15, "[1, 109, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[1, 110, 100]" + "'", str16, "[1, 110, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[1, 111, 100]" + "'", str17, "[1, 111, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[1, 112, 100]" + "'", str18, "[1, 112, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[1, 113, 100]" + "'", str19, "[1, 113, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[1, 114, 100]" + "'", str20, "[1, 114, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[1, 115, 100]" + "'", str21, "[1, 115, 100]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[1, 116, 100]" + "'", str22, "[1, 116, 100]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[1, 117, 100]" + "'", str23, "[1, 117, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[1, 118, 100]" + "'", str24, "[1, 118, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[1, 119, 100]" + "'", str25, "[1, 119, 100]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[1, 120, 100]" + "'", str26, "[1, 120, 100]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[1, 121, 100]" + "'", str27, "[1, 121, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[1, 122, 100]" + "'", str28, "[1, 122, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[1, 123, 100]" + "'", str29, "[1, 123, 100]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[1, 124, 100]" + "'", str30, "[1, 124, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[1, 125, 100]" + "'", str31, "[1, 125, 100]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[1, 126, 100]" + "'", str32, "[1, 126, 100]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[1, 127, 100]" + "'", str33, "[1, 127, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[1, 128, 100]" + "'", str34, "[1, 128, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[1, 129, 100]" + "'", str35, "[1, 129, 100]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[1, 130, 100]" + "'", str36, "[1, 130, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[1, 131, 100]" + "'", str37, "[1, 131, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[1, 132, 100]" + "'", str38, "[1, 132, 100]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[1, 133, 100]" + "'", str39, "[1, 133, 100]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[1, 134, 100]" + "'", str40, "[1, 134, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[1, 135, 100]" + "'", str41, "[1, 135, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[1, 136, 100]" + "'", str42, "[1, 136, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[1, 137, 100]" + "'", str43, "[1, 137, 100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[1, 138, 100]" + "'", str44, "[1, 138, 100]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[1, 139, 100]" + "'", str45, "[1, 139, 100]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[1, 140, 100]" + "'", str46, "[1, 140, 100]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[1, 141, 100]" + "'", str47, "[1, 141, 100]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[1, 142, 100]" + "'", str48, "[1, 142, 100]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[1, 143, 100]" + "'", str49, "[1, 143, 100]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[1, 144, 100]" + "'", str50, "[1, 144, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[1, 145, 100]" + "'", str51, "[1, 145, 100]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[1, 146, 100]" + "'", str52, "[1, 146, 100]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[1, 147, 100]" + "'", str53, "[1, 147, 100]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[1, 148, 100]" + "'", str54, "[1, 148, 100]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[1, 149, 100]" + "'", str55, "[1, 149, 100]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[1, 150, 100]" + "'", str56, "[1, 150, 100]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[1, 151, 100]" + "'", str57, "[1, 151, 100]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[1, 152, 100]" + "'", str58, "[1, 152, 100]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[1, 153, 100]" + "'", str59, "[1, 153, 100]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[1, 154, 100]" + "'", str60, "[1, 154, 100]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[1, 155, 100]" + "'", str61, "[1, 155, 100]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[1, 156, 100]" + "'", str62, "[1, 156, 100]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[1, 157, 100]" + "'", str63, "[1, 157, 100]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[1, 158, 100]" + "'", str64, "[1, 158, 100]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[1, 159, 100]" + "'", str65, "[1, 159, 100]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[1, 160, 100]" + "'", str66, "[1, 160, 100]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[1, 161, 100]" + "'", str67, "[1, 161, 100]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[1, 162, 100]" + "'", str68, "[1, 162, 100]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[1, 163, 100]" + "'", str69, "[1, 163, 100]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[1, 164, 100]" + "'", str70, "[1, 164, 100]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[1, 165, 100]" + "'", str71, "[1, 165, 100]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[1, 166, 100]" + "'", str72, "[1, 166, 100]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[1, 167, 100]" + "'", str73, "[1, 167, 100]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[1, 168, 100]" + "'", str74, "[1, 168, 100]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[1, 169, 100]" + "'", str75, "[1, 169, 100]");
    }

    @Test
    public void test2881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2881");
        int[] intArray4 = new int[] { (byte) -1, 1, 100, '#' };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.Class<?> wildcardClass45 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 41, 140, 35]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[-1, 2, 101, 35]" + "'", str5, "[-1, 2, 101, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[-1, 3, 102, 35]" + "'", str6, "[-1, 3, 102, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[-1, 4, 103, 35]" + "'", str7, "[-1, 4, 103, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[-1, 5, 104, 35]" + "'", str8, "[-1, 5, 104, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[-1, 6, 105, 35]" + "'", str9, "[-1, 6, 105, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[-1, 7, 106, 35]" + "'", str10, "[-1, 7, 106, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[-1, 8, 107, 35]" + "'", str11, "[-1, 8, 107, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[-1, 9, 108, 35]" + "'", str12, "[-1, 9, 108, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[-1, 10, 109, 35]" + "'", str13, "[-1, 10, 109, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[-1, 11, 110, 35]" + "'", str14, "[-1, 11, 110, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[-1, 12, 111, 35]" + "'", str15, "[-1, 12, 111, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[-1, 13, 112, 35]" + "'", str16, "[-1, 13, 112, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[-1, 14, 113, 35]" + "'", str17, "[-1, 14, 113, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[-1, 15, 114, 35]" + "'", str18, "[-1, 15, 114, 35]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[-1, 16, 115, 35]" + "'", str19, "[-1, 16, 115, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[-1, 17, 116, 35]" + "'", str20, "[-1, 17, 116, 35]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[-1, 18, 117, 35]" + "'", str21, "[-1, 18, 117, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[-1, 19, 118, 35]" + "'", str22, "[-1, 19, 118, 35]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[-1, 20, 119, 35]" + "'", str23, "[-1, 20, 119, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[-1, 21, 120, 35]" + "'", str24, "[-1, 21, 120, 35]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[-1, 22, 121, 35]" + "'", str25, "[-1, 22, 121, 35]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[-1, 23, 122, 35]" + "'", str26, "[-1, 23, 122, 35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[-1, 24, 123, 35]" + "'", str27, "[-1, 24, 123, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[-1, 25, 124, 35]" + "'", str28, "[-1, 25, 124, 35]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[-1, 26, 125, 35]" + "'", str29, "[-1, 26, 125, 35]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[-1, 27, 126, 35]" + "'", str30, "[-1, 27, 126, 35]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[-1, 28, 127, 35]" + "'", str31, "[-1, 28, 127, 35]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[-1, 29, 128, 35]" + "'", str32, "[-1, 29, 128, 35]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[-1, 30, 129, 35]" + "'", str33, "[-1, 30, 129, 35]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[-1, 31, 130, 35]" + "'", str34, "[-1, 31, 130, 35]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[-1, 32, 131, 35]" + "'", str35, "[-1, 32, 131, 35]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[-1, 33, 132, 35]" + "'", str36, "[-1, 33, 132, 35]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[-1, 34, 133, 35]" + "'", str37, "[-1, 34, 133, 35]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[-1, 35, 134, 35]" + "'", str38, "[-1, 35, 134, 35]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[-1, 36, 135, 35]" + "'", str39, "[-1, 36, 135, 35]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[-1, 37, 136, 35]" + "'", str40, "[-1, 37, 136, 35]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[-1, 38, 137, 35]" + "'", str41, "[-1, 38, 137, 35]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[-1, 39, 138, 35]" + "'", str42, "[-1, 39, 138, 35]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[-1, 40, 139, 35]" + "'", str43, "[-1, 40, 139, 35]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[-1, 41, 140, 35]" + "'", str44, "[-1, 41, 140, 35]");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test2882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2882");
        int[] intArray5 = new int[] { (short) 100, 'a', ' ', 0, (byte) -1 };
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray5);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[100, 97, 99, 0, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[100, 97, 33, 0, -1]" + "'", str6, "[100, 97, 33, 0, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[100, 97, 34, 0, -1]" + "'", str7, "[100, 97, 34, 0, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[100, 97, 35, 0, -1]" + "'", str8, "[100, 97, 35, 0, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[100, 97, 36, 0, -1]" + "'", str9, "[100, 97, 36, 0, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[100, 97, 37, 0, -1]" + "'", str10, "[100, 97, 37, 0, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[100, 97, 38, 0, -1]" + "'", str11, "[100, 97, 38, 0, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[100, 97, 39, 0, -1]" + "'", str12, "[100, 97, 39, 0, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[100, 97, 40, 0, -1]" + "'", str13, "[100, 97, 40, 0, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[100, 97, 41, 0, -1]" + "'", str14, "[100, 97, 41, 0, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[100, 97, 42, 0, -1]" + "'", str15, "[100, 97, 42, 0, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[100, 97, 43, 0, -1]" + "'", str16, "[100, 97, 43, 0, -1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[100, 97, 44, 0, -1]" + "'", str17, "[100, 97, 44, 0, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[100, 97, 45, 0, -1]" + "'", str18, "[100, 97, 45, 0, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[100, 97, 46, 0, -1]" + "'", str19, "[100, 97, 46, 0, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[100, 97, 47, 0, -1]" + "'", str20, "[100, 97, 47, 0, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[100, 97, 48, 0, -1]" + "'", str21, "[100, 97, 48, 0, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[100, 97, 49, 0, -1]" + "'", str22, "[100, 97, 49, 0, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[100, 97, 50, 0, -1]" + "'", str23, "[100, 97, 50, 0, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[100, 97, 51, 0, -1]" + "'", str24, "[100, 97, 51, 0, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[100, 97, 52, 0, -1]" + "'", str25, "[100, 97, 52, 0, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[100, 97, 53, 0, -1]" + "'", str26, "[100, 97, 53, 0, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[100, 97, 54, 0, -1]" + "'", str27, "[100, 97, 54, 0, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[100, 97, 55, 0, -1]" + "'", str28, "[100, 97, 55, 0, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[100, 97, 56, 0, -1]" + "'", str29, "[100, 97, 56, 0, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[100, 97, 57, 0, -1]" + "'", str30, "[100, 97, 57, 0, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[100, 97, 58, 0, -1]" + "'", str31, "[100, 97, 58, 0, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[100, 97, 59, 0, -1]" + "'", str32, "[100, 97, 59, 0, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[100, 97, 60, 0, -1]" + "'", str33, "[100, 97, 60, 0, -1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[100, 97, 61, 0, -1]" + "'", str34, "[100, 97, 61, 0, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[100, 97, 62, 0, -1]" + "'", str35, "[100, 97, 62, 0, -1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[100, 97, 63, 0, -1]" + "'", str36, "[100, 97, 63, 0, -1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[100, 97, 64, 0, -1]" + "'", str37, "[100, 97, 64, 0, -1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[100, 97, 65, 0, -1]" + "'", str38, "[100, 97, 65, 0, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[100, 97, 66, 0, -1]" + "'", str39, "[100, 97, 66, 0, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[100, 97, 67, 0, -1]" + "'", str40, "[100, 97, 67, 0, -1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[100, 97, 68, 0, -1]" + "'", str41, "[100, 97, 68, 0, -1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[100, 97, 69, 0, -1]" + "'", str42, "[100, 97, 69, 0, -1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[100, 97, 70, 0, -1]" + "'", str43, "[100, 97, 70, 0, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[100, 97, 71, 0, -1]" + "'", str44, "[100, 97, 71, 0, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[100, 97, 72, 0, -1]" + "'", str45, "[100, 97, 72, 0, -1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[100, 97, 73, 0, -1]" + "'", str46, "[100, 97, 73, 0, -1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[100, 97, 74, 0, -1]" + "'", str47, "[100, 97, 74, 0, -1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[100, 97, 75, 0, -1]" + "'", str48, "[100, 97, 75, 0, -1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[100, 97, 76, 0, -1]" + "'", str49, "[100, 97, 76, 0, -1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[100, 97, 77, 0, -1]" + "'", str50, "[100, 97, 77, 0, -1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[100, 97, 78, 0, -1]" + "'", str51, "[100, 97, 78, 0, -1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[100, 97, 79, 0, -1]" + "'", str52, "[100, 97, 79, 0, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[100, 97, 80, 0, -1]" + "'", str53, "[100, 97, 80, 0, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[100, 97, 81, 0, -1]" + "'", str54, "[100, 97, 81, 0, -1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[100, 97, 82, 0, -1]" + "'", str55, "[100, 97, 82, 0, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[100, 97, 83, 0, -1]" + "'", str56, "[100, 97, 83, 0, -1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[100, 97, 84, 0, -1]" + "'", str57, "[100, 97, 84, 0, -1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[100, 97, 85, 0, -1]" + "'", str58, "[100, 97, 85, 0, -1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[100, 97, 86, 0, -1]" + "'", str59, "[100, 97, 86, 0, -1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[100, 97, 87, 0, -1]" + "'", str60, "[100, 97, 87, 0, -1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[100, 97, 88, 0, -1]" + "'", str61, "[100, 97, 88, 0, -1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[100, 97, 89, 0, -1]" + "'", str62, "[100, 97, 89, 0, -1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[100, 97, 90, 0, -1]" + "'", str63, "[100, 97, 90, 0, -1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[100, 97, 91, 0, -1]" + "'", str64, "[100, 97, 91, 0, -1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[100, 97, 92, 0, -1]" + "'", str65, "[100, 97, 92, 0, -1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[100, 97, 93, 0, -1]" + "'", str66, "[100, 97, 93, 0, -1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[100, 97, 94, 0, -1]" + "'", str67, "[100, 97, 94, 0, -1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[100, 97, 95, 0, -1]" + "'", str68, "[100, 97, 95, 0, -1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[100, 97, 96, 0, -1]" + "'", str69, "[100, 97, 96, 0, -1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[100, 97, 97, 0, -1]" + "'", str70, "[100, 97, 97, 0, -1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[100, 97, 98, 0, -1]" + "'", str71, "[100, 97, 98, 0, -1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[100, 97, 99, 0, -1]" + "'", str72, "[100, 97, 99, 0, -1]");
    }

    @Test
    public void test2883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2883");
        int[] intArray3 = new int[] { '#', (byte) 100, 1 };
        java.lang.String str4 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray3);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[35, 182, 1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[35, 101, 1]" + "'", str4, "[35, 101, 1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[35, 102, 1]" + "'", str5, "[35, 102, 1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[35, 103, 1]" + "'", str6, "[35, 103, 1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[35, 104, 1]" + "'", str7, "[35, 104, 1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[35, 105, 1]" + "'", str8, "[35, 105, 1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[35, 106, 1]" + "'", str9, "[35, 106, 1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[35, 107, 1]" + "'", str10, "[35, 107, 1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[35, 108, 1]" + "'", str11, "[35, 108, 1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[35, 109, 1]" + "'", str12, "[35, 109, 1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[35, 110, 1]" + "'", str13, "[35, 110, 1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[35, 111, 1]" + "'", str14, "[35, 111, 1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[35, 112, 1]" + "'", str15, "[35, 112, 1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[35, 113, 1]" + "'", str16, "[35, 113, 1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[35, 114, 1]" + "'", str17, "[35, 114, 1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[35, 115, 1]" + "'", str18, "[35, 115, 1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[35, 116, 1]" + "'", str19, "[35, 116, 1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[35, 117, 1]" + "'", str20, "[35, 117, 1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[35, 118, 1]" + "'", str21, "[35, 118, 1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[35, 119, 1]" + "'", str22, "[35, 119, 1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[35, 120, 1]" + "'", str23, "[35, 120, 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[35, 121, 1]" + "'", str24, "[35, 121, 1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[35, 122, 1]" + "'", str25, "[35, 122, 1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[35, 123, 1]" + "'", str26, "[35, 123, 1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[35, 124, 1]" + "'", str27, "[35, 124, 1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[35, 125, 1]" + "'", str28, "[35, 125, 1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[35, 126, 1]" + "'", str29, "[35, 126, 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[35, 127, 1]" + "'", str30, "[35, 127, 1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[35, 128, 1]" + "'", str31, "[35, 128, 1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[35, 129, 1]" + "'", str32, "[35, 129, 1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[35, 130, 1]" + "'", str33, "[35, 130, 1]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[35, 131, 1]" + "'", str34, "[35, 131, 1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[35, 132, 1]" + "'", str35, "[35, 132, 1]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[35, 133, 1]" + "'", str36, "[35, 133, 1]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[35, 134, 1]" + "'", str37, "[35, 134, 1]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[35, 135, 1]" + "'", str38, "[35, 135, 1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[35, 136, 1]" + "'", str39, "[35, 136, 1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[35, 137, 1]" + "'", str40, "[35, 137, 1]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[35, 138, 1]" + "'", str41, "[35, 138, 1]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[35, 139, 1]" + "'", str42, "[35, 139, 1]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[35, 140, 1]" + "'", str43, "[35, 140, 1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[35, 141, 1]" + "'", str44, "[35, 141, 1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[35, 142, 1]" + "'", str45, "[35, 142, 1]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[35, 143, 1]" + "'", str46, "[35, 143, 1]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[35, 144, 1]" + "'", str47, "[35, 144, 1]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[35, 145, 1]" + "'", str48, "[35, 145, 1]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[35, 146, 1]" + "'", str49, "[35, 146, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[35, 147, 1]" + "'", str50, "[35, 147, 1]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[35, 148, 1]" + "'", str51, "[35, 148, 1]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[35, 149, 1]" + "'", str52, "[35, 149, 1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[35, 150, 1]" + "'", str53, "[35, 150, 1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[35, 151, 1]" + "'", str54, "[35, 151, 1]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[35, 152, 1]" + "'", str55, "[35, 152, 1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[35, 153, 1]" + "'", str56, "[35, 153, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[35, 154, 1]" + "'", str57, "[35, 154, 1]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[35, 155, 1]" + "'", str58, "[35, 155, 1]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[35, 156, 1]" + "'", str59, "[35, 156, 1]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[35, 157, 1]" + "'", str60, "[35, 157, 1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[35, 158, 1]" + "'", str61, "[35, 158, 1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[35, 159, 1]" + "'", str62, "[35, 159, 1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[35, 160, 1]" + "'", str63, "[35, 160, 1]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[35, 161, 1]" + "'", str64, "[35, 161, 1]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[35, 162, 1]" + "'", str65, "[35, 162, 1]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[35, 163, 1]" + "'", str66, "[35, 163, 1]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[35, 164, 1]" + "'", str67, "[35, 164, 1]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[35, 165, 1]" + "'", str68, "[35, 165, 1]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[35, 166, 1]" + "'", str69, "[35, 166, 1]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[35, 167, 1]" + "'", str70, "[35, 167, 1]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[35, 168, 1]" + "'", str71, "[35, 168, 1]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[35, 169, 1]" + "'", str72, "[35, 169, 1]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[35, 170, 1]" + "'", str73, "[35, 170, 1]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[35, 171, 1]" + "'", str74, "[35, 171, 1]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[35, 172, 1]" + "'", str75, "[35, 172, 1]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[35, 173, 1]" + "'", str76, "[35, 173, 1]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[35, 174, 1]" + "'", str77, "[35, 174, 1]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[35, 175, 1]" + "'", str78, "[35, 175, 1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[35, 176, 1]" + "'", str79, "[35, 176, 1]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[35, 177, 1]" + "'", str80, "[35, 177, 1]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[35, 178, 1]" + "'", str81, "[35, 178, 1]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[35, 179, 1]" + "'", str82, "[35, 179, 1]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[35, 180, 1]" + "'", str83, "[35, 180, 1]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[35, 181, 1]" + "'", str84, "[35, 181, 1]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[35, 182, 1]" + "'", str85, "[35, 182, 1]");
    }

    @Test
    public void test2884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2884");
        int[] intArray6 = new int[] { (byte) 0, (byte) 100, (short) 10, 10, (byte) 100, (short) 10 };
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray6);
        java.lang.Class<?> wildcardClass89 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 100, 92, 92, 100, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[0, 100, 11, 11, 100, 10]" + "'", str7, "[0, 100, 11, 11, 100, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[0, 100, 12, 12, 100, 10]" + "'", str8, "[0, 100, 12, 12, 100, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[0, 100, 13, 13, 100, 10]" + "'", str9, "[0, 100, 13, 13, 100, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[0, 100, 14, 14, 100, 10]" + "'", str10, "[0, 100, 14, 14, 100, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[0, 100, 15, 15, 100, 10]" + "'", str11, "[0, 100, 15, 15, 100, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[0, 100, 16, 16, 100, 10]" + "'", str12, "[0, 100, 16, 16, 100, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 100, 17, 17, 100, 10]" + "'", str13, "[0, 100, 17, 17, 100, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[0, 100, 18, 18, 100, 10]" + "'", str14, "[0, 100, 18, 18, 100, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[0, 100, 19, 19, 100, 10]" + "'", str15, "[0, 100, 19, 19, 100, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 100, 20, 20, 100, 10]" + "'", str16, "[0, 100, 20, 20, 100, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[0, 100, 21, 21, 100, 10]" + "'", str17, "[0, 100, 21, 21, 100, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[0, 100, 22, 22, 100, 10]" + "'", str18, "[0, 100, 22, 22, 100, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[0, 100, 23, 23, 100, 10]" + "'", str19, "[0, 100, 23, 23, 100, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[0, 100, 24, 24, 100, 10]" + "'", str20, "[0, 100, 24, 24, 100, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[0, 100, 25, 25, 100, 10]" + "'", str21, "[0, 100, 25, 25, 100, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 100, 26, 26, 100, 10]" + "'", str22, "[0, 100, 26, 26, 100, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 100, 27, 27, 100, 10]" + "'", str23, "[0, 100, 27, 27, 100, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[0, 100, 28, 28, 100, 10]" + "'", str24, "[0, 100, 28, 28, 100, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 100, 29, 29, 100, 10]" + "'", str25, "[0, 100, 29, 29, 100, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[0, 100, 30, 30, 100, 10]" + "'", str26, "[0, 100, 30, 30, 100, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[0, 100, 31, 31, 100, 10]" + "'", str27, "[0, 100, 31, 31, 100, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[0, 100, 32, 32, 100, 10]" + "'", str28, "[0, 100, 32, 32, 100, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[0, 100, 33, 33, 100, 10]" + "'", str29, "[0, 100, 33, 33, 100, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[0, 100, 34, 34, 100, 10]" + "'", str30, "[0, 100, 34, 34, 100, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[0, 100, 35, 35, 100, 10]" + "'", str31, "[0, 100, 35, 35, 100, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[0, 100, 36, 36, 100, 10]" + "'", str32, "[0, 100, 36, 36, 100, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[0, 100, 37, 37, 100, 10]" + "'", str33, "[0, 100, 37, 37, 100, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[0, 100, 38, 38, 100, 10]" + "'", str34, "[0, 100, 38, 38, 100, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[0, 100, 39, 39, 100, 10]" + "'", str35, "[0, 100, 39, 39, 100, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[0, 100, 40, 40, 100, 10]" + "'", str36, "[0, 100, 40, 40, 100, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[0, 100, 41, 41, 100, 10]" + "'", str37, "[0, 100, 41, 41, 100, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[0, 100, 42, 42, 100, 10]" + "'", str38, "[0, 100, 42, 42, 100, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[0, 100, 43, 43, 100, 10]" + "'", str39, "[0, 100, 43, 43, 100, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[0, 100, 44, 44, 100, 10]" + "'", str40, "[0, 100, 44, 44, 100, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[0, 100, 45, 45, 100, 10]" + "'", str41, "[0, 100, 45, 45, 100, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[0, 100, 46, 46, 100, 10]" + "'", str42, "[0, 100, 46, 46, 100, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[0, 100, 47, 47, 100, 10]" + "'", str43, "[0, 100, 47, 47, 100, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[0, 100, 48, 48, 100, 10]" + "'", str44, "[0, 100, 48, 48, 100, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 100, 49, 49, 100, 10]" + "'", str45, "[0, 100, 49, 49, 100, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 100, 50, 50, 100, 10]" + "'", str46, "[0, 100, 50, 50, 100, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[0, 100, 51, 51, 100, 10]" + "'", str47, "[0, 100, 51, 51, 100, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[0, 100, 52, 52, 100, 10]" + "'", str48, "[0, 100, 52, 52, 100, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[0, 100, 53, 53, 100, 10]" + "'", str49, "[0, 100, 53, 53, 100, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[0, 100, 54, 54, 100, 10]" + "'", str50, "[0, 100, 54, 54, 100, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[0, 100, 55, 55, 100, 10]" + "'", str51, "[0, 100, 55, 55, 100, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[0, 100, 56, 56, 100, 10]" + "'", str52, "[0, 100, 56, 56, 100, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[0, 100, 57, 57, 100, 10]" + "'", str53, "[0, 100, 57, 57, 100, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[0, 100, 58, 58, 100, 10]" + "'", str54, "[0, 100, 58, 58, 100, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[0, 100, 59, 59, 100, 10]" + "'", str55, "[0, 100, 59, 59, 100, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[0, 100, 60, 60, 100, 10]" + "'", str56, "[0, 100, 60, 60, 100, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[0, 100, 61, 61, 100, 10]" + "'", str57, "[0, 100, 61, 61, 100, 10]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[0, 100, 62, 62, 100, 10]" + "'", str58, "[0, 100, 62, 62, 100, 10]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[0, 100, 63, 63, 100, 10]" + "'", str59, "[0, 100, 63, 63, 100, 10]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[0, 100, 64, 64, 100, 10]" + "'", str60, "[0, 100, 64, 64, 100, 10]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[0, 100, 65, 65, 100, 10]" + "'", str61, "[0, 100, 65, 65, 100, 10]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[0, 100, 66, 66, 100, 10]" + "'", str62, "[0, 100, 66, 66, 100, 10]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[0, 100, 67, 67, 100, 10]" + "'", str63, "[0, 100, 67, 67, 100, 10]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[0, 100, 68, 68, 100, 10]" + "'", str64, "[0, 100, 68, 68, 100, 10]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[0, 100, 69, 69, 100, 10]" + "'", str65, "[0, 100, 69, 69, 100, 10]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[0, 100, 70, 70, 100, 10]" + "'", str66, "[0, 100, 70, 70, 100, 10]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[0, 100, 71, 71, 100, 10]" + "'", str67, "[0, 100, 71, 71, 100, 10]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[0, 100, 72, 72, 100, 10]" + "'", str68, "[0, 100, 72, 72, 100, 10]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[0, 100, 73, 73, 100, 10]" + "'", str69, "[0, 100, 73, 73, 100, 10]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[0, 100, 74, 74, 100, 10]" + "'", str70, "[0, 100, 74, 74, 100, 10]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[0, 100, 75, 75, 100, 10]" + "'", str71, "[0, 100, 75, 75, 100, 10]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[0, 100, 76, 76, 100, 10]" + "'", str72, "[0, 100, 76, 76, 100, 10]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[0, 100, 77, 77, 100, 10]" + "'", str73, "[0, 100, 77, 77, 100, 10]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[0, 100, 78, 78, 100, 10]" + "'", str74, "[0, 100, 78, 78, 100, 10]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[0, 100, 79, 79, 100, 10]" + "'", str75, "[0, 100, 79, 79, 100, 10]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[0, 100, 80, 80, 100, 10]" + "'", str76, "[0, 100, 80, 80, 100, 10]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[0, 100, 81, 81, 100, 10]" + "'", str77, "[0, 100, 81, 81, 100, 10]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[0, 100, 82, 82, 100, 10]" + "'", str78, "[0, 100, 82, 82, 100, 10]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[0, 100, 83, 83, 100, 10]" + "'", str79, "[0, 100, 83, 83, 100, 10]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[0, 100, 84, 84, 100, 10]" + "'", str80, "[0, 100, 84, 84, 100, 10]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[0, 100, 85, 85, 100, 10]" + "'", str81, "[0, 100, 85, 85, 100, 10]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[0, 100, 86, 86, 100, 10]" + "'", str82, "[0, 100, 86, 86, 100, 10]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[0, 100, 87, 87, 100, 10]" + "'", str83, "[0, 100, 87, 87, 100, 10]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[0, 100, 88, 88, 100, 10]" + "'", str84, "[0, 100, 88, 88, 100, 10]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[0, 100, 89, 89, 100, 10]" + "'", str85, "[0, 100, 89, 89, 100, 10]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[0, 100, 90, 90, 100, 10]" + "'", str86, "[0, 100, 90, 90, 100, 10]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[0, 100, 91, 91, 100, 10]" + "'", str87, "[0, 100, 91, 91, 100, 10]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[0, 100, 92, 92, 100, 10]" + "'", str88, "[0, 100, 92, 92, 100, 10]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Randoop_NEXT_PALINDROME_Regression5.test2885");
        int[] intArray4 = new int[] { 'a', 10, 100, (short) 10 };
        java.lang.String str5 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str6 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str7 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str8 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str9 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str10 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str11 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str12 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str13 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str14 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str15 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str16 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str17 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str18 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str19 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str20 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str21 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str22 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str23 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str24 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str25 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str26 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str27 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str28 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str29 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str30 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str31 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str32 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str33 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str34 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str35 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str36 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str37 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str38 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str39 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str40 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str41 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str42 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str43 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str44 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str45 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str46 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str47 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str48 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str49 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str50 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str51 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str52 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str53 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str54 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str55 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str56 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str57 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str58 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str59 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str60 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str61 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str62 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str63 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str64 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str65 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str66 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str67 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str68 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str69 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str70 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str71 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str72 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str73 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str74 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str75 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str76 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str77 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str78 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str79 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str80 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str81 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str82 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str83 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str84 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str85 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str86 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str87 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str88 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str89 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str90 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str91 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str92 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str93 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        java.lang.String str94 = correct_java_programs.NEXT_PALINDROME.next_palindrome(intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[97, 100, 190, 10]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[97, 11, 101, 10]" + "'", str5, "[97, 11, 101, 10]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[97, 12, 102, 10]" + "'", str6, "[97, 12, 102, 10]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[97, 13, 103, 10]" + "'", str7, "[97, 13, 103, 10]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[97, 14, 104, 10]" + "'", str8, "[97, 14, 104, 10]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[97, 15, 105, 10]" + "'", str9, "[97, 15, 105, 10]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[97, 16, 106, 10]" + "'", str10, "[97, 16, 106, 10]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[97, 17, 107, 10]" + "'", str11, "[97, 17, 107, 10]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[97, 18, 108, 10]" + "'", str12, "[97, 18, 108, 10]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[97, 19, 109, 10]" + "'", str13, "[97, 19, 109, 10]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[97, 20, 110, 10]" + "'", str14, "[97, 20, 110, 10]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[97, 21, 111, 10]" + "'", str15, "[97, 21, 111, 10]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[97, 22, 112, 10]" + "'", str16, "[97, 22, 112, 10]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[97, 23, 113, 10]" + "'", str17, "[97, 23, 113, 10]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[97, 24, 114, 10]" + "'", str18, "[97, 24, 114, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[97, 25, 115, 10]" + "'", str19, "[97, 25, 115, 10]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[97, 26, 116, 10]" + "'", str20, "[97, 26, 116, 10]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[97, 27, 117, 10]" + "'", str21, "[97, 27, 117, 10]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[97, 28, 118, 10]" + "'", str22, "[97, 28, 118, 10]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[97, 29, 119, 10]" + "'", str23, "[97, 29, 119, 10]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[97, 30, 120, 10]" + "'", str24, "[97, 30, 120, 10]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[97, 31, 121, 10]" + "'", str25, "[97, 31, 121, 10]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[97, 32, 122, 10]" + "'", str26, "[97, 32, 122, 10]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[97, 33, 123, 10]" + "'", str27, "[97, 33, 123, 10]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[97, 34, 124, 10]" + "'", str28, "[97, 34, 124, 10]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[97, 35, 125, 10]" + "'", str29, "[97, 35, 125, 10]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[97, 36, 126, 10]" + "'", str30, "[97, 36, 126, 10]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[97, 37, 127, 10]" + "'", str31, "[97, 37, 127, 10]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[97, 38, 128, 10]" + "'", str32, "[97, 38, 128, 10]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[97, 39, 129, 10]" + "'", str33, "[97, 39, 129, 10]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[97, 40, 130, 10]" + "'", str34, "[97, 40, 130, 10]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[97, 41, 131, 10]" + "'", str35, "[97, 41, 131, 10]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[97, 42, 132, 10]" + "'", str36, "[97, 42, 132, 10]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[97, 43, 133, 10]" + "'", str37, "[97, 43, 133, 10]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[97, 44, 134, 10]" + "'", str38, "[97, 44, 134, 10]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[97, 45, 135, 10]" + "'", str39, "[97, 45, 135, 10]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[97, 46, 136, 10]" + "'", str40, "[97, 46, 136, 10]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[97, 47, 137, 10]" + "'", str41, "[97, 47, 137, 10]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[97, 48, 138, 10]" + "'", str42, "[97, 48, 138, 10]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[97, 49, 139, 10]" + "'", str43, "[97, 49, 139, 10]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[97, 50, 140, 10]" + "'", str44, "[97, 50, 140, 10]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[97, 51, 141, 10]" + "'", str45, "[97, 51, 141, 10]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[97, 52, 142, 10]" + "'", str46, "[97, 52, 142, 10]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[97, 53, 143, 10]" + "'", str47, "[97, 53, 143, 10]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[97, 54, 144, 10]" + "'", str48, "[97, 54, 144, 10]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[97, 55, 145, 10]" + "'", str49, "[97, 55, 145, 10]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[97, 56, 146, 10]" + "'", str50, "[97, 56, 146, 10]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[97, 57, 147, 10]" + "'", str51, "[97, 57, 147, 10]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[97, 58, 148, 10]" + "'", str52, "[97, 58, 148, 10]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[97, 59, 149, 10]" + "'", str53, "[97, 59, 149, 10]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[97, 60, 150, 10]" + "'", str54, "[97, 60, 150, 10]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[97, 61, 151, 10]" + "'", str55, "[97, 61, 151, 10]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[97, 62, 152, 10]" + "'", str56, "[97, 62, 152, 10]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[97, 63, 153, 10]" + "'", str57, "[97, 63, 153, 10]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[97, 64, 154, 10]" + "'", str58, "[97, 64, 154, 10]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[97, 65, 155, 10]" + "'", str59, "[97, 65, 155, 10]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[97, 66, 156, 10]" + "'", str60, "[97, 66, 156, 10]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[97, 67, 157, 10]" + "'", str61, "[97, 67, 157, 10]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[97, 68, 158, 10]" + "'", str62, "[97, 68, 158, 10]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[97, 69, 159, 10]" + "'", str63, "[97, 69, 159, 10]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[97, 70, 160, 10]" + "'", str64, "[97, 70, 160, 10]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[97, 71, 161, 10]" + "'", str65, "[97, 71, 161, 10]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[97, 72, 162, 10]" + "'", str66, "[97, 72, 162, 10]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[97, 73, 163, 10]" + "'", str67, "[97, 73, 163, 10]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[97, 74, 164, 10]" + "'", str68, "[97, 74, 164, 10]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[97, 75, 165, 10]" + "'", str69, "[97, 75, 165, 10]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[97, 76, 166, 10]" + "'", str70, "[97, 76, 166, 10]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[97, 77, 167, 10]" + "'", str71, "[97, 77, 167, 10]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[97, 78, 168, 10]" + "'", str72, "[97, 78, 168, 10]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[97, 79, 169, 10]" + "'", str73, "[97, 79, 169, 10]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[97, 80, 170, 10]" + "'", str74, "[97, 80, 170, 10]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[97, 81, 171, 10]" + "'", str75, "[97, 81, 171, 10]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[97, 82, 172, 10]" + "'", str76, "[97, 82, 172, 10]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[97, 83, 173, 10]" + "'", str77, "[97, 83, 173, 10]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[97, 84, 174, 10]" + "'", str78, "[97, 84, 174, 10]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[97, 85, 175, 10]" + "'", str79, "[97, 85, 175, 10]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[97, 86, 176, 10]" + "'", str80, "[97, 86, 176, 10]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[97, 87, 177, 10]" + "'", str81, "[97, 87, 177, 10]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[97, 88, 178, 10]" + "'", str82, "[97, 88, 178, 10]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[97, 89, 179, 10]" + "'", str83, "[97, 89, 179, 10]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[97, 90, 180, 10]" + "'", str84, "[97, 90, 180, 10]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[97, 91, 181, 10]" + "'", str85, "[97, 91, 181, 10]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[97, 92, 182, 10]" + "'", str86, "[97, 92, 182, 10]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[97, 93, 183, 10]" + "'", str87, "[97, 93, 183, 10]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[97, 94, 184, 10]" + "'", str88, "[97, 94, 184, 10]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[97, 95, 185, 10]" + "'", str89, "[97, 95, 185, 10]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[97, 96, 186, 10]" + "'", str90, "[97, 96, 186, 10]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[97, 97, 187, 10]" + "'", str91, "[97, 97, 187, 10]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[97, 98, 188, 10]" + "'", str92, "[97, 98, 188, 10]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[97, 99, 189, 10]" + "'", str93, "[97, 99, 189, 10]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "[97, 100, 190, 10]" + "'", str94, "[97, 100, 190, 10]");
    }
}

