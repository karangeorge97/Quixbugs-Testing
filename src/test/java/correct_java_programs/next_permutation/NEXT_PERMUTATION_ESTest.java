/*
 * This file was automatically generated by EvoSuite
 * Thu Mar 21 01:48:01 GMT 2024
 */

package correct_java_programs.next_permutation;

import correct_java_programs.NEXT_PERMUTATION;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import java.util.ArrayList;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import static org.junit.Assert.*;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NEXT_PERMUTATION_ESTest extends NEXT_PERMUTATION_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Integer integer0 = new Integer((-1));
      Integer integer1 = new Integer(3);
      arrayList0.add(integer1);
      Integer integer2 = new Integer(274);
      arrayList0.add(integer2);
      arrayList0.add(integer0);
      ArrayList<Integer> arrayList1 = NEXT_PERMUTATION.next_permutation(arrayList0);
      assertTrue(arrayList0.contains(274));
      assertTrue(arrayList1.contains((-1)));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        NEXT_PERMUTATION.next_permutation((ArrayList<Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("correct_java_programs.NEXT_PERMUTATION", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Integer integer0 = new Integer(272);
      arrayList0.add(integer0);
      Integer integer1 = Integer.valueOf(1096);
      arrayList0.add(integer1);
      arrayList0.add(integer0);
      ArrayList<Integer> arrayList1 = NEXT_PERMUTATION.next_permutation(arrayList0);
      assertTrue(arrayList0.contains(1096));
      assertTrue(arrayList1.contains(272));
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Integer integer0 = new Integer(272);
      arrayList0.add(integer0);
      Integer integer1 = Integer.valueOf(1096);
      arrayList0.add(integer1);
      ArrayList<Integer> arrayList1 = NEXT_PERMUTATION.next_permutation(arrayList0);
      assertTrue(arrayList1.contains(272));
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Integer integer0 = new Integer(272);
      arrayList0.add(integer0);
      arrayList0.add(integer0);
      ArrayList<Integer> arrayList1 = NEXT_PERMUTATION.next_permutation(arrayList0);
      assertNotSame(arrayList0, arrayList1);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      // Undeclared exception!
      try { 
        NEXT_PERMUTATION.next_permutation(arrayList0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      NEXT_PERMUTATION nEXT_PERMUTATION0 = new NEXT_PERMUTATION();
  }
}
