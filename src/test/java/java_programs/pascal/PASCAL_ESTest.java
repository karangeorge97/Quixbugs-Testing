/*
 * This file was automatically generated by EvoSuite
 * Thu Mar 21 01:38:50 GMT 2024
 */

package java_programs.pascal;

import java_programs.PASCAL;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import java.util.ArrayList;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import static org.junit.Assert.*;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PASCAL_ESTest extends PASCAL_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ArrayList<ArrayList<Integer>> arrayList0 = PASCAL.pascal(0);
      assertFalse(arrayList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        PASCAL.pascal(931);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ArrayList<ArrayList<Integer>> arrayList0 = PASCAL.pascal(1);
      assertEquals(1, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PASCAL pASCAL0 = new PASCAL();
  }
}
