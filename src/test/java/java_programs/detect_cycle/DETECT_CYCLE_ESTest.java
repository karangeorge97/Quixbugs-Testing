/*
 * This file was automatically generated by EvoSuite
 * Thu Mar 21 01:17:14 GMT 2024
 */

package java_programs.detect_cycle;


import java_programs.DETECT_CYCLE;
import java_programs.Node;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import static org.junit.Assert.*;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DETECT_CYCLE_ESTest extends DETECT_CYCLE_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Node node0 = new Node(" <7XS-fM^H',k= LGO(");
      Node node1 = new Node("[1");
      node0.setSuccessor(node1);
      // Undeclared exception!
      try { 
        DETECT_CYCLE.detect_cycle(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java_programs.DETECT_CYCLE", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Node node0 = new Node((String) null);
      Node node1 = new Node((String) null, node0);
      node0.setSuccessor(node1);
      boolean boolean0 = DETECT_CYCLE.detect_cycle(node0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Node node0 = new Node((String) null);
      boolean boolean0 = DETECT_CYCLE.detect_cycle(node0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DETECT_CYCLE dETECT_CYCLE0 = new DETECT_CYCLE();
  }
}
